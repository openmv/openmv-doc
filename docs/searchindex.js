Search.setIndex({"docnames": ["differences/python_310", "differences/python_35", "differences/python_36", "differences/python_37", "differences/python_38", "differences/python_39", "genrst/builtin_types", "genrst/core_language", "genrst/index", "genrst/modules", "genrst/syntax", "index", "library/_thread", "library/array", "library/asyncio", "library/binascii", "library/bluetooth", "library/builtins", "library/cmath", "library/collections", "library/cryptolib", "library/deflate", "library/errno", "library/gc", "library/gzip", "library/hashlib", "library/heapq", "library/index", "library/io", "library/json", "library/machine", "library/machine.ADC", "library/machine.ADCBlock", "library/machine.CAN", "library/machine.I2C", "library/machine.I2S", "library/machine.LED", "library/machine.PWM", "library/machine.Pin", "library/machine.RTC", "library/machine.SPI", "library/machine.Signal", "library/machine.Timer", "library/machine.UART", "library/machine.WDT", "library/marshal", "library/math", "library/micropython", "library/mutex", "library/network", "library/network.LAN", "library/network.PPP", "library/network.WINC", "library/network.WLAN", "library/omv.audio", "library/omv.buzzer", "library/omv.cpufreq", "library/omv.display", "library/omv.display.DACBacklight", "library/omv.display.PWMBacklight", "library/omv.display.ST7701", "library/omv.display.displaydata", "library/omv.display.dsidisplay", "library/omv.display.rgbdisplay", "library/omv.display.spidisplay", "library/omv.fir", "library/omv.ft5x06", "library/omv.gif", "library/omv.gt911", "library/omv.image", "library/omv.imu", "library/omv.mjpeg", "library/omv.ml", "library/omv.ml.apps", "library/omv.ml.postprocessing", "library/omv.ml.preprocessing", "library/omv.ml.utils", "library/omv.omv", "library/omv.rpc", "library/omv.rtsp", "library/omv.sensor", "library/omv.tfp410", "library/omv.tof", "library/omv.tv", "library/openamp", "library/os", "library/platform", "library/pyb", "library/pyb.ADC", "library/pyb.CAN", "library/pyb.DAC", "library/pyb.ExtInt", "library/pyb.Flash", "library/pyb.I2C", "library/pyb.LED", "library/pyb.Pin", "library/pyb.RTC", "library/pyb.SPI", "library/pyb.Servo", "library/pyb.Timer", "library/pyb.UART", "library/pyb.USB_HID", "library/pyb.USB_VCP", "library/random", "library/re", "library/requests", "library/select", "library/socket", "library/ssl", "library/stm", "library/struct", "library/sys", "library/time", "library/uctypes", "library/uping", "library/vfs", "library/zlib", "license", "openmvcam/general", "openmvcam/quickref", "openmvcam/tutorial/analog_io", "openmvcam/tutorial/gpio_control", "openmvcam/tutorial/hardware_setup", "openmvcam/tutorial/index", "openmvcam/tutorial/io_tutorial", "openmvcam/tutorial/led_control", "openmvcam/tutorial/more_information", "openmvcam/tutorial/openmvide_overview", "openmvcam/tutorial/overview", "openmvcam/tutorial/production", "openmvcam/tutorial/script_structure", "openmvcam/tutorial/software_setup", "openmvcam/tutorial/system_architecture", "openmvcam/tutorial/uart_control", "reference/asm_thumb2_arith", "reference/asm_thumb2_compare", "reference/asm_thumb2_directives", "reference/asm_thumb2_float", "reference/asm_thumb2_hints_tips", "reference/asm_thumb2_index", "reference/asm_thumb2_label_branch", "reference/asm_thumb2_ldr", "reference/asm_thumb2_logical_bit", "reference/asm_thumb2_misc", "reference/asm_thumb2_mov", "reference/asm_thumb2_stack", "reference/asm_thumb2_str", "reference/constrained", "reference/filesystem", "reference/glossary", "reference/index", "reference/isr_rules", "reference/manifest", "reference/micropython2_migration", "reference/mpremote", "reference/mpyfiles", "reference/packages", "reference/pyboard.py", "reference/repl", "reference/reset_boot", "reference/speed_python"], "filenames": ["differences/python_310.rst", "differences/python_35.rst", "differences/python_36.rst", "differences/python_37.rst", "differences/python_38.rst", "differences/python_39.rst", "genrst/builtin_types.rst", "genrst/core_language.rst", "genrst/index.rst", "genrst/modules.rst", "genrst/syntax.rst", "index.rst", "library/_thread.rst", "library/array.rst", "library/asyncio.rst", "library/binascii.rst", "library/bluetooth.rst", "library/builtins.rst", "library/cmath.rst", "library/collections.rst", "library/cryptolib.rst", "library/deflate.rst", "library/errno.rst", "library/gc.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/index.rst", "library/io.rst", "library/json.rst", "library/machine.rst", "library/machine.ADC.rst", "library/machine.ADCBlock.rst", "library/machine.CAN.rst", "library/machine.I2C.rst", "library/machine.I2S.rst", "library/machine.LED.rst", "library/machine.PWM.rst", "library/machine.Pin.rst", "library/machine.RTC.rst", "library/machine.SPI.rst", "library/machine.Signal.rst", "library/machine.Timer.rst", "library/machine.UART.rst", "library/machine.WDT.rst", "library/marshal.rst", "library/math.rst", "library/micropython.rst", "library/mutex.rst", "library/network.rst", "library/network.LAN.rst", "library/network.PPP.rst", "library/network.WINC.rst", "library/network.WLAN.rst", "library/omv.audio.rst", "library/omv.buzzer.rst", "library/omv.cpufreq.rst", "library/omv.display.rst", "library/omv.display.DACBacklight.rst", "library/omv.display.PWMBacklight.rst", "library/omv.display.ST7701.rst", "library/omv.display.displaydata.rst", "library/omv.display.dsidisplay.rst", "library/omv.display.rgbdisplay.rst", "library/omv.display.spidisplay.rst", "library/omv.fir.rst", "library/omv.ft5x06.rst", "library/omv.gif.rst", "library/omv.gt911.rst", "library/omv.image.rst", "library/omv.imu.rst", "library/omv.mjpeg.rst", "library/omv.ml.rst", "library/omv.ml.apps.rst", "library/omv.ml.postprocessing.rst", "library/omv.ml.preprocessing.rst", "library/omv.ml.utils.rst", "library/omv.omv.rst", "library/omv.rpc.rst", "library/omv.rtsp.rst", "library/omv.sensor.rst", "library/omv.tfp410.rst", "library/omv.tof.rst", "library/omv.tv.rst", "library/openamp.rst", "library/os.rst", "library/platform.rst", "library/pyb.rst", "library/pyb.ADC.rst", "library/pyb.CAN.rst", "library/pyb.DAC.rst", "library/pyb.ExtInt.rst", "library/pyb.Flash.rst", "library/pyb.I2C.rst", "library/pyb.LED.rst", "library/pyb.Pin.rst", "library/pyb.RTC.rst", "library/pyb.SPI.rst", "library/pyb.Servo.rst", "library/pyb.Timer.rst", "library/pyb.UART.rst", "library/pyb.USB_HID.rst", "library/pyb.USB_VCP.rst", "library/random.rst", "library/re.rst", "library/requests.rst", "library/select.rst", "library/socket.rst", "library/ssl.rst", "library/stm.rst", "library/struct.rst", "library/sys.rst", "library/time.rst", "library/uctypes.rst", "library/uping.rst", "library/vfs.rst", "library/zlib.rst", "license.rst", "openmvcam/general.rst", "openmvcam/quickref.rst", "openmvcam/tutorial/analog_io.rst", "openmvcam/tutorial/gpio_control.rst", "openmvcam/tutorial/hardware_setup.rst", "openmvcam/tutorial/index.rst", "openmvcam/tutorial/io_tutorial.rst", "openmvcam/tutorial/led_control.rst", "openmvcam/tutorial/more_information.rst", "openmvcam/tutorial/openmvide_overview.rst", "openmvcam/tutorial/overview.rst", "openmvcam/tutorial/production.rst", "openmvcam/tutorial/script_structure.rst", "openmvcam/tutorial/software_setup.rst", "openmvcam/tutorial/system_architecture.rst", "openmvcam/tutorial/uart_control.rst", "reference/asm_thumb2_arith.rst", "reference/asm_thumb2_compare.rst", "reference/asm_thumb2_directives.rst", "reference/asm_thumb2_float.rst", "reference/asm_thumb2_hints_tips.rst", "reference/asm_thumb2_index.rst", "reference/asm_thumb2_label_branch.rst", "reference/asm_thumb2_ldr.rst", "reference/asm_thumb2_logical_bit.rst", "reference/asm_thumb2_misc.rst", "reference/asm_thumb2_mov.rst", "reference/asm_thumb2_stack.rst", "reference/asm_thumb2_str.rst", "reference/constrained.rst", "reference/filesystem.rst", "reference/glossary.rst", "reference/index.rst", "reference/isr_rules.rst", "reference/manifest.rst", "reference/micropython2_migration.rst", "reference/mpremote.rst", "reference/mpyfiles.rst", "reference/packages.rst", "reference/pyboard.py.rst", "reference/repl.rst", "reference/reset_boot.rst", "reference/speed_python.rst"], "titles": ["Python 3.10", "Python 3.5", "Python 3.6", "Python 3.7", "Python 3.8", "Python 3.9", "Builtin types", "Core language", "MicroPython differences from CPython", "Modules", "Syntax", "MicroPython documentation and references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2013 multithreading support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2013 arrays of numeric data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 asynchronous I/O scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2013 binary/ASCII conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluetooth</span></code> \u2014 low-level Bluetooth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2013 builtin functions and exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2013 mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2013 collection and container types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cryptolib</span></code> \u2013 cryptographic ciphers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deflate</span></code> \u2013 deflate compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2013 system error codes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2013 control the garbage collector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2013 gzip compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2013 hashing algorithms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2013 heap queue algorithm", "MicroPython libraries", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2013 input/output streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2013 JSON encoding and decoding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">machine</span></code> \u2014 functions related to the hardware", "class ADC \u2013 analog to digital conversion", "class ADCBlock \u2013 control ADC peripherals", "class CAN \u2013 controller area network communication bus", "class I2C \u2013 a two-wire serial protocol", "class I2S \u2013 Inter-IC Sound bus protocol", "class LED \u2013 LED Control", "class PWM \u2013 pulse width modulation", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)", "class Signal \u2013 control and sense external I/O devices", "class Timer \u2013 control hardware timers", "class UART \u2013 duplex serial communication bus", "class WDT \u2013 watchdog timer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">marshal</span></code> \u2013 Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2013 mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">micropython</span></code> \u2013 access and control MicroPython internals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mutex</span></code> \u2014 mutex module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">network</span></code> \u2014 network configuration", "class LAN \u2013 control an Ethernet module", "class PPP \u2013 create network connections over serial PPP", "class WINC \u2013 wifi shield driver", "class WLAN \u2013 control built-in WiFi interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audio</span></code> \u2014 Audio Module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">buzzer</span></code> \u2014 buzzer driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cpufreq</span></code> \u2014 CPU Frequency Control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">display</span></code> \u2014 display driver", "class DACBacklight \u2013 DAC Backlight", "class PWMBacklight \u2013 PWM Backlight", "class ST7701 \u2013 Display Controller", "class DisplayData \u2013 Display Data", "class DSIDisplay \u2013 DSI Display Driver", "class RGBDisplay \u2013 RGB Display Driver", "class SPIDisplay \u2013 SPI Display Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fir</span></code> \u2014 thermal sensor driver (fir == far infrared)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ft5x06</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gif</span></code> \u2014 gif recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gt911</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">image</span></code> \u2014 machine vision", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imu</span></code> \u2014 imu sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mjpeg</span></code> \u2014 mjpeg recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml</span></code> \u2014 Machine Learning", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.apps</span></code> \u2014 ML Apps", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.postprocessing</span></code> \u2014 ML Postprocessing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.preprocessing</span></code> \u2014 ML Preprocessing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.utils</span></code> \u2014 ML Utils", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">omv</span></code> \u2014 OpenMV Cam Information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rpc</span></code> \u2014 rpc library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rtsp</span></code> \u2014 rtsp library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sensor</span></code> \u2014 camera sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfp410</span></code> \u2014 DVI/HDMI Controller", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tof</span></code> \u2014 time-of-flight sensor driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tv</span></code> \u2014 tv shield driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openamp</span></code> \u2013 provides standard Asymmetric Multiprocessing (AMP) support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2013 basic \u201coperating system\u201d services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2013 access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyb</span></code> \u2014 functions related to the board", "class ADC \u2013 analog to digital conversion", "class CAN \u2013 controller area network communication bus", "class DAC \u2013 digital to analog conversion", "class ExtInt \u2013 configure I/O pins to interrupt on external events", "class Flash \u2013 access to built-in flash storage", "class I2C \u2013 a two-wire serial protocol", "class LED \u2013 LED object", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a controller-driven serial protocol", "class Servo \u2013 3-wire hobby servo driver", "class Timer \u2013 control internal timers", "class UART \u2013 duplex serial communication bus", "class USB_HID \u2013 USB Human Interface Device (HID)", "class USB_VCP \u2013 USB virtual comm port", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2013 generate random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2013 simple regular expressions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">requests</span></code> \u2014 Related functions of HTTP client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2013 wait for events on a set of streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2013 socket module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2013 SSL/TLS module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stm</span></code> \u2014 functionality specific to STM32 MCUs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2013 pack and unpack primitive data types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2013 system specific functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2013 time related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uctypes</span></code> \u2013 access binary data in a structured way", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uping</span></code> \u2014 Ping another computer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">vfs</span></code> \u2013 virtual filesystem control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2013 zlib compression &amp; decompression", "MicroPython license information", "General information about the openmvcam", "Quick reference for the openmvcam", "<span class=\"section-number\">6.1.3. </span>Analog IO", "<span class=\"section-number\">6.1.2. </span>GPIO Control", "<span class=\"section-number\">3. </span>Hardware Setup", "OpenMV Cam Tutorial", "<span class=\"section-number\">6. </span>I/O Tutorial", "<span class=\"section-number\">6.1.1. </span>LED Control", "<span class=\"section-number\">9. </span>More Information", "<span class=\"section-number\">4. </span>OpenMV IDE Overview", "<span class=\"section-number\">1. </span>Overview", "<span class=\"section-number\">8. </span>Releasing your OpenMV Cam Scripts for Production", "<span class=\"section-number\">5. </span>Script Structure", "<span class=\"section-number\">2. </span>Software Setup", "<span class=\"section-number\">7. </span>System Architecture", "<span class=\"section-number\">6.1.4. </span>UART Control", "<span class=\"section-number\">5. </span>Arithmetic instructions", "<span class=\"section-number\">6. </span>Comparison instructions", "<span class=\"section-number\">11. </span>Assembler directives", "<span class=\"section-number\">10. </span>Floating point instructions", "<span class=\"section-number\">1. </span>Hints and tips", "Inline assembler for Thumb2 architectures", "<span class=\"section-number\">7. </span>Branch instructions", "<span class=\"section-number\">2. </span>Load register from memory", "<span class=\"section-number\">4. </span>Logical &amp; bitwise instructions", "<span class=\"section-number\">9. </span>Miscellaneous instructions", "<span class=\"section-number\">1. </span>Register move instructions", "<span class=\"section-number\">8. </span>Stack push and pop", "<span class=\"section-number\">3. </span>Store register to memory", "MicroPython on microcontrollers", "Working with filesystems", "Glossary", "MicroPython language and implementation", "Writing interrupt handlers", "MicroPython manifest files", "MicroPython 2.0 Migration Guide", "MicroPython remote control: mpremote", "MicroPython .mpy files", "Package management", "The pyboard.py tool", "The MicroPython Interactive Interpreter Mode (aka REPL)", "Reset and Boot Sequence", "Maximising MicroPython speed"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 16, 21, 27, 30, 31, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 133, 138, 141, 142, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160], "final": [0, 4, 5, 14, 27, 28, 40, 65, 67, 69, 71, 78, 82, 112, 120, 121, 122, 125, 127, 130, 131, 132, 133, 147, 155, 158, 159, 160], "wa": [0, 2, 4, 5, 16, 21, 30, 40, 48, 49, 61, 65, 69, 71, 72, 74, 75, 76, 78, 80, 82, 83, 87, 93, 95, 97, 100, 104, 107, 111, 112, 115, 118, 122, 125, 127, 128, 132, 140, 147, 155, 158, 160], "releas": [0, 2, 4, 5, 11, 14, 24, 48, 62, 63, 64, 66, 80, 84, 85, 91, 107, 123, 153, 155], "4": [0, 1, 6, 8, 9, 10, 16, 32, 34, 40, 49, 50, 52, 53, 65, 69, 72, 74, 80, 82, 85, 86, 87, 89, 90, 93, 94, 96, 97, 99, 100, 107, 110, 113, 114, 115, 119, 125, 136, 138, 140, 147, 148, 150, 151, 154, 155, 158], "octob": [0, 4, 5], "2021": 0, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 150, 152, 153, 154, 156, 159], "featur": [0, 2, 3, 4, 5, 8, 11, 16, 21, 27, 47, 89, 99, 102, 122, 127, 129, 132, 149, 150, 152, 155, 158, 160], "ar": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 56, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "defin": [0, 1, 4, 5, 8, 11, 16, 21, 33, 38, 42, 47, 49, 53, 69, 78, 87, 89, 92, 105, 107, 109, 115, 128, 130, 138, 139, 140, 147, 148, 151, 152, 154, 155, 156, 160], "pep": [0, 1, 2, 3, 4, 5, 9], "619": 0, "detail": [0, 4, 5, 7, 9, 16, 17, 37, 38, 47, 69, 84, 87, 89, 91, 107, 111, 113, 115, 116, 127, 138, 139, 140, 147, 148, 151, 152, 154, 159, 160], "descript": [0, 4, 5, 35, 40, 53, 69, 139, 152, 160], "chang": [0, 1, 2, 3, 4, 5, 6, 11, 16, 30, 31, 34, 35, 38, 40, 43, 44, 49, 52, 56, 58, 59, 68, 69, 79, 80, 81, 85, 88, 90, 98, 99, 107, 113, 115, 118, 127, 128, 129, 135, 148, 151, 152, 155, 156, 158, 159, 160], "can": [0, 1, 2, 3, 4, 5, 7, 11, 13, 14, 16, 19, 20, 21, 23, 24, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 64, 65, 67, 69, 71, 72, 73, 75, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "found": [0, 2, 4, 5, 6, 7, 9, 10, 16, 27, 52, 69, 111, 115, 138, 147, 148, 151, 155, 159, 160], "what": [0, 4, 5, 16, 30, 31, 41, 69, 72, 75, 78, 79, 99, 112, 113, 119, 121, 122, 127, 128, 129, 132, 133, 149, 151, 158, 159, 160], "": [0, 1, 4, 5, 7, 9, 11, 14, 15, 16, 18, 21, 27, 28, 33, 34, 42, 43, 45, 46, 47, 49, 51, 52, 54, 58, 59, 65, 69, 70, 72, 75, 78, 79, 80, 82, 84, 85, 88, 89, 92, 93, 99, 104, 105, 106, 108, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 142, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 160], "new": [0, 1, 2, 3, 4, 5, 13, 14, 16, 19, 23, 25, 30, 33, 34, 37, 40, 42, 43, 65, 69, 73, 76, 78, 79, 80, 81, 82, 84, 85, 87, 89, 90, 93, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 118, 119, 122, 125, 127, 129, 132, 147, 149, 151, 153, 158, 159, 160], "syntax": [0, 1, 2, 4, 8, 11, 16, 19, 49, 53, 104, 113, 139, 150, 160], "statu": [0, 1, 2, 3, 4, 5, 8, 11, 16, 41, 49, 50, 51, 53, 85, 109, 123, 140, 143], "634": 0, "structur": [0, 11, 27, 69, 78, 80, 107, 123, 132, 138, 147, 148, 151, 159, 160], "pattern": [0, 1, 47, 69, 80, 88, 104, 112], "match": [0, 1, 2, 3, 11, 16, 33, 45, 49, 50, 62, 63, 64, 65, 69, 72, 74, 75, 78, 82, 83, 84, 89, 95, 99, 107, 127, 129, 153, 154, 155], "specif": [0, 2, 5, 11, 14, 16, 19, 28, 30, 34, 35, 38, 42, 45, 47, 53, 65, 78, 80, 85, 87, 90, 93, 108, 112, 113, 115, 116, 119, 147, 149, 151, 153, 154, 159, 160], "1": [0, 1, 2, 3, 4, 5, 7, 10, 11, 14, 16, 19, 20, 23, 30, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 62, 63, 64, 65, 68, 69, 71, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 119, 120, 121, 125, 127, 133, 135, 136, 138, 142, 147, 148, 149, 151, 153, 154, 155, 157, 158, 160], "635": 0, "motiv": 0, "rational": [0, 112], "636": 0, "tutori": [0, 11, 119, 126, 127, 128, 138, 147, 148, 151, 153, 160], "bpo": 0, "12782": 0, "parenthes": [0, 4], "context": [0, 1, 2, 3, 8, 11, 14, 17, 30, 35, 47, 48, 65, 80, 108, 137, 149, 151, 159, 160], "manag": [0, 2, 8, 11, 21, 24, 27, 40, 48, 53, 84, 116, 127, 131, 132, 149, 150, 154, 157, 160], "now": [0, 1, 2, 3, 4, 5, 11, 16, 27, 39, 41, 43, 49, 50, 53, 69, 78, 80, 91, 95, 107, 112, 119, 121, 122, 124, 126, 127, 128, 129, 130, 132, 133, 149, 158], "offici": [0, 24], "allow": [0, 1, 2, 3, 4, 8, 11, 16, 19, 21, 24, 27, 28, 29, 30, 32, 34, 35, 37, 38, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 62, 63, 64, 65, 66, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 87, 88, 92, 93, 95, 98, 101, 102, 107, 108, 112, 113, 115, 116, 118, 122, 125, 127, 128, 129, 132, 148, 149, 152, 154, 157, 158], "standard": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 21, 22, 24, 25, 33, 42, 43, 47, 49, 53, 62, 63, 69, 75, 89, 92, 98, 100, 107, 108, 110, 111, 112, 113, 122, 127, 133, 140, 147, 148, 149, 150, 158, 160], "librari": [0, 1, 2, 5, 11, 16, 21, 28, 69, 72, 80, 84, 116, 124, 129, 147, 149, 150, 151, 152, 156, 160], "618": 0, "add": [0, 2, 4, 11, 16, 19, 27, 41, 67, 69, 71, 76, 80, 95, 121, 127, 129, 131, 134, 138, 139, 148, 151, 152, 159], "option": [0, 1, 2, 3, 4, 11, 16, 17, 19, 21, 25, 28, 30, 33, 38, 43, 49, 51, 52, 65, 69, 72, 82, 87, 89, 99, 103, 106, 107, 111, 112, 113, 115, 119, 122, 123, 148, 151, 152, 153, 154, 156, 157, 158], "length": [0, 1, 6, 11, 14, 16, 19, 30, 33, 34, 35, 39, 40, 43, 47, 49, 69, 78, 85, 87, 89, 92, 100, 107, 113, 115, 138, 155], "check": [0, 1, 2, 5, 6, 10, 11, 19, 30, 34, 49, 69, 77, 93, 100, 108, 111, 132, 147, 154, 155, 158, 160], "To": [0, 2, 4, 9, 14, 16, 19, 27, 29, 30, 49, 50, 53, 65, 69, 78, 80, 82, 87, 88, 90, 93, 95, 99, 100, 104, 105, 107, 112, 121, 122, 125, 127, 128, 129, 131, 132, 133, 138, 148, 151, 152, 154, 155, 156, 159, 160], "zip": [0, 1, 11, 15, 17], "interpret": [0, 1, 4, 7, 11, 29, 30, 47, 69, 78, 108, 138, 147, 149, 150, 151, 152, 154, 157, 160], "improv": [0, 1, 2, 11, 21, 69, 80, 132, 147, 149, 153], "626": 0, "precis": [0, 2, 30, 46, 62, 63, 64, 65, 69, 71, 80, 82, 83, 88, 89, 93, 97, 112, 137, 138, 147, 151], "line": [0, 2, 5, 7, 9, 10, 11, 14, 33, 34, 35, 40, 41, 43, 47, 80, 89, 91, 93, 97, 100, 102, 107, 119, 127, 128, 147, 151, 152, 154, 157, 158], "number": [0, 1, 3, 4, 8, 9, 11, 13, 14, 16, 23, 25, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 46, 47, 49, 50, 52, 53, 54, 59, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 122, 127, 135, 138, 142, 143, 147, 148, 151, 153, 154, 155, 158, 159, 160], "debug": [0, 4, 11, 69, 77, 87, 95, 104, 123, 129, 147, 149, 151, 160], "other": [0, 1, 2, 3, 4, 5, 6, 11, 13, 14, 16, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 41, 42, 47, 48, 49, 52, 53, 65, 69, 73, 78, 80, 88, 89, 90, 91, 92, 93, 97, 99, 104, 106, 107, 109, 111, 112, 113, 115, 117, 124, 125, 127, 128, 129, 130, 132, 137, 138, 147, 148, 151, 152, 153, 154, 156, 159, 160], "tool": [0, 11, 69, 122, 123, 128, 129, 148, 149, 150, 154, 155, 156, 158, 160], "type": [0, 1, 3, 4, 5, 8, 9, 11, 13, 16, 27, 28, 33, 38, 49, 50, 51, 52, 53, 64, 65, 69, 72, 75, 77, 78, 79, 80, 82, 83, 85, 89, 100, 102, 105, 107, 108, 111, 113, 115, 122, 127, 129, 147, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160], "604": 0, "write": [0, 1, 10, 11, 13, 14, 16, 21, 24, 28, 29, 30, 34, 35, 38, 39, 40, 43, 47, 62, 63, 64, 68, 69, 71, 78, 80, 85, 87, 90, 93, 99, 100, 102, 107, 108, 109, 115, 116, 118, 119, 120, 122, 127, 128, 129, 130, 133, 144, 148, 149, 150, 153, 154, 158, 159, 160], "union": [0, 5], "x": [0, 3, 5, 6, 7, 9, 11, 19, 26, 38, 41, 46, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 76, 80, 82, 83, 87, 91, 103, 113, 127, 131, 135, 138, 147, 151, 153, 154, 155, 156, 158, 160], "y": [0, 5, 7, 11, 46, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 76, 80, 82, 83, 87, 93, 113, 127, 135, 153, 154, 156], "613": 0, "explicit": [0, 6, 113, 140, 147, 154, 158], "alias": [0, 28, 69, 99, 154], "612": 0, "paramet": [0, 3, 4, 5, 8, 11, 16, 17, 20, 21, 23, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 49, 50, 51, 53, 54, 69, 80, 85, 87, 88, 89, 90, 93, 97, 100, 105, 107, 108, 112, 115, 116], "variabl": [0, 2, 3, 5, 8, 11, 16, 27, 47, 48, 78, 130, 132, 138, 147, 148, 151, 152, 154, 155, 157, 159, 160], "import": [0, 1, 2, 3, 9, 11, 14, 16, 19, 21, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 62, 63, 64, 65, 67, 68, 71, 80, 82, 83, 84, 88, 89, 90, 93, 97, 98, 99, 100, 104, 111, 113, 119, 120, 121, 124, 125, 127, 129, 130, 133, 138, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160], "deprec": [0, 1, 30, 49, 53, 87, 92, 107, 119], "remov": [0, 1, 2, 5, 11, 19, 27, 33, 38, 39, 66, 69, 80, 85, 92, 122, 127, 147, 153, 154, 157, 159], "restrict": [0, 4, 5, 6, 11, 34, 40, 47, 53, 99, 117, 151, 152, 160], "644": 0, "requir": [0, 4, 6, 8, 11, 16, 21, 28, 30, 34, 37, 38, 40, 41, 43, 47, 49, 50, 52, 53, 69, 72, 73, 75, 78, 79, 80, 87, 88, 90, 91, 93, 97, 99, 100, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 122, 127, 128, 138, 143, 147, 148, 149, 151, 152, 153, 155, 160], "openssl": [0, 2], "newer": [0, 1, 2], "632": 0, "distutil": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "Not": [0, 1, 5, 6, 7, 25, 37, 38, 69, 107, 112, 119, 140], "relev": [0, 1, 5, 100, 105, 111, 115, 139, 147, 160], "623": 0, "prepar": [0, 72], "wstr": 0, "member": [0, 8, 11], "pyunicodeobject": 0, "624": 0, "py_unicod": 0, "encod": [0, 2, 5, 6, 11, 15, 16, 27, 30, 69, 75, 99, 105, 107, 108, 110, 113, 140, 147], "api": [0, 2, 3, 4, 12, 16, 30, 35, 38, 84, 86, 90, 91, 92, 99, 112, 113, 149, 153], "597": 0, "encodingwarn": 0, "languag": [0, 1, 2, 3, 4, 5, 8, 11, 111, 113, 130, 139, 149, 151, 160], "int": [0, 1, 2, 4, 8, 9, 11, 13, 17, 36, 38, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83, 90, 110, 111, 120, 137, 138, 147, 155, 160], "ha": [0, 1, 2, 4, 5, 6, 8, 9, 11, 14, 16, 21, 23, 25, 26, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 68, 69, 72, 80, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 100, 107, 108, 109, 111, 112, 115, 119, 120, 121, 122, 125, 127, 132, 133, 135, 137, 147, 149, 151, 152, 154, 155, 156, 158, 160], "method": [0, 1, 2, 3, 4, 5, 8, 11, 13, 14, 16, 19, 21, 24, 27, 28, 30, 47, 49, 65, 80, 82, 83, 85, 104, 108, 115, 119, 121, 125, 127, 132, 133, 147, 148, 149, 155, 158, 160], "bit_count": 0, "return": [0, 1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 127, 130, 132, 137, 139, 140, 142, 148, 149, 151, 154, 155, 158, 160], "ones": [0, 16, 132, 152], "binari": [0, 1, 2, 11, 21, 24, 25, 27, 28, 41, 45, 52, 53, 80, 88, 107, 112, 116, 127, 133, 142, 149], "expans": [0, 158], "given": [0, 7, 13, 14, 16, 17, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 72, 76, 78, 80, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 110, 111, 112, 113, 115, 119, 132, 148, 151, 152, 154, 155, 157, 160], "integ": [0, 4, 6, 11, 14, 16, 17, 31, 32, 33, 34, 37, 38, 43, 46, 47, 53, 69, 72, 80, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 112, 113, 115, 135, 139, 147, 151, 155, 158, 160], "also": [0, 2, 5, 6, 13, 16, 17, 19, 20, 30, 34, 38, 39, 41, 43, 47, 48, 52, 53, 58, 62, 63, 64, 65, 69, 72, 75, 78, 80, 82, 84, 87, 88, 91, 93, 95, 99, 108, 112, 113, 115, 116, 127, 131, 132, 139, 140, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160], "known": [0, 16, 23, 28, 38, 49, 53, 69, 108, 112, 122, 125, 137, 140, 147, 149, 151, 154, 160], "popul": [0, 19, 33, 69, 89, 138, 155], "count": [0, 2, 8, 11, 13, 43, 47, 49, 68, 69, 71, 80, 87, 96, 99, 100, 104, 110, 111, 113, 114, 115, 121, 142, 148, 151, 155], "view": [0, 1, 11, 38, 65, 69, 80, 82, 99, 128, 135, 160], "dict": [0, 2, 3, 4, 5, 8, 11, 17, 19, 95, 105, 147], "kei": [0, 1, 2, 4, 11, 14, 16, 19, 20, 49, 51, 52, 53, 95, 108, 113, 147, 151, 154, 158], "valu": [0, 1, 2, 4, 5, 8, 11, 13, 14, 15, 16, 19, 20, 21, 23, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 53, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 78, 80, 82, 83, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 151, 154, 155, 158, 160], "item": [0, 1, 13, 19, 26, 103, 151, 152, 153, 160], "all": [0, 1, 2, 3, 5, 7, 9, 11, 14, 16, 17, 19, 21, 22, 25, 27, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 43, 47, 49, 53, 55, 61, 65, 69, 70, 72, 78, 79, 80, 84, 85, 87, 88, 89, 91, 92, 93, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 130, 132, 138, 145, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160], "have": [0, 1, 2, 3, 4, 8, 9, 10, 11, 16, 17, 19, 21, 23, 27, 29, 33, 34, 37, 40, 41, 43, 46, 51, 52, 54, 65, 69, 72, 76, 78, 80, 82, 85, 87, 88, 89, 91, 93, 95, 99, 106, 107, 108, 109, 112, 113, 114, 115, 118, 119, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160], "map": [0, 11, 17, 22, 38, 69, 80, 91, 95, 112, 132, 138, 151, 155, 160], "attribut": [0, 1, 2, 3, 5, 8, 11, 17, 19, 80, 108, 111, 115], "give": [0, 16, 34, 41, 42, 47, 88, 93, 99, 111, 122, 127, 157], "mappingproxytyp": 0, "object": [0, 1, 2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 119, 121, 125, 128, 130, 132, 133, 138, 147, 148, 149, 152, 155, 159], "wrap": [0, 4, 6, 14, 21, 24, 33, 41, 72, 78, 87, 89, 90, 108, 112, 159], "origin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "dictionari": [0, 7, 11, 14, 21, 22, 24, 79, 95, 105, 111, 113, 116, 147, 151, 154, 160], "function": [0, 1, 2, 3, 4, 5, 8, 9, 11, 16, 19, 27, 33, 34, 38, 39, 41, 43, 44, 66, 72, 73, 76, 78, 79, 81, 88, 89, 91, 93, 98, 99, 100, 102, 113, 115, 119, 124, 127, 130, 132, 134, 137, 138, 139, 143, 147, 149, 151, 153, 154, 155, 156, 159, 160], "an": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160], "strict": 0, "flag": [0, 2, 10, 14, 16, 19, 62, 63, 64, 65, 69, 71, 77, 82, 83, 85, 104, 106, 107, 113, 134, 135, 137, 140, 141, 142, 143, 144, 146, 151, 154, 155, 157], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160], "iter": [0, 1, 2, 4, 10, 11, 13, 17, 19, 78, 85, 106, 152, 154, 160], "equal": [0, 1, 14, 30, 65, 67, 69, 71, 78, 80, 82, 103, 135, 140], "builtin": [0, 7, 8, 11, 27, 28, 107, 111, 149], "extens": [0, 1, 5, 14, 23, 27, 28, 41, 106, 108, 111, 127, 147, 149, 153], "take": [0, 6, 7, 9, 14, 16, 28, 31, 33, 38, 40, 42, 43, 47, 52, 54, 60, 65, 69, 72, 78, 79, 80, 87, 88, 89, 96, 98, 100, 102, 104, 108, 111, 112, 124, 127, 130, 138, 147, 151, 154, 155, 159, 160], "argument": [0, 1, 2, 3, 4, 5, 8, 9, 11, 14, 15, 16, 17, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 69, 72, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 121, 127, 133, 134, 135, 136, 142, 143, 145, 147, 148, 151, 152, 154, 156, 157, 160], "longer": [0, 1, 4, 5, 14, 25, 33, 43, 69, 77, 89, 112, 136, 158, 160], "accept": [0, 1, 2, 4, 9, 11, 14, 16, 33, 39, 43, 49, 52, 69, 72, 75, 79, 89, 91, 107, 108, 112, 145, 147, 151, 154], "decim": [0, 4, 54], "fraction": [0, 1, 4, 37, 46, 112], "convert": [0, 2, 5, 6, 11, 15, 17, 26, 29, 31, 33, 38, 41, 45, 46, 53, 69, 71, 72, 75, 89, 95, 105, 107, 112, 127, 139, 147, 149, 160], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 11, 14, 16, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 62, 63, 64, 65, 69, 80, 85, 87, 88, 89, 91, 93, 97, 99, 100, 103, 104, 107, 108, 109, 111, 112, 115, 116, 119, 122, 127, 129, 132, 139, 147, 148, 149, 151, 152, 154, 155, 157, 160], "loss": [0, 80, 113, 151], "e": [0, 2, 6, 7, 11, 15, 16, 17, 18, 21, 22, 23, 27, 28, 30, 35, 37, 46, 49, 52, 62, 63, 64, 65, 69, 74, 75, 77, 80, 84, 86, 87, 89, 92, 99, 104, 106, 107, 108, 110, 111, 112, 113, 119, 122, 132, 134, 135, 142, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160], "g": [0, 2, 6, 7, 16, 21, 24, 27, 28, 35, 36, 49, 62, 63, 64, 65, 67, 69, 70, 71, 74, 75, 77, 80, 82, 83, 86, 89, 92, 95, 104, 107, 108, 111, 112, 113, 132, 134, 135, 147, 148, 149, 152, 154, 156, 157, 160], "__int__": [0, 4], "do": [0, 2, 6, 8, 10, 11, 27, 30, 32, 43, 47, 61, 62, 63, 64, 65, 66, 69, 71, 72, 75, 78, 80, 81, 82, 83, 91, 93, 103, 108, 112, 114, 117, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 146, 147, 148, 151, 152, 154, 159, 160], "__index__": [0, 4], "If": [0, 6, 9, 13, 14, 15, 16, 20, 21, 23, 24, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 46, 47, 49, 50, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 72, 73, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 126, 127, 129, 130, 131, 132, 135, 138, 142, 147, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160], "__ipow__": 0, "notimpl": 0, "oper": [0, 1, 2, 4, 5, 7, 8, 11, 16, 20, 26, 27, 28, 30, 33, 35, 38, 42, 47, 69, 78, 80, 87, 88, 89, 103, 104, 106, 107, 112, 113, 115, 118, 122, 128, 135, 139, 140, 143, 148, 149, 151, 157, 160], "correctli": [0, 2, 29, 30, 44], "fall": [0, 38, 69, 91, 99, 112, 147], "back": [0, 21, 69, 70, 76, 78, 79, 80, 99, 112, 116, 119, 122, 127, 129, 148, 151, 154, 158], "__pow__": 0, "__rpow__": 0, "expect": [0, 16, 30, 37, 69, 72, 75, 78, 108, 112, 137, 151], "assign": [0, 4, 8, 11, 40, 69, 84, 89, 95, 113, 119, 138, 147, 151], "express": [0, 1, 2, 3, 4, 5, 8, 10, 11, 27, 47, 89, 107, 112, 117, 127, 154], "unparenthes": [0, 5], "within": [0, 4, 14, 16, 33, 42, 47, 49, 69, 75, 78, 80, 87, 88, 89, 93, 99, 100, 113, 115, 118, 138, 152, 155, 158], "set": [0, 1, 2, 3, 11, 14, 16, 17, 19, 21, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 116, 118, 119, 122, 127, 129, 130, 135, 137, 138, 139, 140, 142, 143, 144, 145, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160], "liter": [0, 2, 4, 8, 11, 69, 104, 113, 147, 160], "comprehens": [0, 2, 4, 5, 8, 11, 155], "well": [0, 16, 23, 27, 33, 89, 107, 109, 113, 127, 128, 149, 152, 156], "sequenc": [0, 2, 11, 19, 103, 104, 107, 138, 150, 154, 158], "index": [0, 1, 2, 6, 11, 13, 16, 19, 30, 33, 66, 69, 74, 76, 85, 89, 95, 104, 109, 111, 115, 133, 151, 156], "slice": [0, 11, 13, 17, 160], "__builtins__": 0, "which": [0, 1, 2, 3, 4, 6, 8, 11, 13, 14, 16, 19, 20, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 47, 49, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 135, 137, 138, 140, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "i": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "look": [0, 11, 27, 41, 69, 78, 111, 112, 122, 124, 127, 129, 154, 155, 156, 158, 160], "symbol": [0, 7, 19, 22, 69, 107, 147, 154], "when": [0, 1, 2, 3, 4, 5, 6, 8, 11, 14, 16, 19, 21, 23, 24, 27, 28, 33, 34, 35, 38, 39, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 93, 95, 99, 100, 102, 103, 104, 107, 108, 110, 113, 115, 116, 118, 122, 125, 127, 128, 130, 132, 135, 137, 138, 140, 147, 148, 149, 151, 152, 154, 155, 156, 158, 159, 160], "execut": [0, 9, 11, 30, 42, 47, 48, 65, 72, 78, 79, 80, 87, 96, 109, 111, 118, 127, 128, 129, 131, 132, 136, 137, 138, 140, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "instead": [0, 1, 5, 6, 8, 11, 14, 21, 24, 27, 30, 38, 40, 41, 49, 53, 62, 63, 64, 65, 69, 72, 73, 75, 80, 82, 87, 97, 104, 106, 107, 108, 111, 112, 113, 116, 122, 127, 131, 133, 142, 148, 149, 152, 154, 156, 157, 159, 160], "__globals__": [0, 7], "initi": [0, 2, 4, 13, 15, 16, 19, 20, 23, 28, 35, 38, 39, 51, 54, 58, 59, 60, 62, 63, 64, 65, 68, 69, 80, 81, 82, 83, 84, 90, 99, 108, 111, 130, 139, 142, 147, 151, 155, 158, 159], "from": [0, 1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 16, 17, 19, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 52, 53, 54, 58, 59, 62, 63, 64, 65, 68, 69, 71, 72, 73, 75, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 127, 129, 132, 133, 135, 137, 138, 139, 140, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "exist": [0, 4, 11, 16, 20, 22, 25, 31, 33, 34, 40, 41, 47, 78, 87, 100, 102, 108, 111, 115, 118, 122, 127, 128, 147, 152, 153, 154, 155, 157, 158, 159, 160], "els": [0, 33, 47, 48, 72, 89, 102, 107, 111, 127, 129, 135], "current": [0, 1, 2, 3, 7, 8, 14, 16, 17, 21, 23, 25, 28, 30, 35, 36, 37, 38, 39, 45, 47, 49, 51, 52, 53, 65, 66, 69, 72, 80, 85, 87, 93, 95, 96, 98, 99, 108, 111, 112, 113, 115, 118, 119, 122, 127, 128, 138, 143, 147, 151, 152, 153, 154, 157, 159, 160], "two": [0, 1, 4, 5, 7, 11, 14, 16, 30, 33, 37, 41, 46, 49, 53, 54, 61, 65, 69, 79, 80, 82, 84, 87, 89, 100, 112, 115, 116, 122, 125, 127, 132, 135, 136, 137, 138, 142, 147, 151, 155, 158, 160], "aiter": 0, "anext": 0, "been": [0, 1, 2, 4, 5, 16, 23, 27, 33, 43, 52, 69, 76, 80, 85, 89, 91, 127, 132, 147, 149, 152, 154, 156, 158, 160], "ad": [0, 1, 2, 3, 4, 5, 7, 11, 16, 19, 21, 28, 43, 66, 67, 69, 71, 72, 80, 96, 109, 111, 115, 129, 132, 135, 137, 141, 146, 148, 151, 153, 154, 156, 159, 160], "provid": [0, 1, 2, 11, 13, 14, 16, 18, 21, 22, 24, 25, 27, 28, 31, 32, 33, 34, 36, 37, 38, 46, 47, 48, 49, 50, 52, 53, 60, 69, 73, 85, 87, 89, 93, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 127, 135, 137, 139, 140, 143, 147, 148, 149, 151, 153, 154, 155, 157, 158, 159, 160], "asynchron": [0, 2, 11, 27, 28, 51, 106, 124, 149], "counterpart": 0, "next": [0, 5, 7, 11, 14, 17, 37, 69, 78, 80, 100, 111, 120, 122, 127, 130, 132, 135, 147, 151, 153, 154, 155, 158, 159], "respect": [0, 16, 34, 37, 38, 40, 69, 72, 80, 87, 88, 89, 93, 95, 97, 113, 134, 139, 150, 152, 159], "static": [0, 16, 35, 49, 52, 115, 138, 156], "staticmethod": [0, 11, 17, 138], "class": [0, 1, 2, 3, 4, 6, 8, 11, 17, 25, 27, 66, 68, 81, 85, 104, 112, 113, 115, 119, 124, 125, 148, 149, 151, 153, 155, 160], "classmethod": [0, 11, 17, 20, 91, 95], "inherit": [0, 4, 8, 11, 27], "__module__": [0, 2, 8, 11], "__name__": [0, 7, 158], "__qualname__": 0, "__doc__": 0, "__annotations__": 0, "__wrapped__": 0, "moreov": 0, "callabl": [0, 11, 17, 38, 42, 72, 111], "regular": [0, 1, 2, 4, 6, 11, 27, 85, 125, 127, 154, 158], "annot": [0, 2, 3, 5], "complex": [0, 2, 4, 7, 11, 17, 27, 41, 72, 113, 128, 132, 147, 149, 159], "target": [0, 11, 25, 34, 54, 84, 111, 113, 127, 140, 149, 154, 156, 160], "everyth": [0, 44, 69, 79, 127, 128, 129, 132], "besid": 0, "simpl": [0, 11, 27, 41, 69, 73, 78, 92, 128, 132, 138, 139, 147, 148, 151, 156, 159], "name": [0, 2, 3, 4, 5, 8, 11, 16, 17, 19, 27, 28, 36, 38, 47, 49, 50, 51, 53, 68, 69, 72, 78, 79, 84, 85, 86, 91, 95, 99, 104, 105, 107, 108, 109, 111, 112, 113, 115, 127, 129, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160], "526": [0, 2], "caus": [0, 6, 7, 9, 10, 17, 30, 47, 65, 69, 82, 99, 100, 111, 121, 133, 136, 138, 140, 151, 159, 160], "ani": [0, 5, 6, 9, 11, 14, 16, 17, 19, 21, 24, 25, 30, 32, 33, 34, 38, 39, 40, 41, 43, 44, 47, 48, 49, 51, 52, 55, 58, 59, 69, 71, 72, 75, 78, 79, 80, 85, 87, 88, 89, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 108, 112, 115, 117, 122, 127, 129, 130, 131, 132, 133, 136, 137, 138, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160], "runtim": [0, 1, 4, 6, 11, 47, 147, 149, 155, 156, 160], "effect": [0, 7, 23, 25, 47, 54, 69, 80, 95, 109, 113, 127, 130, 139, 149], "__future__": 0, "lazi": 0, "creat": [0, 1, 11, 13, 14, 16, 19, 25, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 58, 59, 60, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 113, 115, 118, 119, 121, 122, 124, 125, 126, 127, 130, 133, 136, 147, 148, 151, 154, 157, 158, 159, 160], "empti": [0, 1, 3, 5, 13, 14, 16, 19, 26, 28, 33, 35, 69, 74, 78, 89, 104, 106, 111, 118, 127, 147], "demand": [0, 72, 147], "store": [0, 9, 11, 16, 19, 26, 33, 34, 38, 43, 47, 65, 69, 72, 80, 82, 88, 89, 92, 100, 102, 107, 110, 111, 115, 118, 122, 127, 132, 136, 137, 138, 139, 140, 147, 148, 149, 151, 155, 156, 158, 160], "__dict__": [0, 13], "backward": [0, 85, 87, 148], "compat": [0, 6, 9, 10, 11, 16, 17, 19, 27, 69, 79, 85, 87, 106, 107, 111, 112, 115, 148, 149, 156], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "best": [0, 5, 27, 30, 47, 67, 69, 71, 79, 80, 111, 127, 129, 147, 150, 151, 159, 160], "practic": [0, 11, 150, 159], "work": [0, 1, 2, 3, 7, 8, 9, 11, 13, 16, 18, 21, 24, 30, 38, 41, 46, 49, 52, 53, 65, 69, 72, 79, 80, 82, 99, 102, 103, 107, 112, 113, 115, 116, 118, 119, 122, 127, 128, 129, 130, 131, 132, 138, 142, 147, 149, 150, 151, 153, 154, 157, 160], "consist": [0, 5, 15, 33, 34, 35, 40, 43, 89, 93, 99, 100, 107, 113, 149, 151, 153, 155], "yield": [0, 4, 7, 85, 106], "await": [0, 1, 3, 14, 35, 151], "forbidden": 0, "under": [0, 16, 27, 47, 66, 70, 78, 79, 81, 115, 122, 127, 130, 147], "due": [0, 1, 4, 5, 16, 23, 27, 33, 37, 43, 53, 69, 89, 104, 107, 109, 111, 122, 127, 149], "side": [0, 2, 11, 19, 28, 30, 69, 78, 104, 107, 108, 109, 122, 154], "usag": [0, 6, 7, 11, 16, 21, 22, 25, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 44, 47, 48, 50, 51, 52, 53, 62, 63, 64, 65, 67, 68, 69, 71, 80, 82, 83, 84, 88, 89, 90, 95, 96, 97, 98, 99, 106, 112, 113, 116, 119, 147, 151, 154, 157, 159, 160], "unbound": 0, "super": [0, 2, 6, 8, 11, 17, 127], "might": [0, 16, 38, 39, 49, 69, 78, 80, 99, 115, 122, 127, 128, 132, 147, 148, 151, 152, 154, 156], "alter": [0, 151], "process": [0, 4, 5, 16, 17, 30, 32, 48, 54, 65, 69, 72, 73, 74, 75, 76, 78, 80, 88, 106, 107, 112, 115, 127, 128, 129, 135, 138, 140, 143, 147, 149, 151, 152, 158, 159, 160], "tabl": [0, 11, 33, 62, 63, 64, 65, 69, 70, 71, 82, 83, 84, 89, 90, 92, 109, 147, 148], "render": [0, 62, 63, 64, 65, 69, 71, 82, 83], "effectless": 0, "hash": [0, 2, 11, 17, 27, 147, 154, 155], "nan": [0, 1, 2], "both": [0, 6, 7, 9, 13, 14, 15, 16, 21, 30, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 49, 53, 69, 78, 80, 84, 89, 90, 93, 96, 98, 99, 100, 107, 108, 112, 113, 115, 118, 127, 147, 148, 149, 151, 153, 154], "float": [0, 2, 4, 5, 8, 11, 13, 14, 17, 46, 53, 54, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 76, 80, 82, 83, 88, 99, 107, 110, 112, 113, 121, 138, 139, 147], "depend": [0, 7, 13, 16, 21, 22, 25, 28, 30, 33, 34, 38, 39, 40, 41, 42, 43, 45, 47, 49, 52, 53, 69, 72, 75, 78, 84, 88, 89, 93, 95, 104, 106, 107, 108, 109, 112, 113, 115, 124, 127, 135, 147, 151, 152, 156, 157, 159], "ident": [0, 16, 69, 134, 137, 142, 149, 150, 160], "formerli": [0, 5], "thei": [0, 7, 9, 16, 17, 19, 27, 28, 31, 32, 34, 38, 40, 47, 52, 67, 69, 71, 73, 80, 85, 93, 95, 99, 106, 107, 108, 111, 112, 115, 118, 138, 143, 147, 148, 151, 152, 154, 155, 156], "alwai": [0, 1, 2, 5, 7, 21, 24, 26, 27, 32, 33, 38, 47, 49, 69, 78, 80, 85, 87, 89, 97, 104, 107, 112, 113, 118, 119, 122, 137, 148, 149, 151, 159, 160], "even": [0, 2, 27, 28, 34, 41, 43, 69, 71, 80, 100, 106, 107, 112, 113, 115, 119, 128, 132, 147, 151, 154, 156, 157, 159], "though": [0, 4, 80, 107, 112, 113], "one": [0, 1, 2, 6, 8, 11, 14, 16, 28, 30, 33, 34, 37, 38, 41, 42, 43, 46, 47, 49, 50, 52, 53, 54, 61, 62, 63, 64, 66, 69, 78, 80, 84, 85, 87, 89, 91, 95, 96, 99, 100, 102, 103, 104, 106, 108, 111, 113, 115, 118, 119, 120, 124, 125, 127, 129, 130, 132, 134, 135, 137, 138, 140, 142, 147, 149, 151, 152, 154, 155, 156, 158, 159, 160], "anoth": [0, 2, 6, 11, 16, 21, 27, 28, 30, 34, 47, 52, 69, 77, 78, 80, 100, 109, 111, 112, 127, 138, 147, 151, 152, 154, 159], "potenti": [0, 1, 35, 78, 147, 151], "quadrat": 0, "behavior": [0, 4, 84, 127, 129, 154], "excess": [0, 23, 88], "collis": [0, 7, 132], "contain": [0, 2, 3, 5, 8, 11, 13, 14, 16, 27, 28, 30, 33, 34, 35, 40, 43, 47, 49, 52, 65, 68, 69, 73, 74, 75, 76, 78, 82, 85, 87, 89, 90, 95, 100, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 132, 135, 142, 143, 145, 147, 149, 152, 154, 155, 156, 159], "multipl": [0, 1, 4, 5, 8, 11, 16, 38, 40, 43, 47, 49, 53, 63, 65, 69, 72, 80, 82, 87, 91, 92, 95, 104, 106, 107, 113, 115, 127, 135, 137, 147, 151, 154, 158, 159, 160], "A": [0, 1, 2, 3, 4, 6, 7, 10, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 43, 47, 48, 49, 52, 62, 63, 64, 65, 69, 71, 72, 74, 76, 78, 80, 82, 83, 85, 87, 89, 90, 91, 93, 95, 100, 104, 107, 108, 111, 113, 115, 116, 117, 122, 127, 128, 142, 147, 148, 149, 151, 152, 154, 155, 158, 159, 160], "syntaxerror": [0, 8, 11, 17], "nameerror": [0, 7, 11, 17], "rais": [0, 1, 2, 5, 6, 8, 9, 11, 14, 16, 19, 26, 28, 29, 34, 37, 42, 43, 47, 49, 52, 69, 78, 99, 100, 102, 103, 106, 107, 111, 112, 115, 147, 151, 154, 155, 158, 160], "delet": [0, 11, 17, 30, 72, 105, 151], "__debug__": [0, 47], "constant": [0, 1, 2, 11, 16, 47, 49, 106, 113, 130, 147, 152, 160], "except": [0, 1, 2, 4, 7, 8, 10, 11, 14, 22, 27, 28, 33, 34, 38, 42, 43, 47, 52, 53, 61, 66, 78, 80, 89, 91, 95, 99, 100, 102, 104, 106, 107, 111, 112, 113, 115, 134, 139, 141, 142, 143, 146, 147, 152, 154, 158, 159], "end_lineno": 0, "end_offset": 0, "none": [0, 2, 7, 9, 11, 14, 16, 29, 33, 34, 35, 36, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 93, 95, 96, 97, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 115, 148, 151, 152, 153, 155], "determin": [0, 34, 40, 44, 69, 79, 89, 93, 95, 99, 108, 112, 116, 127, 129, 138, 140, 143, 151, 152, 155, 158, 159, 160], "built": [0, 1, 2, 3, 4, 5, 11, 16, 24, 34, 47, 49, 50, 69, 72, 87, 111, 116, 122, 127, 128, 132, 147, 149, 151, 154, 159, 160], "asyncio": [0, 3, 4, 5, 11, 27, 35], "miss": [0, 4, 27, 127], "connect_accepted_socket": 0, "arrai": [0, 2, 7, 8, 11, 33, 35, 39, 41, 54, 65, 68, 69, 75, 80, 82, 88, 89, 90, 95, 113, 115, 136, 137, 138, 147, 151], "start": [0, 3, 4, 11, 14, 15, 16, 22, 27, 30, 34, 39, 44, 47, 52, 62, 63, 64, 65, 69, 78, 79, 80, 82, 83, 84, 87, 90, 92, 93, 96, 103, 104, 110, 111, 112, 113, 115, 119, 129, 131, 132, 138, 148, 151, 152, 154, 156, 157, 158, 159, 160], "stop": [0, 11, 14, 16, 30, 33, 34, 42, 43, 44, 52, 54, 69, 80, 84, 87, 89, 96, 99, 100, 103, 104, 112, 127, 154, 157], "gc": [0, 3, 4, 5, 7, 11, 27, 160], "audit": [0, 4], "hook": [0, 1, 4], "get_object": [0, 4], "get_referr": 0, "get_refer": 0, "hashlib": [0, 2, 11, 27], "preliminari": 0, "support": [0, 1, 2, 3, 4, 5, 8, 11, 13, 16, 17, 19, 20, 21, 24, 27, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 56, 62, 63, 69, 72, 87, 88, 89, 93, 97, 99, 100, 103, 104, 107, 110, 111, 113, 115, 116, 119, 122, 125, 127, 131, 132, 137, 138, 139, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160], "pure": [0, 28, 65, 66, 69, 78, 81, 149], "fallback": [0, 158], "pbkdf2_hmac": 0, "In": [0, 3, 4, 6, 13, 14, 16, 17, 27, 28, 30, 33, 34, 37, 40, 41, 43, 47, 48, 53, 54, 69, 78, 80, 88, 89, 92, 99, 100, 103, 106, 107, 108, 109, 112, 113, 115, 119, 122, 127, 131, 134, 138, 139, 141, 142, 146, 147, 151, 152, 153, 154, 158, 159, 160], "futur": [0, 4, 14, 27, 39, 69, 92, 107, 111, 121], "pbkdf2": 0, "hmac": [0, 152], "avail": [0, 1, 2, 4, 5, 11, 16, 17, 21, 23, 24, 25, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 41, 47, 49, 51, 52, 53, 65, 69, 72, 80, 85, 86, 87, 89, 90, 91, 95, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 118, 124, 127, 132, 139, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159], "o": [0, 1, 2, 5, 8, 11, 16, 19, 22, 27, 28, 30, 52, 62, 63, 64, 65, 80, 83, 87, 88, 106, 111, 112, 113, 115, 119, 120, 121, 123, 127, 130, 132, 148, 149, 151, 154, 156, 159, 160], "cpu_count": 0, "vxwork": 0, "rto": [0, 111, 112], "eventfd": 0, "relat": [0, 11, 27, 46, 69, 85, 135, 149, 151], "helper": [0, 28, 130], "eventfd2": 0, "syscal": [0, 1, 2], "linux": [0, 1, 2, 5, 11, 48, 111, 118, 122, 123, 127, 128, 149, 154], "splice": 0, "move": [0, 11, 66, 69, 78, 85, 98, 119, 121, 122, 127, 132, 139, 140, 153], "data": [0, 1, 3, 4, 6, 9, 11, 14, 15, 16, 20, 21, 24, 25, 27, 28, 29, 30, 33, 34, 35, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 57, 67, 69, 71, 72, 75, 78, 79, 80, 84, 85, 87, 88, 89, 90, 92, 93, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 116, 119, 122, 124, 127, 128, 132, 133, 135, 139, 147, 148, 149, 151, 155, 158, 160], "between": [0, 2, 4, 7, 8, 11, 15, 16, 29, 30, 34, 35, 37, 38, 41, 43, 45, 47, 65, 69, 71, 72, 78, 80, 82, 83, 84, 87, 88, 89, 90, 93, 94, 98, 99, 100, 103, 112, 114, 116, 119, 120, 121, 127, 133, 138, 147, 150, 155], "file": [0, 1, 2, 5, 6, 7, 9, 10, 11, 15, 21, 24, 27, 28, 29, 41, 45, 52, 67, 69, 71, 72, 84, 85, 87, 92, 102, 105, 107, 108, 109, 111, 113, 115, 116, 117, 118, 122, 123, 129, 131, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160], "descriptor": [0, 1, 5, 11, 16, 87], "without": [0, 4, 16, 23, 30, 33, 34, 43, 49, 50, 69, 72, 78, 80, 83, 87, 89, 90, 111, 112, 113, 115, 117, 118, 124, 125, 127, 129, 132, 135, 148, 149, 151, 153, 154, 157], "copi": [0, 1, 2, 3, 11, 16, 24, 33, 69, 78, 80, 87, 113, 116, 117, 122, 127, 143, 147, 149, 152, 153, 154, 156, 157, 158, 159, 160], "kernel": [0, 2, 69, 127], "address": [0, 1, 2, 11, 14, 16, 30, 34, 49, 50, 52, 53, 61, 65, 68, 78, 80, 82, 84, 93, 95, 109, 113, 119, 137, 138, 140, 141, 146, 147, 149, 154, 157, 159, 160], "space": [0, 3, 7, 8, 9, 11, 16, 19, 43, 47, 65, 69, 72, 80, 82, 109, 113, 122, 127, 132, 133, 147, 149, 154, 158, 160], "user": [0, 8, 11, 16, 27, 28, 35, 39, 40, 41, 51, 85, 95, 100, 107, 112, 115, 127, 129, 147, 149, 151, 154, 156, 157, 159], "where": [0, 4, 8, 11, 13, 16, 22, 28, 30, 39, 48, 49, 53, 58, 59, 69, 76, 80, 86, 87, 88, 89, 90, 91, 107, 113, 115, 116, 127, 131, 134, 135, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 154, 156, 158, 159, 160], "must": [0, 2, 3, 14, 16, 17, 19, 21, 24, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 47, 49, 51, 52, 53, 54, 60, 65, 67, 69, 71, 76, 78, 80, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 102, 104, 106, 107, 108, 111, 112, 115, 116, 118, 119, 136, 137, 138, 139, 140, 142, 147, 148, 151, 152, 154, 155, 156, 160], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "pipe": 0, "o_evtonli": 0, "o_fsync": 0, "o_symlink": 0, "o_nofollow_ani": 0, "maco": [0, 149], "platform": [0, 5, 11, 27, 34, 37, 40, 84, 85, 93, 106, 111, 137, 147, 151, 160], "freedesktop_os_releas": 0, "retriev": [0, 49, 50, 51, 53, 86], "system": [0, 1, 2, 7, 11, 27, 28, 30, 34, 38, 39, 40, 44, 69, 77, 80, 84, 86, 87, 92, 107, 112, 113, 118, 122, 123, 124, 127, 128, 129, 131, 148, 149, 151, 154, 155, 157, 159], "identif": 0, "freedesktop": 0, "org": [0, 6, 49, 107, 112, 113, 149, 150, 154, 156], "socket": [0, 1, 2, 5, 9, 11, 14, 16, 21, 24, 27, 28, 49, 50, 51, 52, 53, 108, 113, 116, 159], "timeout": [0, 1, 5, 14, 16, 30, 33, 34, 43, 44, 52, 61, 65, 73, 78, 80, 82, 84, 89, 93, 96, 97, 100, 101, 102, 106, 107, 112, 114], "alia": [0, 14, 69, 71, 107, 113, 154], "timeouterror": [0, 14, 112], "mptcp": 0, "ipproto_mptcp": 0, "ip_recvto": 0, "receiv": [0, 1, 4, 14, 16, 33, 34, 35, 40, 43, 52, 61, 65, 66, 69, 72, 78, 80, 84, 89, 93, 97, 99, 100, 101, 102, 107, 108, 109, 114, 119, 124, 126, 133, 138, 149, 151, 158], "servic": [0, 11, 16, 27, 48, 49, 52, 84, 107, 151, 160], "ToS": 0, "dscp": 0, "ecn": 0, "field": [0, 19, 39, 49, 65, 69, 80, 82, 85, 111, 113, 155], "ssl": [0, 1, 2, 5, 11, 14, 27], "op_ignore_unexpected_eof": 0, "result": [0, 1, 4, 8, 9, 11, 16, 20, 27, 29, 37, 38, 49, 54, 58, 59, 62, 63, 64, 65, 67, 69, 71, 73, 76, 78, 79, 80, 82, 83, 87, 88, 100, 104, 107, 109, 112, 119, 132, 134, 135, 137, 138, 140, 147, 151, 152, 154, 158, 160], "deprecationwarn": [0, 3], "sslcontext": [0, 2, 11, 14], "op_no_sslv2": 0, "op_no_sslv3": 0, "default": [0, 1, 2, 4, 5, 14, 15, 16, 21, 24, 29, 31, 32, 33, 34, 39, 47, 49, 50, 51, 52, 58, 62, 63, 64, 65, 69, 70, 71, 73, 79, 80, 82, 83, 84, 87, 88, 89, 90, 92, 99, 102, 104, 106, 107, 108, 111, 113, 115, 116, 119, 127, 129, 131, 133, 147, 148, 151, 152, 154, 156, 157, 159, 160], "therefor": [0, 21, 37, 47, 90, 149, 151], "cannot": [0, 2, 6, 8, 10, 11, 13, 14, 16, 23, 25, 27, 34, 40, 44, 56, 69, 71, 118, 129, 138, 147, 151, 154, 160], "warn": [0, 27, 33, 89, 154], "about": [0, 1, 11, 14, 16, 21, 33, 34, 37, 40, 47, 53, 61, 69, 80, 85, 87, 89, 93, 95, 96, 104, 109, 111, 113, 116, 119, 122, 124, 125, 127, 128, 130, 147, 151, 154, 158, 159], "again": [0, 16, 37, 39, 41, 43, 47, 78, 80, 106, 109, 112, 113, 120, 122, 127, 132, 147, 154, 158, 159, 160], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "secur": [0, 2, 5, 16, 25, 49, 51, 52, 53, 108, 154], "cipher": [0, 1, 2, 11, 27, 108], "forward": [0, 87, 127, 128, 129, 156], "secreci": 0, "sha": [0, 2], "mac": [0, 11, 16, 30, 49, 50, 52, 53, 122, 123, 127], "disabl": [0, 11, 23, 30, 33, 37, 42, 47, 53, 61, 66, 72, 77, 80, 81, 84, 87, 89, 90, 91, 96, 99, 100, 102, 109, 111, 113, 115, 127, 129, 143, 151, 154], "level": [0, 2, 11, 21, 27, 28, 30, 33, 34, 35, 38, 40, 41, 43, 47, 49, 50, 53, 62, 63, 64, 65, 69, 71, 73, 78, 80, 82, 83, 89, 92, 93, 95, 97, 100, 104, 107, 109, 112, 116, 119, 149, 150, 154, 155, 158], "2": [0, 1, 2, 6, 7, 9, 10, 11, 13, 14, 16, 19, 20, 21, 30, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 52, 53, 54, 62, 63, 64, 65, 68, 69, 71, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 122, 125, 127, 136, 138, 139, 140, 147, 150, 151, 154, 155, 156, 157, 158, 160], "prohibit": [0, 5, 28], "weak": [0, 38], "rsa": 0, "dh": 0, "ecc": 0, "less": [0, 1, 19, 21, 23, 28, 33, 47, 54, 62, 63, 64, 65, 69, 71, 78, 82, 83, 87, 89, 90, 103, 107, 111, 127, 140, 149, 158], "than": [0, 1, 3, 4, 5, 9, 14, 16, 21, 23, 27, 33, 34, 37, 38, 40, 41, 43, 47, 49, 54, 62, 63, 64, 65, 69, 71, 72, 75, 77, 78, 80, 82, 83, 85, 87, 89, 90, 93, 103, 106, 107, 110, 111, 112, 116, 122, 127, 128, 134, 136, 138, 140, 147, 149, 151, 152, 156, 158, 160], "112": [0, 65], "bit": [0, 5, 6, 8, 11, 15, 16, 30, 32, 33, 34, 35, 37, 40, 41, 43, 46, 54, 57, 58, 63, 65, 67, 69, 70, 78, 80, 81, 87, 88, 89, 90, 93, 96, 97, 100, 103, 109, 110, 111, 113, 116, 119, 120, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 155, 158, 160], "minimum": [0, 2, 16, 30, 31, 65, 69, 73, 82, 90, 98, 111, 115, 129, 147, 155], "protocol": [0, 1, 2, 4, 11, 13, 16, 30, 33, 39, 41, 43, 47, 51, 53, 87, 89, 92, 100, 107, 108, 112, 113, 115, 148, 149, 154, 158, 160], "version": [0, 1, 2, 11, 27, 45, 52, 69, 77, 85, 86, 92, 100, 104, 106, 109, 111, 122, 127, 139, 150, 152, 156, 157], "tl": [0, 2, 11, 27], "base": [0, 2, 3, 4, 5, 11, 16, 18, 21, 22, 28, 35, 37, 46, 49, 52, 54, 58, 62, 63, 64, 65, 69, 71, 72, 75, 78, 80, 82, 83, 87, 95, 108, 109, 113, 116, 132, 143, 147, 148, 149, 152, 154, 155], "hynek": 0, "schlawack": 0, "research": 0, "doe": [0, 5, 8, 11, 13, 14, 16, 21, 38, 39, 43, 45, 47, 49, 65, 69, 78, 79, 87, 88, 90, 93, 102, 107, 108, 112, 115, 118, 122, 127, 129, 132, 144, 147, 151, 154, 155, 156, 157, 158, 160], "block": [0, 1, 2, 5, 11, 14, 16, 20, 21, 28, 30, 31, 32, 34, 35, 40, 43, 47, 48, 49, 52, 64, 65, 69, 73, 78, 80, 83, 84, 85, 87, 88, 92, 95, 102, 107, 108, 113, 118, 132, 133, 136, 147, 151, 159, 160], "them": [0, 14, 16, 28, 30, 34, 38, 40, 41, 49, 69, 72, 73, 77, 80, 85, 93, 102, 107, 112, 113, 115, 127, 135, 138, 142, 145, 149, 150, 151, 152, 153, 154, 159, 160], "activ": [0, 11, 16, 33, 38, 41, 47, 49, 50, 52, 53, 78, 79, 80, 87, 88, 89, 99, 100, 106, 109, 115, 119, 151, 154, 159], "howev": [0, 1, 9, 13, 16, 27, 30, 47, 65, 69, 72, 75, 78, 80, 82, 84, 107, 112, 121, 122, 127, 129, 132, 147, 148, 149, 151, 152, 154, 156, 160], "build": [0, 5, 6, 7, 9, 10, 11, 16, 21, 27, 49, 51, 72, 85, 111, 115, 128, 129, 132, 147, 148, 153, 154, 155, 156, 159], "distro": 0, "configur": [0, 2, 4, 11, 27, 30, 31, 32, 33, 34, 38, 41, 42, 43, 51, 52, 53, 87, 88, 89, 92, 93, 95, 99, 100, 102, 103, 108, 111, 115, 116, 127, 148, 153, 154, 159], "vendor": [0, 87], "patch": [0, 11, 52, 69, 77, 105], "suit": [0, 2, 108], "mai": [0, 8, 11, 14, 16, 21, 25, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 72, 73, 77, 78, 79, 80, 82, 85, 87, 88, 93, 99, 100, 104, 106, 107, 108, 110, 111, 112, 113, 115, 116, 118, 119, 122, 127, 128, 131, 134, 135, 137, 138, 142, 143, 147, 148, 149, 151, 154, 155, 158, 159, 160], "prevent": [0, 6, 16, 23, 27, 43, 44, 47, 69, 80, 88, 118, 122, 127, 129, 154, 160], "success": [0, 16, 48, 53, 78, 106, 115, 151], "handshak": [0, 1, 2, 108], "get_server_certif": 0, "heap": [0, 11, 23, 27, 30, 33, 47, 65, 69, 72, 78, 80, 82, 88, 89, 112, 132, 149, 151, 154, 160], "multi": [0, 41, 47, 69, 113], "phase": [0, 11, 18, 40, 69, 89, 97, 119], "verifi": [0, 44, 61, 122], "verify_x509_partial_chain": 0, "sy": [0, 1, 2, 3, 4, 5, 7, 8, 11, 27, 109, 129, 155, 156, 159], "orig_argv": 0, "list": [0, 1, 2, 3, 8, 11, 13, 14, 16, 17, 19, 26, 33, 34, 47, 49, 52, 53, 56, 65, 66, 69, 72, 73, 74, 76, 82, 85, 87, 89, 93, 101, 102, 103, 104, 105, 106, 107, 108, 111, 115, 119, 126, 140, 147, 151, 152, 153, 154, 155, 156, 157, 160], "command": [0, 5, 11, 78, 80, 109, 127, 131, 147, 149, 152, 158], "pass": [0, 1, 3, 4, 6, 7, 11, 14, 16, 25, 27, 30, 39, 41, 42, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 91, 93, 95, 97, 99, 102, 103, 104, 108, 109, 112, 113, 121, 125, 137, 143, 147, 151, 152, 157, 160], "stdlib_module_nam": 0, "_thread": [0, 11, 27], "interrupt_main": 0, "signal": [0, 4, 11, 28, 30, 33, 35, 38, 40, 43, 49, 52, 53, 87, 89, 90, 97, 98, 99, 100, 109, 119, 132, 149, 160], "simul": [0, 151], "still": [0, 2, 16, 23, 27, 28, 30, 43, 47, 49, 63, 77, 88, 95, 104, 107, 111, 112, 116, 118, 122, 127, 128, 129, 132, 147, 148, 149, 152, 155, 156, 157, 159], "sigint": [0, 4], "note": [0, 1, 3, 4, 5, 11, 13, 14, 16, 20, 21, 24, 28, 30, 33, 34, 38, 44, 46, 47, 48, 49, 58, 59, 62, 63, 64, 65, 67, 68, 69, 71, 72, 74, 78, 79, 80, 82, 83, 84, 87, 89, 91, 93, 97, 99, 100, 104, 106, 107, 108, 111, 112, 113, 115, 116, 118, 119, 120, 123, 124, 127, 130, 133, 135, 137, 138, 142, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 160], "discuss": [0, 42, 47, 112, 132, 147, 160], "issu": [0, 11, 16, 28, 69, 78, 87, 115, 118, 122, 127, 131, 136, 138, 140, 147, 148, 154, 160], "7847": 0, "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "cpython": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "implement": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "subset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "below": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "inform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "finalis": [1, 84], "group": [1, 2, 11, 104, 119, 149, 160], "impact": [1, 30, 151], "micropython": [1, 4, 5, 6, 9, 14, 16, 17, 21, 22, 23, 24, 25, 28, 30, 33, 35, 39, 41, 42, 45, 48, 49, 53, 65, 69, 72, 80, 82, 84, 85, 86, 87, 92, 99, 100, 104, 106, 107, 108, 109, 111, 112, 113, 115, 116, 125, 127, 128, 129, 131, 132, 133, 137, 139, 144, 148, 149, 156, 157, 159], "448": 1, "addit": [1, 11, 13, 15, 23, 27, 28, 31, 32, 33, 38, 40, 41, 43, 49, 53, 80, 89, 93, 95, 97, 99, 100, 112, 116, 119, 121, 127, 131, 135, 147, 148, 152, 154, 156, 158, 160], "unpack": [1, 4, 8, 11, 27, 78], "gener": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 21, 25, 27, 30, 37, 38, 43, 49, 53, 65, 69, 78, 79, 80, 87, 89, 90, 91, 93, 99, 107, 108, 109, 113, 120, 121, 122, 124, 125, 127, 128, 129, 131, 133, 137, 138, 143, 145, 147, 149, 152, 155, 157, 160], "partial": [1, 3, 122, 143, 151], "465": 1, "matrix": [1, 69], "complet": [1, 2, 3, 4, 5, 8, 11, 14, 16, 33, 65, 67, 69, 71, 78, 84, 89, 90, 99, 107, 108, 122, 124, 127, 132, 147, 151, 152, 155, 159], "492": [1, 39], "coroutin": [1, 4, 5, 14, 151], "async": [1, 3, 4, 5, 14, 78, 151], "461": 1, "format": [1, 2, 3, 11, 13, 15, 21, 24, 29, 30, 35, 39, 45, 49, 52, 53, 65, 67, 69, 71, 75, 80, 82, 89, 96, 108, 110, 111, 112, 115, 116, 119, 122, 127, 130, 133, 136, 147, 148, 149, 151, 155, 159, 160], "string": [1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 17, 19, 22, 28, 29, 30, 32, 36, 38, 43, 47, 49, 52, 53, 69, 72, 77, 78, 85, 86, 87, 95, 100, 104, 107, 108, 110, 111, 115, 121, 133, 149, 152, 154, 157, 158], "475": 1, "retri": [1, 113], "call": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 16, 23, 25, 30, 33, 34, 35, 38, 39, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 93, 95, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 118, 119, 122, 125, 127, 130, 132, 133, 138, 139, 140, 147, 149, 151, 152, 158, 159, 160], "fail": [1, 3, 7, 13, 16, 21, 47, 53, 78, 80, 107, 115, 116, 122, 131, 147, 148, 151, 155, 160], "eintr": 1, "479": 1, "stopiter": [1, 11, 17], "handl": [1, 4, 5, 6, 7, 11, 41, 65, 69, 72, 78, 80, 82, 84, 88, 93, 104, 119, 132, 138, 140, 147, 151], "insid": [1, 7, 30, 42, 62, 63, 64, 65, 66, 69, 71, 78, 80, 82, 83, 92, 131, 132, 152], "471": 1, "scandir": [1, 2], "485": [1, 75], "math": [1, 2, 3, 4, 5, 11, 27, 90, 120], "isclos": 1, "test": [1, 3, 6, 7, 11, 48, 62, 63, 64, 69, 91, 112, 119, 122, 127, 129, 135, 137, 140, 149, 151, 153, 154, 155, 156, 157, 158, 160], "approxim": 1, "miscellan": [1, 4, 11, 139], "441": 1, "applic": [1, 7, 11, 16, 23, 25, 28, 35, 38, 41, 44, 54, 69, 73, 92, 107, 112, 127, 128, 129, 131, 140, 147, 148, 151, 152, 156, 159, 160], "486": 1, "make": [1, 2, 6, 16, 19, 21, 34, 38, 39, 47, 51, 53, 64, 65, 67, 69, 71, 78, 79, 80, 82, 83, 86, 87, 88, 90, 108, 113, 118, 121, 122, 127, 128, 131, 132, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160], "launcher": [1, 122], "awar": 1, "virtual": [1, 11, 27, 30, 42, 62, 87, 92, 127, 147, 148, 151], "environ": [1, 3, 7, 11, 129, 154, 157, 159], "484": 1, "hint": [1, 5, 11, 62, 63, 64, 65, 69, 71, 82, 83, 139, 160], "advisori": 1, "488": [1, 69, 96], "elimin": [1, 29, 69, 147, 160], "pyo": 1, "489": 1, "redesign": 1, "load": [1, 2, 11, 19, 21, 27, 29, 45, 62, 63, 64, 69, 72, 84, 88, 90, 99, 108, 111, 127, 128, 138, 139, 149, 151, 152, 155, 157, 160], "namereplac": 1, "error": [1, 2, 5, 8, 11, 27, 28, 33, 46, 69, 78, 87, 89, 93, 99, 106, 107, 111, 122, 127, 140, 147, 151, 154, 158, 159, 160], "handler": [1, 11, 14, 16, 30, 35, 38, 39, 42, 43, 47, 78, 99, 102, 109, 112, 150, 159], "backslashreplac": 1, "decod": [1, 5, 11, 15, 27, 69, 79, 147], "translat": [1, 69, 107], "properti": [1, 8, 11, 16, 17, 28, 30, 49, 107, 113, 119, 149], "docstr": 1, "writabl": [1, 3, 7], "especi": [1, 90, 119, 156, 160], "collect": [1, 2, 5, 7, 11, 23, 27, 76, 84, 107, 132, 156], "namedtupl": [1, 2, 11, 19], "circular": [1, 3, 11, 69, 90, 151], "involv": [1, 3, 122, 127, 128, 147, 160], "rel": [1, 4, 5, 65, 69, 109, 112, 113, 140, 149, 151, 152, 156], "zipzap": 1, "ordereddict": [1, 11, 19], "c": [1, 3, 4, 5, 6, 7, 10, 22, 40, 47, 71, 78, 91, 102, 104, 109, 110, 113, 117, 119, 130, 135, 137, 139, 140, 147, 154, 155, 157, 158, 159, 160], "100": [1, 16, 42, 47, 52, 55, 56, 58, 59, 62, 63, 64, 67, 68, 69, 71, 80, 88, 89, 90, 98, 99, 112, 122, 135, 147, 151, 160], "time": [1, 2, 3, 4, 5, 11, 14, 16, 21, 23, 27, 28, 30, 31, 33, 34, 35, 37, 42, 43, 47, 48, 49, 52, 53, 68, 69, 71, 72, 73, 79, 80, 84, 88, 89, 90, 91, 93, 97, 98, 99, 100, 106, 107, 108, 109, 115, 118, 122, 127, 130, 138, 147, 151, 152, 153, 154, 156, 158, 159, 160], "faster": [1, 30, 69, 78, 80, 112, 127, 128, 132, 147, 149, 151, 156, 160], "revers": [1, 2, 4, 11, 17, 64, 69, 70, 78, 80, 135, 142], "dequ": [1, 2, 11, 19], "insert": [1, 3, 4, 9, 118, 122, 151], "produc": [1, 8, 28, 62, 63, 64, 65, 69, 71, 82, 83, 98, 112, 113, 127, 132, 134, 140, 147, 151, 158, 160], "updat": [1, 3, 4, 5, 11, 16, 25, 48, 52, 64, 67, 69, 71, 80, 83, 99, 106, 115, 118, 122, 126, 127, 130, 131, 140, 151, 152, 153, 154], "userstr": 1, "__getnewargs__": 1, "__rmod__": 1, "casefold": 1, "format_map": 1, "isprint": 1, "maketran": 1, "str": [1, 3, 8, 11, 13, 16, 17, 29, 36, 38, 67, 69, 71, 72, 73, 77, 138, 146, 147, 149, 160], "heapq": [1, 11, 27], "element": [1, 4, 9, 11, 13, 16, 26, 33, 69, 88, 89, 104, 106, 111, 113, 138, 147, 160], "comparison": [1, 11, 16, 111, 139, 140, 147], "merg": [1, 69, 117], "custom": [1, 2, 11, 14, 51, 72, 73, 80, 105, 111, 129, 156, 159], "keyword": [1, 2, 3, 4, 8, 9, 11, 16, 24, 31, 32, 35, 42, 43, 49, 53, 80, 87, 93, 99, 108, 119, 127, 142, 147, 152], "io": [1, 6, 11, 16, 21, 24, 27, 47, 69, 85, 121, 123, 124, 149, 160], "bufferediobas": 1, "readinto1": 1, "most": [1, 6, 7, 11, 16, 21, 27, 29, 30, 37, 40, 42, 43, 47, 49, 50, 51, 52, 53, 87, 88, 92, 97, 100, 102, 107, 112, 113, 122, 128, 132, 138, 139, 140, 147, 149, 150, 152, 153, 155, 156, 158, 159, 160], "underli": [1, 11, 21, 24, 27, 28, 30, 31, 34, 36, 37, 40, 41, 44, 51, 69, 85, 87, 99, 108, 111, 112, 149, 151], "raw": [1, 11, 13, 21, 30, 31, 53, 69, 80, 98, 102, 104, 109, 116, 127, 148, 154, 157, 159], "stream": [1, 11, 21, 24, 27, 29, 43, 47, 51, 54, 69, 77, 78, 79, 85, 100, 102, 107, 108, 111, 116, 127, 133, 147, 149, 160], "rawiobas": 1, "read": [1, 9, 11, 13, 14, 16, 21, 24, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 43, 47, 49, 62, 65, 66, 68, 69, 70, 80, 85, 87, 88, 93, 99, 100, 101, 102, 106, 107, 108, 109, 113, 115, 116, 118, 119, 120, 127, 128, 129, 132, 133, 147, 148, 149, 151, 154, 158, 160], "readinto": [1, 11, 14, 21, 24, 34, 35, 40, 43, 47, 85, 100, 102, 107, 119, 147, 149, 160], "json": [1, 2, 8, 11, 21, 24, 27, 78, 105, 147, 156], "jsondecodeerror": 1, "valueerror": [1, 5, 6, 11, 17, 29, 37, 49, 103, 155], "better": [1, 2, 3, 16, 41, 69, 112, 119, 147, 148, 160], "inf": [1, 2], "wai": [1, 9, 11, 14, 16, 17, 21, 26, 27, 33, 34, 38, 40, 41, 44, 47, 48, 49, 69, 72, 78, 87, 88, 89, 106, 107, 111, 112, 116, 121, 127, 129, 132, 137, 138, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160], "gcd": [1, 5], "direntri": 1, "urandom": [1, 2, 11, 85], "getrandom": [1, 2], "17": [1, 10, 16, 47, 65, 69, 87, 88], "getentropi": 1, "openbsd": 1, "6": [1, 6, 8, 10, 11, 15, 16, 20, 21, 49, 52, 69, 70, 74, 80, 88, 89, 90, 91, 99, 112, 115, 119, 141, 146, 147, 148, 155, 158, 160], "need": [1, 6, 9, 10, 16, 21, 27, 28, 34, 41, 43, 52, 68, 69, 72, 78, 79, 80, 81, 95, 99, 101, 107, 110, 111, 112, 113, 115, 118, 119, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 135, 138, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "dev": [1, 148, 154, 157], "avoid": [1, 6, 7, 28, 48, 80, 88, 112, 113, 122, 132, 138, 147, 149, 151, 152, 154, 160], "failur": [1, 11, 16, 17, 48, 115, 122, 148, 151, 160], "exhaust": [1, 2, 7, 23, 65, 69, 78, 82], "get_block": 1, "set_block": 1, "get": [1, 2, 3, 4, 5, 9, 11, 14, 16, 28, 29, 30, 33, 37, 38, 39, 41, 42, 49, 50, 51, 53, 56, 61, 62, 63, 64, 65, 70, 72, 77, 78, 80, 85, 87, 88, 89, 95, 96, 98, 99, 105, 108, 109, 112, 113, 115, 119, 121, 122, 124, 126, 127, 128, 129, 130, 148, 149, 151, 153, 154, 159], "mode": [1, 2, 3, 11, 16, 20, 24, 28, 33, 35, 38, 39, 40, 42, 47, 49, 50, 51, 52, 53, 54, 65, 67, 68, 69, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 95, 97, 99, 101, 102, 107, 108, 113, 116, 119, 120, 147, 148, 150, 154, 159], "o_nonblock": 1, "There": [1, 41, 47, 49, 52, 53, 69, 87, 91, 106, 115, 118, 119, 122, 130, 137, 138, 147, 148, 149, 151, 153, 159, 160], "path": [1, 2, 3, 5, 7, 11, 27, 52, 62, 63, 64, 67, 69, 71, 72, 84, 85, 105, 108, 111, 115, 129, 131, 152, 154, 155, 156, 157], "commonpath": 1, "longest": [1, 69], "common": [1, 5, 11, 16, 78, 87, 151, 154, 156, 159, 160], "sub": [1, 7, 11, 69, 76, 80, 104, 112, 113, 115, 134, 138, 154, 155], "each": [1, 3, 16, 23, 27, 28, 34, 35, 40, 41, 43, 49, 54, 65, 68, 69, 72, 74, 75, 80, 82, 85, 88, 95, 96, 97, 99, 100, 102, 104, 109, 112, 113, 114, 115, 119, 122, 124, 125, 137, 138, 139, 147, 151, 152, 154, 155, 156, 159, 160], "pathnam": [1, 79], "re": [1, 2, 3, 6, 11, 16, 27, 30, 38, 39, 41, 69, 71, 80, 82, 107, 109, 121, 122, 124, 125, 127, 130, 132, 133, 147, 151, 152, 154, 158, 159], "condit": [1, 11, 23, 30, 34, 43, 47, 88, 100, 106, 117, 134, 137, 140, 141, 142, 144, 146, 151], "fix": [1, 34, 40, 47, 69, 78, 80, 99, 118, 122, 127, 131, 132, 140, 147, 160], "lookbehind": 1, "assert": [1, 19, 41, 47, 99, 100, 104, 109, 112, 113], "captur": [1, 11, 41, 47, 69, 80, 99, 104, 113, 127, 154, 160], "limit": [1, 11, 16, 21, 27, 42, 43, 47, 49, 52, 65, 69, 72, 78, 80, 82, 88, 99, 103, 107, 109, 117, 132, 138, 147, 149, 159, 160], "subn": 1, "replac": [1, 5, 11, 16, 27, 69, 80, 104, 122, 127, 138, 149, 151, 154], "unmatch": [1, 104], "msg": 1, "po": 1, "lineno": 1, "colno": 1, "monoton": 1, "clock": [1, 11, 30, 34, 35, 40, 43, 50, 62, 63, 64, 69, 71, 78, 84, 87, 88, 89, 93, 97, 99, 100, 112, 125, 130, 154, 159], "sendfil": 1, "send": [1, 11, 16, 33, 43, 49, 52, 61, 62, 64, 78, 84, 87, 89, 93, 97, 100, 101, 102, 105, 107, 108, 109, 119, 127, 133, 149, 158], "over": [1, 11, 19, 30, 31, 32, 34, 49, 68, 69, 77, 78, 80, 84, 88, 89, 96, 97, 99, 101, 102, 109, 113, 115, 118, 127, 128, 147, 148, 149, 154, 155, 158], "high": [1, 11, 30, 34, 38, 41, 43, 54, 69, 78, 80, 95, 99, 109, 112, 119, 121, 151, 158, 159, 160], "perform": [1, 2, 5, 28, 30, 34, 35, 38, 40, 53, 56, 69, 78, 80, 84, 87, 99, 104, 111, 112, 115, 127, 132, 134, 135, 140, 142, 147, 151, 154, 156, 157, 158, 159, 160], "unix": [1, 6, 7, 9, 10, 11, 16, 17, 86, 107, 111, 112, 147, 148, 149, 154], "upload": [1, 105], "being": [1, 3, 5, 8, 11, 14, 16, 28, 30, 38, 39, 41, 43, 46, 47, 48, 50, 54, 62, 63, 64, 65, 69, 71, 72, 78, 79, 80, 81, 82, 83, 85, 96, 99, 102, 109, 113, 115, 118, 122, 124, 127, 128, 129, 135, 143, 147, 151, 152, 153, 154], "plain": 1, "sendal": [1, 11, 107], "reset": [1, 11, 14, 17, 33, 34, 39, 44, 62, 63, 64, 65, 67, 68, 71, 80, 82, 83, 84, 89, 96, 99, 106, 109, 111, 112, 118, 119, 122, 127, 130, 148, 150, 151], "everi": [1, 16, 69, 78, 87, 90, 91, 96, 107, 112, 113, 149, 154], "byte": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 28, 30, 33, 34, 35, 39, 40, 43, 45, 47, 53, 61, 62, 64, 65, 69, 71, 72, 78, 80, 82, 84, 85, 87, 88, 89, 90, 92, 93, 97, 100, 101, 102, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 127, 133, 136, 137, 138, 140, 141, 146, 147, 149, 151, 154, 155, 158], "sent": [1, 16, 33, 34, 43, 49, 53, 64, 78, 79, 89, 102, 107, 127, 158], "maximum": [1, 11, 16, 19, 21, 30, 31, 34, 39, 44, 53, 65, 69, 72, 73, 80, 82, 85, 90, 94, 98, 104, 107, 111, 113, 132, 141, 146, 151], "total": [1, 16, 23, 62, 63, 64, 65, 69, 71, 82, 83, 91, 112, 119, 132, 151], "durat": [1, 16, 30, 37, 43, 49, 87, 100, 128, 151, 154, 160], "backlog": [1, 14, 107], "listen": [1, 11, 16, 61, 73, 78, 107, 108], "By": [1, 5, 16, 24, 41, 47, 62, 63, 64, 65, 69, 71, 79, 80, 82, 84, 87, 99, 112, 132, 135, 148, 152, 154], "somaxconn": 1, "128": [1, 9, 16, 33, 64, 65, 69, 80, 82, 89, 90, 97, 99, 158], "whichev": 1, "memori": [1, 6, 7, 9, 11, 21, 23, 24, 28, 33, 38, 39, 42, 43, 47, 49, 69, 72, 78, 80, 84, 87, 88, 89, 93, 99, 107, 113, 115, 116, 118, 119, 123, 127, 136, 138, 139, 148, 149, 151, 152, 153, 156, 159, 160], "bio": 1, "layer": [1, 28, 78, 108, 128, 132, 148, 159], "negoti": [1, 16], "sslsocket": [1, 2, 5, 108], "queri": [1, 16, 23, 43, 49, 52, 53, 95, 112, 115, 154, 159], "actual": [1, 5, 11, 21, 28, 32, 33, 34, 38, 40, 41, 49, 69, 88, 89, 92, 93, 104, 108, 111, 112, 113, 115, 127, 147, 149, 157, 160], "either": [1, 2, 4, 16, 19, 20, 28, 33, 39, 44, 49, 50, 51, 53, 65, 69, 72, 75, 78, 82, 89, 93, 97, 99, 104, 111, 112, 113, 115, 116, 122, 127, 131, 147, 149, 151, 154, 155, 156, 159, 160], "sslwantreaderror": 1, "sslwantwriteerror": 1, "non": [1, 5, 7, 11, 16, 17, 21, 27, 28, 33, 35, 37, 41, 42, 44, 47, 48, 64, 69, 71, 72, 78, 83, 85, 89, 94, 102, 104, 107, 108, 112, 113, 115, 127, 154, 155, 159, 160], "would": [1, 21, 27, 28, 47, 69, 88, 95, 113, 128, 132, 137, 145, 147, 148, 149, 151, 152, 154, 156, 158, 160], "previous": [1, 2, 5, 14, 16, 49, 69, 78, 80, 83, 95, 99, 108, 115, 127, 152], "cert_time_to_second": 1, "input": [1, 2, 6, 11, 15, 17, 21, 27, 30, 31, 38, 43, 62, 63, 64, 69, 72, 75, 76, 83, 85, 88, 89, 90, 91, 95, 99, 100, 106, 107, 109, 111, 116, 119, 120, 124, 147, 149, 151, 152, 157, 159], "utc": [1, 6, 7, 9, 10, 112], "local": [1, 2, 3, 8, 11, 16, 17, 49, 69, 84, 107, 112, 138, 154, 156, 157, 160], "per": [1, 7, 16, 43, 54, 67, 68, 69, 70, 72, 78, 80, 99, 100, 106, 112, 149, 155], "rfc": [1, 15], "5280": 1, "addition": [1, 16, 28, 69, 76, 78, 80, 118, 127, 129, 152, 153, 154], "sslobject": [1, 108], "shared_ciph": 1, "client": [1, 2, 11, 27, 49, 52, 53, 79, 108, 154], "dure": [1, 2, 6, 16, 21, 27, 30, 35, 47, 49, 65, 69, 78, 83, 88, 99, 115, 116, 122, 127, 148, 151, 152, 154, 156, 159], "do_handshak": [1, 108], "shutdown": [1, 5, 11, 80, 84, 115], "match_hostnam": 1, "ip": [1, 49, 50, 51, 52, 53, 107, 154, 157, 159], "set_coroutine_wrapp": 1, "global": [1, 2, 7, 11, 16, 17, 27, 47, 48, 49, 69, 80, 130, 132, 147, 148, 151, 159], "whenev": [1, 28, 65, 80, 81, 85, 102, 127], "def": [1, 6, 7, 10, 14, 16, 27, 33, 42, 48, 78, 84, 89, 91, 95, 99, 138, 147, 148, 151, 158, 160], "get_coroutine_wrapp": 1, "obtain": [1, 16, 37, 49, 52, 117, 137, 141, 146, 147], "wrapper": [1, 24, 152], "is_fin": [1, 5], "shut": 1, "down": [1, 11, 16, 38, 49, 52, 53, 66, 69, 70, 71, 75, 78, 79, 80, 88, 90, 91, 95, 96, 99, 121, 122, 132, 151, 152, 158], "parser": [1, 5, 47], "correct": [1, 4, 16, 33, 65, 69, 72, 75, 80, 82, 87, 88, 89, 112, 127, 147, 148, 155, 159, 160], "ignor": [1, 3, 5, 11, 14, 15, 33, 39, 42, 43, 69, 72, 73, 75, 79, 84, 87, 89, 99, 104, 107, 115, 118, 122, 143, 155, 156], "beta": 2, "12": [2, 6, 9, 10, 16, 32, 35, 65, 69, 87, 88, 90, 99, 112, 119, 120, 155], "sep": [2, 15], "2016": 2, "summari": [2, 11, 27, 147], "here": [2, 9, 17, 27, 30, 47, 49, 62, 63, 64, 69, 72, 78, 107, 113, 120, 127, 129, 130, 133, 135, 138, 139, 149, 151, 154, 158, 160], "498": 2, "515": 2, "underscor": [2, 11, 47, 147], "numer": [2, 11, 16, 19, 22, 27, 66, 69, 104, 107, 112, 160], "525": 2, "provision": [2, 4, 107], "530": 2, "468": 2, "preserv": [2, 3, 19, 69, 71, 127, 138, 154], "order": [2, 3, 4, 6, 8, 9, 11, 16, 19, 27, 35, 43, 69, 72, 85, 86, 95, 109, 110, 111, 112, 115, 145, 151, 153, 154, 155, 159, 160], "kwarg": [2, 17, 28, 73, 80, 148, 160], "487": [2, 96], "simpler": [2, 28, 159], "creation": [2, 3, 11, 47, 101, 102, 119, 147, 160], "520": 2, "definit": [2, 11, 112, 113, 134, 147, 156], "495": [2, 83], "disambigu": 2, "506": 2, "secret": [2, 16], "519": 2, "intern": [2, 9, 11, 16, 27, 35, 38, 65, 69, 72, 78, 80, 82, 83, 87, 88, 89, 91, 92, 109, 118, 119, 122, 129, 132, 147, 148, 149, 151, 155, 159, 160], "509": 2, "privat": [2, 8, 11, 16, 108], "won": [2, 28, 42, 69, 106, 118, 122, 127, 132, 158], "t": [2, 8, 9, 11, 14, 16, 28, 33, 34, 40, 41, 42, 52, 69, 72, 78, 85, 88, 89, 95, 99, 104, 106, 107, 112, 113, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139, 147, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160], "523": 2, "frame": [2, 11, 33, 61, 62, 63, 64, 65, 67, 69, 71, 72, 77, 78, 80, 82, 89, 112, 122, 123, 130, 132], "evalu": [2, 3, 69, 88, 147, 154, 160], "window": [2, 5, 11, 16, 17, 24, 69, 76, 80, 86, 111, 116, 122, 123, 127, 147, 149, 154, 156, 158], "524": 2, "startup": [2, 80, 96, 127, 148, 154, 158, 159], "528": 2, "consol": 2, "utf": [2, 3, 6, 155], "8": [2, 3, 6, 8, 10, 11, 15, 16, 21, 30, 33, 34, 37, 39, 40, 43, 49, 50, 53, 58, 65, 69, 70, 77, 80, 82, 83, 87, 88, 89, 90, 93, 96, 97, 99, 100, 107, 109, 110, 112, 113, 119, 121, 132, 135, 147, 151, 155, 158, 160], "529": 2, "filesystem": [2, 8, 11, 27, 28, 69, 87, 92, 122, 147, 149, 150, 151, 152, 154, 156, 158, 159], "nonloc": 2, "statement": [2, 4, 14, 47, 48, 127, 130, 136, 138, 147, 151, 158, 160], "textual": [2, 107], "appear": [2, 111, 122, 127, 128, 159], "befor": [2, 6, 8, 11, 14, 16, 30, 35, 37, 39, 49, 54, 62, 63, 64, 65, 67, 69, 71, 72, 75, 78, 79, 80, 82, 83, 84, 95, 101, 107, 109, 112, 118, 122, 124, 127, 128, 129, 131, 138, 139, 140, 142, 147, 151, 152, 154, 158, 159, 160], "first": [2, 4, 5, 7, 11, 16, 26, 30, 33, 40, 43, 49, 54, 67, 69, 78, 79, 80, 84, 89, 93, 97, 100, 103, 104, 107, 108, 109, 111, 112, 113, 115, 119, 122, 124, 125, 127, 129, 130, 131, 132, 133, 136, 137, 138, 142, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159], "affect": [2, 37, 49, 69, 87, 111, 134, 141, 142, 144, 146, 149, 151], "same": [2, 6, 7, 9, 16, 20, 24, 27, 29, 30, 33, 34, 37, 38, 40, 41, 43, 46, 47, 48, 49, 52, 65, 67, 68, 69, 72, 79, 85, 89, 90, 91, 93, 95, 97, 98, 99, 104, 106, 107, 112, 113, 115, 116, 118, 119, 127, 129, 147, 149, 151, 152, 154, 156, 157, 158, 159, 160], "scope": [2, 107, 130, 138, 140, 147, 151, 155], "syntaxwarn": [2, 4], "It": [2, 5, 14, 16, 19, 21, 24, 25, 30, 31, 32, 38, 43, 49, 69, 75, 78, 84, 86, 87, 88, 90, 92, 95, 97, 99, 100, 101, 102, 106, 108, 111, 112, 116, 119, 121, 124, 127, 132, 138, 143, 144, 147, 148, 149, 151, 154, 158, 159, 160], "possibl": [2, 11, 16, 21, 28, 30, 33, 38, 40, 43, 47, 49, 53, 54, 61, 69, 75, 78, 80, 84, 85, 86, 88, 89, 98, 100, 102, 107, 112, 119, 122, 127, 129, 138, 139, 149, 151, 155, 158, 159], "special": [2, 4, 8, 11, 28, 69, 72, 104, 113, 124, 127, 143, 151, 160], "indic": [2, 4, 9, 11, 13, 16, 21, 33, 41, 47, 49, 52, 53, 65, 82, 83, 89, 97, 99, 107, 108, 111, 125, 135, 138, 140, 151, 155, 158, 159], "exampl": [2, 7, 10, 11, 14, 16, 19, 22, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 47, 49, 50, 51, 52, 53, 62, 63, 64, 65, 67, 68, 69, 71, 72, 75, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 103, 104, 107, 109, 111, 112, 113, 115, 116, 119, 122, 123, 124, 128, 130, 132, 133, 134, 135, 138, 142, 145, 147, 148, 149, 151, 155, 156, 157, 158, 159, 160], "__iter__": [2, 5], "long": [2, 4, 6, 11, 30, 45, 67, 69, 71, 78, 80, 88, 110, 111, 112, 133, 147, 151, 155, 158, 160], "repeat": [2, 39, 85, 87, 90, 147, 158], "traceback": [2, 3, 6, 7, 9, 47, 111, 158], "abbrevi": 2, "previou": [2, 16, 23, 25, 30, 31, 32, 38, 67, 69, 80, 85, 87, 88, 99, 104, 111, 112, 127, 151, 157, 158], "modulenotfounderror": 2, "find": [2, 27, 69, 112, 122, 126, 127, 148, 154], "code": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 20, 23, 25, 27, 40, 45, 47, 48, 49, 69, 78, 80, 91, 102, 107, 109, 111, 112, 115, 118, 119, 120, 123, 127, 128, 130, 132, 133, 135, 136, 137, 139, 140, 142, 147, 148, 149, 151, 152, 153, 154, 157, 158, 159], "importerror": [2, 3, 5, 11, 17], "try": [2, 6, 7, 9, 10, 14, 22, 25, 27, 33, 40, 41, 47, 48, 69, 72, 78, 79, 80, 89, 91, 107, 122, 127, 155, 158, 159], "reli": [2, 6, 7, 10, 112], "zero": [2, 5, 15, 16, 34, 47, 69, 72, 73, 75, 94, 98, 99, 104, 107, 115, 135, 138, 140, 141, 142, 143, 144, 151, 155], "metaclass": 2, "stai": [2, 78, 80], "extend": [2, 6, 11, 13, 19, 33, 69, 89, 92, 104, 135, 138, 141, 144, 148], "binascii": [2, 11, 25, 27, 53], "b2a_base64": [2, 11, 15], "newlin": [2, 15, 43, 47, 100, 102, 107], "control": [2, 4, 11, 16, 21, 30, 31, 34, 35, 43, 48, 49, 52, 55, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 76, 78, 80, 82, 83, 87, 93, 94, 98, 102, 113, 122, 123, 124, 127, 135, 138, 149, 150, 151, 152, 158], "whether": [2, 16, 28, 31, 33, 38, 41, 43, 47, 48, 50, 53, 89, 93, 100, 106, 108, 111, 117, 127, 135, 138, 140, 147, 151, 155, 160], "charact": [2, 3, 15, 43, 47, 49, 69, 100, 102, 104, 107, 110, 127, 133, 147, 154, 158], "append": [2, 7, 11, 13, 16, 19, 27, 47, 105, 111, 151, 154, 156, 160], "cmath": [2, 11, 27], "tau": 2, "\u03c4": 2, "infj": 2, "nanj": 2, "repr": [2, 11, 13, 17], "abstract": [2, 16, 28, 41, 49, 92, 119, 149], "repres": [2, 14, 29, 31, 32, 38, 47, 49, 65, 69, 72, 80, 82, 85, 89, 92, 95, 101, 102, 107, 112, 113, 115, 141, 146, 147, 151, 154], "size": [2, 6, 7, 10, 11, 16, 17, 23, 24, 25, 30, 33, 34, 35, 43, 47, 54, 64, 67, 68, 69, 71, 72, 75, 76, 78, 80, 85, 88, 89, 92, 106, 107, 110, 113, 114, 115, 116, 122, 127, 130, 132, 136, 147, 148, 154, 155, 158, 160], "__reversed__": 2, "asyncgener": 2, "specifi": [2, 4, 5, 16, 19, 21, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 49, 50, 53, 54, 58, 59, 62, 63, 64, 65, 69, 71, 75, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99, 100, 102, 104, 106, 107, 108, 112, 113, 115, 136, 137, 140, 141, 145, 146, 147, 148, 152, 154, 155, 156], "tupl": [2, 4, 7, 8, 11, 16, 17, 18, 19, 29, 30, 33, 34, 38, 39, 40, 46, 49, 50, 52, 53, 56, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 85, 86, 87, 89, 96, 98, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 147, 149, 152, 154], "verbos": [2, 28, 47], "renam": [2, 11, 69, 85, 129], "recurs": [2, 113, 132, 138, 152, 154, 155], "instanc": [2, 4, 16, 21, 22, 24, 30, 31, 38, 43, 45, 47, 48, 51, 99, 103, 104, 106, 108, 113, 127, 135, 138, 147, 148, 151, 154, 160], "pickl": [2, 4, 147], "blake2": 2, "were": [2, 16, 19, 34, 69, 95, 100, 106, 122, 127, 128, 135, 147, 154, 158, 159], "blake2b": 2, "full": [2, 3, 9, 19, 21, 23, 30, 33, 35, 43, 47, 50, 88, 89, 90, 100, 109, 112, 138, 147, 149, 154], "sha3_224": 2, "sha3_256": 2, "sha3_384": 2, "sha3_512": 2, "shake": 2, "shake_128": 2, "shake_256": 2, "password": [2, 49, 51, 52, 53, 79, 157], "deriv": [2, 11, 48, 85, 97, 151], "scrypt": 2, "should": [2, 6, 9, 10, 14, 16, 17, 19, 21, 27, 28, 29, 30, 33, 34, 37, 40, 41, 43, 44, 47, 49, 53, 58, 59, 60, 62, 63, 64, 66, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 83, 84, 85, 87, 88, 89, 100, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 121, 122, 126, 127, 128, 129, 130, 138, 140, 147, 148, 149, 151, 152, 154, 155, 158, 159, 160], "16": [2, 6, 10, 16, 30, 35, 37, 47, 54, 65, 69, 80, 88, 89, 91, 93, 97, 99, 109, 111, 113, 141, 144, 146, 147, 158, 160], "32": [2, 10, 11, 15, 21, 30, 33, 35, 39, 46, 49, 65, 69, 78, 80, 85, 89, 96, 97, 103, 109, 111, 113, 115, 116, 132, 134, 137, 138, 139, 141, 142, 144, 146, 160], "close": [2, 5, 11, 14, 21, 24, 28, 37, 41, 47, 49, 51, 67, 69, 71, 88, 102, 103, 106, 107, 139, 149, 159], "explicitli": [2, 6, 9, 16, 21, 67, 71, 107, 112, 151, 152, 154], "On": [2, 16, 17, 27, 30, 37, 43, 44, 46, 47, 50, 61, 78, 80, 84, 88, 92, 95, 111, 112, 118, 122, 127, 132, 147, 148, 151, 152, 156, 159], "until": [2, 5, 14, 16, 29, 30, 33, 35, 42, 43, 47, 48, 61, 62, 63, 64, 65, 66, 69, 71, 73, 80, 81, 82, 83, 87, 88, 89, 100, 106, 107, 108, 109, 122, 130, 143, 151, 154, 158, 159], "entropi": 2, "pool": [2, 147], "increas": [2, 16, 21, 35, 38, 47, 69, 78, 80, 112, 122, 130, 132, 158, 160], "random": [2, 5, 8, 11, 16, 27, 69, 79, 85, 87, 90, 132, 151, 160], "expos": [2, 5, 30, 39, 87, 95, 109, 112, 140, 148], "modifi": [2, 11, 16, 28, 37, 48, 69, 79, 106, 117, 127, 148, 151, 155], "span": [2, 11, 104, 148], "p": [2, 7, 38, 104, 110, 117, 119, 121, 148, 154, 157], "ython": 2, "v": [2, 11, 14, 19, 28, 36, 41, 56, 69, 80, 88, 111, 135, 137, 140], "r": [2, 11, 18, 28, 36, 49, 62, 63, 64, 65, 69, 71, 80, 82, 83, 104, 154, 158], "gvr": 2, "access": [2, 5, 8, 11, 13, 16, 19, 22, 27, 28, 31, 32, 36, 38, 41, 48, 49, 52, 53, 65, 69, 79, 80, 87, 88, 90, 104, 107, 108, 111, 115, 119, 122, 124, 127, 137, 138, 141, 146, 147, 148, 149, 151, 152, 154, 156], "__getitem__": [2, 11, 13], "equival": [2, 3, 7, 13, 16, 27, 38, 104, 106, 107, 127, 147, 152, 154, 157], "so": [2, 4, 6, 9, 16, 21, 25, 28, 30, 32, 34, 37, 42, 45, 47, 48, 49, 51, 65, 67, 69, 71, 72, 75, 80, 84, 87, 91, 95, 99, 102, 106, 107, 111, 112, 113, 116, 117, 120, 122, 124, 125, 127, 129, 131, 132, 147, 148, 149, 151, 154, 156, 157, 158, 159, 160], "mo": [2, 80], "like": [2, 4, 5, 11, 16, 19, 20, 21, 24, 28, 30, 37, 41, 43, 45, 47, 49, 63, 65, 69, 72, 78, 79, 80, 82, 85, 87, 100, 102, 104, 106, 107, 108, 109, 111, 112, 113, 115, 122, 125, 127, 128, 129, 130, 131, 132, 133, 148, 149, 151, 153, 154, 155, 156, 157, 158, 160], "ioctl": [2, 11, 80, 92, 115, 148], "sio_loopback_fast_path": 2, "getsockopt": 2, "so_domain": 2, "so_protocol": 2, "so_peersec": 2, "so_passsec": 2, "setsockopt": [2, 11, 107], "optnam": [2, 107], "optlen": 2, "form": [2, 4, 15, 18, 29, 38, 39, 49, 53, 69, 85, 103, 104, 105, 107, 115, 137, 147, 149, 154, 155, 156], "famili": [2, 9, 11, 69, 107], "af_alg": 2, "interfac": [2, 11, 13, 16, 24, 30, 31, 36, 47, 50, 51, 52, 79, 87, 92, 107, 108, 113, 116, 147, 148, 149, 154, 159, 160], "crypto": 2, "alg_": 2, "sol_alg": 2, "sendmsg_afalg": 2, "tcp_user_timeout": 2, "tcp_congest": 2, "recommend": [2, 7, 11, 14, 16, 21, 25, 28, 30, 49, 69, 99, 104, 106, 107, 111, 113, 125, 129, 148, 152], "3de": 2, "chacha20": 2, "poly1305": 2, "session": [2, 79, 154], "connect": [2, 11, 25, 32, 33, 34, 35, 49, 50, 52, 53, 69, 78, 79, 81, 87, 89, 100, 102, 107, 108, 117, 122, 123, 128, 130, 147, 149, 156, 157, 158, 159], "sslsession": 2, "resumpt": 2, "speed": [2, 11, 69, 72, 80, 88, 96, 98, 116, 119, 124, 132, 147, 150, 151, 158, 159], "up": [2, 3, 4, 11, 14, 16, 27, 28, 30, 31, 32, 34, 38, 39, 41, 44, 47, 49, 50, 51, 52, 53, 54, 65, 66, 69, 70, 71, 72, 75, 78, 79, 80, 82, 84, 87, 88, 89, 90, 91, 95, 96, 99, 104, 107, 112, 113, 116, 118, 119, 121, 122, 124, 127, 128, 129, 130, 132, 133, 135, 148, 151, 154, 155, 156, 158, 159, 160], "reduc": [2, 6, 7, 9, 30, 38, 43, 53, 80, 87, 88, 90, 127, 132, 147, 149, 151, 153, 160], "latenc": [2, 80, 151], "get_ciph": [2, 11, 108], "enabl": [2, 5, 8, 11, 16, 19, 21, 23, 24, 30, 38, 43, 44, 47, 48, 49, 51, 52, 53, 61, 63, 64, 66, 69, 70, 72, 80, 83, 87, 89, 90, 91, 95, 99, 100, 103, 105, 107, 108, 109, 111, 115, 116, 119, 127, 129, 132, 137, 138, 139, 140, 141, 143, 146, 148, 151, 153, 154, 158, 160], "prioriti": [2, 38, 42, 69, 112, 143, 151], "intenum": 2, "intflag": 2, "server": [2, 11, 14, 49, 52, 53, 79, 105, 107, 108], "post_handshake_auth": 2, "verify_client_post_handshak": 2, "post": [2, 11, 69, 72, 74, 105], "authent": [2, 16, 108], "struct": [2, 8, 11, 27, 78, 80, 113, 133, 147], "ieee": [2, 3, 49], "754": [2, 3], "half": [2, 90, 110, 130, 141, 146, 160], "via": [2, 4, 13, 14, 16, 17, 21, 32, 34, 40, 49, 51, 62, 63, 64, 65, 69, 78, 80, 81, 84, 86, 88, 92, 108, 115, 119, 122, 127, 149, 151, 152, 154, 155, 156, 158], "getfilesystemencodeerror": 2, "unicod": [2, 7, 8, 11, 147], "filenam": [2, 5, 24, 67, 71, 85, 87, 152, 157], "zlib": [2, 11, 21, 27], "compress": [2, 11, 27, 69, 71, 75, 77, 79, 80, 127], "decompress": [2, 11, 27, 71], "538": 3, "coerc": [3, 138], "legaci": [3, 16, 25], "539": 3, "thread": [3, 14, 47, 48, 112, 122, 127, 151], "storag": [3, 11, 16, 21, 24, 47, 69, 80, 87, 115, 127, 132, 147, 148, 149, 153, 156], "540": 3, "552": 3, "determinist": 3, "pyc": 3, "553": 3, "breakpoint": 3, "557": 3, "560": 3, "core": [3, 8, 11, 25, 27, 28, 30, 38, 84, 109, 149], "562": 3, "__getattr__": 3, "__dir__": 3, "563": 3, "postpon": 3, "564": 3, "nanosecond": [3, 30, 31, 37, 112], "resolut": [3, 8, 11, 32, 37, 57, 58, 62, 63, 65, 67, 69, 71, 80, 82, 83, 88, 90, 112, 119, 120, 127], "565": 3, "show": [3, 16, 49, 62, 63, 64, 65, 69, 82, 83, 88, 97, 99, 107, 119, 122, 127, 148, 154, 155, 157, 158], "__main__": [3, 5, 7], "567": 3, "reserv": [3, 142], "255": [3, 6, 33, 37, 49, 50, 52, 53, 55, 62, 63, 64, 65, 69, 71, 72, 75, 80, 82, 83, 89, 96, 119, 120, 144], "fromhex": 3, "bytearrai": [3, 8, 11, 16, 17, 21, 33, 35, 39, 40, 47, 69, 72, 78, 80, 87, 88, 89, 90, 93, 97, 101, 113, 119, 138, 147, 148, 149, 151, 160], "ascii": [3, 7, 11, 27, 53, 69, 104, 147, 155], "whitespac": [3, 11, 29, 104, 110, 147], "gain": [3, 54, 65, 80, 160], "isascii": 3, "displai": [3, 4, 8, 11, 27, 58, 59, 65, 66, 67, 69, 71, 80, 81, 82, 83, 104, 122, 123, 149, 154, 157], "__file__": [3, 5], "absolut": [3, 5, 37, 41, 46, 47, 69, 109, 112, 116, 129, 152, 156], "bind": [3, 11, 79, 107], "submodul": [3, 119, 152], "__format__": 3, "rather": [3, 4, 5, 14, 16, 27, 47, 113, 132, 138, 147, 149, 151, 152, 154, 156, 160], "self": [3, 4, 6, 8, 11, 33, 87, 89, 148, 151, 156, 160], "dynam": [3, 49, 80, 115, 147, 149], "stack": [3, 11, 16, 47, 51, 72, 80, 87, 132, 139, 140, 151], "trace": [3, 50, 87, 111, 151], "tracebacktyp": 3, "instanti": [3, 11, 49, 88, 109, 147, 151, 160], "tb_next": 3, "m": [3, 4, 6, 43, 44, 46, 71, 80, 87, 93, 104, 112, 120, 138, 139, 147, 151, 154, 155, 156, 158, 160], "switch": [3, 37, 41, 80, 85, 89, 91, 125, 159], "eagerli": 3, "expand": [3, 4, 5, 47, 69, 104, 158], "directori": [3, 5, 7, 22, 85, 105, 111, 115, 118, 127, 131, 147, 148, 152, 154, 155, 156, 157], "left": [3, 19, 35, 39, 62, 63, 64, 65, 66, 69, 70, 76, 80, 82, 83, 87, 104, 122, 127, 159], "occur": [3, 6, 14, 42, 43, 47, 48, 80, 87, 96, 99, 100, 102, 112, 127, 143, 147, 151, 154, 160], "importtim": 3, "pythonprofileimporttim": 3, "too": [3, 6, 11, 62, 63, 64, 69, 78, 80, 112, 113, 122, 124, 127, 132, 151, 160], "mani": [3, 7, 11, 27, 28, 41, 43, 47, 62, 63, 64, 65, 69, 78, 80, 82, 100, 104, 107, 112, 113, 128, 149, 155, 159], "includ": [3, 8, 11, 16, 21, 24, 25, 27, 34, 39, 41, 47, 49, 53, 74, 75, 78, 85, 92, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 116, 117, 127, 129, 130, 138, 140, 147, 148, 149, 151, 152, 156, 157, 158, 159, 160], "freez": [3, 11, 123, 152, 159], "unfreez": 3, "get_freeze_count": 3, "remaind": [3, 46, 100, 148], "style": [3, 4, 111, 138, 154], "tidi": 3, "split": [3, 8, 11, 41, 69, 104, 111, 113, 127, 160], "compil": [3, 4, 6, 7, 11, 17, 47, 86, 104, 109, 127, 128, 129, 138, 149, 151, 152, 154, 156, 158, 159, 160], "breakpointhook": 3, "_coroutine_origin_tracking_depth": 3, "mostli": [3, 148, 150], "pep564": 3, "abov": [3, 6, 7, 8, 16, 22, 27, 28, 30, 31, 33, 37, 38, 41, 47, 49, 50, 53, 68, 69, 73, 80, 88, 89, 90, 104, 106, 108, 111, 112, 113, 115, 117, 118, 119, 120, 122, 125, 127, 132, 133, 139, 140, 147, 151, 152, 154, 155, 156, 157, 160], "time_n": [3, 11, 112], "14": [4, 6, 7, 9, 10, 16, 35, 65, 69, 89, 99, 160], "2019": 4, "569": 4, "570": [4, 9], "posit": [4, 5, 6, 8, 11, 17, 35, 43, 46, 66, 68, 69, 73, 74, 80, 87, 89, 93, 98, 104, 107, 111, 112, 113, 116, 119, 140, 157], "572": 4, "574": 4, "5": [4, 6, 8, 10, 11, 14, 16, 19, 21, 37, 43, 46, 52, 65, 66, 68, 69, 78, 80, 90, 96, 98, 99, 100, 107, 109, 115, 116, 119, 120, 147, 148, 151, 154, 155, 158], "out": [4, 6, 11, 13, 14, 23, 28, 34, 38, 40, 41, 47, 50, 66, 69, 76, 78, 80, 87, 88, 100, 107, 112, 117, 119, 122, 125, 127, 135, 139, 147, 151, 153, 154, 155, 158, 159], "band": 4, "578": 4, "587": 4, "590": 4, "vectorcal": 4, "fast": [4, 5, 21, 34, 38, 40, 69, 78, 127, 128, 130, 151, 160], "f": [4, 8, 11, 13, 21, 24, 68, 69, 72, 85, 110, 113, 120, 127, 138, 147, 148, 154, 156, 157, 160], "continu": [4, 16, 29, 30, 31, 35, 40, 78, 80, 87, 90, 111, 119, 135, 136, 138, 151, 155, 157, 158, 159], "illeg": 4, "claus": [4, 5], "problem": [4, 53, 122, 128, 131, 138, 147, 151], "lift": [4, 47], "bool": [4, 11, 17, 19, 48, 50, 64, 65, 67, 69, 70, 71, 72, 77, 80, 81, 82, 83, 109, 160], "as_integer_ratio": 4, "constructor": [4, 9, 11, 28, 47, 69, 113, 115, 121, 133, 147, 151, 160], "__float__": [4, 6], "__complex__": 4, "n": [4, 5, 8, 11, 14, 49, 50, 65, 68, 69, 80, 85, 100, 103, 104, 110, 119, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 147, 158, 160], "escap": [4, 8, 11, 104, 154], "dictview": 4, "further": [4, 21, 27, 30, 38, 49, 99, 106, 111, 113, 116, 139, 140, 147, 151, 152, 153, 155, 159, 160], "particular": [4, 22, 25, 27, 28, 30, 31, 34, 35, 38, 40, 49, 69, 78, 80, 84, 95, 107, 108, 112, 113, 117, 122, 125, 127, 147, 149, 151, 155, 159, 160], "arg": [4, 7, 10, 11, 47, 62, 64, 69, 80, 92, 95, 106, 107, 115, 148, 154, 160], "enclos": [4, 69], "comma": [4, 13], "10": [4, 6, 7, 8, 9, 10, 11, 16, 18, 21, 28, 34, 39, 43, 46, 65, 67, 69, 80, 88, 100, 103, 107, 114, 116, 119, 120, 121, 124, 128, 138, 155, 158], "20": [4, 6, 10, 16, 69, 86, 96, 138, 151, 155, 160], "30": [4, 10, 16, 57, 69, 80, 87, 98, 99, 110, 119, 127, 138, 151, 158, 160], "40": [4, 10, 69], "help": [4, 27, 80, 111, 126, 127, 147, 157, 158, 159], "suggest": [4, 113], "arithmet": [4, 11, 112, 135, 139, 142, 151, 160], "subclass": [4, 6, 8, 11, 19, 28, 87, 107], "datetim": [4, 11, 39, 96, 112, 119, 154], "date": [4, 39, 85, 96, 108, 112, 119, 122, 127, 139], "timedelta": 4, "interrupt": [4, 11, 38, 39, 42, 43, 47, 48, 51, 65, 78, 80, 99, 102, 109, 112, 113, 143, 150, 154, 160], "ctrl": [4, 47, 102, 127, 147, 151, 154, 157, 158, 159], "keyboardinterrupt": [4, 11, 17, 47, 102, 158], "caught": [4, 14], "exit": [4, 5, 7, 11, 14, 17, 47, 87, 111, 118, 154, 157, 158, 159], "detect": [4, 21, 43, 76, 80, 111, 115, 116, 118, 122, 127, 148, 154, 156, 159], "di": 4, "some": [4, 8, 16, 18, 27, 28, 30, 34, 37, 38, 40, 42, 46, 49, 52, 69, 78, 80, 85, 87, 95, 106, 107, 108, 109, 111, 112, 113, 115, 119, 122, 127, 128, 130, 132, 133, 134, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160], "advanc": [4, 19, 69, 104, 127, 151, 159, 160], "program": [4, 11, 16, 28, 30, 39, 52, 88, 99, 111, 115, 118, 122, 127, 129, 130, 138, 139, 140, 147, 149, 153, 154, 155, 156, 157, 159, 160], "codetyp": 4, "three": [4, 16, 30, 33, 48, 69, 75, 80, 89, 109, 111, 125, 130, 136, 138, 142, 145, 147, 155, 157, 158, 160], "pow": [4, 11, 17, 46, 69], "permit": [4, 117, 151, 160], "expon": [4, 46], "neg": [4, 6, 13, 17, 18, 30, 35, 46, 47, 62, 63, 64, 65, 69, 82, 83, 85, 87, 96, 107, 110, 112, 116, 119, 134, 135, 140], "case": [4, 5, 6, 10, 16, 20, 21, 24, 27, 28, 30, 33, 34, 37, 40, 41, 43, 47, 53, 69, 71, 84, 85, 88, 89, 92, 99, 103, 106, 107, 108, 111, 112, 113, 115, 118, 119, 127, 132, 134, 139, 141, 142, 146, 147, 151, 152, 153, 154, 155, 158, 159, 160], "prime": 4, "modulu": [4, 18], "sync": [4, 11, 69, 71, 85, 87, 115, 119, 158], "comput": [4, 11, 15, 27, 37, 47, 69, 78, 80, 97, 119, 122, 127, 128, 132, 147, 158, 160], "second": [4, 14, 16, 33, 39, 40, 49, 67, 69, 70, 78, 80, 88, 89, 93, 96, 97, 103, 107, 109, 111, 112, 113, 115, 118, 119, 122, 133, 136, 137, 147, 151, 154, 155, 157, 158], "__reduce__": 4, "six": [4, 69], "run": [4, 5, 8, 11, 14, 16, 20, 23, 35, 39, 42, 43, 44, 47, 48, 52, 54, 69, 76, 78, 79, 80, 87, 88, 102, 109, 111, 112, 113, 118, 122, 123, 128, 129, 130, 131, 132, 135, 136, 147, 149, 151, 154, 155, 156, 159, 160], "graduat": 4, "stabl": [4, 69], "launch": [4, 122, 131, 154], "nativ": [4, 6, 8, 11, 69, 85, 107, 110, 111, 113, 149, 155, 159], "repl": [4, 11, 27, 47, 85, 87, 111, 147, 149, 150, 154, 156, 157], "cancellederror": [4, 14], "baseexcept": 4, "concurr": [4, 14, 16, 128, 151], "task": [4, 5, 11, 80, 99, 112, 127, 151], "get_coro": 4, "create_task": [4, 11, 14, 151], "event": [4, 11, 27, 30, 38, 42, 43, 66, 69, 80, 87, 99, 100, 102, 112, 117, 151, 159], "loop": [4, 5, 11, 30, 48, 67, 69, 78, 80, 88, 112, 130, 138, 147, 149, 151, 154, 158, 159, 160], "set_nam": 4, "happi": [4, 151], "eyebal": 4, "create_connect": 4, "happy_eyeballs_delai": 4, "interleav": [4, 54], "while": [4, 7, 11, 14, 16, 28, 34, 35, 40, 41, 43, 48, 49, 51, 52, 62, 63, 64, 65, 68, 69, 71, 75, 77, 78, 79, 80, 82, 83, 84, 87, 100, 111, 112, 116, 119, 120, 121, 122, 127, 128, 130, 132, 135, 136, 138, 147, 149, 151, 154, 155, 157, 158, 159, 160], "dist": 4, "euclidean": 4, "distanc": [4, 11, 69], "point": [4, 5, 11, 13, 16, 30, 46, 47, 49, 52, 53, 66, 68, 69, 70, 72, 74, 75, 78, 80, 84, 87, 88, 89, 99, 103, 107, 110, 111, 112, 113, 122, 128, 138, 139, 147, 148, 151, 154, 156, 158, 159], "hypot": 4, "dimens": 4, "prod": 4, "analog": [4, 11, 30, 32, 38, 87, 95, 123, 124], "sum": [4, 11, 17, 41, 69, 107, 113, 154], "product": [4, 11, 28, 87, 122, 123, 132], "combinator": 4, "perm": 4, "comb": 4, "isqrt": 4, "accur": [4, 65, 69, 88, 112], "squar": [4, 18, 46, 69, 138], "root": [4, 18, 46, 85, 87, 115, 148, 155], "convers": [4, 8, 11, 27, 30, 32, 45, 72, 75, 80, 87, 127, 147, 151, 156], "factori": [4, 19, 88, 148], "unraisablehook": 4, "overridden": [4, 67, 71, 129], "how": [4, 11, 21, 30, 31, 42, 49, 62, 63, 64, 65, 69, 71, 72, 75, 80, 82, 83, 95, 99, 107, 120, 123, 124, 127, 130, 133, 138, 148, 149, 151, 153, 154], "unrais": 4, "5th": 5, "2020": [5, 39], "596": 5, "573": 5, "state": [5, 9, 11, 14, 16, 28, 30, 33, 36, 38, 41, 43, 44, 49, 50, 52, 53, 62, 63, 64, 66, 72, 80, 81, 87, 89, 95, 96, 115, 119, 121, 122, 125, 133, 134, 139, 141, 142, 143, 146, 147, 151, 154, 159], "584": 5, "585": 5, "593": 5, "flexibl": [5, 41, 42, 115, 128, 153], "602": 5, "adopt": [5, 160], "annual": 5, "cycl": [5, 16, 37, 55, 59, 84, 87, 99, 119, 152, 160], "aim": [5, 147, 149, 150], "month": [5, 39, 96, 112], "614": 5, "relax": 5, "grammar": 5, "decor": [5, 138, 149, 160], "615": 5, "iana": [5, 108], "zone": 5, "databas": 5, "present": [5, 13, 19, 24, 38, 39, 55, 69, 70, 89, 92, 108, 111, 116, 138, 147, 148, 159], "zoneinfo": 5, "616": 5, "prefix": [5, 7, 27, 49, 109, 113], "suffix": 5, "617": 5, "peg": 5, "__import__": 5, "script": [5, 11, 27, 30, 43, 47, 52, 69, 77, 78, 79, 80, 87, 119, 122, 123, 124, 125, 128, 131, 152, 154, 159], "ex": [5, 84, 122], "python3": [5, 147], "py": [5, 8, 11, 27, 47, 87, 118, 122, 127, 129, 131, 133, 148, 149, 150, 152, 154, 155, 156, 158], "becam": 5, "sometim": [5, 8, 95, 127, 151, 159, 160], "valid": [5, 14, 16, 21, 37, 38, 43, 49, 50, 53, 69, 80, 90, 91, 93, 102, 106, 108, 116, 151, 154, 155, 159], "much": [5, 21, 28, 41, 42, 43, 47, 62, 63, 64, 65, 69, 71, 72, 78, 79, 80, 82, 83, 86, 99, 100, 102, 104, 107, 127, 128, 148, 149, 156, 158], "parallel": [5, 57, 63, 81], "aclos": 5, "asend": 5, "athrow": 5, "ag_run": 5, "reflect": [5, 148, 154], "unexpect": [5, 8, 11, 34, 151, 158], "mask": [5, 9, 11, 43, 49, 50, 53, 80, 88, 89, 106, 142, 143], "typeerror": [5, 6, 9, 11, 17, 42], "indexof": 5, "countof": 5, "lambda": [5, 6, 38, 79, 99, 119, 151, 155], "part": [5, 16, 25, 38, 46, 47, 49, 69, 87, 96, 108, 112, 113, 122, 130, 147, 151, 152, 155, 156], "signific": [5, 30, 40, 97, 113, 138, 147, 151, 155, 156, 160], "concern": [5, 150], "reuse_address": 5, "create_datagram_endpoint": 5, "shutdown_default_executor": 5, "schedul": [5, 11, 27, 35, 39, 47, 65, 80, 106, 112], "executor": 5, "wait": [5, 11, 14, 16, 27, 28, 30, 33, 34, 37, 43, 48, 49, 52, 61, 65, 67, 78, 80, 82, 84, 87, 89, 93, 97, 100, 101, 102, 107, 112, 120, 122, 130, 133, 151, 154, 157, 158], "threadpoolexecutor": 5, "finish": [5, 16, 78, 80, 87, 88, 89, 107, 122, 127, 130, 132, 157, 158, 159], "pidfdchildwatch": 5, "child": [5, 155], "watcher": 5, "poll": [5, 11, 30, 43, 51, 68, 77, 78, 87, 107, 109, 112], "to_thread": 5, "cancel": [5, 11, 14, 16, 39, 78, 85, 122, 151, 158], "wait_for": [5, 11, 14], "typererror": 5, "incompat": [5, 155], "garbag": [5, 11, 27, 107, 132, 149], "resurrect": 5, "collector": [5, 11, 27, 132, 149], "lcm": [5, 84], "least": [5, 21, 33, 40, 43, 69, 78, 89, 97, 106, 107, 112, 113, 127, 147, 149, 155], "nextaft": 5, "after": [5, 6, 14, 16, 20, 23, 25, 30, 33, 34, 37, 42, 43, 44, 47, 52, 62, 63, 64, 65, 67, 69, 71, 76, 78, 79, 80, 82, 83, 85, 87, 88, 89, 93, 99, 100, 104, 109, 112, 118, 122, 125, 127, 128, 129, 132, 136, 137, 139, 140, 142, 147, 148, 151, 152, 153, 154, 157, 158, 159], "toward": [5, 46, 70, 132], "ulp": 5, "pidfd_open": 5, "p_pidfd": 5, "unsetenv": [5, 9], "putenv": [5, 9], "waitstatus_to_exitcod": 5, "randbyt": 5, "platlibdir": 5, "stderr": [5, 11, 111], "buffer": [5, 11, 13, 14, 16, 20, 28, 33, 34, 35, 38, 39, 40, 43, 47, 62, 63, 64, 65, 69, 72, 77, 80, 82, 83, 84, 88, 89, 90, 93, 97, 100, 101, 102, 107, 110, 113, 119, 122, 123, 132, 133, 147, 149], "interact": [5, 11, 107, 109, 149, 150, 151, 154, 157], "micropy_cpython_compat": 5, "mon": [6, 7, 9, 10, 112], "02": [6, 7, 9, 10], "jun": [6, 7, 9, 10], "2025": [6, 7, 9, 10, 117], "03": [6, 7, 9, 10], "31": [6, 7, 9, 10, 87, 111, 112, 116, 138, 141, 142, 146], "optimis": [6, 7, 9, 10, 16, 47, 147, 149, 152, 159, 160], "workaround": [6, 7, 9, 10, 52], "sampl": [6, 7, 9, 10, 31, 32, 35, 40, 54, 78, 80, 88, 89, 90, 97, 99, 119, 127], "print": [6, 7, 9, 10, 11, 16, 17, 19, 22, 33, 34, 38, 39, 40, 47, 49, 50, 51, 53, 65, 68, 69, 79, 82, 84, 87, 88, 89, 91, 93, 96, 97, 99, 111, 112, 113, 114, 119, 120, 127, 130, 138, 147, 148, 149, 151, 154, 155, 157, 158, 159, 160], "cpy": [6, 7, 8, 9, 11], "recent": [6, 7, 9, 30, 158], "last": [6, 7, 9, 16, 30, 33, 34, 40, 43, 80, 87, 89, 93, 97, 100, 112, 122, 127, 152, 158], "stdin": [6, 7, 10, 11, 111, 158], "9": [6, 8, 10, 11, 16, 37, 43, 65, 69, 100, 103, 104, 113, 119, 121, 124, 155, 158], "attributeerror": [6, 8, 9, 11, 17], "bin": [6, 7, 9, 10, 11, 17, 69, 124, 127, 131], "sh": [6, 7, 9, 10, 131], "port": [6, 7, 9, 10, 11, 14, 16, 17, 21, 22, 27, 28, 30, 31, 34, 35, 37, 38, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 57, 78, 79, 85, 87, 90, 91, 95, 103, 104, 106, 107, 108, 111, 112, 115, 122, 127, 131, 147, 148, 149, 152, 153, 154, 155, 157, 159, 160], "11": [6, 10, 16, 33, 49, 53, 69, 78, 89, 99, 119, 155], "highli": [6, 7, 12, 27, 28, 30], "optim": [6, 7, 23, 69, 80, 112, 113, 127, 132, 149], "happen": [6, 16, 40, 43, 52, 65, 66, 69, 104, 106, 107, 127, 151, 154, 159], "bodi": [6, 105, 160], "report": [6, 11, 47, 65, 87, 115, 148, 151, 155], "l": [6, 13, 69, 110, 133, 140, 147, 154, 157], "foo": [6, 7, 19, 138, 147, 148, 151, 152, 155, 156, 157, 158, 160], "bar": [6, 7, 11, 19, 69, 80, 123, 138, 147, 151, 152, 160], "indexerror": [6, 11, 13, 17, 19, 26], "rang": [6, 7, 10, 11, 13, 16, 17, 18, 31, 34, 37, 65, 67, 68, 69, 71, 75, 76, 80, 89, 90, 91, 96, 103, 104, 107, 112, 113, 119, 132, 138, 140, 141, 142, 146, 147, 148, 151, 155, 158, 160], "fulli": [6, 12, 16, 28, 69, 122, 132, 147, 159, 160], "b": [6, 7, 9, 10, 13, 16, 19, 28, 33, 34, 36, 40, 49, 62, 63, 64, 65, 69, 71, 72, 80, 82, 83, 89, 91, 93, 97, 103, 104, 107, 110, 113, 119, 133, 136, 138, 140, 142, 147, 154, 157, 158, 160], "x01": [6, 9, 107, 158], "x02": [6, 9, 107], "x00": [6, 158], "strive": 6, "__mod__": 6, "sens": [6, 11, 30, 69, 87, 113, 124, 132], "leav": [6, 33, 69, 89, 122, 129, 154, 158], "you": [6, 9, 16, 21, 27, 29, 30, 33, 34, 37, 41, 43, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 92, 93, 95, 97, 98, 99, 101, 102, 107, 111, 112, 113, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "interest": [6, 30, 62, 63, 64, 65, 69, 71, 75, 76, 82, 83, 109, 128], "don": [6, 8, 9, 11, 28, 34, 40, 42, 52, 69, 85, 88, 95, 99, 106, 107, 112, 118, 122, 129, 130, 131, 132, 133, 154, 156, 159], "abc": [6, 43, 93, 100, 158, 160], "utf8": [6, 69], "veri": [6, 47, 65, 69, 72, 78, 79, 80, 88, 97, 111, 112, 113, 122, 128, 130, 132, 149, 151, 154, 159], "rare": [6, 148, 151, 152, 159], "123": [6, 33, 34, 47, 89, 93, 119, 158], "3": [6, 7, 8, 9, 10, 11, 16, 19, 30, 34, 35, 40, 43, 47, 52, 53, 59, 65, 68, 69, 78, 80, 87, 88, 89, 90, 93, 97, 99, 100, 102, 107, 109, 113, 115, 118, 119, 120, 121, 124, 125, 132, 133, 136, 147, 150, 151, 154, 155, 158], "13": [6, 10, 16, 35, 37, 69, 96, 100, 112], "obj": [6, 17, 29, 106, 113], "operand": [6, 134, 135], "1g": 6, "1e": 6, "01": [6, 112], "unless": [6, 16, 25, 33, 43, 62, 63, 64, 67, 69, 71, 77, 89, 100, 115, 127, 148, 151, 155, 159], "realli": [6, 65, 77, 127, 129, 159], "prefer": [6, 16, 24, 27, 49, 88, 104, 116, 131, 152], "http": [6, 11, 27, 49, 69, 91, 112, 113, 149, 156], "en": [6, 112], "wikipedia": [6, 112, 113], "wiki": [6, 112, 113, 139], "composition_over_inherit": 6, "__add__": [6, 11, 13], "42": [6, 10, 34, 100], "84": [6, 99], "true": [6, 7, 14, 15, 16, 21, 30, 33, 34, 37, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 85, 87, 89, 90, 95, 97, 100, 102, 103, 107, 108, 112, 114, 115, 119, 120, 130, 135, 147, 151, 152, 159, 160], "fals": [6, 9, 14, 16, 21, 33, 38, 39, 41, 43, 47, 48, 49, 50, 51, 53, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 77, 80, 82, 83, 87, 89, 90, 93, 95, 97, 100, 102, 107, 108, 109, 114, 147, 152, 156, 160], "subtl": [6, 151], "fit": [6, 27, 49, 62, 63, 64, 65, 69, 71, 72, 80, 82, 83, 117, 127, 132, 147], "care": [6, 40, 60, 69, 72, 87, 113, 151], "big": [6, 69, 80, 110, 111, 112, 113, 132, 160], "overflowerror": [6, 9], "unsign": [6, 17, 37, 69, 90, 110, 113, 134, 135, 138, 140, 155, 158, 160], "del": [6, 7, 9, 27], "bytesio": [6, 11, 21, 24, 28, 47, 160], "programm": [6, 128, 147, 160], "manual": [6, 7, 11, 16, 23, 41, 51, 69, 72, 75, 80, 112, 122, 138, 139, 149], "ensur": [6, 14, 16, 44, 62, 63, 64, 65, 71, 74, 80, 115, 127, 129, 136, 147, 151, 160], "worst": 6, "scenario": [6, 154], "freed": 6, "free": [6, 41, 47, 48, 65, 69, 72, 79, 82, 84, 85, 97, 106, 117, 122, 132, 147, 151, 154, 156, 159], "bug": [6, 52, 127, 151], "corrupt": [6, 47, 80, 122, 148], "abcdefg": 6, "hijklmnop": 6, "buffererror": 6, "export": [6, 157], "directli": [6, 7, 11, 13, 14, 41, 47, 69, 72, 75, 78, 88, 89, 95, 99, 107, 111, 112, 124, 147, 149, 152, 153, 154, 156, 159], "eg": [6, 47, 85, 88, 119, 154, 156, 157], "easi": [6, 69, 79, 80, 121, 133, 159], "altern": [6, 11, 38, 40, 47, 49, 69, 80, 87, 99, 113, 115, 127, 147, 152, 157, 160], "abcdefghi": 6, "acegi": 6, "aa": 7, "ab": [7, 11, 17, 46], "output": [7, 9, 10, 11, 14, 19, 21, 27, 34, 35, 37, 38, 43, 57, 58, 59, 63, 69, 72, 74, 75, 80, 83, 85, 90, 95, 98, 99, 100, 109, 111, 116, 119, 120, 124, 127, 131, 147, 149, 154, 157, 158, 159, 160], "upi": [7, 8, 11, 139], "aa1": 7, "1ab": 7, "a1": [7, 154], "1a": 7, "balanc": [7, 53, 69, 80], "hello": [7, 119, 130, 133, 148], "world": [7, 69, 119, 121, 130, 133, 148], "microppython": 7, "text": [7, 11, 28, 69, 123, 147, 158], "depth": [7, 47, 69, 82], "hierarchi": [7, 11, 155], "overrid": [7, 11, 89, 97, 129, 148, 156], "keep": [7, 39, 63, 69, 71, 78, 80, 96, 112, 118, 121, 127, 132, 151, 152, 155, 157, 159, 160], "mind": [7, 27], "__str__": [7, 11, 95], "uniqu": [7, 30, 68, 69, 87, 149], "__print_str": 7, "do_print": 7, "example_str": 7, "class_item": 7, "26": [7, 10, 16, 116], "18": [7, 10, 16, 65, 69, 88, 155], "_foo__print_str": 7, "separ": [7, 13, 15, 19, 29, 40, 69, 107, 111, 113, 149, 156], "__new__": 7, "l1": 7, "ok": [7, 106, 158], "l2": 7, "d": [7, 13, 19, 21, 69, 92, 104, 110, 119, 127, 128, 132, 133, 147, 148, 151, 154, 157, 158, 159], "exactli": [7, 14, 38, 41, 43, 46, 72, 91, 96, 102, 113, 119, 125, 151], "ram": [7, 11, 21, 23, 30, 47, 62, 63, 64, 65, 69, 72, 80, 83, 90, 127, 132, 148, 149, 152, 153, 154, 155, 156, 157, 158], "extern": [7, 11, 30, 38, 61, 78, 81, 83, 87, 92, 93, 96, 127, 148, 152], "func_x": 7, "__enter__": 7, "enter": [7, 16, 27, 30, 33, 89, 140, 147, 154, 158], "func": [7, 47, 111, 147, 160], "_": [7, 11, 151, 160], "maintain": [7, 62, 63, 64, 65, 69, 78, 80, 82, 83, 112, 128, 138, 149, 151, 153, 154], "slot": [7, 33, 69, 85, 89, 118, 122, 147], "thu": [7, 28, 42, 69, 107, 111, 112, 135, 136, 138, 144, 145, 147, 149], "val": [7, 13, 31, 32, 68, 70, 88], "expr": [7, 47], "modules3": 7, "beyond": [7, 27, 33, 49, 53, 89, 138, 149, 151], "minim": [7, 21, 111], "inher": [7, 28, 151], "portabl": [7, 41, 42, 107, 112], "github": [7, 129, 149, 154, 156, 157], "workspac": 7, "cpydiff": 7, "simplic": [7, 11, 112], "search": [7, 11, 16, 69, 104, 111, 118, 126, 127, 129, 152, 154, 155, 156], "overhead": [7, 41, 153, 160], "instal": [7, 11, 24, 49, 78, 80, 107, 116, 122, 129, 131, 148, 149, 154, 157, 159], "belong": 7, "compon": [7, 69, 112, 149], "your": [7, 11, 16, 21, 27, 30, 41, 47, 49, 53, 55, 65, 69, 78, 79, 80, 92, 98, 99, 107, 111, 112, 118, 119, 121, 122, 123, 124, 125, 126, 130, 131, 133, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159], "wide": [7, 41, 43, 69, 100, 108, 140, 149, 153], "modules2": 7, "subpkg": 7, "python": [8, 11, 16, 23, 28, 29, 30, 41, 47, 78, 92, 99, 102, 104, 109, 110, 111, 113, 115, 122, 124, 127, 128, 130, 131, 133, 138, 139, 142, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160], "select": [8, 11, 25, 27, 34, 35, 38, 40, 43, 69, 72, 75, 78, 87, 88, 90, 93, 99, 100, 102, 104, 107, 108, 119, 122, 127, 150, 152], "section": [8, 11, 27, 28, 48, 49, 61, 87, 119, 139, 140, 147, 154, 158], "7": [8, 10, 11, 16, 34, 43, 65, 67, 69, 78, 89, 90, 93, 96, 99, 100, 113, 119, 141, 146, 154, 155], "behaviour": [8, 10, 16, 28, 30, 34, 38, 42, 47, 49, 88, 90, 100, 102, 106, 107, 108, 112, 135, 139, 148, 154, 160], "compar": [8, 9, 11, 69, 99, 111, 137, 140, 149], "conflict": [8, 28, 80], "nth": [8, 11], "greater": [8, 9, 11, 33, 69, 80, 88, 89, 103, 140, 158], "mp_small_int": [8, 11], "doesn": [8, 9, 11, 28, 40, 41, 69, 72, 78, 99, 104, 107, 112, 113, 122, 125, 127, 131, 132, 137, 139, 149, 155, 157, 158, 159], "concaten": [8, 11, 13, 61, 86, 147, 160], "adjac": [8, 11, 37], "brace": [8, 11], "pars": [8, 11, 29, 61, 69, 127], "resolv": [8, 11, 14, 16, 107, 152, 155], "unbalanc": [8, 11], "nest": [8, 11, 47, 113, 138, 140, 155], "bracket": [8, 11, 103], "__del__": [8, 11], "mro": [8, 11], "compliant": [8, 11, 160], "mangl": [8, 11], "__init__": [8, 11, 20, 148, 151, 156, 160], "segfault": [8, 11], "micropy_builtin_method_check_self_arg": [8, 11], "getter": [8, 11], "messag": [8, 11, 14, 33, 43, 78, 84, 89, 127, 151, 157], "__exit__": [8, 11], "aren": [8, 11, 28, 69, 127], "eval": [8, 10, 11, 17, 147, 149, 154, 158], "__all__": [8, 11], "unsupport": [8, 11], "__path__": [8, 11], "packag": [8, 11, 24, 27, 116, 122, 124, 131, 149, 150, 152, 154, 157], "singl": [8, 11, 13, 14, 16, 31, 37, 40, 41, 43, 47, 49, 54, 69, 75, 79, 80, 89, 90, 93, 100, 104, 108, 112, 127, 128, 136, 137, 138, 147, 148, 149, 151, 152, 154, 155, 156, 160], "namespac": [8, 11, 107], "across": [8, 11, 39, 41, 53, 69, 112, 119, 127, 149, 153], "memoryview": [8, 11, 13, 16, 17, 33, 39, 69, 78, 89, 149], "save": [9, 11, 16, 28, 30, 41, 53, 56, 67, 69, 71, 72, 80, 118, 122, 127, 138, 140, 145, 147, 151, 158, 160], "mark": [9, 30, 107, 147], "end": [9, 11, 13, 14, 19, 24, 28, 29, 34, 43, 44, 47, 69, 80, 90, 100, 104, 107, 110, 129, 138, 147, 151, 152, 154, 155, 156, 158], "whose": [9, 53, 62, 63, 64, 65, 69, 82, 83, 90, 113, 142, 147], "signatur": [9, 23, 115, 148], "af_inet": [9, 11, 107, 108], "sock_stream": [9, 11, 107, 108], "proto": [9, 107], "fileno": 9, "af": [9, 11, 95, 99, 107, 108], "ipproto_tcp": [9, 11, 107], "follow": [9, 15, 16, 19, 27, 28, 30, 33, 34, 37, 38, 39, 41, 43, 47, 49, 53, 61, 65, 69, 80, 82, 85, 86, 87, 89, 95, 96, 99, 100, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 122, 126, 129, 131, 133, 134, 136, 137, 138, 139, 140, 142, 144, 145, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 160], "sock_dgram": [9, 11, 107, 108], "individu": [9, 94, 100, 104, 113, 125, 149, 151], "implicit": [9, 11, 28, 112, 113, 154], "truncat": [9, 16], "257": 9, "sign": [9, 11, 17, 46, 54, 69, 87, 110, 112, 113, 134, 135, 138, 139, 140], "char": [9, 100, 110, 133], "dump": [9, 11, 21, 24, 29, 45, 52, 91, 129, 147], "shouldn": 9, "abl": [9, 16, 21, 27, 43, 78, 80, 122, 124, 127, 129, 132, 149, 156], "new_vari": 9, "prng": [9, 103], "32bit": 9, "util": [9, 11, 21, 72, 154, 156, 157], "lib": [9, 24, 27, 69, 86, 107, 111, 116, 147, 149, 152, 154, 156], "64": [9, 21, 24, 65, 69, 80, 89, 97, 100, 111, 113, 114], "11132212825991842487": 9, "cast": [9, 54, 69, 160], "larger": [9, 16, 69, 72, 78, 80, 110, 116, 122, 132, 148, 151], "wordsiz": 9, "340282366920938463463374607431768211456": 9, "bb": [9, 69], "fewer": 10, "len": [10, 11, 13, 16, 17, 19, 40, 43, 47, 62, 69, 72, 90, 92, 100, 102, 107, 122, 125, 138, 148], "15": [10, 16, 21, 47, 65, 69, 82, 88, 91, 99, 116, 158], "19": [10, 16, 65, 69, 155], "21": [10, 16, 21, 27, 39, 69, 116, 155], "22": [10, 16, 69, 91, 111, 155], "23": [10, 16, 69, 112, 119, 138, 155, 158], "24": [10, 16, 49, 54, 57, 63, 65, 81, 138], "25": [10, 16, 69, 99, 111, 119, 124, 147], "27": [10, 16], "28": [10, 16, 65, 89], "29": [10, 16, 33, 69, 89], "33": [10, 138, 147], "34": [10, 69], "35": [10, 69, 89, 116], "36": [10, 39], "37": 10, "38": [10, 89], "39": 10, "41": [10, 119], "43": 10, "44": 10, "45": [10, 98, 119], "46": 10, "47": [10, 116], "48": [10, 119], "49": 10, "50": [10, 37, 56, 69, 78, 87, 119, 132, 148], "51": [10, 158], "52": 10, "53": 10, "54": 10, "55": 10, "56": 10, "57": 10, "58": 10, "59": [10, 112], "60": [10, 56, 57, 62, 63, 64, 65, 69, 83, 98, 119], "61": 10, "62": [10, 78], "63": 10, "67": [10, 37], "rebind": 10, "1and": 10, "1or": 10, "1if": 10, "1els": 10, "latin": 10, "small": [10, 21, 24, 30, 58, 59, 67, 69, 80, 113, 118, 122, 132, 138, 147, 149, 153, 155, 160], "letter": [10, 13, 49, 95, 104, 147], "micro": [11, 16, 73, 80, 87, 111, 118, 122, 147], "__setitem__": [11, 13], "__len__": [11, 13], "__iadd__": [11, 13], "__repr__": [11, 13], "current_task": [11, 14], "sleep": [11, 14, 30, 38, 39, 49, 70, 80, 87, 91, 96, 112, 119, 124, 154, 158, 159], "sleep_m": [11, 14, 30, 68, 79, 112, 119], "wait_for_m": [11, 14], "gather": [11, 14], "is_set": [11, 14], "clear": [11, 14, 16, 27, 33, 49, 50, 62, 63, 64, 69, 80, 89, 99, 119, 122, 132, 135, 140, 142, 143, 151, 154, 159], "threadsafeflag": [11, 151], "lock": [11, 47, 48, 69, 112, 151], "acquir": [11, 14, 48, 147, 151], "tcp": [11, 52, 107, 127, 154, 159], "open_connect": [11, 14], "start_serv": [11, 14], "get_extra_info": [11, 14], "wait_clos": [11, 14], "readexactli": [11, 14], "readlin": [11, 14, 43, 47, 100, 102, 107], "drain": [11, 14, 35, 38, 95, 121], "get_event_loop": [11, 14], "new_event_loop": [11, 14], "run_forev": [11, 14], "run_until_complet": [11, 14], "set_exception_handl": [11, 14], "get_exception_handl": [11, 14], "default_exception_handl": [11, 14], "call_exception_handl": [11, 14], "hexlifi": [11, 15, 25, 53], "unhexlifi": [11, 15], "a2b_base64": [11, 15], "crc32": [11, 15], "chr": [11, 17, 47, 102], "delattr": [11, 17], "dir": [11, 17, 85, 154, 158], "divmod": [11, 17], "enumer": [11, 17, 53, 69], "exec": [11, 17, 147, 154, 157], "filter": [11, 17, 33, 49, 54, 61, 73, 76, 80, 89, 99, 107, 125, 127], "frozenset": [11, 17], "getattr": [11, 17], "hasattr": [11, 17], "hex": [11, 17, 113, 138, 154], "id": [11, 16, 17, 19, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 49, 50, 52, 60, 66, 68, 69, 77, 78, 79, 80, 87, 89, 94, 95, 98, 99, 102, 109, 118, 122, 123, 130, 131, 154], "from_byt": [11, 17], "to_byt": [11, 17], "isinst": [11, 17], "issubclass": [11, 17], "max": [11, 17, 65, 69, 80, 82, 87, 111], "min": [11, 17, 26, 65, 69, 80, 82, 102], "oct": [11, 17], "open": [11, 14, 17, 21, 24, 28, 38, 41, 52, 53, 69, 71, 95, 103, 108, 113, 115, 121, 122, 123, 128, 131, 147, 148, 149, 154, 159], "ord": [11, 17, 69], "round": [11, 16, 17, 37, 46, 69, 151], "setattr": [11, 17], "sort": [11, 17, 69, 80, 133], "assertionerror": [11, 17], "keyerror": [11, 17], "memoryerror": [11, 17, 47, 78], "notimplementederror": [11, 17], "oserror": [11, 14, 17, 21, 22, 34, 61, 100, 106, 107, 108, 115], "runtimeerror": [11, 17, 47, 151], "systemexit": [11, 17, 111], "zerodivisionerror": [11, 17], "mathemat": [11, 27, 112], "co": [11, 18, 46], "exp": [11, 18, 46], "log": [11, 18, 46, 69], "log10": [11, 18, 46], "polar": [11, 18, 40, 69, 97, 99, 119], "rect": [11, 18, 74, 80], "sin": [11, 18, 46, 90, 120], "sqrt": [11, 18, 46, 69, 137], "pi": [11, 18, 46, 90, 156], "appendleft": [11, 19], "pop": [11, 19, 26, 138, 139], "popleft": [11, 19], "errno": [11, 27, 107, 115], "errorcod": [11, 22], "mem_alloc": [11, 23, 147], "mem_fre": [11, 23, 147], "threshold": [11, 23, 73, 74, 76, 80, 127, 147], "gzip": [11, 21, 27, 116], "gzipfil": [11, 21, 24], "algorithm": [11, 15, 21, 24, 27, 47, 69, 76, 80, 116, 132, 151], "sha256": [11, 25, 154], "sha1": [11, 25], "md5": [11, 25], "digest": [11, 25, 105], "hexdigest": [11, 25], "queue": [11, 14, 19, 27, 47, 151], "heappush": [11, 26], "heappop": [11, 26], "heapifi": [11, 26], "conceptu": 11, "stringio": [11, 28, 160], "getvalu": [11, 21, 28], "marshal": [11, 27], "serial": [11, 27, 30, 35, 49, 78, 87, 102, 122, 123, 124, 133, 149, 154, 157, 158, 159], "aco": [11, 46], "acosh": [11, 46], "asin": [11, 46], "asinh": [11, 46], "atan": [11, 46], "atan2": [11, 46], "atanh": [11, 46], "ceil": [11, 46, 80], "copysign": [11, 46], "cosh": [11, 46], "degre": [11, 46, 62, 63, 64, 65, 69, 70, 71, 80, 82, 83, 88, 98, 119], "erf": [11, 46], "erfc": [11, 46], "expm1": [11, 46], "fab": [11, 46], "floor": [11, 46, 54], "fmod": [11, 46], "frexp": [11, 46], "gamma": [11, 46, 69], "isfinit": [11, 46], "isinf": [11, 46], "isnan": [11, 46], "ldexp": [11, 46], "lgamma": [11, 46], "log2": [11, 46], "modf": [11, 46], "radian": [11, 46, 69, 120], "sinh": [11, 46], "tan": [11, 46], "tanh": [11, 46], "trunc": [11, 46], "basic": [11, 18, 27, 46, 68, 89, 93, 95, 105, 113, 119, 127, 151], "unam": [11, 85], "chdir": [11, 85, 148, 154], "getcwd": [11, 85], "ilistdir": [11, 85], "listdir": [11, 85, 159], "mkdir": [11, 22, 85, 154, 157], "rmdir": [11, 85, 154, 157], "stat": [11, 85, 114, 115], "statvf": [11, 85], "termin": [11, 51, 69, 78, 111, 123, 138, 151, 154, 158], "redirect": 11, "duplic": [11, 24, 49, 113, 116, 149], "dupterm": [11, 85], "mount": [11, 87, 118, 122, 127, 148, 153, 154], "umount": [11, 85, 87, 115, 148, 153, 154], "vfsfat": [11, 85, 115, 148, 153], "vfslfs1": [11, 85, 115, 153], "vfslfs2": [11, 85, 115, 148, 153], "vfsposix": [11, 85, 115, 153], "identifi": [11, 16, 27, 30, 31, 32, 33, 34, 35, 36, 38, 49, 52, 85, 89, 107, 111, 113, 149], "python_compil": [11, 86], "libc_ver": [11, 86], "getrandbit": [11, 103], "randint": [11, 103], "randrang": [11, 103], "uniform": [11, 103], "seed": [11, 103], "choic": [11, 103, 112, 127], "regex": 11, "regist": [11, 16, 30, 33, 34, 43, 61, 65, 66, 68, 70, 78, 79, 80, 81, 84, 87, 89, 91, 95, 99, 102, 106, 107, 111, 113, 134, 138, 139, 140, 142, 143, 145, 149, 152, 160], "unregist": [11, 106], "ipol": [11, 106], "getaddrinfo": [11, 14, 49, 107], "inet_ntop": [11, 107], "inet_pton": [11, 107], "af_inet6": [11, 107], "ipproto_udp": [11, 107], "recv": [11, 33, 49, 89, 93, 97, 100, 101, 102, 107, 108, 119, 151], "sendto": [11, 107], "recvfrom": [11, 107], "settimeout": [11, 107], "setblock": [11, 107], "makefil": [11, 107, 152, 155], "wrap_socket": [11, 108], "load_cert_chain": [11, 108], "load_verify_loc": [11, 108], "set_ciph": [11, 108], "verify_mod": [11, 108], "sslerror": [11, 108], "dtl": 11, "protocol_tls_cli": [11, 108], "protocol_tls_serv": [11, 108], "protocol_dtls_cli": [11, 108], "protocol_dtls_serv": [11, 108], "cert_non": [11, 108], "cert_opt": [11, 108], "cert_requir": [11, 108], "pack": [11, 27, 69, 78, 113, 133], "primit": [11, 27, 113], "calcsiz": [11, 110], "pack_into": [11, 110], "unpack_from": [11, 110], "atexit": [11, 111], "print_except": [11, 111, 159], "settrac": [11, 111], "argv": [11, 111], "byteord": [11, 17, 111], "maxsiz": [11, 111], "ps1": [11, 111], "ps2": [11, 111], "stdout": [11, 111], "tracebacklimit": [11, 111], "version_info": [11, 111], "gmtime": [11, 112], "localtim": [11, 112], "mktime": [11, 112], "sleep_u": [11, 112, 119], "ticks_m": [11, 112, 119], "ticks_u": [11, 112, 160], "ticks_cpu": [11, 112], "ticks_add": [11, 112], "ticks_diff": [11, 112, 119, 160], "tick": [11, 71, 87, 96, 99, 112, 130, 160], "fp": [11, 69, 80, 112, 127, 130], "avg": [11, 112], "multithread": [11, 27], "bluetooth": [11, 27, 127, 159], "low": [11, 27, 30, 34, 38, 41, 43, 50, 65, 69, 78, 80, 92, 95, 99, 100, 109, 116, 119, 121, 124, 128, 132, 143, 156, 159], "ble": [11, 138, 140], "config": [11, 16, 21, 24, 41, 49, 50, 51, 53, 153, 154], "irq": [11, 14, 16, 30, 35, 38, 39, 42, 43, 47, 51, 87, 99, 102, 109, 159], "broadcast": [11, 49, 53, 83], "role": 11, "advertis": [11, 49], "gap_advertis": [11, 16], "observ": 11, "scanner": 11, "gap_scan": [11, 16], "central": 11, "gap_connect": [11, 16], "peripher": [11, 30, 34, 35, 38, 42, 43, 56, 89, 93, 95, 97, 99, 101, 113, 149, 159, 160], "gap_disconnect": [11, 16], "gatt": 11, "gatts_register_servic": [11, 16], "gatts_read": [11, 16], "gatts_writ": [11, 16], "gatts_notifi": [11, 16], "gatts_ind": [11, 16], "gatts_set_buff": [11, 16], "gattc_discover_servic": [11, 16], "gattc_discover_characterist": [11, 16], "gattc_discover_descriptor": [11, 16], "gattc_read": [11, 16], "gattc_writ": [11, 16], "gattc_exchange_mtu": [11, 16], "l2cap": 11, "orient": [11, 69], "channel": [11, 31, 32, 35, 42, 49, 52, 53, 54, 58, 59, 62, 63, 64, 65, 69, 71, 75, 80, 82, 83, 84, 87, 88, 109, 119, 127, 154], "l2cap_listen": [11, 16], "l2cap_connect": [11, 16], "l2cap_disconnect": [11, 16], "l2cap_send": [11, 16], "l2cap_recvinto": [11, 16], "pair": [11, 14, 19, 28, 38, 54, 89, 107, 119, 149], "bond": 11, "gap_pair": [11, 16], "gap_passkei": [11, 16], "uuid": 11, "cryptolib": [11, 27], "cryptograph": [11, 25, 27], "ae": [11, 20], "encrypt": [11, 16, 20, 52, 108], "decrypt": [11, 20], "deflat": [11, 24, 27, 116], "deflateio": [11, 21, 24, 116], "auto": [11, 21, 80, 116, 127, 148], "machin": [11, 14, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 68, 75, 76, 80, 85, 99, 109, 111, 112, 113, 119, 123, 124, 133, 138, 147, 149, 151, 153, 154, 155, 158, 159, 160], "hardwar": [11, 27, 28, 34, 37, 38, 39, 40, 41, 43, 49, 50, 52, 53, 83, 85, 87, 89, 93, 97, 100, 103, 109, 112, 113, 115, 123, 127, 147, 149, 151, 159], "mem8": [11, 30, 109], "mem16": [11, 30, 109, 160], "mem32": [11, 30, 109, 138], "soft_reset": [11, 30, 154, 158, 159], "reset_caus": [11, 30, 159], "bootload": [11, 30, 87, 118, 154, 158], "disable_irq": [11, 30, 87, 151, 158], "enable_irq": [11, 30, 87, 151, 158], "power": [11, 16, 38, 46, 50, 53, 56, 60, 65, 69, 80, 84, 96, 98, 107, 112, 113, 118, 119, 122, 124, 125, 127, 128, 129, 130, 143, 147, 148, 149, 151, 159], "freq": [11, 30, 34, 37, 42, 55, 68, 78, 88, 89, 90, 99, 119, 151, 158], "idl": [11, 30, 38, 39, 40, 43, 78, 97, 119, 158], "lightsleep": [11, 30], "deepsleep": [11, 30, 38, 39, 158], "unique_id": [11, 30, 87, 158], "time_pulse_u": [11, 30], "bitstream": [11, 30], "pwron_reset": [11, 30], "hard_reset": [11, 30, 87], "wdt_reset": [11, 30], "deepsleep_reset": [11, 30], "wlan_wak": [11, 30], "pin_wak": [11, 30], "rtc_wake": [11, 30], "pin": [11, 14, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 48, 50, 52, 58, 59, 62, 63, 64, 65, 68, 78, 80, 83, 87, 88, 89, 90, 93, 97, 98, 99, 100, 109, 112, 120, 121, 122, 124, 130, 132, 133, 149, 151, 158, 159, 160], "init": [11, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 52, 54, 60, 65, 82, 83, 89, 90, 93, 95, 97, 99, 100, 102, 119, 151], "__call__": [11, 38, 72], "off": [11, 14, 33, 36, 38, 40, 41, 43, 54, 62, 63, 64, 69, 80, 87, 89, 93, 94, 95, 97, 100, 116, 119, 122, 125, 127, 130, 132, 138, 158, 159, 160], "pull": [11, 34, 38, 41, 78, 91, 95, 99, 119, 121], "drive": [11, 38, 43, 55, 57, 62, 63, 64, 81, 90, 95, 100, 118, 123, 127], "toggl": [11, 36, 38, 94, 99, 119, 124, 125, 151, 160], "IN": [11, 38, 50, 95, 117, 119, 121], "open_drain": [11, 38], "alt": [11, 38, 95, 99], "alt_open_drain": [11, 38], "pull_up": [11, 38, 91, 95, 119, 121], "pull_down": [11, 38, 91, 95, 121], "pull_hold": [11, 38], "drive_0": [11, 38], "drive_1": [11, 38], "drive_2": [11, 38], "irq_fal": [11, 38, 91, 99], "irq_ris": [11, 38, 91, 119], "irq_low_level": [11, 38], "irq_high_level": [11, 38], "devic": [11, 16, 27, 30, 34, 35, 40, 43, 44, 48, 49, 63, 78, 87, 92, 93, 100, 102, 108, 109, 118, 119, 122, 124, 131, 147, 149, 151, 152, 154, 156, 158, 159, 160], "led": [11, 14, 30, 41, 78, 87, 99, 122, 123, 124, 127, 128, 151, 160], "boardnam": [11, 36], "adc": [11, 30, 38, 80, 87, 95, 99, 120, 124, 134, 160], "digit": [11, 16, 30, 35, 38, 41, 80, 87, 95, 99, 104, 124, 149], "read_u16": [11, 31, 119], "read_uv": [11, 31, 32], "adcblock": [11, 30, 31], "area": [11, 30, 62, 63, 64, 65, 69, 71, 75, 80, 82, 83, 87, 109, 127], "network": [11, 25, 27, 30, 50, 52, 53, 79, 85, 87, 107, 108, 110, 112, 113, 127, 149, 154, 156, 159], "commun": [11, 30, 34, 40, 41, 61, 78, 84, 87, 93, 133, 160], "bu": [11, 30, 41, 61, 65, 68, 78, 81, 84, 87, 93, 97, 101, 102, 109, 124, 132, 133], "deinit": [11, 33, 35, 37, 39, 40, 42, 43, 58, 59, 62, 63, 64, 65, 82, 83, 84, 89, 90, 93, 97, 99, 100, 119], "restart": [11, 33, 39, 44, 84, 89, 127, 154], "info": [11, 33, 80, 87, 89, 96, 109, 158], "setfilt": [11, 33, 89], "clearfilt": [11, 33, 89], "rxcallback": [11, 33, 89], "normal": [11, 23, 28, 33, 38, 41, 43, 47, 69, 72, 76, 80, 89, 90, 95, 108, 112, 113, 122, 137, 138, 147, 148, 151, 154, 155, 158, 159], "loopback": [11, 33, 89], "silent": [11, 33, 89], "silent_loopback": [11, 33, 89], "error_act": [11, 33, 89], "error_warn": [11, 33, 89], "error_pass": [11, 33, 89], "bus_off": [11, 33, 89], "list32": [11, 33, 89], "dual": [11, 33, 54, 89], "pwm": [11, 30, 41, 55, 57, 98, 99, 125], "puls": [11, 30, 98, 99], "width": [11, 30, 40, 62, 63, 64, 65, 67, 68, 69, 71, 76, 80, 82, 83, 89, 93, 98, 99, 134, 135, 140, 141, 144, 146], "duty_u16": [11, 37, 119], "duty_n": [11, 37, 119], "uart": [11, 16, 30, 51, 69, 87, 123, 124, 147, 149, 151, 156, 159, 160], "duplex": [11, 30, 87], "sendbreak": [11, 43, 100], "flush": [11, 14, 28, 43, 69, 71, 80, 149], "txdone": [11, 43], "rt": [11, 43, 102, 141, 146], "ct": [11, 43, 102], "irq_rxidl": [11, 43, 51], "irq_rx": [11, 43, 102], "irq_txidl": [11, 43], "irq_break": [11, 43], "spi": [11, 30, 57, 69, 87, 109, 124, 147, 151], "softspi": [11, 40, 119], "write_readinto": [11, 40, 119], "msb": [11, 40, 97, 135, 155], "lsb": [11, 40, 97, 155], "i2c": [11, 30, 61, 65, 68, 69, 82, 87, 95, 97, 124, 147, 151], "wire": [11, 30, 41, 87], "softi2c": [11, 34, 119], "scan": [11, 16, 34, 49, 52, 53, 65, 69, 82, 93, 119, 122, 127, 154], "readfrom": [11, 34, 119], "readfrom_into": [11, 34], "writeto": [11, 34, 119], "writevto": [11, 34], "readfrom_mem": [11, 34], "readfrom_mem_into": [11, 34], "writeto_mem": [11, 34], "i2": [11, 30], "inter": [11, 30, 84], "ic": [11, 30, 99, 122], "sound": [11, 30, 88], "shift": [11, 35, 75, 113], "rx": [11, 16, 33, 35, 43, 50, 69, 78, 89, 100, 119, 133, 149], "tx": [11, 16, 33, 35, 43, 50, 78, 89, 100, 119, 133, 149], "stereo": [11, 35], "mono": [11, 35], "rtc": [11, 30, 87, 108, 112, 154, 159], "real": [11, 18, 30, 41, 69, 87, 107, 112, 115, 121, 151], "alarm": [11, 39], "alarm_left": [11, 39], "alarm_cancel": [11, 39], "alarm0": [11, 39], "timer": [11, 30, 37, 48, 59, 78, 87, 88, 90, 96, 98, 112, 125, 151], "one_shot": [11, 42, 119], "period": [11, 30, 35, 37, 39, 42, 44, 71, 87, 88, 96, 99, 100, 107, 112, 119, 147, 151, 160], "wdt": [11, 30], "watchdog": [11, 30, 34, 159], "feed": [11, 25, 44, 69, 147], "const": [11, 16, 30, 47, 138, 147, 151], "opt_level": [11, 47, 152], "alloc_emergency_exception_buf": [11, 42, 47, 99, 151], "mem_info": [11, 47, 147, 154], "qstr_info": [11, 47, 147], "stack_us": [11, 47], "heap_lock": [11, 47], "heap_unlock": [11, 47], "kbd_intr": [11, 47], "ringio": [11, 47, 160], "adapt": [11, 69, 147, 149, 160], "abstractn": [11, 49, 51, 53], "disconnect": [11, 16, 49, 51, 52, 53, 122, 127, 130, 154], "isconnect": [11, 49, 50, 51, 52, 53, 79, 81, 87, 102], "ipconfig": [11, 49, 50, 51, 53, 154], "ifconfig": [11, 49, 50, 51, 52, 53], "winc": [11, 49], "wifi": [11, 27, 49, 79, 123, 154, 158], "shield": [11, 27, 49, 64, 65, 80, 82, 127], "driver": [11, 16, 28, 40, 49, 50, 51, 53, 69, 80, 87, 91, 97, 99, 115, 122, 127, 131, 133, 148, 149, 151, 152, 154, 160], "start_ap": [11, 52], "connected_sta": [11, 52], "wait_for_sta": [11, 52], "netinfo": [11, 52], "rssi": [11, 16, 49, 52, 53], "fw_version": [11, 52], "fw_dump": [11, 52], "fw_updat": [11, 52], "wpa_psk": [11, 52], "802_1x": [11, 52], "mode_sta": [11, 52], "mode_ap": [11, 52], "mode_p2p": [11, 52], "mode_bsp": [11, 52], "mode_firmwar": [11, 52], "wlan": [11, 49, 52, 79, 154], "pm_perform": [11, 53], "pm_powersav": [11, 53], "pm_none": [11, 53], "lan": [11, 49, 79], "ethernet": [11, 49, 159], "ppp": [11, 49], "sec_non": [11, 51], "sec_pap": [11, 51], "sec_chap": [11, 51], "countri": [11, 49], "hostnam": [11, 49, 53, 108], "phy_mod": [11, 49], "openamp": [11, 27], "asymmetr": [11, 27], "multiprocess": [11, 27], "amp": [11, 27, 90], "new_service_callback": [11, 84], "endpoint": [11, 31, 103], "is_readi": [11, 84, 93], "remoteproc": 11, "uctyp": [11, 27, 138, 147], "layout": [11, 148, 156], "content": [11, 13, 28, 33, 89, 105, 127, 131, 134, 138, 141, 142, 144, 145, 146, 151, 154, 155, 156, 157, 159], "little_endian": [11, 113], "big_endian": [11, 113], "sizeof": [11, 113], "addressof": [11, 113, 138], "bytes_at": [11, 113], "bytearray_at": [11, 113], "uint8": [11, 72, 75, 113], "int8": [11, 72, 75, 113], "uint16": [11, 113], "int16": [11, 72, 113], "uint32": [11, 113], "int32": [11, 113], "uint64": [11, 113], "int64": [11, 113], "float32": [11, 69, 72, 113], "float64": [11, 113], "void": [11, 110, 113], "ptr": [11, 113, 160], "mutex": [11, 27, 78, 151], "ping": [11, 27], "request": [11, 16, 27, 30, 33, 34, 40, 49, 87, 88, 89, 93, 97, 107, 152], "respons": [11, 16, 69, 78, 109, 112, 115, 126, 151], "header": [11, 21, 24, 61, 105, 109, 113, 116, 130], "head": [11, 105, 119, 147], "put": [11, 30, 47, 52, 70, 80, 87, 105, 107, 119, 120, 124, 125, 127, 130, 136, 137, 138, 151, 159, 160], "vf": [11, 27, 85, 87, 92, 118, 153, 154], "mkf": [11, 87, 115, 148], "abstractblockdev": [11, 87, 92, 115, 148], "readblock": [11, 87, 92, 115, 148], "writeblock": [11, 87, 92, 115, 148], "openmv": [11, 33, 55, 56, 58, 64, 65, 66, 69, 70, 72, 78, 79, 80, 81, 87, 92, 93, 102, 117, 118, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133], "cam": [11, 33, 55, 56, 58, 64, 65, 69, 70, 72, 78, 79, 80, 87, 92, 93, 102, 118, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133], "pyb": [11, 14, 27, 33, 37, 48, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 119, 120, 121, 123, 125, 133, 148, 151, 157, 158], "board": [11, 14, 16, 21, 25, 27, 30, 33, 34, 35, 36, 41, 42, 49, 50, 54, 64, 70, 77, 85, 89, 92, 95, 99, 111, 112, 124, 125, 127, 128, 129, 132, 148, 149, 151, 154, 156, 157, 158, 159], "delai": [11, 38, 42, 43, 67, 80, 87, 112, 120, 147, 151, 154, 159, 160], "udelai": [11, 87], "milli": [11, 16, 70, 87], "elapsed_milli": [11, 87], "elapsed_micro": [11, 87], "fault_debug": [11, 87], "wfi": [11, 87, 143], "standbi": [11, 87, 88, 96], "have_cdc": [11, 87], "hid": [11, 87], "main": [11, 14, 30, 47, 48, 80, 87, 97, 118, 127, 129, 132, 133, 148, 152, 154, 155, 156, 157], "repl_uart": [11, 87], "rng": [11, 87, 151, 158], "usb_mod": [11, 87, 101], "hid_mous": [11, 87], "hid_keyboard": [11, 87], "read_tim": [11, 88], "adcal": 11, "list16": [11, 89], "mask16": [11, 89], "mask32": [11, 89], "dac": [11, 57, 87, 99, 120, 124], "nois": [11, 54, 69, 80, 90], "triangl": [11, 90], "write_tim": [11, 90], "extint": [11, 87, 119], "reg": [11, 68, 80, 91, 95], "swint": [11, 91], "irq_rising_fal": [11, 91], "flash": [11, 72, 87, 88, 115, 123, 127, 128, 129, 148, 149, 151, 152, 154, 156, 159], "mem_read": [11, 93, 119], "mem_writ": [11, 93, 119], "mapper": [11, 91, 95], "af_list": [11, 95], "gpio": [11, 38, 41, 43, 58, 62, 63, 64, 91, 95, 99, 109, 112, 123, 124, 149, 160], "af_od": [11, 95], "af_pp": [11, 95], "out_od": [11, 95, 121], "out_pp": [11, 95, 119, 121], "pull_non": [11, 91, 95, 119], "pinaf": [11, 87], "wakeup": [11, 87, 96], "calibr": [11, 31, 65, 80, 88, 96, 98], "servo": [11, 87, 99, 124], "hobbi": [11, 87], "angl": [11, 69, 70, 98, 119], "pulse_width": [11, 98, 99], "driven": [11, 38, 40, 50, 87, 99], "send_recv": [11, 97, 119], "callback": [11, 14, 16, 30, 33, 35, 38, 39, 42, 47, 48, 54, 61, 65, 66, 72, 73, 78, 80, 81, 84, 89, 91, 96, 99, 102, 119], "counter": [11, 20, 28, 87, 99, 112, 113, 119, 120, 139, 140, 151], "prescal": [11, 89, 97, 99], "source_freq": [11, 99], "timerchannel": [11, 87], "setup": [11, 52, 62, 63, 64, 65, 67, 69, 71, 78, 79, 80, 82, 83, 87, 112, 123, 127, 128, 130, 154], "pulse_width_perc": [11, 99, 119], "center": [11, 62, 63, 64, 65, 69, 71, 75, 80, 82, 83, 99], "brk_off": [11, 99], "brk_low": [11, 99], "brk_high": [11, 99], "readchar": [11, 100], "writechar": [11, 100], "flow": [11, 16, 43, 69, 102, 158], "transmitt": [11, 149], "usb_hid": [11, 87], "usb": [11, 87, 92, 118, 123, 127, 148, 149, 153, 154, 156, 157, 158, 159], "human": [11, 87, 122], "usb_vcp": [11, 87], "comm": [11, 87], "setinterrupt": [11, 102], "debug_mode_en": [11, 102], "stm": [11, 27, 95, 138, 160], "stm32": [11, 16, 27, 30, 33, 38, 39, 43, 51, 58, 124, 132, 147, 152, 154, 157, 159], "mcu": [11, 27, 30, 34, 42, 43, 87, 88, 89, 92, 113, 129, 149, 159, 160], "gpioa": [11, 30, 109, 160], "gpiob": [11, 109], "gpio_bsrr": [11, 30, 109], "gpio_idr": [11, 30, 109], "gpio_odr": [11, 109, 160], "stm32wbxx": 11, "rfcore_statu": [11, 109], "rfcore_fw_vers": [11, 109], "rfcore_sys_hci": [11, 109], "stm32wlxx": 11, "subghz_c": [11, 109], "subghz_irq": [11, 109], "subghz_is_busi": [11, 109], "sensor": [11, 34, 41, 62, 63, 64, 67, 69, 71, 79, 83, 88, 127, 128, 130, 132, 149, 151], "camera": [11, 27, 62, 63, 64, 65, 67, 69, 70, 71, 79, 82, 83, 99, 119, 122, 125, 127, 128, 130], "snapshot": [11, 62, 63, 64, 65, 67, 69, 71, 79, 80, 82, 83, 127, 130, 132], "skip_fram": [11, 62, 63, 64, 65, 67, 71, 80, 82, 83, 130], "height": [11, 62, 63, 64, 65, 67, 68, 69, 71, 76, 80, 82, 83], "get_fb": [11, 80], "get_id": [11, 80], "alloc_extra_fb": [11, 80, 132], "dealloc_extra_fb": [11, 80], "set_pixformat": [11, 62, 63, 64, 65, 67, 71, 80, 82, 83, 130], "get_pixformat": [11, 80], "set_frames": [11, 62, 63, 64, 65, 67, 71, 80, 82, 83, 130], "get_frames": [11, 80], "set_framer": [11, 80], "get_framer": [11, 80], "set_window": [11, 69, 80], "get_window": [11, 80], "set_gainceil": [11, 80], "set_contrast": [11, 80], "set_bright": [11, 80], "set_satur": [11, 80], "set_qual": [11, 80], "set_colorbar": [11, 80], "set_auto_gain": [11, 80], "get_gain_db": [11, 80], "set_auto_exposur": [11, 80], "get_exposure_u": [11, 80], "set_auto_whiteb": [11, 80], "get_rgb_gain_db": [11, 80], "set_auto_blc": [11, 80], "get_blc_reg": [11, 80], "set_hmirror": [11, 80], "get_hmirror": [11, 80], "set_vflip": [11, 80], "get_vflip": [11, 80], "set_transpos": [11, 80], "get_transpos": [11, 80], "set_auto_rot": [11, 80], "get_auto_rot": [11, 80], "set_framebuff": [11, 80], "get_framebuff": [11, 80], "disable_delai": [11, 80], "disable_full_flush": [11, 80], "set_lens_correct": [11, 80], "set_vsync_callback": [11, 80], "set_frame_callback": [11, 80], "get_frame_avail": [11, 65, 80], "set_color_palett": [11, 80], "get_color_palett": [11, 80], "__write_reg": [11, 70, 80], "__read_reg": [11, 70, 80], "grayscal": [11, 62, 63, 64, 65, 67, 69, 71, 75, 80, 82, 83, 127, 130], "rgb565": [11, 62, 63, 64, 65, 67, 69, 71, 80, 82, 83, 127, 130], "bayer": [11, 69, 80], "yuv422": [11, 69, 80], "jpeg": [11, 69, 71, 77, 78, 79, 80, 127], "ov2640": [11, 79, 80], "ov5640": [11, 79, 80], "ov7690": [11, 80], "ov7725": [11, 69, 80], "ov9650": [11, 80], "mt9v022": [11, 80], "mt9v024": [11, 80], "mt9v032": [11, 80], "mt9v034": [11, 80], "mt9m114": [11, 80], "boson320": [11, 80], "boson640": [11, 80], "lepton": [11, 65, 69, 80], "hm01b0": [11, 80], "hm0360": [11, 80], "gc2145": [11, 80], "genx320": [11, 80], "pag7920": [11, 80], "pag7936": [11, 80], "paj6100": [11, 80], "frogeye2020": [11, 80], "qqcif": [11, 80], "qcif": [11, 80], "cif": [11, 80], "qqsif": [11, 80], "qsif": [11, 80], "sif": [11, 80, 83], "qqqqvga": [11, 80], "qqqvga": [11, 80], "qqvga": [11, 67, 80], "qvga": [11, 57, 65, 71, 80, 82, 130], "vga": [11, 57, 80], "hqqqqvga": [11, 80], "hqqqvga": [11, 80], "hqqvga": [11, 80], "hqvga": [11, 80], "hvga": [11, 80], "b64x32": [11, 80], "b64x64": [11, 69, 80], "b128x64": [11, 80], "b128x128": [11, 80], "b160x160": [11, 80], "b320x320": [11, 80], "lcd": [11, 57, 60, 62, 63, 64, 80, 81, 83], "qqvga2": [11, 80], "wvga": [11, 80], "wvga2": [11, 80], "svga": [11, 57, 80], "xga": [11, 57, 80], "wxga": [11, 80], "sxga": [11, 57, 80], "sxgam": [11, 80], "uxga": [11, 57, 80], "hd": [11, 57, 80], "fhd": [11, 57, 80], "qhd": [11, 80], "qxga": [11, 80], "wqxga": [11, 80], "wqxga2": [11, 80], "ioctl_set_readout_window": [11, 80], "ioctl_get_readout_window": [11, 80], "ioctl_set_triggered_mod": [11, 80], "ioctl_get_triggered_mod": [11, 80], "ioctl_set_fov_wid": [11, 80], "ioctl_get_fov_wid": [11, 80], "ioctl_trigger_auto_focu": [11, 80], "ioctl_pause_auto_focu": [11, 80], "ioctl_reset_auto_focu": [11, 80], "ioctl_wait_on_auto_focu": [11, 80], "ioctl_set_night_mod": [11, 80], "ioctl_get_night_mod": [11, 80], "ioctl_lepton_get_width": [11, 80], "ioctl_lepton_get_height": [11, 80], "ioctl_lepton_get_radiometri": [11, 80], "ioctl_lepton_get_refresh": [11, 80], "ioctl_lepton_get_resolut": [11, 80], "ioctl_lepton_run_command": [11, 80], "ioctl_lepton_set_attribut": [11, 80], "ioctl_lepton_get_attribut": [11, 80], "ioctl_lepton_get_fpa_temp": [11, 80], "ioctl_lepton_get_aux_temp": [11, 80], "ioctl_lepton_set_mod": [11, 80], "ioctl_lepton_get_mod": [11, 80], "ioctl_lepton_set_rang": [11, 80], "ioctl_lepton_get_rang": [11, 80], "ioctl_himax_md_en": [11, 80], "ioctl_himax_md_clear": [11, 80], "ioctl_himax_md_window": [11, 80], "ioctl_himax_md_threshold": [11, 80], "ioctl_himax_osc_en": [11, 80], "ioctl_rgb_stat": [11, 80], "ioctl_genx320_set_bias": [11, 80], "ioctl_genx320_set_afk": [11, 80], "genx320_biases_default": [11, 80], "genx320_biases_low_light": [11, 80], "genx320_biases_active_mark": [11, 80], "genx320_biases_low_nois": [11, 80], "genx320_biases_high_spe": [11, 80], "ioctl_genx320_set_bia": [11, 80], "genx320_bias_diff_off": [11, 80], "genx320_bias_diff_on": [11, 80], "genx320_bias_fo": [11, 80], "genx320_bias_hpf": [11, 80], "enx320_bias_refr": [11, 80], "single_buff": [11, 80], "double_buff": [11, 80], "triple_buff": [11, 64, 80, 83], "video_fifo": [11, 80], "imag": [11, 27, 52, 62, 63, 64, 65, 67, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 119, 122, 127, 128, 129, 130, 132, 149, 154], "vision": [11, 27, 80, 123, 124, 125, 128, 132], "binary_to_grayscal": [11, 69], "binary_to_rgb": [11, 69], "binary_to_lab": [11, 69], "binary_to_yuv": [11, 69], "grayscale_to_binari": [11, 69], "grayscale_to_rgb": [11, 69], "grayscale_to_lab": [11, 69], "grayscale_to_yuv": [11, 69], "rgb_to_binari": [11, 69], "rgb_to_grayscal": [11, 69], "rgb_to_lab": [11, 69], "rgb_to_yuv": [11, 69], "lab_to_binari": [11, 69], "lab_to_grayscal": [11, 69], "lab_to_rgb": [11, 69], "lab_to_yuv": [11, 69], "yuv_to_binari": [11, 69], "yuv_to_grayscal": [11, 69], "yuv_to_rgb": [11, 69], "yuv_to_lab": [11, 69], "load_decriptor": [11, 69], "save_descriptor": [11, 69], "match_descriptor": [11, 69], "haarcascad": 11, "similar": [11, 14, 17, 23, 25, 28, 30, 47, 87, 97, 104, 108, 111, 112, 113, 130, 137, 149, 154, 155, 156, 159, 160], "mean": [11, 13, 16, 21, 23, 28, 29, 39, 41, 47, 49, 54, 65, 69, 72, 75, 80, 85, 87, 88, 90, 99, 103, 107, 109, 112, 113, 119, 127, 129, 132, 133, 135, 138, 140, 143, 147, 149, 151, 153, 154, 158, 160], "stdev": [11, 69, 75], "histogram": [11, 123], "l_bin": [11, 69], "a_bin": [11, 69], "b_bin": [11, 69], "get_percentil": [11, 69], "get_threshold": [11, 69], "get_statist": [11, 69], "percentil": 11, "l_valu": [11, 69], "a_valu": [11, 69], "b_valu": [11, 69], "statist": [11, 80, 154], "median": [11, 69], "lq": [11, 69], "uq": [11, 69], "l_mean": [11, 69], "l_median": [11, 69], "l_mode": [11, 69], "l_stdev": [11, 69], "l_min": [11, 69], "l_max": [11, 69], "l_lq": [11, 69], "l_uq": [11, 69], "a_mean": [11, 69], "a_median": [11, 69], "a_mod": [11, 69], "a_stdev": [11, 69], "a_min": [11, 69], "a_max": [11, 69], "a_lq": [11, 69], "a_uq": [11, 69], "b_mean": [11, 69], "b_median": [11, 69], "b_mode": [11, 69], "b_stdev": [11, 69], "b_min": [11, 69], "b_max": [11, 69], "b_lq": [11, 69], "b_uq": [11, 69], "blob": 11, "corner": [11, 62, 63, 64, 65, 69, 76, 82, 83, 122, 127], "min_corn": [11, 69], "w": [11, 19, 35, 62, 63, 64, 65, 69, 71, 74, 76, 80, 82, 83, 104, 109, 113, 127, 148, 157, 158], "h": [11, 13, 62, 63, 64, 65, 69, 71, 72, 74, 76, 80, 82, 83, 87, 90, 91, 110, 127, 133, 147, 157], "pixel": [11, 62, 63, 64, 65, 66, 67, 69, 71, 80, 82, 83, 127, 130], "cx": [11, 69], "cxf": [11, 69], "cy": [11, 69], "cyf": [11, 69], "rotat": [11, 62, 63, 64, 65, 69, 70, 71, 80, 82, 83, 119], "rotation_deg": [11, 69], "rotation_rad": [11, 69], "perimet": [11, 69], "elong": [11, 69], "densiti": [11, 69], "extent": [11, 69], "compact": [11, 29, 69, 149], "solid": [11, 69, 127], "convex": [11, 69], "x_hist_bin": [11, 69], "y_hist_bin": [11, 69], "major_axis_lin": [11, 69], "minor_axis_lin": [11, 69], "enclosing_circl": [11, 69], "enclosed_ellips": [11, 69], "x1": [11, 69, 80, 95, 160], "y1": [11, 69, 80, 99], "x2": [11, 69, 80, 99], "y2": [11, 69, 80], "magnitud": [11, 69], "theta": [11, 69], "rho": [11, 69], "circl": [11, 18, 46], "rectangl": [11, 62, 63, 64, 65, 71, 82, 83], "qrcode": 11, "payload": [11, 16, 61, 69, 78, 89], "ecc_level": [11, 69], "data_typ": [11, 69], "eci": [11, 69], "is_numer": [11, 69], "is_alphanumer": [11, 69], "is_binari": [11, 69], "is_kanji": [11, 69], "apriltag": [11, 132], "decision_margin": [11, 69], "ham": [11, 69], "good": [11, 47, 58, 69, 159], "x_translat": [11, 69], "y_translat": [11, 69], "z_translat": [11, 69], "x_rotat": [11, 69], "y_rotat": [11, 69], "z_rotat": [11, 69], "datamatrix": 11, "row": [11, 47, 69, 147], "column": [11, 69, 127, 154], "capac": [11, 69, 147, 151], "pad": [11, 69], "barcod": 11, "qualiti": [11, 69, 71, 79, 80, 122, 127], "displac": 11, "scale": [11, 31, 62, 63, 64, 65, 69, 71, 72, 75, 80, 82, 83, 88, 113], "kptmatch": 11, "keypoint": 11, "imageio": [11, 127], "is_clos": [11, 69, 71], "offset": [11, 69, 72, 92, 109, 110, 112, 113, 115, 137, 141, 146, 148], "buffer_s": [11, 69], "seek": [11, 28, 69, 149], "file_stream": [11, 69], "memory_stream": [11, 69], "get_pixel": [11, 69], "set_pixel": [11, 69], "to_ndarrai": [11, 69], "to_bitmap": [11, 69], "to_grayscal": [11, 69], "to_rgb565": [11, 69], "to_rainbow": [11, 69], "to_ironbow": [11, 69], "to_depth": [11, 69], "to_evt_dark": [11, 69], "to_evt_light": [11, 69], "to_jpeg": [11, 69], "to_png": [11, 69], "crop": [11, 62, 63, 64, 65, 69, 71, 75, 80, 82, 83], "draw_lin": [11, 69], "draw_rectangl": [11, 69], "draw_circl": [11, 69], "draw_ellips": [11, 69], "draw_str": [11, 69], "draw_cross": [11, 69], "draw_arrow": [11, 69], "draw_edg": [11, 69], "draw_imag": [11, 69], "draw_keypoint": [11, 69], "flood_fil": [11, 69], "mask_rectang": [11, 69], "mask_circl": [11, 69], "mask_ellips": [11, 69], "invert": [11, 37, 41, 43, 69, 119], "b_and": [11, 69], "b_nand": [11, 69], "b_or": [11, 69], "b_nor": [11, 69], "b_xor": [11, 69], "b_xnor": [11, 69], "awb": [11, 69], "ccm": [11, 69], "gamma_corr": [11, 69], "negat": [11, 69, 104], "differ": [11, 30, 34, 40, 41, 42, 43, 45, 47, 49, 53, 69, 72, 77, 79, 89, 97, 113, 115, 119, 122, 124, 127, 128, 132, 138, 149, 150, 151, 153], "blend": [11, 65, 69, 71, 82], "histeq": [11, 69], "erod": [11, 69], "dilat": [11, 69], "top_hat": [11, 69], "black_hat": [11, 69], "midpoint": [11, 69], "morph": [11, 69], "gaussian": [11, 69, 76], "laplacian": [11, 69], "bilater": [11, 69], "linpolar": [11, 69], "logpolar": [11, 69], "lens_corr": [11, 69], "rotation_corr": [11, 69], "get_similar": [11, 69], "get_histogram": [11, 69], "get_regress": [11, 69], "find_blob": [11, 69, 127], "find_lin": [11, 69], "find_line_seg": [11, 69], "find_circl": [11, 69], "find_rect": [11, 69], "find_qrcod": [11, 69], "find_apriltag": [11, 69, 80], "find_datamatric": [11, 69], "find_barcod": [11, 69], "find_displac": [11, 69, 80], "find_templ": [11, 69], "find_featur": [11, 69], "find_ey": [11, 69], "find_lbp": [11, 69], "find_keypoint": [11, 69], "find_edg": [11, 69], "find_hog": [11, 69], "stero_dispar": [11, 69], "png": [11, 69, 71], "palette_rainbow": [11, 65, 69, 80], "palette_ironbow": [11, 69], "palette_depth": [11, 69, 82], "palette_evt_dark": [11, 69], "palette_evt_light": [11, 69], "bilinear": [11, 62, 63, 64, 65, 69, 71, 75, 82, 83], "bicub": [11, 62, 63, 64, 65, 69, 71, 82, 83], "vflip": [11, 62, 63, 64, 65, 69, 71, 80, 82, 83], "hmirror": [11, 62, 63, 64, 65, 69, 71, 80, 82, 83], "transpos": [11, 62, 63, 64, 65, 69, 71, 80, 82, 83], "extract_rgb_channel_first": [11, 62, 63, 64, 65, 69, 71, 82, 83], "apply_color_palette_first": [11, 62, 63, 64, 65, 69, 71, 82, 83], "scale_aspect_keep": [11, 62, 63, 64, 65, 69, 71, 82, 83], "scale_aspect_expand": [11, 62, 63, 64, 65, 69, 71, 82, 83], "scale_aspect_ignor": [11, 62, 63, 64, 65, 69, 71, 82, 83], "black_background": [11, 69], "rotate_90": [11, 62, 63, 64, 65, 69, 71, 82, 83], "rotate_180": [11, 62, 63, 64, 65, 69, 71, 82, 83], "rotate_270": [11, 62, 63, 64, 65, 69, 71, 82, 83], "jpeg_subsampling_auto": [11, 69], "jpeg_subsampling_444": [11, 69], "jpeg_subsampling_422": [11, 69], "jpeg_subsampling_420": [11, 69], "search_ex": [11, 69], "search_d": [11, 69], "edge_canni": [11, 69], "edge_simpl": [11, 69], "corner_fast": [11, 69], "corner_agast": [11, 69], "tag16h5": [11, 69], "tag25h7": [11, 69], "tag25h9": [11, 69], "tag36h10": [11, 69], "tag36h11": [11, 69], "artoolkit": [11, 69], "ean2": [11, 69], "ean5": [11, 69], "ean8": [11, 69], "upc": [11, 69], "isbn10": [11, 69], "upca": [11, 69], "ean13": [11, 69], "isbn13": [11, 69], "i25": [11, 69], "databar": [11, 69], "databar_exp": [11, 69], "codabar": [11, 69], "code39": [11, 69], "pdf417": [11, 69], "code93": [11, 69], "code128": [11, 69], "ml": [11, 27, 54], "learn": [11, 27, 34, 75, 76, 130], "app": [11, 41, 72, 131, 154, 156, 157, 159], "microspeech": [11, 72], "speech": [11, 72], "recognit": [11, 72], "preprocess": [11, 69, 72, 88], "postprocess": [11, 72], "fomo_postprocess": [11, 72], "fomo": [11, 72], "yolo_lc_postprocess": [11, 72], "yolo": [11, 72], "lc": [11, 72], "yolo_v2_postprocess": [11, 72], "v2": [11, 72, 110, 115, 148], "yolo_v5_postprocess": [11, 72], "v5": [11, 72], "yolo_v8_postprocess": [11, 72], "v8": [11, 72], "nm": [11, 72], "soft": [11, 17, 30, 39, 72, 111, 151], "suppress": [11, 72], "add_bounding_box": [11, 76], "get_bounding_box": [11, 76], "model": [11, 38, 42, 54, 55, 70, 73, 74, 75, 76, 95, 97, 124], "predict": [11, 72, 75, 132, 151], "input_shap": [11, 72], "input_dtyp": [11, 72], "input_scal": [11, 72], "input_zero_point": [11, 72], "output_shap": [11, 72], "output_dtyp": [11, 72], "output_scal": [11, 72], "output_zero_point": [11, 72], "label": [11, 69, 72, 73, 76, 122, 127, 135, 138, 148], "gif": [11, 27, 71, 127], "record": [11, 27, 49, 54, 69, 80, 127], "add_fram": [11, 67, 71], "mjpeg": [11, 27, 67, 69, 127], "audio": [11, 27, 35], "start_stream": [11, 54], "stop_stream": [11, 54], "spidisplai": [11, 57], "refresh": [11, 57, 62, 63, 64, 65, 80, 82, 83], "bgr": [11, 64], "byte_swap": [11, 64], "backlight": [11, 57, 62, 63, 64], "bus_writ": [11, 60, 62, 64], "rgbdisplai": [11, 57], "rgb": [11, 30, 57, 62, 64, 65, 69, 71, 75, 80, 82, 83, 118, 119, 125, 127], "dsidisplai": [11, 57, 60], "dsi": [11, 57, 60], "bus_read": [11, 60, 62], "displaydata": [11, 57], "display_id": [11, 61], "send_fram": [11, 61], "receive_fram": [11, 61], "frame_callback": [11, 61], "st7701": [11, 57, 62], "read_id": [11, 60, 68], "dacbacklight": [11, 57, 62, 63, 64], "pwmbacklight": [11, 57, 62, 63, 64], "tqvga": [11, 57], "fhvga": [11, 57], "fhvga2": [11, 57], "thvga": [11, 57], "fwvga": [11, 57, 62, 63], "fwvga2": [11, 57], "tfwvga": [11, 57], "tfwvga2": [11, 57], "wsvga": [11, 57], "sxga2": [11, 57], "fir": [11, 27], "thermal": [11, 27, 66, 69, 80, 81, 82], "far": [11, 21, 27, 67, 71, 132, 158], "infrar": [11, 27], "radiometr": [11, 65, 80], "register_vsync_cb": [11, 65], "register_frame_cb": [11, 65], "trigger_ffc": [11, 65], "read_ta": [11, 65], "read_ir": [11, 65], "draw_ir": [11, 65], "fir_non": [11, 65], "fir_shield": [11, 65], "fir_mlx90621": [11, 65], "fir_mlx90640": [11, 65], "fir_mlx90641": [11, 65], "fir_amg8833": [11, 65], "fir_lepton": [11, 65], "tof": 11, "flight": [11, 27], "read_depth": [11, 82], "draw_depth": [11, 82], "tof_non": [11, 82], "tof_vl53lx": [11, 82], "tv": [11, 27], "tv_none": [11, 83], "tv_shield": [11, 83], "cpufreq": [11, 27], "cpu": [11, 27, 30, 85, 95, 109, 112, 113, 159, 160], "frequenc": [11, 27, 30, 34, 35, 37, 40, 42, 54, 55, 59, 78, 88, 89, 90, 93, 97, 99, 119, 151], "set_frequ": [11, 56], "get_current_frequ": [11, 56], "get_supported_frequ": [11, 56], "buzzer": [11, 27, 41], "duti": [11, 16, 37, 55, 59, 99, 119], "resonant_freq": [11, 55], "imu": [11, 80], "acceleration_mg": [11, 70], "angular_rate_mdp": [11, 70], "temperature_c": [11, 70], "roll": [11, 70, 80, 99], "pitch": [11, 70, 125], "rpc": [11, 27], "get_byt": [11, 78], "put_byt": [11, 78], "stream_read": [11, 78], "stream_writ": [11, 78], "rpc_master": 11, "rpc_slave": 11, "register_callback": [11, 78], "schedule_callback": [11, 78], "setup_loop_callback": [11, 78], "rpc_can_mast": 11, "master": [11, 35, 93, 97, 119], "rpc_can_slav": 11, "slave": [11, 93, 119], "rpc_i2c_mast": 11, "rpc_i2c_slav": 11, "rpc_spi_mast": 11, "rpc_spi_slav": 11, "rpc_uart_mast": 11, "rpc_uart_slav": 11, "rtsp": [11, 27], "rtsp_server": 11, "register_setup_cb": [11, 79], "register_play_cb": [11, 79], "register_pause_cb": [11, 79], "register_teardown_cb": [11, 79], "omv": [11, 27], "version_major": [11, 77], "version_minor": [11, 77], "version_patch": [11, 77], "version_str": [11, 77], "arch": [11, 77, 155], "board_typ": [11, 77], "board_id": [11, 77], "disable_fb": [11, 77], "gt911": [11, 27], "touch": [11, 27, 154, 157], "screen": [11, 27, 58, 59, 60, 62, 63, 64, 83], "_read_reg": [11, 68], "_write_reg": [11, 68], "read_point": [11, 68], "ft5x06": [11, 27], "get_gestur": [11, 66], "get_point": [11, 66], "get_point_flag": [11, 66], "get_point_id": [11, 66], "get_point_x": [11, 66], "get_point_i": [11, 66], "touch_callback": [11, 66, 68], "update_point": [11, 66], "lcd_gesture_move_up": [11, 66], "lcd_gesture_move_left": [11, 66], "lcd_gesture_move_down": [11, 66], "lcd_gesture_move_right": [11, 66], "lcd_gesture_zoom_in": [11, 66], "lcd_gesture_zoom_out": [11, 66], "lcd_gesture_non": [11, 66], "lcd_flag_press": [11, 66], "lcd_flag_releas": [11, 66], "lcd_flag_mov": [11, 66], "tfp410": [11, 27, 63], "dvi": [11, 27], "hdmi": [11, 27, 57, 61, 63], "hotplug_callback": [11, 81], "third": [11, 69, 103, 113, 133, 147, 152, 154, 155, 156, 158], "parti": [11, 69, 152, 154, 156, 159], "ulab": [11, 72], "numpi": [11, 54, 72, 75], "manipul": [11, 69, 160], "pid": [11, 87, 154], "proport": [11, 160], "integr": [11, 46, 109, 127, 151, 154, 160], "bno055": 11, "ssd1306": 11, "ol": 11, "tb6612": 11, "stepper": 11, "motor": [11, 98, 99, 128], "modbu": 11, "mqtt": 11, "vl53l1x": 11, "glossari": [11, 150], "aka": [11, 52, 53, 150, 159], "indent": 11, "past": [11, 69, 127, 147], "boot": [11, 17, 47, 87, 122, 127, 129, 131, 148, 150, 154, 157, 158], "hard": [11, 30, 38, 43, 80, 87, 102, 109, 112, 118, 132, 151, 154], "_boot": 11, "brick": [11, 17], "remot": [11, 16, 33, 78, 79, 84, 89, 107, 127, 140, 149, 150, 157], "mpremot": [11, 108, 149, 150, 159], "shortcut": [11, 38, 107, 127, 131], "mpy": [11, 45, 111, 147, 149, 150, 152, 153, 154, 156, 158, 159], "qstr": [11, 147, 160], "tip": [11, 127, 139, 159], "emerg": [11, 47], "isr": [11, 48], "overcom": [11, 137, 140], "design": [11, 78, 112, 115, 128, 132, 147, 148, 149], "reentranc": [11, 48], "critic": [11, 30, 47, 48, 87, 160], "maximis": [11, 147, 150], "alloc": [11, 16, 20, 23, 33, 38, 42, 43, 47, 65, 69, 80, 82, 88, 89, 99, 106, 112, 113, 132, 147, 149, 151, 155], "slowest": 11, "declar": [11, 47, 138, 147, 151], "cach": [11, 49, 113], "emitt": 11, "viper": [11, 155], "microcontrol": [11, 30, 73, 78, 80, 109, 111, 118, 124, 128, 132, 149, 150, 153, 160], "fragment": [11, 23, 28, 80, 85, 116, 132, 149, 151, 153, 160], "postscript": 11, "footnot": 11, "manifest": [11, 129, 150, 156], "add_librari": [11, 152], "metadata": [11, 152], "freeze_as_str": [11, 152], "freeze_as_mpi": [11, 152], "freeze_mpi": [11, 152], "mip": [11, 149, 154], "publish": [11, 117], "inlin": [11, 138, 150, 151, 160], "assembl": [11, 137, 140, 144, 150, 151, 160], "thumb2": [11, 150], "architectur": [11, 41, 45, 77, 86, 123, 138, 147, 150, 155], "convent": [11, 97, 147, 154, 157], "instruct": [11, 87, 91, 136, 141, 145, 146, 147, 151, 160], "categori": [11, 160], "logic": [11, 33, 38, 41, 43, 62, 63, 64, 65, 69, 71, 79, 82, 83, 89, 95, 99, 106, 135, 138, 139, 149], "bitwis": [11, 16, 35, 102, 139], "subtract": [11, 69, 72, 96, 112, 135], "divis": 11, "apsr": [11, 137, 140], "branch": [11, 18, 135, 136, 139, 154, 156], "subroutin": 11, "push": [11, 26, 30, 87, 91, 95, 138, 139], "arm": [11, 134, 135, 136, 138, 139, 140, 141, 142, 144, 146, 149, 151], "fpu": 11, "direct": [11, 15, 16, 21, 30, 47, 52, 62, 63, 64, 65, 68, 69, 70, 82, 83, 88, 90, 92, 109, 112, 138, 139, 140, 160], "pyboard": [11, 14, 30, 35, 37, 46, 88, 89, 92, 95, 96, 100, 111, 118, 131, 132, 133, 137, 138, 147, 150, 151, 158, 160], "esp8266": [11, 30, 38, 39, 43, 44, 49, 157], "esp32": [11, 16, 30, 35, 38, 39, 43, 51, 152, 157], "fat": [11, 115, 122], "littlef": [11, 115], "hybrid": 11, "migrat": [11, 150], "guid": [11, 34, 41, 61, 73, 150, 156, 160], "overview": [11, 123], "readabl": [11, 138], "just": [11, 14, 16, 19, 28, 34, 39, 52, 62, 63, 64, 65, 69, 71, 77, 78, 79, 80, 81, 82, 83, 88, 107, 111, 112, 113, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 149, 151, 152, 154, 157, 160], "chain": [11, 20, 108], "rh": [11, 119], "subscript": [11, 16, 19, 30, 103, 109, 113, 160], "step": [11, 62, 63, 64, 69, 99, 103, 112, 129, 147, 158, 160], "behav": [11, 106, 108, 112, 158], "bit_length": 11, "No": [11, 33, 38, 47, 65, 73, 78, 80, 82, 89, 129, 148], "becom": [11, 14, 23, 30, 33, 35, 38, 47, 51, 52, 62, 63, 64, 65, 69, 71, 82, 83, 89, 100, 106, 127, 147, 154, 157, 159], "invalid": [11, 15, 87, 112, 147, 151], "its": [11, 12, 16, 18, 19, 23, 26, 27, 30, 32, 33, 34, 37, 40, 45, 46, 47, 51, 52, 65, 67, 69, 72, 78, 84, 85, 86, 87, 88, 89, 90, 93, 98, 106, 108, 111, 113, 115, 119, 123, 131, 134, 138, 140, 142, 147, 148, 149, 151, 152, 154, 155, 156, 159, 160], "resiz": [11, 33, 89], "endswith": 11, "subscr": 11, "ljust": 11, "rjust": 11, "rsplit": 11, "yet": [11, 12, 80, 153], "typecod": [11, 13, 90], "overflow": [11, 16, 19, 33, 35, 89, 112, 134, 135, 140], "throw": [11, 61, 91, 132], "serialis": [11, 29, 147], "getenv": 11, "word": [11, 35, 41, 73, 90, 97, 104, 109, 113, 136, 137, 141, 146, 147, 151, 158, 160], "few": [11, 27, 28, 41, 113, 119, 121, 122, 126, 127, 149, 151], "licens": [11, 152], "quick": [11, 107, 124, 139, 147, 149, 160], "openmvcam": 11, "sd": [11, 35, 80, 122, 129, 137, 147, 148], "card": [11, 80, 122, 129, 139, 147], "softwar": [11, 33, 34, 40, 41, 89, 91, 117, 123, 128, 160], "desktop": [11, 80, 123, 149], "raspberrypi": [11, 123], "menu": [11, 122, 123, 131], "edit": [11, 78, 118, 123, 129, 154], "viewer": [11, 123], "video": [11, 67, 69, 71, 79, 80, 122, 123], "As": [11, 16, 22, 38, 50, 52, 69, 78, 89, 104, 105, 107, 113, 115, 116, 122, 124, 125, 127, 132, 145, 147, 148, 151, 153, 154, 155, 156, 160], "protect": [11, 16, 48, 52, 122, 123], "onewir": 11, "dht": 11, "experiment": 12, "settl": [12, 80], "q": [13, 69, 110, 147], "latter": [13, 112, 116, 137], "entir": [13, 16, 27, 47, 69, 100, 104, 147, 148, 152, 154, 160], "grow": [13, 69, 80, 132, 160], "thrown": [13, 33, 78, 89, 151], "place": [13, 20, 21, 26, 27, 28, 33, 40, 44, 47, 69, 89, 100, 112, 134, 147, 151, 155, 159], "represent": [13, 15, 29, 107, 111, 149], "blink": [14, 78, 122], "period_m": 14, "led1": [14, 41], "led2": [14, 41], "700": 14, "400": [14, 30, 56, 90], "10_000": 14, "coro": 14, "associ": [14, 31, 34, 36, 38, 48, 76, 88, 91, 94, 95, 99, 107, 113, 117, 127, 151, 154, 159], "millisecond": [14, 16, 30, 33, 39, 42, 44, 61, 65, 69, 73, 78, 80, 82, 84, 87, 89, 93, 96, 97, 98, 100, 101, 102, 106, 107, 112, 119, 147, 160], "trap": 14, "caller": [14, 21, 115], "cleanup": 14, "return_except": 14, "promot": 14, "inject": [14, 154, 159], "synchronis": [14, 89, 151], "otherwis": [14, 16, 20, 30, 33, 34, 38, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 69, 72, 79, 80, 85, 87, 89, 90, 93, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 115, 117, 118, 122, 127, 135, 139, 152, 155, 157, 158, 159], "safe": [14, 47, 151], "alreadi": [14, 22, 28, 30, 34, 69, 80, 84, 87, 88, 90, 107, 115, 119, 127, 129, 147, 151, 154, 156, 157, 159], "immedi": [14, 33, 35, 38, 48, 73, 78, 89, 100, 102, 106, 108, 127, 134, 135, 141, 144, 146, 151, 154, 158, 159], "outsid": [14, 37, 47, 69, 78, 112, 147, 154], "possibli": [14, 80, 85, 115, 145, 160], "automat": [14, 16, 21, 23, 28, 33, 51, 54, 62, 63, 64, 65, 67, 69, 71, 72, 75, 78, 80, 82, 84, 87, 88, 89, 91, 95, 106, 107, 115, 116, 119, 122, 127, 129, 131, 147, 148, 149, 152, 154, 156], "upon": [14, 30, 42, 87, 111, 152, 158], "coordin": [14, 69, 76], "unlock": [14, 47, 48, 151], "atom": [14, 47, 151], "remain": [14, 34, 38, 49, 69, 89, 91, 92, 100, 108, 115, 147, 154, 158, 159], "host": [14, 84, 87, 102, 107, 114, 115, 148, 149, 154, 156], "transport": [14, 78, 108], "reader": 14, "writer": 14, "Will": [14, 47, 115], "could": [14, 27, 69, 86, 91, 95, 100, 113, 122, 128, 147, 149, 151, 156, 158], "made": [14, 16, 28, 32, 69, 89, 99, 104, 118, 132, 138, 147], "incom": [14, 16, 47, 100, 151, 158], "minimis": [14, 147, 151], "streamread": [14, 35], "streamwrit": [14, 35], "extra": [14, 21, 31, 33, 34, 40, 47, 80, 89, 93, 97, 100, 152], "peernam": 14, "eof": [14, 107], "encount": [14, 29, 78, 131, 151], "buf": [14, 16, 33, 34, 35, 40, 43, 47, 68, 87, 88, 89, 90, 92, 97, 100, 102, 107, 113, 115, 119, 147, 148, 151, 160], "eoferror": 14, "accumul": [14, 19, 54, 69], "sinc": [14, 23, 69, 87, 107, 112, 116, 122, 127, 128, 130, 132, 137], "through": [14, 25, 52, 69, 78, 90, 91, 95, 96, 98, 99, 108, 119, 122, 126, 127, 147, 151, 152, 160], "variou": [15, 19, 31, 49, 56, 73, 91, 105, 112, 113, 115, 151, 152, 154, 160], "hexadecim": 15, "suppli": [15, 38, 41, 69, 88, 95, 160], "invers": [15, 41, 46, 69, 112], "base64": 15, "conform": [15, 111, 113], "2045": 15, "3548": 15, "crc": [15, 97, 138], "checksum": [15, 24, 61, 116], "energi": 16, "intend": [16, 27, 37, 111, 112, 149, 158], "higher": [16, 21, 27, 28, 30, 37, 38, 41, 42, 47, 54, 65, 69, 76, 78, 80, 92, 112, 119, 140, 147, 151], "we": [16, 28, 69, 80, 99, 112, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133], "aiobl": [16, 154], "develop": [16, 28, 41, 112, 127, 129, 149, 152, 153, 154, 156, 157, 160], "subject": [16, 117, 151], "singleton": 16, "radio": [16, 49, 109], "param": [16, 33, 49, 51, 53, 89, 107], "quot": [16, 49, 53], "addr_typ": 16, "addr": [16, 34, 49, 70, 93, 113, 148], "addr_mod": 16, "0x00": [16, 40, 93], "public": 16, "0x01": [16, 93, 135], "0x02": 16, "rpa": 16, "0x03": 16, "nrpa": 16, "gap_nam": 16, "gap": 16, "0x1800": 16, "characterist": [16, 40, 158], "0x2a00": 16, "rxbuf": [16, 43], "bursti": 16, "abil": [16, 28, 115, 122, 127, 151, 153], "mtu": 16, "att": 16, "exchang": 16, "_irq_mtu_exchang": 16, "discov": [16, 27, 49], "mitm": 16, "capabl": [16, 30, 38, 49, 57, 119, 127, 147, 149, 151, 156], "_io_capability_display_onli": 16, "_io_capability_display_yesno": 16, "_io_capability_keyboard_onli": 16, "_io_capability_no_input_output": 16, "_io_capability_keyboard_displai": 16, "le_secur": 16, "le": [16, 140], "unnecessari": [16, 160], "adv_data": 16, "char_data": 16, "notify_data": 16, "entri": [16, 33, 53, 84, 85, 89, 111, 112, 156, 159], "ringbuff": [16, 47], "invoc": [16, 106], "connected_addr": 16, "matched_uuid": 16, "inspect": [16, 154, 155], "decid": 16, "elsewher": [16, 136, 160], "And": [16, 68, 78, 121, 124, 128, 131, 132, 133], "bt_irq": 16, "_irq_central_connect": 16, "conn_handl": 16, "elif": [16, 112], "_irq_central_disconnect": 16, "_irq_gatts_writ": 16, "written": [16, 20, 24, 28, 34, 35, 39, 43, 47, 90, 100, 102, 106, 107, 113, 115, 127, 151, 158, 160], "attr_handl": 16, "_irq_gatts_read_request": 16, "deni": [16, 151], "_irq_scan_result": 16, "adv_typ": 16, "_irq_scan_don": 16, "_irq_peripheral_connect": 16, "_irq_peripheral_disconnect": 16, "_irq_gattc_service_result": 16, "start_handl": 16, "end_handl": 16, "_irq_gattc_service_don": 16, "onc": [16, 19, 33, 34, 41, 42, 43, 44, 49, 53, 67, 69, 71, 72, 78, 79, 87, 107, 112, 115, 121, 122, 124, 127, 129, 130, 133, 147, 148, 154, 160], "discoveri": 16, "_irq_gattc_characteristic_result": 16, "value_handl": 16, "_irq_gattc_characteristic_don": 16, "_irq_gattc_descriptor_result": 16, "dsc_handl": 16, "_irq_gattc_descriptor_don": 16, "_irq_gattc_read_result": 16, "_irq_gattc_read_don": 16, "_irq_gattc_write_don": 16, "_irq_gattc_notifi": 16, "notifi": 16, "_irq_gattc_ind": 16, "_irq_gatts_indicate_don": 16, "acknowledg": [16, 158], "u": [16, 27, 69, 80, 87, 112, 122, 126, 157, 160], "_irq_l2cap_accept": 16, "reject": 16, "cid": 16, "psm": 16, "our_mtu": 16, "peer_mtu": 16, "_irq_l2cap_connect": 16, "_irq_l2cap_disconnect": 16, "attempt": [16, 30, 47, 53, 87, 112, 147, 148, 151, 160], "_irq_l2cap_recv": 16, "_irq_l2cap_send_readi": 16, "readi": [16, 32, 65, 80, 84, 93, 106, 107, 122, 127, 129, 151, 153, 154, 156, 159, 160], "transmit": [16, 30, 33, 34, 35, 43, 53, 69, 89, 100, 114, 124], "_irq_connection_upd": 16, "conn_interv": 16, "conn_lat": 16, "supervision_timeout": 16, "_irq_encryption_upd": 16, "key_siz": 16, "_irq_get_secret": 16, "th": 16, "sec_typ": 16, "_irq_set_secret": 16, "_irq_passkey_act": 16, "respond": [16, 34, 93, 151, 158], "passkei": 16, "action": [16, 117, 127, 129, 154, 157, 159], "_gatts_no_error": 16, "_gatts_error_read_not_permit": 16, "_gatts_error_write_not_permit": 16, "_gatts_error_insufficient_authent": 16, "0x05": 16, "_gatts_error_insufficient_author": 16, "0x08": [16, 34, 49], "_gatts_error_insufficient_encrypt": 16, "0x0f": [16, 49], "_passkey_action_non": 16, "_passkey_action_input": 16, "_passkey_action_displai": 16, "_passkey_action_numeric_comparison": 16, "firmwar": [16, 21, 24, 27, 30, 51, 52, 69, 72, 80, 84, 92, 109, 111, 116, 118, 122, 127, 129, 131, 138, 147, 148, 149, 152, 153, 156, 159], "interval_u": 16, "resp_data": 16, "interv": [16, 87, 103, 112, 114, 147, 151], "nearest": [16, 62, 63, 64, 65, 69, 71, 82, 83, 89], "625u": 16, "repli": [16, 53], "reus": [16, 33, 89, 147, 149], "resum": [16, 30, 154], "duration_m": 16, "1280000": 16, "window_u": 16, "11250": 16, "indefinit": [16, 30, 73, 87, 159], "background": [16, 35, 51, 69, 71, 80, 149, 154], "itself": [16, 21, 24, 27, 69, 78, 90, 104, 118, 134, 147, 151, 155, 159, 160], "adv_ind": 16, "scannabl": 16, "undirect": 16, "adv_direct_ind": 16, "adv_scan_ind": 16, "adv_nonconn_ind": 16, "0x04": 16, "scan_rsp": 16, "want": [16, 21, 41, 65, 67, 69, 71, 76, 78, 79, 80, 82, 92, 102, 112, 113, 119, 121, 122, 125, 127, 128, 129, 130, 131, 133, 148, 152, 154, 157, 158, 159], "scan_duration_m": 16, "2000": [16, 44, 69, 80, 93, 112, 119, 130, 160], "min_conn_interval_u": 16, "max_conn_interval_u": 16, "outstand": [16, 78], "earli": [16, 23, 112, 147], "chosen": [16, 97, 107], "typic": [16, 21, 24, 27, 30, 35, 37, 48, 49, 54, 55, 58, 59, 60, 69, 72, 78, 80, 84, 92, 108, 111, 112, 135, 140, 148, 149, 151, 152, 160], "30000": [16, 119], "50000": [16, 34], "microsecond": [16, 30, 34, 39, 80, 87, 89, 112, 119, 160], "shorter": [16, 21, 154], "throughput": 16, "expens": [16, 69, 122, 132], "usual": [16, 19, 22, 23, 28, 31, 34, 36, 37, 38, 40, 47, 48, 49, 50, 51, 53, 69, 88, 103, 108, 111, 112, 113, 115, 132, 140, 147, 148, 149, 151, 155, 156, 158, 159, 160], "act": [16, 31, 34, 43, 100, 102, 106, 124, 158], "wasn": 16, "themselv": [16, 122, 127, 147], "These": [16, 28, 34, 38, 40, 47, 49, 53, 69, 92, 109, 127, 134, 135, 137, 138, 139, 140, 141, 142, 144, 146, 147, 151, 152, 155, 160], "registr": [16, 139], "anyth": [16, 38, 41, 62, 63, 64, 65, 69, 71, 72, 78, 82, 83, 95, 100, 122, 128, 129, 147, 160], "char_handl": 16, "services_definit": 16, "OR": [16, 38, 62, 63, 64, 65, 69, 71, 82, 83, 106, 117], "combin": [16, 28, 34, 73, 106, 107, 109, 148, 154], "privaci": 16, "flatten": 16, "heart": [16, 72], "rate": [16, 34, 35, 40, 43, 62, 63, 64, 65, 69, 70, 78, 80, 82, 88, 89, 93, 96, 97, 99, 100, 114, 119, 151, 157, 159], "nordic": 16, "hr_uuid": 16, "0x180d": 16, "hr_char": 16, "0x2a37": 16, "flag_read": 16, "flag_notifi": 16, "hr_servic": 16, "uart_uuid": 16, "6e400001": 16, "b5a3": 16, "f393": 16, "e0a9": 16, "e50e24dcca9": 16, "uart_tx": 16, "6e400003": 16, "uart_rx": 16, "6e400002": 16, "flag_writ": 16, "uart_servic": 16, "hr": 16, "bt": 16, "_flag_broadcast": 16, "0x0001": 16, "_flag_read": 16, "0x0002": 16, "_flag_write_no_respons": 16, "0x0004": 16, "_flag_writ": 16, "0x0008": 16, "_flag_notifi": 16, "0x0010": 16, "_flag_ind": 16, "0x0020": 16, "_flag_authenticated_signed_writ": 16, "0x0040": 16, "_flag_aux_writ": 16, "0x0100": 16, "_flag_read_encrypt": 16, "0x0200": 16, "_flag_read_authent": 16, "0x0400": 16, "_flag_read_author": 16, "0x0800": 16, "_flag_write_encrypt": 16, "0x1000": [16, 138], "_flag_write_authent": 16, "0x2000": 16, "_flag_write_author": 16, "0x4000": [16, 85], "send_upd": 16, "subscrib": 16, "notif": [16, 122, 126], "regardless": [16, 30, 41, 49, 100, 106, 142, 148, 154, 160], "largest": 16, "At": [16, 33, 34, 35, 40, 43, 84, 89, 93, 97, 99, 100, 102, 147, 148, 158], "someth": [16, 28, 69, 78, 91, 122, 133, 154, 158], "0xffff": [16, 89, 96, 99, 144], "confirm": [16, 109, 159], "bluekitchen": 16, "nimbl": 16, "multiplex": 16, "establish": [16, 79, 108, 160], "credit": 16, "unlik": [16, 41, 69, 78, 104, 107, 111, 113, 125, 137, 149, 158], "share": [16, 37, 40, 41, 49, 63, 67, 69, 71, 78, 80, 84, 99, 127, 138, 151], "independ": [16, 39, 55, 56, 69, 96, 113, 149, 151], "amount": [16, 21, 23, 28, 30, 47, 68, 69, 72, 73, 80, 99, 107, 122, 127, 147, 149, 151, 155, 156, 160], "consum": [16, 47, 147, 158], "chanc": 16, "peer": [16, 108], "unsuccess": 16, "twice": [16, 69, 122, 158, 160], "stall": [16, 100], "grant": [16, 117], "unabl": [16, 151], "those": [16, 31, 34, 38, 47, 48, 49, 69, 93, 104, 125, 127, 138, 150, 151, 160], "volatil": 16, "irk": 16, "prompt": [16, 111, 122, 131, 149, 154, 158], "shown": [16, 138], "0x2908": 16, "embed": [17, 27, 111, 112, 128, 136, 159, 160], "unhandl": [17, 111], "z": [18, 19, 21, 69, 70, 87, 135, 137, 140], "cosin": [18, 46], "exponenti": [18, 46, 69], "natur": [18, 37, 46, 69, 113, 135, 151], "logarithm": [18, 21, 46, 116], "cut": [18, 54, 78], "along": [18, 47, 62, 63, 64, 69, 78, 91, 124, 127, 131, 133, 138, 151], "axi": [18, 69], "phi": 18, "sine": [18, 46, 90], "ratio": [18, 37, 46, 62, 63, 64, 65, 69, 71, 78, 80, 82, 83], "circumfer": [18, 46], "diamet": [18, 46], "hold": [19, 28, 46, 47, 69, 80, 111, 112, 137, 149, 151, 155], "maxlen": [19, 102], "doubl": [19, 69, 80, 110, 138, 154], "bound": [19, 42, 47, 52, 69, 76, 84, 107, 127, 151, 160], "discard": [19, 135, 158], "opposit": [19, 69], "right": [19, 35, 66, 69, 70, 76, 104, 112, 113, 117, 122, 124, 127, 128, 129, 142, 151], "room": [19, 33, 80, 89, 112, 127], "effici": [19, 24, 28, 34, 40, 47, 104, 106, 107, 116, 147, 149, 160], "mytupl": 19, "t1": 19, "t2": 19, "rememb": [19, 65, 82, 118, 127], "benefit": [19, 128, 151, 152, 160], "k": [19, 154], "iv": 20, "suitabl": [20, 21, 25, 47, 50, 78, 151], "vice": [20, 37, 38, 47, 65], "versa": [20, 37, 38, 47, 65], "mode_ecb": 20, "electron": 20, "book": 20, "ecb": 20, "mode_cbc": 20, "cbc": 20, "mode_ctr": 20, "ctr": 20, "vector": [20, 34, 69], "in_buf": 20, "out_buf": 20, "newli": [20, 151], "mutabl": [20, 69, 93, 97, 101, 102, 111, 151], "commonli": [21, 38, 40, 51, 53, 116, 149, 151, 158], "archiv": [21, 116], "v1": [21, 27, 100, 110, 115, 116, 148, 155, 158], "micropy_py_defl": 21, "micropy_py_deflate_compress": 21, "own": [21, 69, 95, 98, 104, 106, 149, 152, 154, 160], "wbit": [21, 116], "1024": [21, 89, 116, 148], "inclus": [21, 34, 37, 89, 103, 112, 116], "32k": [21, 116], "256": [21, 35, 62, 63, 64, 65, 69, 71, 82, 83, 89, 97, 99, 148, 158], "kilobyt": [21, 113], "know": [21, 69, 122, 124, 127, 130, 132, 147, 159, 160], "bidirect": [21, 84], "gz": [21, 24, 131], "wb": [21, 24, 107], "etc": [21, 22, 24, 30, 38, 40, 41, 49, 51, 69, 72, 75, 78, 79, 80, 84, 95, 100, 104, 107, 108, 111, 112, 122, 127, 128, 130, 135, 148, 149, 152, 154, 156, 159], "rb": [21, 24, 69, 107], "becaus": [21, 28, 41, 47, 48, 49, 53, 56, 68, 69, 78, 106, 107, 108, 118, 122, 127, 132, 133, 135, 138, 139, 142, 147, 151, 154, 156, 158, 160], "sourc": [21, 24, 30, 31, 32, 36, 38, 39, 43, 47, 61, 65, 69, 71, 82, 84, 91, 96, 99, 112, 113, 116, 119, 122, 124, 125, 127, 129, 139, 147, 149, 151, 152, 154, 155, 156], "turn": [21, 33, 36, 40, 43, 62, 63, 64, 69, 80, 89, 93, 94, 97, 100, 119, 122, 125, 127, 128, 147, 152, 154, 158], "compressed_data": 21, "get_data_z": 21, "decompressed_data": 21, "uncompressed_data": 21, "get_data": 21, "de": [21, 90, 109, 122, 127, 149], "compressor": [21, 116], "slower": [21, 69, 80, 127, 156], "smaller": [21, 41, 69, 80, 90, 107, 111, 116, 147, 149, 160], "mid": 21, "decompressor": 21, "trivial": 21, "uncompress": [21, 67, 69], "unset": 21, "assum": [21, 34, 69, 91, 100, 106, 107, 112, 115, 122, 130, 135, 139, 154], "32kib": 21, "reason": [21, 28, 30, 33, 49, 56, 89, 107, 116, 122, 132, 137, 147, 149, 151], "kib": 21, "arbitrari": [21, 38, 40, 49, 91, 112, 113, 115, 138, 148, 149, 151], "consid": [21, 25, 30, 47, 69, 94, 113, 119, 147, 151, 160], "larg": [21, 69, 71, 72, 78, 80, 113, 122, 127, 132, 147, 155, 156], "enough": [21, 33, 54, 58, 80, 89, 125, 127, 149], "inventori": [22, 25, 107], "eexist": 22, "eagain": 22, "ansi": 22, "posix": [22, 48, 104, 106, 112, 115, 149], "mention": [22, 80, 88, 122, 151], "exc": [22, 111], "my_dir": 22, "trigger": [23, 30, 33, 38, 39, 65, 69, 80, 88, 89, 90, 91, 96, 99, 102, 147, 151, 154, 159, 160], "satisfi": [23, 89], "oom": 23, "intent": 23, "earlier": [23, 27, 69, 100, 112, 113, 154], "hope": 23, "heurist": 23, "measur": [23, 30, 37, 65, 69, 80, 87, 88, 99, 112, 119, 141, 146, 151, 160], "vari": [23, 28, 30, 53, 147, 151], "set_threshold": 23, "semant": [23, 106, 113], "conveni": [24, 34, 113, 116, 154], "frozen": [24, 111, 116, 129, 147, 149, 152, 159], "around": [24, 33, 42, 47, 66, 69, 72, 78, 89, 90, 99, 112, 127, 138, 151], "fileobj": 24, "footer": [24, 116], "512": [24, 65, 87, 89, 92, 96, 99, 115, 148], "compresslevel": 24, "mtime": [24, 85, 115], "guidanc": 24, "choos": [24, 49, 78, 84, 103, 118, 131, 132], "exact": [25, 69, 80, 84, 107, 112, 113, 127], "among": [25, 38, 49, 112, 159], "modern": [25, 28, 118, 122, 129, 149], "sha2": 25, "seri": [25, 69, 89, 109, 127, 151, 152, 153, 154], "purpos": [25, 38, 47, 69, 90, 98, 117, 121, 124, 125, 145, 149, 151, 159, 160], "constraint": [25, 27, 42, 112, 149, 151, 160], "internet": [25, 128, 149], "interoper": 25, "offer": [25, 41, 129, 147, 151], "hasher": 25, "fed": [25, 44, 147], "NOT": [25, 104, 107, 108, 117, 119], "achiev": [25, 28, 30, 37, 69, 90, 100, 116, 128, 138, 147, 151, 160], "essenti": [26, 151, 158, 159], "smallest": 26, "onto": [26, 27, 65, 69, 71, 82, 91, 122, 131, 138, 145], "mirror": [27, 62, 63, 64, 65, 69, 71, 80, 82, 83], "resourc": [27, 28, 65, 79, 82, 84, 107, 128, 147, 149], "chapter": [27, 150], "aspir": 27, "project": [27, 69, 132, 149, 152, 153], "With": [27, 30, 33, 37, 39, 40, 43, 46, 50, 80, 85, 88, 89, 93, 95, 96, 97, 100, 112, 115, 138], "pleas": [27, 34, 69, 78, 79, 119, 122, 124, 126, 127, 130], "unavail": [27, 85, 147], "pertain": 27, "ifi": 27, "philosophi": 27, "drop": [27, 69, 80, 88, 127, 138, 159], "locat": [27, 62, 63, 64, 65, 69, 82, 83, 87, 89, 93, 115, 127, 136, 140, 147, 151, 152, 154, 156, 160], "folder": [27, 127, 129, 131], "appli": [27, 31, 37, 49, 54, 62, 63, 64, 65, 68, 69, 71, 72, 75, 76, 78, 80, 82, 83, 90, 104, 122, 147, 149, 151, 152, 158, 160], "perhap": [27, 42], "wildcard": 27, "forc": [27, 33, 52, 65, 69, 80, 89, 99, 122, 147, 154], "temporarili": [27, 48, 78], "_path": 27, "extra_method": 27, "utim": [27, 119], "umodul": 27, "simplifi": [28, 111, 112, 151], "serv": [28, 43, 143, 149, 160], "foundat": 28, "concret": [28, 37, 49, 115], "adher": 28, "dichotomi": 28, "wise": [28, 69], "classif": 28, "somewhat": [28, 69, 147], "unbuff": [28, 107], "os": [28, 149], "rtose": [28, 149], "bufferbloat": 28, "preciou": 28, "introduc": [28, 147, 151, 153], "later": [28, 34, 47, 65, 69, 80, 93, 113, 118, 127, 150, 151], "But": [28, 41, 69, 112, 113, 127, 128, 132, 133], "ti": [28, 97], "buffered": 28, "incur": [28, 90], "short": [28, 30, 67, 69, 71, 107, 110, 128, 133, 149, 151, 157], "ask": [28, 106, 122, 126, 127], "similarli": [28, 87, 99, 138, 151, 152, 157], "suscept": 28, "guarante": [28, 40, 47, 107, 112, 151], "against": [28, 69, 78, 104, 108], "trait": 28, "concis": 28, "desir": [28, 88, 89, 95, 100], "strongli": 28, "advis": [28, 136], "favour": 28, "govern": 28, "peculiar": [28, 111, 150], "tricki": 28, "never": [28, 47, 65, 80, 88, 115, 127, 154, 159], "arriv": [28, 99, 100, 151], "whatev": [28, 62, 63, 64, 65, 69, 71, 72, 78, 80, 82, 83, 127], "lack": [28, 112, 151, 160], "clearli": 28, "polici": [28, 80, 107], "inde": 28, "op": [28, 47, 72, 90, 107, 115, 148, 160], "convolut": [28, 69], "undefin": [28, 34, 38, 49, 85, 107, 160], "matter": [28, 107], "prevail": 28, "reach": [28, 90, 99], "cours": [28, 113], "alloc_s": 28, "prealloc": [28, 160], "That": [28, 43, 69, 80, 112, 126, 127, 129, 132, 147], "lead": [28, 30, 38, 78, 112, 113, 148, 151, 152, 154, 160], "realloc": [28, 80], "hit": [28, 80], "situat": [28, 47, 113, 115, 132, 147, 148, 151], "item_separ": 29, "key_separ": 29, "deserialis": 29, "unrestrict": 30, "buse": [30, 33, 89, 97], "incorrectli": 30, "malfunct": [30, 113], "lockup": 30, "crash": [30, 44, 113, 127, 151, 159], "extrem": [30, 80, 90, 113, 128], "damag": [30, 117, 118], "physic": [30, 33, 34, 35, 38, 40, 41, 43, 50, 89, 93, 95, 97, 100, 115, 147, 159], "thin": 30, "shim": 30, "top": [30, 41, 62, 63, 64, 65, 69, 76, 80, 82, 83, 122, 127, 128, 132, 144, 155, 159], "notat": [30, 49, 69, 103, 107, 109, 113, 134, 135, 137, 140, 141, 142, 144, 146, 160], "0x48000000": 30, "0x18": 30, "0x10": [30, 49, 119, 135, 147], "pa2": [30, 109], "pa3": [30, 109], "manner": [30, 69, 87, 147], "button": [30, 41, 77, 79, 87, 122, 127, 130, 148, 159], "thing": [30, 69, 78, 95, 118, 122, 127, 128, 130, 132, 158], "compromis": 30, "unexpectedli": 30, "opaqu": [30, 62, 63, 64, 65, 69, 71, 80, 82, 83, 107, 112], "restor": [30, 47, 87, 138, 139, 145, 159], "hz": [30, 35, 37, 42, 55, 57, 65, 80, 82, 83, 88, 96, 99, 119], "hertz": [30, 62, 63, 64, 80], "gate": 30, "consumpt": [30, 87, 124, 128, 147, 159], "soon": [30, 38, 47, 66, 81, 100, 107, 151], "paus": [30, 43, 69, 79, 80, 87, 151, 154], "tight": [30, 69, 112], "significantli": [30, 152], "time_m": 30, "Such": [30, 47, 147, 151], "wake": [30, 38, 39, 70, 80, 87, 96, 159], "retent": 30, "subsystem": [30, 88, 147], "retain": [30, 113, 159], "distinguish": [30, 107, 111], "soc": [30, 42, 113], "substr": [30, 86, 104, 147], "pulse_level": 30, "timeout_u": 30, "1000000": [30, 40, 119, 158], "straight": [30, 127, 128, 129], "awai": [30, 41, 69, 80], "bang": [30, 34, 40, 41, 119], "four": [30, 33, 69, 89, 116, 119, 127, 135, 136, 137, 147, 155], "high_time_0": 30, "low_time_0": 30, "high_time_1": 30, "low_time_1": 30, "850": 30, "800": [30, 68], "450": 30, "ws2812": 30, "800khz": 30, "accuraci": [30, 37, 65, 90, 99, 119], "cortex": [30, 69, 84], "m0": 30, "48mhz": 30, "120n": 30, "closer": [30, 69, 153], "30n": 30, "neopixel": 30, "strip": [30, 127, 147], "voltag": [31, 33, 38, 58, 88, 89, 90, 119, 120, 151], "discretis": 31, "65535": [31, 33, 37, 89, 107, 119], "microvolt": 31, "sample_n": 31, "atten": 31, "aspect": [31, 62, 63, 64, 65, 69, 71, 80, 82, 83, 160], "attenu": 31, "taken": [31, 80, 104, 113, 151], "unit": [31, 35, 42, 43, 69, 85, 89, 100, 112, 125, 154], "done": [31, 43, 61, 72, 78, 80, 100, 108, 112, 122, 127, 128, 132, 137, 138, 147, 151, 153, 154, 156, 160], "finer": [32, 37], "togeth": [32, 38, 69, 127], "TO": [33, 117], "FOR": [33, 117], "THE": [33, 117], "rt1062": 33, "AND": [33, 117], "WILL": [33, 107], "BE": [33, 117], "OF": [33, 117], "classic": [33, 47, 80, 89, 138, 151], "transceiv": [33, 89], "124": [33, 89], "fifo": [33, 43, 47, 80, 89], "construct": [33, 34, 35, 37, 38, 40, 42, 43, 84, 89, 90, 93, 97, 99, 100, 115, 119, 138, 148, 149, 151], "initialis": [33, 34, 35, 38, 39, 40, 42, 43, 47, 49, 50, 88, 89, 90, 93, 95, 97, 99, 100, 103, 115, 138, 147, 148, 159], "p3": [33, 52, 64, 65, 78, 83, 97, 119, 124], "p1": [33, 52, 65, 68, 69, 83, 97, 100, 119, 148], "auto_restart": [33, 89], "baudrat": [33, 40, 43, 78, 89, 93, 97, 100, 119, 133, 157], "particip": [33, 89], "go": [33, 34, 62, 63, 64, 69, 78, 89, 91, 95, 100, 120, 121, 124, 128, 130, 132, 160], "tec": [33, 89], "rec": [33, 89], "96": [33, 87, 89], "passiv": [33, 89], "fill": [33, 35, 54, 62, 63, 64, 65, 69, 71, 78, 80, 82, 83, 89, 93, 97, 101, 102, 127, 160], "entert": [33, 89], "pend": [33, 69, 89, 100, 102], "bank": [33, 89], "rtr": [33, 89], "extfram": [33, 89], "boolean": [33, 38, 41, 49, 52, 53, 69, 89, 95, 151, 160], "transmiss": [33, 43, 89, 90, 100], "5000": [33, 37, 44, 78, 80, 89, 93, 97, 101, 102, 114, 119], "five": [33, 53, 85, 89], "fmi": [33, 89], "fifth": [33, 89], "inplac": [33, 40, 89, 93], "subsequ": [33, 47, 89, 100, 107, 135, 136, 138, 147, 154, 156], "lst": [33, 89], "shall": [33, 42, 89, 117], "dlc": [33, 89], "unus": [33, 69, 89, 115, 132, 149], "fun": [33, 80, 89, 95, 99], "lost": [33, 52, 89, 122, 134, 151], "cb0": [33, 89], "scl": [34, 78, 93, 119], "sda": [34, 78, 93, 95, 119], "attach": [34, 38, 43, 61, 65, 80, 82, 83, 93, 105, 109, 122, 127, 129], "primarili": [34, 40, 127], "circuitri": 34, "resistor": [34, 38, 91, 95, 119, 121], "kohm": 34, "vcc": 34, "wrong": [34, 71, 113, 135], "often": [34, 47, 91, 156, 157], "breakout": 34, "rule": [34, 160], "troubl": 34, "excel": 34, "adafruit": [34, 149], "400000": [34, 40, 93, 119], "400khz": [34, 40], "x10": 34, "transact": 34, "stretch": [34, 62, 63, 64, 65, 69, 71, 82, 83], "held": 34, "etimedout": 34, "lower": [34, 37, 40, 49, 62, 63, 64, 65, 69, 71, 76, 80, 82, 83, 93, 96, 107, 122, 140, 151, 155, 160], "0x77": 34, "transit": [34, 99], "nack": 34, "ack": 34, "nbyte": [34, 40, 43, 47, 100, 102, 107, 136], "transfer": [34, 35, 40, 43, 45, 78, 90, 93, 97, 138, 140, 149, 158], "sequenti": [34, 149, 154], "contribut": 34, "memaddr": [34, 93], "addrsiz": 34, "synchron": [35, 40, 78, 98, 109, 119], "sck": [35, 40, 97, 119], "technic": [35, 160], "preview": [35, 111, 153], "feedback": [35, 127], "encourag": 35, "sck_pin": 35, "ws_pin": 35, "sd_pin": 35, "y6": [35, 89], "y5": [35, 89, 95], "y8": 35, "audio_out": 35, "44100": 35, "ibuf": 35, "20000": [35, 93, 119], "audio_in": 35, "22050": 35, "num_written": 35, "num_read": 35, "i2s_callback": 35, "swriter": 35, "sreader": 35, "mck": 35, "dma": [35, 90, 93], "underflow": 35, "deiniti": [35, 58, 59, 65, 82, 83], "littl": [35, 52, 69, 100, 110, 111, 113, 128, 133, 136, 138, 147, 158], "endian": [35, 100, 110, 113, 133, 136, 158], "preced": [35, 155], "volum": [35, 55, 122, 132, 147], "6db": 35, "led_r": 36, "led_green": 36, "led_blu": 36, "pin_nam": [36, 95], "color": [36, 62, 63, 64, 65, 67, 69, 71, 80, 82, 83, 118, 127], "8192": [37, 90], "32768": [37, 96], "reinitialis": [37, 90], "200u": 37, "5u": 37, "3000": 37, "3u": 37, "dest": [37, 84, 154, 157], "entiti": 37, "enhanc": 37, "discret": 37, "divid": [37, 69, 72, 88, 89, 97, 99], "80mhz": 37, "300khz": 37, "80000000": 37, "300000": 37, "266": 37, "267": 37, "299625": 37, "300751": 37, "rp2040": [37, 43, 44, 154], "granular": 37, "averag": [37, 112, 149], "cost": [37, 41, 64, 69, 78, 80, 83, 132, 147, 160], "spectral": 37, "puriti": 37, "interdepend": 37, "lowest": [37, 41, 80], "insignific": 37, "300_000": 37, "unambigu": 38, "certain": [38, 99, 107, 115, 139, 148, 152, 160], "p0": [38, 52, 64, 65, 83, 97, 100, 119, 121, 124], "p2": [38, 52, 64, 65, 68, 69, 83, 97, 100, 119, 148], "reconfigur": [38, 43, 44, 159], "mandatori": 38, "imped": [38, 90], "unchang": [38, 108], "strength": [38, 52, 53, 58, 59, 69], "rest": [38, 69, 89, 129, 152, 155, 159], "omit": [38, 41, 97, 98, 107, 149, 151, 157, 160], "edg": [38, 40, 69, 78, 91, 97, 99, 119], "rise": [38, 91, 99], "ed": [38, 69, 107], "mimxrt": [38, 39, 43, 50], "nrf": [38, 43, 157], "renesa": [38, 39, 43], "ra": [38, 39, 43, 158], "rp2": [38, 43, 51, 152], "samd": [38, 39, 43], "cc3200": [38, 39, 43, 53], "track": [39, 47, 66, 69, 80, 96, 112, 127, 130], "datetimetupl": [39, 96], "year": [39, 96, 112], "dai": [39, 87, 96], "weekdai": [39, 96, 112], "hour": [39, 96, 112, 126], "minut": [39, 87, 96, 112, 126], "subsecond": [39, 96, 112], "tzinfo": 39, "eight": [39, 151], "wipi": [39, 40], "januari": 39, "2015": [39, 158], "time_in_m": 39, "alarm_id": 39, "expir": [39, 42, 44], "persist": [39, 92, 148, 160], "2048": [39, 90], "mosi": [40, 78, 97, 119], "miso": [40, 78, 97, 119], "4th": 40, "chip": [40, 52, 62, 63, 64, 68, 81, 88, 125, 138, 147, 160], "12345678": [40, 119], "deselect": 40, "rxdata": 40, "0x42": [40, 93, 119], "txdata": 40, "simultan": 40, "500000": [40, 119], "firstbit": [40, 97], "sit": [40, 97, 130], "bitbang": 40, "write_buf": 40, "read_buf": 40, "deassert": 41, "seem": [41, 112], "major": [41, 52, 69, 77, 111, 149, 153, 155], "goal": [41, 128, 153], "relai": 41, "nice": [41, 127], "suppos": [41, 112, 113], "led1_pin": 41, "led2_pin": 41, "light": [41, 69, 80, 94, 122, 127], "ll": [41, 69, 80, 92, 122, 124, 127, 130, 131, 132, 133, 157, 158], "segment": [41, 69, 89, 119, 125, 132], "reed": 41, "moistur": 41, "flame": 41, "detector": [41, 69, 159], "come": [41, 69, 91, 95, 113, 122, 131, 147, 155, 160], "minor": [41, 52, 69, 77, 111, 155], "doubt": 41, "unexcit": 41, "enjoi": 41, "frustrat": 41, "fact": [41, 80, 138, 147], "simpli": [41, 122, 129, 131, 138, 148], "slightli": 41, "pin_obj": 41, "pin_argu": 41, "univers": [41, 149, 160], "skip": [41, 69, 80, 118, 154, 159, 160], "intermedi": [41, 113], "inact": [41, 49, 50, 99], "deactiv": [41, 49, 52, 53], "deal": [42, 69, 80, 112, 117, 147, 151], "heterogen": 42, "kind": [42, 49, 69, 107, 117], "greatli": [42, 132], "baselin": 42, "mycallback": 42, "1khz": 42, "tim": [42, 88, 99, 119, 151], "1000": [42, 49, 61, 69, 78, 79, 87, 93, 99, 100, 107, 111, 119, 133, 151, 160], "100m": [42, 112], "shot": [42, 106], "fire": [42, 109], "1000m": 42, "upper": [42, 69], "nonetyp": 42, "isn": [42, 69, 122, 128, 132, 152, 160], "deinitialis": [42, 99], "usart": [43, 100], "confus": [43, 100, 151], "9600": [43, 100, 119], "pariti": [43, 100], "odd": [43, 69, 100, 103], "txbuf": 43, "timeout_char": [43, 100, 119, 133], "inv_tx": 43, "inv_rx": 43, "bitmask": [43, 69], "suffici": [43, 100], "fly": 43, "sophist": [43, 156], "pollin": [43, 106, 107], "break": [43, 78, 99, 100, 102, 122, 127, 153, 158], "baud": [43, 78, 89, 119, 157, 159], "tell": [43, 69, 75, 79, 112, 122, 133], "ongo": 43, "goe": [43, 62, 63, 64, 69, 99, 147, 158], "ye": [43, 73, 122, 128, 132, 148], "stm32f4xx": [43, 113], "recover": [44, 160], "8388": 44, "sensibl": [44, 93, 97], "hyperbol": 46, "tangent": 46, "princip": [46, 151], "infin": [46, 69], "complementari": [46, 99, 119], "decompos": 46, "mantissa": 46, "finit": [46, 47], "infinit": [46, 69, 80, 127, 130, 159], "const_x": 47, "const_i": 47, "hand": [47, 88, 104, 122, 127], "begin": [47, 69, 78, 87, 152, 158, 160], "hidden": [47, 49, 53, 127], "recognis": [47, 115], "mainli": [47, 148], "bytecod": [47, 111, 147, 149, 151, 152, 155, 156, 160], "particularli": [47, 69, 151], "ie": [47, 158], "former": 47, "forcefulli": 47, "micropy_py_micropython_heap_lock": 47, "earliest": 47, "preempt": [47, 147, 151], "opcod": [47, 160], "fundament": 47, "region": [47, 49, 58, 59, 62, 63, 64, 65, 69, 71, 75, 76, 80, 82, 83, 115, 147, 149], "gil": 47, "solut": [47, 107, 147, 151], "variant": [47, 49, 111, 115, 140, 149], "account": [47, 126, 129], "pre": [47, 69, 72, 80, 111, 147, 149, 151, 152, 154, 159, 160], "term": [48, 100, 107, 138, 147, 151, 158], "notion": [48, 85, 151], "mutual": [48, 151], "exclus": [48, 151, 154], "pthread_mutex_lock": 48, "pthread_mutex_unlock": 48, "pthread_mutex_trylock": 48, "mechan": [48, 91, 96, 138, 148, 149], "routin": [48, 151, 160], "data_readi": 48, "defer": [48, 108, 151], "man": [48, 108], "page": [48, 89, 127, 139], "semaphor": 48, "geeksforgeek": 48, "stackoverflow": 48, "differencebetween": 48, "rout": [49, 132], "nic": [49, 50, 53], "addr4": [49, 50, 51, 154], "80": [49, 65, 69, 78, 89, 107, 127], "nhost": 49, "impli": [49, 117, 138, 147, 160], "is_act": [49, 52, 53], "service_id": 49, "primari": [49, 92, 99, 148, 153], "accompani": 49, "said": [49, 69, 80, 127, 129, 132], "medium": 49, "predefin": [49, 95, 113], "bssid": [49, 52, 53], "media": 49, "ssid": [49, 52, 53, 79], "link": [49, 50, 51, 53, 86, 107, 127, 138, 139, 140, 145, 154, 155], "technologi": [49, 53, 132], "sta": [49, 52, 53], "ap": [49, 52, 53, 154], "station": [49, 52, 53, 154], "dhcp4": 49, "ipv4": [49, 52, 107], "gatewai": [49, 50, 51, 52, 53], "dn": [49, 50, 51, 52, 53, 136], "dhcp": [49, 52, 53], "has_dhcp4": 49, "gw4": 49, "dhcp6": 49, "stateless": 49, "dhcpv6": 49, "autoconf6": 49, "ipv6": [49, 107], "router": 49, "has_autoconf6": 49, "192": [49, 50, 52, 53, 56], "168": [49, 50, 52, 53, 56, 99], "subnet": [49, 50, 51, 52, 53], "cidr": 49, "addr6": 49, "fe80": 49, "1234": [49, 97, 119], "5678": 49, "preferred_lifetim": 49, "valid_lifetim": 49, "slaac": 49, "lifetim": 49, "tent": 49, "probe": 49, "0x30": 49, "0x40": 49, "dealt": [49, 53], "formal": [49, 53, 160], "my": [49, 53, 69, 128, 152], "iso": 49, "3166": 49, "alpha": [49, 62, 63, 64, 65, 69, 71, 82, 83], "complianc": 49, "xx": [49, 52, 69], "worldwid": 49, "mdn": [49, 53], "domain": [49, 107], "aaaa": 49, "phy": [49, 50], "mode_11b": 49, "802": 49, "11b": 49, "mode_11g": 49, "11g": 49, "mode_11n": 49, "11n": 49, "phy_typ": 50, "board_default": 50, "phy_addr": 50, "ref_clk_mod": 50, "hardwir": 50, "config_paramet": [50, 51], "low_pow": 50, "phy_ksz8081": 50, "phy_dp83825": 50, "phy_dp83848": 50, "phy_lan8720": 50, "phy_rtl8211f": 50, "micropy_py_network_ppp_lwip": 51, "sure": [51, 69, 79, 88, 107, 118, 119, 122, 127, 131, 154, 155], "wheverv": 51, "proce": [51, 151], "cleanli": [51, 151, 159], "rxidl": 51, "necessari": [51, 58, 59, 69, 72, 75, 107, 115, 138, 147, 151, 160], "mode_st": 52, "p6": [52, 64, 119, 120, 124], "p7": [52, 64, 93, 98, 119, 124], "p8": [52, 64, 93, 98, 119, 124], "winc1500": [52, 127], "wep": [52, 53], "fw": 52, "reopen": 52, "sta_if": [52, 79, 154], "upstream": [52, 53], "ap_if": 52, "usocket": 52, "udp": [52, 107, 127], "adress": 52, "forev": [52, 54, 128], "ip_addr": 52, "subnet_addr": 52, "gateway_addr": 52, "dns_addr": 52, "xxx": [52, 147], "versu": [52, 62, 63, 64, 65, 69, 71, 72, 82, 83, 122, 132, 147], "author": [52, 117, 152], "revis": 52, "wpa": [52, 53], "psk": [52, 53], "wpa2": [52, 53], "enterpris": 52, "bsp": 52, "processor": [53, 69, 74, 84, 124, 132, 140, 151], "if_sta": [53, 154], "interface_id": 53, "if_ap": 53, "wireless": [53, 83, 127], "visibl": [53, 147, 159], "status": 53, "stat_idl": 53, "stat_connect": 53, "progress": [53, 147, 151, 153], "stat_wrong_password": 53, "incorrect": [53, 112], "stat_no_ap_found": 53, "stat_connect_fail": 53, "stat_got_ip": 53, "reconnect": [53, 122], "unlimit": 53, "txpower": 53, "dbm": 53, "pm": 53, "microphon": 54, "arduino": [54, 69, 80, 124, 127, 128], "portenta": [54, 69, 80], "nicla": [54, 80], "16000": [54, 99], "gain_db": [54, 80], "highpass": 54, "9883": 54, "mic": 54, "h7": [54, 56, 80, 89, 92, 100, 119, 129], "calucl": 54, "factor": [54, 69], "calcul": [54, 69, 89, 112, 151, 154], "pcmbuf": 54, "pcm": 54, "ndarrai": [54, 69, 72, 75], "infer": [54, 72], "who": [54, 69, 127], "amplitud": 55, "onboard": [55, 82, 118, 121, 127, 147], "percentag": [55, 89, 99], "defint": 55, "highest": [55, 69, 80, 112, 119], "4000": 55, "m4": [56, 69, 84, 119, 121, 122, 129], "supported_frequ": 56, "mhz": [56, 99, 119], "cpu_clk_in_mhz": 56, "hclk_in_mhz": 56, "pclk1_in_mhz": 56, "pclk2_in_mhz": 56, "120": [56, 65, 78, 80, 119], "144": 56, "216": 56, "m7": [56, 69, 93, 100, 119, 121, 122, 129], "240": [56, 68, 69, 83], "200": [56, 59, 69, 80, 90, 112, 119, 135], "480": [56, 68, 69], "rev": 56, "xy": [56, 119], "silicon": 56, "mipi": [57, 60, 62], "320x240": [57, 69, 80, 130], "frames": [57, 62, 63, 80], "240x320": 57, "480x272": 57, "480x128": 57, "640x480": [57, 80], "320x480": 57, "800x480": [57, 62, 63], "800x320": 57, "480x800": 57, "480x480": 57, "800x600": [57, 80], "1024x600": 57, "1024x768": [57, 80], "1280x1024": [57, 80], "1280x400": 57, "1600x1200": [57, 80], "1280x720": [57, 80], "1920x1080": [57, 80], "stm32h7": [57, 84, 132], "1080p": 57, "p5": [58, 65, 88, 93, 100, 119, 124, 133], "linear": [58, 59, 69], "bright": [58, 59, 69, 80], "drastic": [58, 59], "cotnrol": 60, "display_control": 60, "displayport": 61, "cec": 61, "ddc": 61, "ddc_addr": 61, "0x50": 61, "talk": [61, 62, 69, 78, 121, 124, 127], "eeprom": 61, "edid": 61, "dst_addr": 61, "src_addr": 61, "packet": [61, 78, 87, 114], "recept": [61, 158], "anymor": [61, 66, 69, 81, 120, 122, 127], "portrait": [62, 63], "One": [62, 63, 89, 130, 151], "swap": [62, 63, 64, 65, 69, 71, 80, 82, 83], "destruct": [62, 63, 64, 147], "x_scale": [62, 63, 64, 65, 69, 82, 83], "y_scale": [62, 63, 64, 65, 69, 82, 83], "roi": [62, 63, 64, 65, 69, 71, 72, 75, 76, 80, 82, 83, 127], "rgb_channel": [62, 63, 64, 65, 69, 71, 82, 83], "color_palett": [62, 63, 64, 65, 69, 71, 82, 83], "alpha_palett": [62, 63, 64, 65, 69, 71, 82, 83], "disk": [62, 63, 64, 69, 71, 72, 118, 127, 147, 151], "draw": [62, 63, 64, 65, 71, 82], "jpg": [62, 63, 64, 69, 127], "flip": [62, 63, 64, 65, 69, 71, 80, 82, 83], "horizont": [62, 63, 64, 65, 67, 69, 71, 80, 82, 83, 127], "vertic": [62, 63, 64, 65, 67, 69, 71, 80, 82, 83, 127], "extract": [62, 63, 64, 65, 69, 71, 82, 83, 113, 129, 131, 149], "green": [62, 63, 64, 65, 69, 71, 80, 82, 83, 119, 122, 125, 127, 130, 151, 160], "black": [62, 63, 64, 69, 71, 80, 83, 125], "transpar": [62, 63, 64, 65, 69, 71, 82, 83, 115], "perfectli": [62, 63, 64, 69, 83], "palett": [62, 63, 64, 65, 69, 71, 80, 82, 83], "enum": [62, 63, 64, 65, 69, 71, 80, 82, 83], "lookup": [62, 63, 64, 65, 69, 71, 82, 83, 113, 147, 160], "downscal": [62, 63, 64, 65, 69, 71, 82, 83], "neighbor": [62, 63, 64, 65, 69, 71, 82, 83], "drawn": [62, 63, 64, 65, 69, 71, 82, 83], "90": [62, 63, 64, 65, 69, 70, 71, 79, 80, 82, 83, 98, 119], "180": [62, 63, 64, 65, 69, 70, 71, 80, 82, 83], "270": [62, 63, 64, 65, 69, 70, 71, 80, 82, 83], "display_off": [62, 63, 64], "white": [62, 63, 64, 69, 80, 127, 128], "dim": [62, 63, 64, 125], "cmd": [62, 64, 92], "dc": 62, "display_on": 63, "databu": 63, "128x160": [64, 80], "160": [64, 65, 69], "red": [64, 69, 80, 119, 122, 125, 128, 151], "blue": [64, 69, 80, 119, 122, 125], "our": [64, 69, 80, 99, 122, 125, 126, 127, 128, 129, 131, 132], "3x": [64, 83], "sdram": [64, 80], "tripl": [64, 65, 80, 83], "img": [65, 69, 82, 130], "ta": 65, "ir": [65, 119, 125], "to_min": [65, 82], "to_max": [65, 82], "ambient": [65, 88], "temperatur": [65, 70, 80, 88, 119, 147], "2f": [65, 82, 147], "seen": [65, 82, 91, 115, 147], "thermopil": [65, 82], "p4": [65, 93, 100, 119, 124, 133, 160], "16x4": 65, "32x24": 65, "16x12": 65, "8x8": [65, 82], "80x60": [65, 69, 80], "flir": [65, 69, 80], "160x120": [65, 80], "950c": 65, "750c": 65, "600c": 65, "450c": 65, "300c": 65, "80c": 65, "140c": 65, "400c": 65, "125": [65, 89], "kb": [65, 80, 83, 122], "cb": [65, 78, 79, 80, 151], "nomial": 65, "flat": [65, 69], "ffc": 65, "celsiu": [65, 70, 80], "destin": [65, 69, 71, 82, 84, 107, 140, 144, 154, 156], "clip": [65, 67, 69, 71, 82], "seamlessli": [65, 69, 82], "modif": [65, 69, 82, 115, 151], "x_size": [65, 82], "y_size": [65, 82], "pixformat": [65, 69, 80, 82], "copy_to_fb": [65, 69, 82], "mlx90621": 65, "refactor": [66, 81], "i2c_addr": [66, 81], "0x38": 66, "lcd_gesture_": 66, "lcd_flag_": 66, "gestur": 66, "zoom": [66, 69, 80, 127], "press": [66, 127, 147, 148, 154, 158, 159], "playback": 67, "had": [67, 80, 151, 158], "centi": 67, "viewabl": [67, 71], "400_000": [68, 119], "reset_pin": 68, "irq_pin": 68, "touch_point": 68, "0x5d": 68, "reserve_x": 68, "reserve_i": 68, "reverse_axi": 68, "stio": 68, "refresh_r": 68, "accord": [68, 88, 110, 134, 151, 156], "pressur": [68, 147], "correl": [68, 69], "binary_image_valu": 69, "rgb888": [69, 75], "lab": [69, 127], "yuv": [69, 127], "grayscale_valu": 69, "rgb_tupl": 69, "lab_tupl": 69, "yuv_tupl": 69, "descritor0": 69, "descriptor1": 69, "70": 69, "filter_outli": 69, "lbp": 69, "metric": 69, "orb": 69, "ambigu": 69, "tighten": [69, 122], "outlier": 69, "haar": 69, "cascad": 69, "stage": [69, 160], "frontalfac": 69, "frontal": 69, "face": [69, 70, 128], "ey": [69, 122, 127], "googl": 69, "someon": 69, "opencv": [69, 128], "lot": [69, 78, 87, 127, 132], "Then": [69, 89, 112, 125, 147, 152, 158], "contrast": [69, 80], "lighter": 69, "train": [69, 73, 74, 75], "hundr": 69, "pictur": [69, 80, 122, 127, 130], "cat": [69, 154, 157], "deviat": [69, 75], "ssim": 69, "dsim": 69, "cdf": 69, "cross": [69, 147, 149, 152, 155], "distribut": [69, 117, 127, 149], "ruin": 69, "otsu": 69, "halv": 69, "quartil": 69, "get_stat": 69, "l_": 69, "a_": 69, "b_": 69, "127": [69, 90, 107], "necessarili": 69, "lie": [69, 142], "box": [69, 76, 122, 127], "centroid": 69, "pencil": 69, "pen": 69, "shortest": [69, 104], "ellips": 69, "ry": 69, "hough": 69, "transform": 69, "179": 69, "radiu": [69, 80], "url": [69, 105, 107, 149, 156], "qr": 69, "plan": [69, 124, 127], "seriou": [69, 128], "kanji": 69, "yourself": [69, 127, 153], "treat": [69, 90, 104, 107, 112, 118, 134], "241": 69, "2319": 69, "586": 69, "511": [69, 96], "tag": [69, 155, 156], "refin": 69, "unknown": [69, 85], "plai": [69, 78, 80, 127], "eas": 69, "front": [69, 122, 125, 128], "plane": 69, "scanlin": 69, "increment": [69, 151, 158], "estim": 69, "bpp": 69, "meta": 69, "bmp": [69, 127], "pgm": 69, "ppm": [69, 96], "veru": 69, "shape": [69, 72], "blank": [69, 127, 158], "rgbtupl": 69, "debay": 69, "dtype": 69, "bitmap": [69, 80], "deep": [69, 87, 159], "becuas": 69, "quit": [69, 118, 124], "easili": [69, 80, 88, 122, 127, 130, 132, 133, 149], "rainbow": 69, "ironbow": 69, "dark": [69, 125], "encode_for_id": 69, "subsampl": 69, "x0": 69, "y0": 69, "thick": 69, "yc": 69, "x_space": 69, "y_space": 69, "mono_spac": 69, "char_rot": 69, "char_hmirror": 69, "char_vflip": 69, "string_rot": 69, "string_hmirror": 69, "string_vflip": 69, "8x10": 69, "cursor": [69, 127, 158], "decreas": [69, 158], "cahract": 69, "terribl": [69, 127], "arrow": [69, 130], "coner": 69, "x3": [69, 95, 99], "y3": [69, 89], "x4": 69, "y4": [69, 89], "rotation_angle_in_degre": 69, "glyph": 69, "cirl": 69, "seed_threshold": 69, "05": 69, "floating_threshold": 69, "clear_background": 69, "flood": 69, "did": [69, 133], "rectangular": 69, "radius_x": 69, "radius_i": 69, "lo": [69, 78], "hi": [69, 128, 140], "l_lo": 69, "l_hi": 69, "a_lo": 69, "a_hi": 69, "b_lo": 69, "b_hi": 69, "click": [69, 79, 122, 127, 130, 131], "drag": [69, 127, 131], "editor": [69, 127, 147, 154], "gui": 69, "slider": 69, "untouch": [69, 115], "binar": 69, "datatyp": 69, "ANDs": 69, "scalar": [69, 113], "nand": 69, "ORs": 69, "nor": [69, 80, 137, 147], "xor": 69, "xnor": 69, "grai": 69, "funciton": 69, "matric": 69, "rr": 69, "rg": 69, "gr": [69, 80], "gg": 69, "gb": [69, 80], "br": [69, 89], "bg": 69, "ro": 69, "bo": 69, "3x3": 69, "3x4": 69, "weight": [69, 72], "Or": [69, 84, 90, 113, 128, 154], "whole": [69, 71, 89, 102, 122, 127], "quickli": [69, 75, 78, 80, 98, 118, 122, 127, 128, 129, 132, 149, 151, 157], "darker": 69, "brighter": 69, "remap": [69, 76], "diagon": 69, "unmodif": 69, "this_imag": 69, "clip_limit": 69, "qualiz": 69, "convolv": 69, "neighbour": 69, "eros": 69, "blur": 69, "5x5": 69, "sharpest": 69, "smooth": [69, 96], "surfac": 69, "slow": [69, 78, 80, 96, 127, 132, 151, 152], "50th": 69, "75": [69, 78, 89], "great": [69, 99, 132], "artifact": 69, "bia": [69, 80], "neighborhood": 69, "mix": 69, "mul": [69, 134], "1d": 69, "2d": [69, 128], "adjust": [69, 80, 88, 96], "noth": [69, 83, 102, 127, 130, 160], "unsharp": 69, "guassian": 69, "sharp": 69, "sharpen": 69, "unthreshold": 69, "color_sigma": 69, "space_sigma": 69, "cartessian": 69, "x_corr": 69, "y_corr": 69, "un": 69, "fishey": 69, "distort": 69, "fov": 69, "perspect": [69, 80], "3d": 69, "spin": [69, 128], "approach": [69, 128, 147, 151, 156, 160], "viewport": 69, "homographi": 69, "image_width": 69, "image_height": 69, "fourth": [69, 111], "let": [69, 80, 112, 122, 124, 127, 130, 133, 160], "bird": 69, "top_tilt": 69, "bottom_tilt": 69, "tilt": 69, "dssim": 69, "similiari": 69, "structual": 69, "disimilar": 69, "invok": [69, 127, 147, 154, 160], "get_hist": 69, "historgram": 69, "motion": [69, 80, 87], "differenc": 69, "x_stride": 69, "y_stride": 69, "area_threshold": 69, "pixels_threshold": 69, "robust": [69, 78, 122, 158, 159], "regress": 69, "theil": 69, "sen": 69, "slope": 69, "blog": 69, "margin": [69, 127], "threshold_cb": 69, "merge_cb": 69, "x_hist_bins_max": 69, "y_hist_bins_max": 69, "intersect": 69, "x_histogram": 69, "y_histogram": 69, "theta_margin": 69, "rho_margin": 69, "bulki": 69, "sobel": 69, "apart": [69, 112], "gradient": 69, "clean": [69, 122, 127, 129, 154], "merge_dist": 69, "max_theta_differ": 69, "segement": 69, "seper": 69, "lsd": 69, "jump": [69, 89, 140], "x_margin": 69, "y_margin": 69, "r_margin": 69, "r_min": 69, "r_max": 69, "r_step": 69, "10000": [69, 119, 147, 160], "quad": [69, 138], "shear": 69, "slide": 69, "scene": 69, "flatter": 69, "undo": [69, 127, 158], "barrel": 69, "narrow": 69, "lens": 69, "fx": 69, "fy": 69, "farther": 69, "wors": 69, "warp": 69, "focal": 69, "printabl": [69, 154], "x11": 69, "984": 69, "656": 69, "mm": [69, 82], "multipli": [69, 72, 89, 154], "952": 69, "effort": [69, 127], "datamatric": 69, "spend": 69, "640": 69, "blurri": 69, "rss": 69, "templat": [69, 115], "template_roi": 69, "optic": 69, "arround": 69, "repsons": [69, 78], "tri": [69, 80, 86, 107, 139, 147, 151, 158, 160], "consider": [69, 160], "serach_ex": 69, "poorer": 69, "pupil": 69, "scale_factor": 69, "max_keypoint": 69, "corner_detector": 69, "agast": 69, "FOr": 69, "edge_typ": 69, "canni": 69, "hog": 69, "graidient": 69, "max_dispar": 69, "stero": 69, "dispar": 69, "reprsent": 69, "640x240": 69, "camrea": 69, "useless": 69, "algorith": 69, "nonsens": 69, "simd": 69, "toi": 69, "wheel": 69, "upscal": 69, "visual": [69, 127], "higest": 69, "canva": 69, "afterward": [69, 78, 80, 131, 151], "completlei": 69, "cover": [69, 113, 123, 127, 138, 147, 151, 158, 160], "ORed": [69, 113], "player": [69, 127], "tag1h5": 69, "dof": 70, "lsm6ds3": 70, "acceler": [70, 72, 98], "ly": 70, "bottom": [70, 76, 80, 122, 127, 132, 144], "angular": 70, "stand": [70, 152], "roat": 70, "upsid": 70, "tensorflow": [72, 73], "lite": [72, 73], "4d": 72, "tensor": [72, 75, 76], "leverag": [72, 132, 133], "cmsi": [72, 109], "nn": 72, "helium": 72, "etho": 72, "npu": 72, "rank": 72, "scipi": 72, "moment": [72, 97, 99, 119, 151], "load_to_fb": 72, "dealloc": [72, 80, 132], "rember": 72, "wherea": [72, 107, 138, 147, 154], "reshap": 72, "writeabl": 72, "arena": 72, "recogn": 73, "spoken": 73, "preprocessor": 73, "micro_speech": 73, "65": 73, "confid": [73, 76], "postprocessor": 74, "score": [74, 76], "anchor": [74, 104], "nms_threshold": 74, "nms_sigma": 74, "tflite": 75, "norm": 75, "456": [75, 93], "406": 75, "229": 75, "224": 75, "225": 75, "guess": 75, "answer": [75, 126, 128], "rgb88": 75, "overlap": 76, "window_w": 76, "window_h": 76, "xmin": 76, "ymin": 76, "xmax": 76, "ymax": 76, "label_index": 76, "sigma": 76, "kept": [76, 132], "penalti": [76, 90, 147], "aggress": 76, "meant": [77, 78], "fb": [77, 160], "wish": 77, "procedur": [78, 139, 147], "checkout": [78, 79], "115200": [78, 119, 133, 157], "memory_view_object_result": 78, "remote_function_or_method_nam": 78, "bytes_object_argu": 78, "receiev": 78, "encapsul": 78, "memoryview_object_argu": 78, "bytes_object_result": 78, "reimplement": 78, "buff": 78, "timeout_m": [78, 109], "okai": [78, 122], "call_back": 78, "queue_depth": 78, "read_timeout_m": 78, "repeatedli": [78, 96, 130, 160], "bytes_or_memory_view": 78, "catch": [78, 107, 159], "write_timeout_m": 78, "send_timeout": 78, "recv_timeout": 78, "exeuct": 78, "deivc": 78, "parent": 78, "some_function_or_method_that_takes_a_long_time_to_execut": 78, "stuff": 78, "normal_rpc_call_back": 78, "message_if": 78, "0x7ff": [78, 89], "bit_rat": 78, "250000": 78, "sample_point": [78, 89], "can_bu": 78, "mb": 78, "message_id": 78, "tseg1": 78, "tseg2": 78, "87": 78, "ohm": [78, 95], "Be": [78, 119], "slave_addr": 78, "0x12": [78, 93, 113, 119], "100000": [78, 119, 136, 147], "i2c_bu": 78, "ground": [78, 98], "cs_pin": [78, 119], "10000000": [78, 119], "clk_polar": 78, "clk_phase": 78, "spi_bu": 78, "sclk": [78, 119], "uart_port": 78, "vlc": 79, "web": [79, 127, 130, 156], "network_if": 79, "554": 79, "differenti": 79, "tear": 79, "woken": [80, 88], "grab": 80, "secondari": [80, 132], "temporari": [80, 132, 154], "steal": 80, "framebuff": [80, 160], "stabil": 80, "neither": [80, 147, 155], "300": 80, "gen": 80, "plu": [80, 92, 119, 129, 137, 140], "shutter": 80, "boson": 80, "320x256": 80, "640x512": 80, "lepton1": 80, "prophese": 80, "engin": 80, "pixart": 80, "contig": [80, 132], "instantli": 80, "intens": [80, 94, 125], "bss": 80, "liad": 80, "bufer": 80, "effic": 80, "88x72": 80, "176x144": 80, "352x288": 80, "88x60": 80, "176x120": 80, "352x240": 80, "40x30": 80, "30x20": 80, "60x40": 80, "120x80": 80, "240x160": 80, "480x320": 80, "64x32": 80, "64x64": 80, "128x64": 80, "128x128": 80, "160x160": 80, "320x320": 80, "720x480": 80, "752x480": 80, "1280x768": 80, "1280x960": 80, "2560x1440": 80, "2048x1536": 80, "2560x1600": 80, "2592x1944": 80, "exposur": 80, "140": 80, "200x200": 80, "paren": 80, "gainceil": 80, "constrast": 80, "satur": 80, "gain_db_ceil": 80, "decibel": 80, "exposure_u": 80, "pretti": [80, 88], "conserv": 80, "alot": 80, "rgb_gain_db": 80, "blc": 80, "got": [80, 127, 129, 133], "ever": [80, 132, 133], "reciv": 80, "advent": 80, "latest": [80, 156, 157], "older": [80, 155], "regard": [80, 151], "randomli": 80, "hous": 80, "eras": [80, 115, 122, 148], "ago": [80, 112], "huge": 80, "old": 80, "bulk": [80, 160], "risk": [80, 151], "stale": 80, "radi": 80, "coef": 80, "vsync": 80, "readout": 80, "dramat": 80, "positon": 80, "maximum_camera_sensor_pixel_width": 80, "maximum_camera_sensor_pixel_height": 80, "focu": [80, 122], "fpc": 80, "nightmod": 80, "night": [80, 125], "sdk": 80, "deseri": 80, "fpa": 80, "temp": [80, 88, 147], "aux": 80, "500c": 80, "clamp": 80, "max_temp_in_celsiu": 80, "min_temp_in_celsiu": 80, "arug": 80, "10c": 80, "40c": 80, "pc15": 80, "oscil": 80, "bias": 80, "freq_low_in_hz": 80, "freq_high_in_hz": 80, "anti": 80, "flicker": 80, "sheet": 80, "fft": 80, "marker": 80, "diff": 80, "ON": 80, "fo": 80, "hpf": 80, "refr": 80, "0x3f": 81, "depth_min": 82, "depth_max": 82, "vl53l5cx": 82, "vl53l8cx": 82, "352": 83, "infrastructur": 84, "vring": 84, "rpmsg": 84, "life": [84, 127], "ept_recv_callback": 84, "src": [84, 152, 154, 157], "ept": 84, "vuart": 84, "rproc": 84, "virtual_uart": 84, "elf": [84, 113], "0x081e0000": 84, "ns_callback": 84, "announc": 84, "endpoint_addr_ani": 84, "destroi": [84, 147], "sysnam": 85, "nodenam": 85, "inod": 85, "0x8000": 85, "Its": [85, 138, 155, 160], "old_path": 85, "new_path": 85, "f_bsize": 85, "f_frsize": 85, "f_block": 85, "f_bfree": 85, "f_bavail": 85, "unprivileg": 85, "f_file": 85, "f_ffree": 85, "f_favail": 85, "f_flag": 85, "f_namemax": 85, "f_avail": 85, "stream_object": 85, "iobas": 85, "fsobj": [85, 115], "mount_point": [85, 115], "readonli": [85, 87, 115], "block_dev": [85, 115], "readsiz": [85, 115], "progsiz": [85, 115], "lookahead": [85, 115], "compos": [86, 100], "sever": [86, 113, 147, 154, 160], "delimit": 86, "dash": 86, "libc": 86, "xtensa": [86, 149, 155], "idfv4": 86, "newlib3": 86, "smallint": 87, "outcom": [87, 147, 151], "elaps": [87, 100, 107, 112], "fault": [87, 118, 151], "fatal": [87, 159], "1000hz": 87, "1m": [87, 147, 148, 160], "500": [87, 89, 112, 119], "ua": 87, "undergo": [87, 90], "pc": [87, 118, 122, 132, 140, 147, 148, 149, 154, 156, 157], "mous": [87, 101, 127], "dump_alloc_t": 87, "mountpoint": [87, 115], "unmount": [87, 115, 118, 154], "blocknum": 87, "slash": [87, 156], "modestr": 87, "vid": [87, 154], "0xf055": 87, "msc": [87, 148, 157], "high_spe": 87, "understood": 87, "vcp": [87, 102], "com": [87, 156], "mass": [87, 92, 149, 153, 156], "pybd": 87, "cdc": [87, 154], "scsi": 87, "lun": 87, "sdcard": [87, 118, 148], "appropri": [87, 88, 99, 137, 138, 156, 158, 159], "keyboard": [87, 101], "read_channel": 88, "read_core_temp": 88, "read_core_vbat": 88, "vbat": 88, "read_core_vref": 88, "vref": 88, "read_vref": 88, "4095": [88, 90, 119, 120], "10hz": 88, "3v": [88, 90, 119, 120, 121, 124], "die": 88, "centigrad": 88, "although": [88, 137, 156], "forget": 88, "ten": [88, 151], "backup": [88, 112], "batteri": [88, 112], "21v": 88, "nomin": [88, 89], "overload": 88, "backscal": 88, "fine": [88, 112, 128], "met": 88, "proper": [88, 108], "exce": [88, 151], "unscal": 88, "unwant": 88, "0xffffffff": [88, 135, 138, 142, 160], "0x70000": 88, "f4": 89, "f7": [89, 119], "fd": 89, "126": [89, 147], "kbit": 89, "arbitr": 89, "1mbit": 89, "500_000": 89, "brs_baudrat": 89, "1_000_000": 89, "0xfff0": 89, "fdf": 89, "ya": 89, "yb": 89, "pb8": 89, "pb9": 89, "pb12": [89, 97, 119], "pb13": [89, 97, 100, 119], "sjw": 89, "bs1": 89, "bs2": 89, "num_filter_bank": 89, "brs_sjw": 89, "brs_bs1": 89, "brs_bs2": 89, "brs_sample_point": 89, "quanta": 89, "resynchronis": 89, "brs_prescal": 89, "tq": 89, "pclk1": 89, "bittim": 89, "42mhz": 89, "28khz": 89, "680": 89, "stm32f405": 89, "datasheet": [89, 113], "0x111": 89, "bitrat": 89, "x5": 90, "x6": 90, "65v": 90, "wave": [90, 120], "400hz": 90, "2047": [90, 120], "5k\u03c9": 90, "15k\u03c9": 90, "consequ": [90, 115, 140, 151, 160], "5m\u03c9": 90, "pseudo": [90, 103, 144], "ramp": 90, "burst": 90, "dac1": 90, "dac2": 90, "buf1": 90, "buf2": 90, "waveform": 90, "px0": 91, "px1": 91, "caution": 91, "pushbutton": 91, "bounc": 91, "www": [91, 107], "eng": 91, "utah": 91, "edu": 91, "cs5780": 91, "debounc": 91, "pdf": 91, "explan": 91, "techniqu": [91, 147, 151, 160], "evt_ris": 91, "evt_fal": 91, "evt_rising_fal": 91, "irq_xxx": 91, "evt_xxx": 91, "wfe": 91, "exti": 91, "usrsw": 91, "customis": 92, "partit": [92, 148, 153, 154], "0x100": [92, 147, 160], "block_num": [92, 115, 148], "spiflash": 92, "pullup": [93, 100], "recipi": 93, "buss": [93, 100], "pb10": [93, 100, 119], "pb11": [93, 100, 119], "pd12": [93, 119], "pd13": [93, 119], "gencal": 93, "properli": [93, 108, 122], "addr_siz": 93, "0x7f": 93, "emit": [94, 136, 144, 147, 155, 160], "diod": 94, "x1_pin": 95, "pybv1": [95, 158], "a0": [95, 154], "mymapperdict": 95, "leftmotordir": 95, "c12": 95, "mymapp": 95, "summaris": [95, 151], "ordin": 95, "usabl": [95, 96, 107, 147], "40k": 95, "3v3": 95, "gnd": 95, "11k": 95, "microprocessor": 95, "varieti": [95, 99, 115, 147, 151, 155], "x3_af": 95, "af1_tim2": 95, "af2_tim5": 95, "af3_tim9": [95, 158], "af7_usart2": 95, "tim2_ch3": 95, "tim2": [95, 119], "2014": [96, 112], "mondai": 96, "sundai": 96, "took": 96, "0x10000": 96, "0x20000": 96, "cal": 96, "954": 96, "likewis": 96, "600000": 97, "0x7": 97, "polynomi": 97, "nss": 97, "pb14": [97, 100, 119], "pb15": [97, 100, 119], "328125": 97, "apb": 97, "texa": 97, "instrument": 97, "oppos": 97, "motorola": 97, "ahb1": 97, "s1": [98, 119], "s2": 98, "servo1": 98, "servo2": 98, "1500m": [98, 119], "1500": [98, 119], "p9": [98, 119, 124], "pulse_min": 98, "pulse_max": 98, "pulse_centr": 98, "pulse_angle_90": 98, "pulse_speed_100": 98, "centr": 98, "simplest": [99, 149, 151, 152, 154, 156], "2hz": 99, "1hz": 99, "99": 99, "199": 99, "div": 99, "deadtim": 99, "brk": 99, "100hz": 99, "83": 99, "999": 99, "psc": 99, "0x3fffffff": 99, "autoreload": 99, "arr": [99, 113], "dead": 99, "complimentari": 99, "1008": 99, "kill": 99, "brk_in": 99, "afn_timx": 99, "pwm_invert": 99, "oc_tim": 99, "oc_act": 99, "oc_inact": 99, "oc_toggl": 99, "oc_forced_act": 99, "oc_forced_inact": 99, "enc_a": 99, "ch1": 99, "enc_b": 99, "ch2": 99, "enc_ab": 99, "oc": 99, "enc": 99, "ch1n": 99, "ch2n": 99, "8000": 99, "ch3": [99, 119], "pin_t8_1": 99, "af3_tim8": [99, 158], "pc6": 99, "tim8_ch1": 99, "pin_t8_1n": 99, "x8": 99, "pa7": 99, "tim8_ch1n": 99, "pin_bkin": 99, "x7": 99, "pa6": 99, "tim8_bkin": 99, "break_callabck": 99, "align": [99, 110, 113, 115, 119, 136, 141, 146], "read_buf_len": 100, "nrt": 100, "nct": 100, "paragraph": [100, 118], "116": 100, "ceas": 100, "emul": [101, 133], "implicitli": [102, 115, 152, 154, 156], "trail": [102, 142], "micropy_py_random_extra_func": 103, "micropy_py_random_seed_init_func": 103, "greedi": 104, "za": 104, "z0": 104, "9_": 104, "backslash": 104, "rn": [104, 134, 135, 137, 139, 141, 142, 144, 146], "cr": 104, "lf": [104, 148], "repetit": [104, 151], "line1": 104, "rline2": 104, "nline3": 104, "line2": 104, "line3": 104, "regex_str": 104, "substitut": [104, 147, 160], "max_split": 104, "auth": 105, "kw": 105, "rrequest": 105, "rlist": 106, "wlist": 106, "xlist": 106, "eventmask": 106, "pollout": 106, "pollhup": 106, "pollerr": 106, "unsolicit": 106, "enoent": 106, "accordingli": [106, 147], "calle": [106, 149], "emploi": [106, 138, 139, 147, 151, 160], "bsd": 107, "sockaddr": 107, "sock": [107, 108], "hack": 107, "ipv4_address": 107, "dot": [107, 113, 158], "ipv6_address": 107, "flowinfo": 107, "scopeid": 107, "colon": [107, 158], "2001": 107, "db8": 107, "canonnam": 107, "gaierror": 107, "bin_addr": 107, "x7f": 107, "txt_addr": 107, "x03": 107, "x04": [107, 158], "sol_": 107, "so_": 107, "ipproto_": 107, "dgram": 107, "unaccept": 107, "refus": 107, "conn": 107, "chunk": 107, "consecut": [107, 136], "bufsiz": 107, "nonneg": 107, "poller": 107, "shorthand": 107, "rwb": 107, "facil": 108, "server_sid": 108, "cert": 108, "cert_req": 108, "cadata": 108, "server_hostnam": 108, "do_handshake_on_connect": 108, "certif": 108, "mbedtl": 108, "ca": 108, "der": 108, "protocol_": 108, "certfil": 108, "keyfil": 108, "cafil": 108, "axtl": 108, "sni": 108, "prone": 108, "middl": [108, 113, 154, 160], "attack": 108, "verif": 108, "cert_": 108, "ntptime": 108, "datagram": 108, "mbed": 108, "mbedtls_ssl_proto_dtl": 108, "bsrr": 109, "rf": [109, 154], "fu": 109, "ogf": 109, "ocf": 109, "hci": 109, "subghz": 109, "modem": 109, "truthi": 109, "falsei": 109, "rfbusi": 109, "busi": [109, 133], "fmt": 110, "retval": 111, "underlyingli": 111, "tracefunc": 111, "micropy_py_sys_settrac": 111, "releaselevel": 111, "_machin": 111, "_mpy": [111, 155], "_build": 111, "node": 111, "hyphen": 111, "webassembli": 111, "rpi_pico2": 111, "riscv": 111, "mandat": 111, "bare": [111, 147, 148], "baremet": [111, 112, 113, 149], "referenc": [111, 147, 149, 155, 160], "epoch": 112, "1970": 112, "00": 112, "calendar": 112, "sec": 112, "mdai": 112, "yeardai": 112, "centuri": 112, "sun": 112, "366": 112, "jan": 112, "ticks_max": 112, "ticks_period": 112, "why": [112, 122, 128, 132], "benchmark": 112, "delta": [112, 119, 160], "modular": 112, "deadlin": 112, "do_a_little_of_someth": 112, "ticks1": 112, "ticks2": 112, "ring": 112, "distant": 112, "complement": [112, 134, 135, 142], "monitor": [112, 147, 154], "notch": 112, "dial": 112, "plate": 112, "mistak": 112, "regularli": [112, 127, 160], "metaphor": 112, "accommod": [112, 153], "500u": 112, "overdu": 112, "snippet": [112, 149, 157], "scheduled_tim": 112, "nap": 112, "oop": [112, 113], "late": [112, 151, 159], "run_fast": 112, "year_2038_problem": 112, "timestamp": [112, 115], "foreign": [113, 149], "idea": [113, 127, 154], "behind": [113, 122, 128], "ctype": 113, "streamlin": 113, "familiar": [113, 127, 139, 147], "uncar": 113, "executable_and_linkable_format": 113, "file_head": 113, "elf_head": 113, "ei_mag": 113, "0x0": 113, "ei_data": 113, "0x5": 113, "e_machin": 113, "x7felf": 113, "pointer": [113, 139, 151, 160], "coord": 113, "struct1": 113, "data1": 113, "data2": 113, "wwdg": 113, "wwdg_layout": 113, "wwdg_cr": 113, "bfuint32": 113, "wdga": 113, "bf_po": 113, "bf_len": 113, "wwdg_cfr": 113, "ewi": 113, "wdgtb": 113, "0x40002c00": 113, "0b10": 113, "field1": 113, "field2": 113, "field_nam": 113, "b0": [113, 142, 146], "b1": [113, 142], "Of": 113, "aggreg": 113, "arr2": 113, "ptr2": 113, "bitfield": 113, "bitf0": 113, "bfuint16": 113, "lsbit": 113, "bitsiz": 113, "typenam": 113, "bf": 113, "rightmost": 113, "abi": 113, "layout_typ": 113, "occupi": [113, 137, 147], "immut": [113, 147], "ffi": [113, 149], "my_struct": 113, "substruct1": 113, "dereferenc": 113, "derefer": 113, "mcu_regist": 113, "peripheral_a": 113, "register1": 113, "reg_a": 113, "register0": 113, "dozen": 113, "anywai": [113, 121, 122, 124, 125, 127, 129, 130, 132, 133], "spread": 113, "artifici": 113, "megabyt": [113, 132], "synthet": 113, "quiet": 114, "subdirectori": [115, 152], "live": [115, 152, 160], "eperm": 115, "einval": 115, "lfs1": 115, "347": [115, 148], "reformat": [115, 122], "lfs2": 115, "295": [115, 148], "piec": [115, 154], "prior": [115, 135, 136, 138, 142, 145, 151], "intercept": [115, 158], "erasur": 115, "onward": 116, "trade": [116, 160], "constrain": [116, 141, 146], "mit": 117, "copyright": 117, "2013": 117, "damien": 117, "georg": 117, "paul": 117, "sokolovski": 117, "llc": 117, "permiss": [117, 131, 134, 142], "herebi": 117, "charg": 117, "person": [117, 127, 158], "sublicens": 117, "sell": 117, "whom": 117, "furnish": 117, "notic": [117, 127], "substanti": [117, 147, 149, 160], "portion": 117, "AS": 117, "warranti": 117, "BUT": 117, "merchant": 117, "noninfring": 117, "NO": 117, "holder": 117, "liabl": 117, "claim": 117, "liabil": 117, "contract": 117, "tort": 117, "aris": [117, 147, 151], "WITH": 117, "skipsd": 118, "cabl": [118, 122], "eject": 118, "remount": [118, 154], "rescan": 118, "overwrit": 118, "reconmend": 118, "asset": [118, 122], "powerup": 118, "dfu": [118, 122, 127, 131, 154], "immediantli": 118, "reflash": 118, "pinout": [119, 124], "avial": 119, "tim0": 119, "tim1": 119, "gpio0": 119, "gpio2": 119, "illumin": [119, 125], "uart1": 119, "pwm2": 119, "pwm4": 119, "pwm5": 119, "pwm6": 119, "pwm9": 119, "pwm3": 119, "65536": 119, "0v": [119, 120, 121, 124], "irrespect": [119, 136], "200000": 119, "0xff": [119, 144, 147, 155], "12345": 119, "reliabl": [119, 133], "0x3a": 119, "0x76": 119, "2017": 119, "ow": 119, "gpio12": 119, "readbyt": 119, "writebyt": 119, "select_rom": 119, "rom": [119, 152, 156], "ds18s20": 119, "ds18b20": 119, "ds18x20": 119, "convert_temp": 119, "750": 119, "read_temp": 119, "7k": 119, "dht11": 119, "humid": 119, "dht22": 119, "p_out": 119, "p_in": 119, "pa5": 119, "pd14": 119, "5v": [119, 120, 124], "toler": [119, 120, 124, 148], "sink": [119, 124], "ma": [119, 124], "intr": 119, "ext": 119, "tim3": 119, "tim4": [119, 151], "tim7": 119, "tim14": 119, "tim8": 119, "tim12": 119, "tim17": 119, "ch": 119, "ss": 119, "volt": 120, "360": 120, "probabl": [121, 132, 159], "tini": 121, "ve": [121, 122, 127, 129, 131, 132, 133, 158], "cloth": 122, "strand": 122, "microfib": 122, "glass": 122, "isopropyl": 122, "alcohol": 122, "screw": 122, "rub": 122, "wet": 122, "gentli": 122, "dirt": 122, "spot": 122, "microscop": 122, "evapor": 122, "water": 122, "gentl": 122, "rip": 122, "connector": 122, "movement": 122, "hole": 122, "strain": 122, "relief": 122, "browser": [122, 149], "unrespons": [122, 127, 159], "didn": 122, "saw": 122, "ubuntu": 122, "icon": [122, 127], "broken": [122, 128, 158], "loader": [122, 127, 131], "unplug": [122, 127], "plug": 122, "recov": [122, 131, 147], "sai": [122, 127, 147], "hello_world": 122, "webcam": 122, "dig": 122, "bump": 122, "plastic": 122, "unscrew": 122, "eventu": [122, 151], "focus": 122, "manufactur": [122, 132], "accident": 122, "ntf": 122, "journal": 122, "scratch": 122, "wrote": 122, "95": 122, "98": 122, "facto": 122, "importantli": 122, "patent": 122, "safeti": [122, 151], "tb": 122, "fat12": 122, "fat16": 122, "fat32": 122, "sdhc": 122, "sdxc": 122, "feel": [122, 159], "accessori": 123, "topic": [124, 151, 160], "hookup": 124, "worri": [124, 154, 159], "beefi": 124, "auxiliari": 124, "red_l": 125, "green_l": 125, "blue_l": 125, "ir_l": 125, "heavili": 125, "strong": 125, "meter": 125, "onlin": [126, 129], "signup": 126, "email": 126, "twitter": 126, "forum": 126, "question": 126, "qtcreator": 127, "pane": 127, "combo": 127, "backend": 127, "obviou": 127, "explor": 127, "ton": [127, 128], "lastli": 127, "profession": 127, "redo": 127, "font": 127, "enviorn": 127, "hover": 127, "walk": 127, "tooltip": 127, "joi": 127, "gotten": 127, "smart": 127, "pick": [127, 130], "highlight": 127, "knowledg": [127, 160], "unkil": 127, "recours": 127, "xp": 127, "harder": 127, "reocord": 127, "ffmpeg": 127, "transcod": 127, "constantli": [127, 132], "wild": 127, "anywher": 127, "candi": 127, "programmat": [127, 158], "thought": 127, "graph": 127, "easier": [127, 153], "million": 127, "scroll": 127, "ini": 127, "bootup": 127, "comment": [127, 130], "think": 127, "deploi": [127, 129, 154, 157], "dialog": 127, "submenu": 127, "mp4": 127, "activit": 127, "07d": 127, "understand": [127, 147, 151, 158, 160], "printf": 127, "7d": 127, "join": 127, "tab": [127, 158], "folk": 127, "thank": [128, 129, 132], "tuturi": [128, 130, 132], "wall": 128, "accomplish": 128, "happili": 128, "valv": 128, "experi": [128, 151], "solv": 128, "instant": 128, "job": 128, "faq": 128, "ship": 129, "luckili": [129, 132], "cloud": 129, "everyon": 129, "fork": 129, "repo": [129, 152, 154, 156], "openmv2": 129, "openmv3": 129, "openmv4": 129, "openmv4p": 129, "omv_lib_dir": 129, "frozn": 129, "door": 129, "vulner": 129, "assur": [129, 159], "anyon": 129, "studi": 130, "plenti": 130, "distinct": [130, 147], "bring": [130, 158], "welcom": 130, "download": [131, 153, 156, 157], "dmg": 131, "macport": 131, "homebrew": 131, "sudo": 131, "libusb": 131, "pip": [131, 149, 154, 156], "pyusb": 131, "brew": 131, "chmod": 131, "readm": [131, 147], "txt": [131, 148], "openmvid": 131, "qt": 131, "linker": 131, "tar": 131, "dram": 132, "sdr": 132, "cheapest": 132, "revv": 132, "bandwidth": 132, "2gb": 132, "666mb": 132, "requr": 132, "haven": 132, "sram": 132, "hopefulli": 132, "shrink": 132, "automag": 132, "arbitrarili": [132, 147], "100kb": 132, "breakdown": 133, "abadon": 133, "ustruct": 133, "lhb": 133, "a_32_bit_valu": 133, "a_16_bit_valu": 133, "a_8_bit_valu": 133, "pixi": 133, "pixy_uart_emul": 133, "rd": [134, 135, 137, 139, 142, 143, 144], "rm": [134, 135, 137, 139, 140, 154, 157], "denot": [134, 135, 137, 140, 141, 142, 144, 146], "r0": [134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146], "r7": [134, 135, 139, 141, 142, 145, 146], "immn": [134, 141, 144, 146], "imm8": [134, 135, 144], "imm3": 134, "carri": [134, 135, 140, 151], "rdn": 134, "sbc": 134, "sdiv": 134, "udiv": 134, "bge": [135, 140], "bhi": [135, 140], "bgt": [135, 138, 140], "0x80000000": [135, 138], "borrow": 135, "compliment": 135, "0x7fffffff": 135, "0x8000000": 135, "cmp": [135, 138], "cmn": 135, "tst": 135, "ite": [135, 140], "condition": 135, "r1": [135, 138, 145], "eq": [135, 140], "mov": [135, 138, 144], "itt": 135, "itet": 135, "ittt": 135, "itttt": 135, "itee": 135, "inner1": 136, "facilit": [136, 160], "d0": 136, "d1": 136, "henc": [136, 141, 146, 147, 151], "thumb": [136, 139, 149, 151], "coprocessor": [137, 160], "equip": 137, "s0": [137, 138], "s31": 137, "vmov": 137, "sm": 137, "sn": 137, "r13": [137, 139], "r15": [137, 139, 140, 142, 144], "vadd": 137, "vsub": 137, "vneg": 137, "vmul": [137, 138], "vdiv": 137, "vsqrt": 137, "fpscr": 137, "vmr": 137, "apsr_nzcv": 137, "vldr": [137, 138], "vstr": [137, 138], "vcmp": 137, "vcvt_f32_s32": 137, "vcvt_s32_f32": 137, "asm_thumb": 138, "appreci": [138, 151], "bl": [138, 140, 154], "lr": [138, 140, 145], "r14": [138, 140, 145], "bx": [138, 140], "contriv": 138, "illustr": [138, 151, 160], "outer": [138, 140, 155], "demonstr": [138, 139], "fibonacci": 138, "fib": 138, "dofib": 138, "r2": 138, "fibdon": 138, "uint": [138, 160], "uadd": 138, "0x40000000": 138, "contigu": [138, 147, 160], "indirect": [138, 139], "getindirect": 138, "ldr": [138, 141], "testindirect": 138, "litter": 138, "mydata": 138, "principl": [138, 147, 151], "v7": [138, 139], "0xe92d": 138, "0x0f00": 138, "r8": [138, 139, 145], "r9": 138, "r10": 138, "r11": 138, "quantiti": 138, "gamut": 138, "enable_crc": 138, "rcc": 138, "rcc_ahb1enr": 138, "reset_crc": 138, "crc_cr": 138, "getval": 138, "movwt": [138, 144], "r3": 138, "crc_dr": 138, "getcrc": 138, "assembli": 139, "consult": 139, "r12": [139, 145], "constitut": [139, 151], "imposs": 139, "concept": [139, 149, 155, 156, 160], "pseudocod": 139, "emitinlinethumb": 139, "rm0090": 139, "site": [139, 156], "academ": 139, "bewar": 139, "ne": 140, "cc": 140, "mi": 140, "minu": 140, "pl": 140, "vc": 140, "ge": 140, "lt": 140, "gt": 140, "uncondit": 140, "beq": 140, "bne": 140, "blt": 140, "bc": 140, "bcc": 140, "bmi": 140, "bpl": 140, "bv": 140, "bvc": 140, "beq_w": 140, "inner": 140, "imm5": [141, 146], "imm7": [141, 146], "ldrb": 141, "ldrh": 141, "imm6": [141, 146], "eor": 142, "and_": 142, "orr": 142, "mvn": 142, "bic": 142, "lsl": 142, "lsr": 142, "asr": 142, "ror": 142, "rotate_right": 142, "b31": 142, "b30": 142, "b2": 142, "b3": 142, "unaffect": [142, 151], "clz": 142, "count_leading_zero": 142, "rbit": 142, "bit_revers": 142, "nop": 143, "suspend": 143, "cpsid": 143, "cpsie": 143, "mr": 143, "special_reg": 143, "ipsr": 143, "basepri": 143, "movw": 144, "imm16": 144, "movt": 144, "halfword": 144, "imm32": 144, "immateri": 145, "regset": 145, "strb": 146, "b7": 146, "strh": 146, "b15": 146, "unfamiliar": [147, 160], "nonvolatil": 147, "impract": 147, "inaccess": [147, 159], "incorpor": 147, "mymodul": 147, "tree": 147, "clone": [147, 156], "repositori": [147, 152, 155, 156], "toolchain": 147, "vm": [147, 149, 156], "insuffici": 147, "precompil": [147, 155], "_col": 147, "presenc": [147, 151], "prepend": [147, 152], "assist": [147, 160], "implic": [147, 151], "mystr": 147, "brown": [147, 159], "fox": 147, "resid": [147, 148], "0xdeadbeef0000deadbeef": 147, "needless": 147, "unwittingli": 147, "var": 147, "var1": 147, "var2": 147, "needlessli": 147, "piecem": 147, "fashion": 147, "06d": 147, "xff": 147, "painless": 147, "lstrip": 147, "obvious": 147, "qstrdefsport": 147, "rebuild": [147, 155], "gone": [147, 151], "redund": [147, 160], "reclaim": [147, 149, 160], "discours": 147, "bigger": 147, "despit": [147, 157], "outlin": [147, 151], "perman": 147, "utilis": 147, "10kib": 147, "tail": 147, "0x400": 147, "1kib": 147, "advantag": [147, 148, 156], "firstli": [147, 151, 160], "secondli": [147, 151, 160], "quicker": [147, 160], "provok": [147, 151], "circumst": 147, "starv": 147, "amelior": 147, "surpris": 147, "signifi": 147, "metal": [147, 148], "moutn": 148, "flashbdev": 148, "bdev": 148, "ramblockdev": 148, "block_siz": 148, "num_block": 148, "ramdisk": 148, "2m": 148, "resist": 148, "fuse": 148, "block_count": 148, "4096": 148, "allow_oth": 148, "sdb1": 148, "mnt": 148, "256kib": 148, "frequent": [148, 160], "resili": 148, "csv": 148, "type_data": 148, "fledg": 149, "circuit": 149, "pcb": 149, "invis": 149, "offlin": 149, "circuitpython": 149, "industri": 149, "jython": 149, "ironpython": 149, "pypi": [149, 156], "acronym": 149, "bundl": 149, "electr": 149, "vastli": 149, "almost": [149, 153], "laptop": 149, "phone": 149, "cheaper": 149, "stdlib": 149, "freebsd": 149, "solari": 149, "basi": 149, "x86": [149, 155], "x64": [149, 155], "interchang": 149, "upip": 149, "obsolet": 149, "inspir": 149, "webrepl": [149, 156], "doc": 150, "brief": 151, "introduct": [151, 153], "vagu": 151, "deliber": 151, "deleg": 151, "hazard": [151, 160], "confer": 151, "entrant": 151, "disallow": 151, "set_volum": 151, "0xa5": 151, "0x5a": 151, "bar_ref": 151, "occas": [151, 160], "diagnos": 151, "circumv": 151, "parlanc": 151, "notabl": [151, 155], "rehash": 151, "unsaf": [151, 154], "dsp": 151, "queu": 151, "compli": 151, "sustain": 151, "unconstrain": 151, "growth": 151, "propag": 151, "disrupt": 151, "tsf": 151, "cooper": 151, "mere": 151, "beginn": 151, "crucial": 151, "anticip": 151, "inevit": 151, "grasp": 151, "organis": 151, "scheme": 151, "interpos": 151, "reentrant": 151, "assess": 151, "inconsist": 151, "race": 151, "boundsexcept": 151, "arrays": 151, "callback1": 151, "exceed": 151, "irq_stat": 151, "compris": [151, 160], "overwritten": 151, "unpredict": 151, "dataset": 151, "undesir": 151, "overrun": [151, 160], "radic": 151, "challeng": 151, "alon": 152, "mpy_dir": 152, "mpy_lib_dir": 152, "port_dir": 152, "board_dir": 152, "pybv11": 152, "myboard": 152, "frozen_manifest": 152, "cmake": 152, "mpconfigboard": 152, "mk": 152, "micropy_frozen_manifest": 152, "micropy_board_dir": 152, "opt": 152, "library_path": 152, "package_path": 152, "base_path": 152, "baz": 152, "module_path": 152, "manifest_path": 152, "exclud": 152, "mydriv": 152, "pybd_sf2": 152, "aiorepl": 152, "cd": 152, "myproject": 152, "decad": 153, "unblock": 153, "explain": 153, "micropy_preview_version_2": 153, "deploy": 153, "autom": 154, "pipx": 154, "df": 154, "romf": 154, "rfc2217": 154, "ttyacm0": [154, 157], "c0": 154, "com0": 154, "acm": 154, "ftdi": 154, "j": [154, 158], "strictli": 154, "cp": [154, 156, 157], "sha256sum": 154, "scp": 154, "clariti": 154, "successfulli": 154, "reboot": [154, 158], "mpy_cross": 154, "uf2": 154, "pico": 154, "fresh": 154, "macro": 154, "a2": 154, "a3": 154, "ttyacmn": 154, "u0": 154, "u1": 154, "u2": 154, "u3": 154, "ttyusbn": 154, "c1": 154, "c2": 154, "c3": 154, "comn": 154, "c33": 154, "334d335c3138": 154, "wl_scan": 154, "wl": 154, "nearbi": 154, "wl_ipconfig": 154, "demo": 154, "ttyacm1": 154, "com1": 154, "ttyusb0": 154, "print_state_info": 154, "500m": 154, "workflow": 154, "gitlab": [154, 156], "functool": 154, "machineri": 155, "sys_mpi": 155, "armv6": 155, "armv6m": 155, "armv7m": 155, "armv7em": 155, "armv7emsp": 155, "armv7emdp": 155, "xtensawin": 155, "rv32imc": 155, "march": 155, "uppercas": 155, "recompil": 155, "git": 155, "mpy_cross_flag": 155, "commit": 155, "bdbc869f9ea200c0d28b2bc7bfb60acd9d884e1b": 155, "6967ff3c581a66f73e9f3d78975f47528db39980": 155, "d94141e1473aebae0d3c63aeaa8397651ad6fa01": 155, "f2040bfc7ee033e48acef9f289790f3b4e6b74e5": 155, "5716c5cf65e9b2cb46c2906f40302401bdd27517": 155, "9a5f92ea72754c01cc03e5efcdfe94021120531": 155, "ff93fd4f50321c6190e1659b19e64fef3045a484": 155, "dd11af209d226b7d18d5148b239662e30ed60bad": 155, "6a11048af1d01c78bdacddadd1b72dc7ba7c6478": 155, "d8c834c95d506db979ec871417de90b7951edc30": 155, "children": 155, "vuint": 155, "8th": 155, "xd": 155, "myfil": 155, "0x4d": 155, "reloc": 155, "fetch": 156, "pkgname": 156, "pkg": 156, "easiest": 156, "broadli": 156, "webserv": 156, "alongsid": 156, "mlx90640": 156, "dep": 156, "defaultdict": 156, "otheraddit": 156, "destination_path": 156, "source_url": 156, "downsid": 156, "standalon": 157, "pyseri": 157, "pipi": 157, "telnet": 157, "login": 157, "usernam": 157, "pyboard_devic": 157, "pyboard_baudr": 157, "ssh": 157, "enter_raw_repl": 157, "ret": 157, "exit_raw_repl": 157, "backspac": 158, "wind": 158, "compound": 158, "af3": 158, "af3_tim": 158, "af3_tim10": 158, "af3_tim11": 158, "6466": 158, "6467": 158, "6468": 158, "mess": 158, "indentationerror": 158, "g6f70283": 158, "dirti": 158, "stm32f405rg": 158, "echo": 158, "friendli": 158, "verbatim": 158, "x05a": 158, "worth": 158, "reamin": 158, "uncaught": 158, "x01print": 158, "nraw": 158, "x80": 158, "x04123": 158, "cold": 159, "regul": 159, "wi": 159, "fi": 159, "unusu": 159, "my_app": 159, "stuck": 159, "recoveri": 159, "misbehav": 159, "outset": 160, "devot": 160, "attent": 160, "straightforward": 160, "textbook": 160, "spectacular": 160, "reusabl": 160, "dedic": 160, "paramount": 160, "allevi": 160, "ba": 160, "2k": 160, "mv": 160, "caveat": 160, "aliv": 160, "panacea": 160, "10k": 160, "nonetheless": 160, "indispens": 160, "ref": 160, "fastest": 160, "profil": 160, "judici": 160, "timed_funct": 160, "mynam": 160, "new_func": 160, "3f": 160, "obj_displai": 160, "ba_ref": 160, "adequ": 160, "clutter": 160, "empt": 160, "linebuf": 160, "roughli": 160, "pursuit": 160, "modulo": 160, "benefici": 160, "pep0484": 160, "ptr8": 160, "ptr16": 160, "ptr32": 160, "ptrx": 160, "impos": 160, "rapidli": 160, "bit0": 160, "toggle_n": 160, "odr": 160, "kickstart": 160, "mypin": 160, "a14": 160, "bit14": 160}, "objects": {"": [[17, 0, 1, "", "AssertionError"], [17, 0, 1, "", "AttributeError"], [17, 0, 1, "", "Exception"], [17, 0, 1, "", "ImportError"], [17, 0, 1, "", "IndexError"], [17, 0, 1, "", "KeyError"], [17, 0, 1, "", "KeyboardInterrupt"], [17, 0, 1, "", "MemoryError"], [17, 0, 1, "", "NameError"], [17, 0, 1, "", "NotImplementedError"], [17, 0, 1, "", "OSError"], [17, 0, 1, "", "RuntimeError"], [17, 0, 1, "", "StopIteration"], [17, 0, 1, "", "SyntaxError"], [17, 0, 1, "", "SystemExit"], [81, 1, 0, "-", "TFP410"], [17, 0, 1, "", "TypeError"], [17, 0, 1, "", "ValueError"], [17, 0, 1, "", "ZeroDivisionError"], [12, 1, 0, "-", "_thread"], [17, 4, 1, "", "abs"], [152, 4, 1, "", "add_library"], [17, 4, 1, "", "all"], [17, 4, 1, "", "any"], [13, 1, 0, "-", "array"], [14, 1, 0, "-", "asyncio"], [54, 1, 0, "-", "audio"], [17, 4, 1, "", "bin"], [15, 1, 0, "-", "binascii"], [16, 1, 0, "-", "bluetooth"], [27, 1, 0, "-", "bno055"], [17, 3, 1, "", "bool"], [55, 1, 0, "-", "buzzer"], [17, 3, 1, "", "bytearray"], [17, 3, 1, "", "bytes"], [17, 4, 1, "", "callable"], [17, 4, 1, "", "chr"], [17, 4, 1, "", "classmethod"], [18, 1, 0, "-", "cmath"], [19, 1, 0, "-", "collections"], [17, 4, 1, "", "compile"], [17, 3, 1, "", "complex"], [56, 1, 0, "-", "cpufreq"], [20, 1, 0, "-", "cryptolib"], [21, 1, 0, "-", "deflate"], [17, 4, 1, "", "delattr"], [17, 3, 1, "", "dict"], [17, 4, 1, "", "dir"], [57, 1, 0, "-", "display"], [17, 4, 1, "", "divmod"], [17, 4, 1, "", "enumerate"], [22, 1, 0, "-", "errno"], [17, 4, 1, "", "eval"], [17, 4, 1, "", "exec"], [17, 4, 1, "", "filter"], [65, 1, 0, "-", "fir"], [17, 3, 1, "", "float"], [152, 4, 1, "", "freeze"], [152, 4, 1, "", "freeze_as_mpy"], [152, 4, 1, "", "freeze_as_str"], [152, 4, 1, "", "freeze_mpy"], [17, 3, 1, "", "frozenset"], [66, 1, 0, "-", "ft5x06"], [23, 1, 0, "-", "gc"], [17, 4, 1, "", "getattr"], [67, 1, 0, "-", "gif"], [17, 4, 1, "", "globals"], [68, 1, 0, "-", "gt911"], [24, 1, 0, "-", "gzip"], [17, 4, 1, "", "hasattr"], [17, 4, 1, "", "hash"], [25, 1, 0, "-", "hashlib"], [26, 1, 0, "-", "heapq"], [17, 4, 1, "", "hex"], [17, 4, 1, "", "id"], [69, 1, 0, "-", "image"], [70, 1, 0, "-", "imu"], [152, 4, 1, "", "include"], [17, 4, 1, "", "input"], [17, 3, 1, "", "int"], [28, 1, 0, "-", "io"], [17, 4, 1, "", "isinstance"], [17, 4, 1, "", "issubclass"], [17, 4, 1, "", "iter"], [29, 1, 0, "-", "json"], [17, 4, 1, "", "len"], [17, 3, 1, "", "list"], [17, 4, 1, "", "locals"], [30, 1, 0, "-", "machine"], [17, 4, 1, "", "map"], [45, 1, 0, "-", "marshal"], [46, 1, 0, "-", "math"], [17, 4, 1, "", "max"], [17, 3, 1, "", "memoryview"], [152, 4, 1, "", "metadata"], [47, 1, 0, "-", "micropython"], [17, 4, 1, "", "min"], [71, 1, 0, "-", "mjpeg"], [72, 1, 0, "-", "ml"], [27, 1, 0, "-", "modbus"], [152, 4, 1, "", "module"], [27, 1, 0, "-", "mqtt"], [48, 1, 0, "-", "mutex"], [49, 1, 0, "-", "network"], [17, 4, 1, "", "next"], [17, 3, 1, "", "object"], [17, 4, 1, "", "oct"], [77, 1, 0, "-", "omv"], [17, 4, 1, "", "open"], [84, 1, 0, "-", "openamp"], [17, 4, 1, "", "ord"], [85, 1, 0, "-", "os"], [152, 4, 1, "", "package"], [27, 1, 0, "-", "pid"], [86, 1, 0, "-", "platform"], [17, 4, 1, "", "pow"], [17, 4, 1, "", "print"], [17, 4, 1, "", "property"], [87, 1, 0, "-", "pyb"], [103, 1, 0, "-", "random"], [17, 4, 1, "", "range"], [104, 1, 0, "-", "re"], [17, 4, 1, "", "repr"], [105, 1, 0, "-", "requests"], [152, 4, 1, "", "require"], [17, 4, 1, "", "reversed"], [17, 4, 1, "", "round"], [78, 1, 0, "-", "rpc"], [79, 1, 0, "-", "rtsp"], [106, 1, 0, "-", "select"], [80, 1, 0, "-", "sensor"], [17, 3, 1, "", "set"], [17, 4, 1, "", "setattr"], [17, 3, 1, "", "slice"], [107, 1, 0, "-", "socket"], [17, 4, 1, "", "sorted"], [27, 1, 0, "-", "ssd1306"], [108, 1, 0, "-", "ssl"], [17, 4, 1, "", "staticmethod"], [109, 1, 0, "-", "stm"], [17, 3, 1, "", "str"], [110, 1, 0, "-", "struct"], [17, 4, 1, "", "sum"], [17, 4, 1, "", "super"], [111, 1, 0, "-", "sys"], [27, 1, 0, "-", "tb6612"], [112, 1, 0, "-", "time"], [82, 1, 0, "-", "tof"], [17, 3, 1, "", "tuple"], [83, 1, 0, "-", "tv"], [17, 4, 1, "", "type"], [113, 1, 0, "-", "uctypes"], [27, 1, 0, "-", "ulab"], [114, 1, 0, "-", "uping"], [115, 1, 0, "-", "vfs"], [27, 1, 0, "-", "vl53l1x"], [17, 4, 1, "", "zip"], [116, 1, 0, "-", "zlib"]], "TFP410.TFP410": [[81, 2, 1, "", "hotplug_callback"], [81, 2, 1, "", "isconnected"]], "TFP410.tfp410": [[81, 3, 1, "", "TFP410"]], "array": [[13, 3, 1, "", "array"]], "array.array": [[13, 2, 1, "", "__add__"], [13, 2, 1, "", "__getitem__"], [13, 2, 1, "", "__iadd__"], [13, 2, 1, "", "__len__"], [13, 2, 1, "", "__repr__"], [13, 2, 1, "", "__setitem__"], [13, 2, 1, "", "append"], [13, 2, 1, "", "extend"]], "asyncio": [[14, 3, 1, "", "Event"], [14, 3, 1, "", "Lock"], [14, 3, 1, "", "Loop"], [14, 3, 1, "", "Server"], [14, 3, 1, "", "Stream"], [14, 3, 1, "", "Task"], [14, 3, 1, "", "ThreadSafeFlag"], [14, 4, 1, "", "create_task"], [14, 4, 1, "", "current_task"], [14, 4, 1, "", "gather"], [14, 4, 1, "", "get_event_loop"], [14, 4, 1, "", "new_event_loop"], [14, 4, 1, "", "open_connection"], [14, 4, 1, "", "run"], [14, 4, 1, "", "sleep"], [14, 4, 1, "", "sleep_ms"], [14, 4, 1, "", "start_server"], [14, 4, 1, "", "wait_for"], [14, 4, 1, "", "wait_for_ms"]], "asyncio.Event": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "is_set"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "asyncio.Lock": [[14, 2, 1, "", "acquire"], [14, 2, 1, "", "locked"], [14, 2, 1, "", "release"]], "asyncio.Loop": [[14, 2, 1, "", "call_exception_handler"], [14, 2, 1, "", "close"], [14, 2, 1, "", "create_task"], [14, 2, 1, "", "default_exception_handler"], [14, 2, 1, "", "get_exception_handler"], [14, 2, 1, "", "run_forever"], [14, 2, 1, "", "run_until_complete"], [14, 2, 1, "", "set_exception_handler"], [14, 2, 1, "", "stop"]], "asyncio.Server": [[14, 2, 1, "", "close"], [14, 2, 1, "", "wait_closed"]], "asyncio.Stream": [[14, 2, 1, "", "close"], [14, 2, 1, "", "drain"], [14, 2, 1, "", "get_extra_info"], [14, 2, 1, "", "read"], [14, 2, 1, "", "readexactly"], [14, 2, 1, "", "readinto"], [14, 2, 1, "", "readline"], [14, 2, 1, "", "wait_closed"], [14, 2, 1, "", "write"]], "asyncio.Task": [[14, 2, 1, "", "cancel"]], "asyncio.ThreadSafeFlag": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "audio": [[54, 4, 1, "", "init"], [54, 4, 1, "", "start_streaming"], [54, 4, 1, "", "stop_streaming"]], "binascii": [[15, 4, 1, "", "a2b_base64"], [15, 4, 1, "", "b2a_base64"], [15, 4, 1, "", "crc32"], [15, 4, 1, "", "hexlify"], [15, 4, 1, "", "unhexlify"]], "bluetooth": [[16, 3, 1, "", "BLE"], [16, 3, 1, "", "UUID"]], "bluetooth.BLE": [[16, 2, 1, "", "active"], [16, 2, 1, "", "config"], [16, 2, 1, "", "gap_advertise"], [16, 2, 1, "", "gap_connect"], [16, 2, 1, "", "gap_disconnect"], [16, 2, 1, "", "gap_pair"], [16, 2, 1, "", "gap_passkey"], [16, 2, 1, "", "gap_scan"], [16, 2, 1, "", "gattc_discover_characteristics"], [16, 2, 1, "", "gattc_discover_descriptors"], [16, 2, 1, "", "gattc_discover_services"], [16, 2, 1, "", "gattc_exchange_mtu"], [16, 2, 1, "", "gattc_read"], [16, 2, 1, "", "gattc_write"], [16, 2, 1, "", "gatts_indicate"], [16, 2, 1, "", "gatts_notify"], [16, 2, 1, "", "gatts_read"], [16, 2, 1, "", "gatts_register_services"], [16, 2, 1, "", "gatts_set_buffer"], [16, 2, 1, "", "gatts_write"], [16, 2, 1, "", "irq"], [16, 2, 1, "", "l2cap_connect"], [16, 2, 1, "", "l2cap_disconnect"], [16, 2, 1, "", "l2cap_listen"], [16, 2, 1, "", "l2cap_recvinto"], [16, 2, 1, "", "l2cap_send"]], "buzzer": [[55, 5, 1, "", "RESONANT_FREQ"], [55, 4, 1, "", "duty"], [55, 4, 1, "", "freq"]], "cmath": [[18, 4, 1, "", "cos"], [18, 5, 1, "", "e"], [18, 4, 1, "", "exp"], [18, 4, 1, "", "log"], [18, 4, 1, "", "log10"], [18, 4, 1, "", "phase"], [18, 5, 1, "", "pi"], [18, 4, 1, "", "polar"], [18, 4, 1, "", "rect"], [18, 4, 1, "", "sin"], [18, 4, 1, "", "sqrt"]], "collections": [[19, 3, 1, "", "OrderedDict"], [19, 3, 1, "", "deque"], [19, 4, 1, "", "namedtuple"]], "collections.deque": [[19, 2, 1, "", "append"], [19, 2, 1, "", "appendleft"], [19, 2, 1, "", "extend"], [19, 2, 1, "", "pop"], [19, 2, 1, "", "popleft"]], "cpufreq": [[56, 4, 1, "", "get_current_frequencies"], [56, 4, 1, "", "get_supported_frequencies"], [56, 4, 1, "", "set_frequency"]], "cryptolib": [[20, 3, 1, "", "aes"]], "cryptolib.aes": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "decrypt"], [20, 2, 1, "", "encrypt"]], "deflate": [[21, 3, 1, "", "DeflateIO"]], "deflate.deflate": [[21, 5, 1, "", "AUTO"], [21, 5, 1, "", "GZIP"], [21, 5, 1, "", "RAW"], [21, 5, 1, "", "ZLIB"]], "display.DACBacklight": [[58, 2, 1, "", "backlight"], [58, 2, 1, "", "deinit"]], "display.DSIDisplay": [[62, 2, 1, "", "backlight"], [62, 2, 1, "", "bus_read"], [62, 2, 1, "", "bus_write"], [62, 2, 1, "", "clear"], [62, 2, 1, "", "deinit"], [62, 2, 1, "", "height"], [62, 2, 1, "", "refresh"], [62, 2, 1, "", "width"], [62, 2, 1, "", "write"]], "display.DisplayData": [[61, 2, 1, "", "display_id"], [61, 2, 1, "", "frame_callback"], [61, 2, 1, "", "receive_frame"], [61, 2, 1, "", "send_frame"]], "display": [[57, 5, 1, "", "FHD"], [57, 5, 1, "", "FHVGA"], [57, 5, 1, "", "FHVGA2"], [57, 5, 1, "", "FWVGA"], [57, 5, 1, "", "FWVGA2"], [57, 5, 1, "", "HD"], [57, 5, 1, "", "QVGA"], [64, 3, 1, "", "SPIDisplay"], [57, 5, 1, "", "SVGA"], [57, 5, 1, "", "SXGA"], [57, 5, 1, "", "SXGA2"], [57, 5, 1, "", "TFWVGA"], [57, 5, 1, "", "TFWVGA2"], [57, 5, 1, "", "THVGA"], [57, 5, 1, "", "TQVGA"], [57, 5, 1, "", "UXGA"], [57, 5, 1, "", "VGA"], [57, 5, 1, "", "WSVGA"], [57, 5, 1, "", "XGA"]], "display.PWMBacklight": [[59, 2, 1, "", "backlight"], [59, 2, 1, "", "deinit"]], "display.RGBDisplay": [[63, 2, 1, "", "backlight"], [63, 2, 1, "", "clear"], [63, 2, 1, "", "deinit"], [63, 2, 1, "", "height"], [63, 2, 1, "", "refresh"], [63, 2, 1, "", "width"], [63, 2, 1, "", "write"]], "display.SPIDisplay": [[64, 2, 1, "", "backlight"], [64, 2, 1, "", "bgr"], [64, 2, 1, "", "bus_write"], [64, 2, 1, "", "byte_swap"], [64, 2, 1, "", "clear"], [64, 2, 1, "", "deinit"], [64, 2, 1, "", "height"], [64, 2, 1, "", "refresh"], [64, 2, 1, "", "triple_buffer"], [64, 2, 1, "", "width"], [64, 2, 1, "", "write"]], "display.ST7701": [[60, 2, 1, "", "init"], [60, 2, 1, "", "read_id"]], "display.display": [[58, 3, 1, "", "DACBacklight"], [62, 3, 1, "", "DSIDisplay"], [61, 3, 1, "", "DisplayData"], [59, 3, 1, "", "PWMBacklight"], [63, 3, 1, "", "RGBDisplay"], [60, 3, 1, "", "ST7701"]], "errno": [[22, 5, 1, "", "errorcode"]], "fir": [[65, 5, 1, "", "FIR_AMG8833"], [65, 5, 1, "", "FIR_LEPTON"], [65, 5, 1, "", "FIR_MLX90621"], [65, 5, 1, "", "FIR_MLX90640"], [65, 5, 1, "", "FIR_MLX90641"], [65, 5, 1, "", "FIR_NONE"], [65, 5, 1, "", "FIR_SHIELD"], [65, 4, 1, "", "deinit"], [65, 4, 1, "", "draw_ir"], [65, 4, 1, "", "get_frame_available"], [65, 4, 1, "", "height"], [65, 4, 1, "", "init"], [65, 4, 1, "", "radiometric"], [65, 4, 1, "", "read_ir"], [65, 4, 1, "", "read_ta"], [65, 4, 1, "", "refresh"], [65, 4, 1, "", "register_frame_cb"], [65, 4, 1, "", "register_vsync_cb"], [65, 4, 1, "", "resolution"], [65, 4, 1, "", "snapshot"], [65, 4, 1, "", "trigger_ffc"], [65, 4, 1, "", "type"], [65, 4, 1, "", "width"]], "ft5x06.FT5X06": [[66, 2, 1, "", "get_gesture"], [66, 2, 1, "", "get_point_flag"], [66, 2, 1, "", "get_point_id"], [66, 2, 1, "", "get_point_x"], [66, 2, 1, "", "get_point_y"], [66, 2, 1, "", "get_points"], [66, 2, 1, "", "touch_callback"], [66, 2, 1, "", "update_points"]], "ft5x06": [[66, 5, 1, "", "LCD_FLAG_MOVED"], [66, 5, 1, "", "LCD_FLAG_PRESSED"], [66, 5, 1, "", "LCD_FLAG_RELEASED"], [66, 5, 1, "", "LCD_GESTURE_MOVE_DOWN"], [66, 5, 1, "", "LCD_GESTURE_MOVE_LEFT"], [66, 5, 1, "", "LCD_GESTURE_MOVE_RIGHT"], [66, 5, 1, "", "LCD_GESTURE_MOVE_UP"], [66, 5, 1, "", "LCD_GESTURE_NONE"], [66, 5, 1, "", "LCD_GESTURE_ZOOM_IN"], [66, 5, 1, "", "LCD_GESTURE_ZOOM_OUT"]], "ft5x06.ft5x06": [[66, 3, 1, "", "FT5X06"]], "gc": [[23, 4, 1, "", "collect"], [23, 4, 1, "", "disable"], [23, 4, 1, "", "enable"], [23, 4, 1, "", "mem_alloc"], [23, 4, 1, "", "mem_free"], [23, 4, 1, "", "threshold"]], "gif": [[67, 3, 1, "", "Gif"]], "gif.Gif": [[67, 2, 1, "", "add_frame"], [67, 2, 1, "", "close"], [67, 2, 1, "", "format"], [67, 2, 1, "", "height"], [67, 2, 1, "", "loop"], [67, 2, 1, "", "size"], [67, 2, 1, "", "width"]], "gt911.GT911": [[68, 2, 1, "", "_read_reg"], [68, 2, 1, "", "_write_reg"], [68, 2, 1, "", "read_id"], [68, 2, 1, "", "read_points"], [68, 2, 1, "", "reset"]], "gt911.gt911": [[68, 3, 1, "", "GT911"]], "gzip": [[24, 3, 1, "", "GzipFile"], [24, 4, 1, "", "compress"], [24, 4, 1, "", "decompress"], [24, 4, 1, "", "open"]], "hashlib.hash": [[25, 2, 1, "", "digest"], [25, 2, 1, "", "hexdigest"], [25, 2, 1, "", "update"]], "hashlib.hashlib": [[25, 3, 1, "", "md5"], [25, 3, 1, "", "sha1"], [25, 3, 1, "", "sha256"]], "heapq": [[26, 4, 1, "", "heapify"], [26, 4, 1, "", "heappop"], [26, 4, 1, "", "heappush"]], "image": [[69, 5, 1, "", "APPLY_COLOR_PALETTE_FIRST"], [69, 5, 1, "", "AREA"], [69, 5, 1, "", "ARTOOLKIT"], [69, 5, 1, "", "BAYER"], [69, 5, 1, "", "BICUBIC"], [69, 5, 1, "", "BILINEAR"], [69, 5, 1, "", "BINARY"], [69, 5, 1, "", "BLACK_BACKGROUND"], [69, 5, 1, "", "CENTER"], [69, 5, 1, "", "CODABAR"], [69, 5, 1, "", "CODE128"], [69, 5, 1, "", "CODE39"], [69, 5, 1, "", "CODE93"], [69, 5, 1, "", "CORNER_AGAST"], [69, 5, 1, "", "CORNER_FAST"], [69, 5, 1, "", "DATABAR"], [69, 5, 1, "", "DATABAR_EXP"], [69, 5, 1, "", "EAN13"], [69, 5, 1, "", "EAN2"], [69, 5, 1, "", "EAN5"], [69, 5, 1, "", "EAN8"], [69, 5, 1, "", "EDGE_CANNY"], [69, 5, 1, "", "EDGE_SIMPLE"], [69, 5, 1, "", "EXTRACT_RGB_CHANNEL_FIRST"], [69, 5, 1, "", "GRAYSCALE"], [69, 5, 1, "", "HMIRROR"], [69, 3, 1, "", "HaarCascade"], [69, 5, 1, "", "I25"], [69, 5, 1, "", "ISBN10"], [69, 5, 1, "", "ISBN13"], [69, 3, 1, "", "Image"], [69, 3, 1, "", "ImageIO"], [69, 5, 1, "", "JPEG"], [69, 5, 1, "", "JPEG_SUBSAMPLING_420"], [69, 5, 1, "", "JPEG_SUBSAMPLING_422"], [69, 5, 1, "", "JPEG_SUBSAMPLING_444"], [69, 5, 1, "", "JPEG_SUBSAMPLING_AUTO"], [69, 5, 1, "", "PALETTE_DEPTH"], [69, 5, 1, "", "PALETTE_EVT_DARK"], [69, 5, 1, "", "PALETTE_EVT_LIGHT"], [69, 5, 1, "", "PALETTE_IRONBOW"], [69, 5, 1, "", "PALETTE_RAINBOW"], [69, 5, 1, "", "PDF417"], [69, 5, 1, "", "PNG"], [69, 5, 1, "", "RGB565"], [69, 5, 1, "", "ROTATE_180"], [69, 5, 1, "", "ROTATE_270"], [69, 5, 1, "", "ROTATE_90"], [69, 5, 1, "", "SCALE_ASPECT_EXPAND"], [69, 5, 1, "", "SCALE_ASPECT_IGNORE"], [69, 5, 1, "", "SCALE_ASPECT_KEEP"], [69, 5, 1, "", "SEARCH_DS"], [69, 5, 1, "", "SEARCH_EX"], [69, 3, 1, "", "Similarity"], [69, 5, 1, "", "TAG16H5"], [69, 5, 1, "", "TAG25H7"], [69, 5, 1, "", "TAG25H9"], [69, 5, 1, "", "TAG36H10"], [69, 5, 1, "", "TAG36H11"], [69, 5, 1, "", "TRANSPOSE"], [69, 5, 1, "", "UPCA"], [69, 5, 1, "", "UPCE"], [69, 5, 1, "", "VFLIP"], [69, 5, 1, "", "YUV422"], [69, 3, 1, "", "apriltag"], [69, 3, 1, "", "barcode"], [69, 4, 1, "", "binary_to_grayscale"], [69, 4, 1, "", "binary_to_lab"], [69, 4, 1, "", "binary_to_rgb"], [69, 4, 1, "", "binary_to_yuv"], [69, 3, 1, "", "blob"], [69, 3, 1, "", "circle"], [69, 3, 1, "", "datamatrix"], [69, 3, 1, "", "displacement"], [69, 4, 1, "", "grayscale_to_binary"], [69, 4, 1, "", "grayscale_to_lab"], [69, 4, 1, "", "grayscale_to_rgb"], [69, 4, 1, "", "grayscale_to_yuv"], [69, 3, 1, "", "histogram"], [69, 3, 1, "", "kptmatch"], [69, 4, 1, "", "lab_to_binary"], [69, 4, 1, "", "lab_to_grayscale"], [69, 4, 1, "", "lab_to_rgb"], [69, 4, 1, "", "lab_to_yuv"], [69, 3, 1, "", "line"], [69, 4, 1, "", "load_decriptor"], [69, 4, 1, "", "match_descriptor"], [69, 3, 1, "", "percentile"], [69, 3, 1, "", "qrcode"], [69, 3, 1, "", "rect"], [69, 4, 1, "", "rgb_to_binary"], [69, 4, 1, "", "rgb_to_grayscale"], [69, 4, 1, "", "rgb_to_lab"], [69, 4, 1, "", "rgb_to_yuv"], [69, 4, 1, "", "save_descriptor"], [69, 3, 1, "", "statistics"], [69, 3, 1, "", "threshold"], [69, 4, 1, "", "yuv_to_binary"], [69, 4, 1, "", "yuv_to_grayscale"], [69, 4, 1, "", "yuv_to_lab"], [69, 4, 1, "", "yuv_to_rgb"]], "image.Image": [[69, 2, 1, "", "add"], [69, 2, 1, "", "assign"], [69, 2, 1, "", "awb"], [69, 2, 1, "", "b_and"], [69, 2, 1, "", "b_nand"], [69, 2, 1, "", "b_nor"], [69, 2, 1, "", "b_or"], [69, 2, 1, "", "b_xnor"], [69, 2, 1, "", "b_xor"], [69, 2, 1, "", "bilateral"], [69, 2, 1, "", "binary"], [69, 2, 1, "", "black_hat"], [69, 2, 1, "", "blend"], [69, 2, 1, "", "bytearray"], [69, 2, 1, "", "ccm"], [69, 2, 1, "", "clear"], [69, 2, 1, "", "close"], [69, 2, 1, "", "compress"], [69, 2, 1, "", "copy"], [69, 2, 1, "", "crop"], [69, 2, 1, "", "difference"], [69, 2, 1, "", "dilate"], [69, 2, 1, "", "draw_arrow"], [69, 2, 1, "", "draw_circle"], [69, 2, 1, "", "draw_cross"], [69, 2, 1, "", "draw_edges"], [69, 2, 1, "", "draw_ellipse"], [69, 2, 1, "", "draw_image"], [69, 2, 1, "", "draw_keypoints"], [69, 2, 1, "", "draw_line"], [69, 2, 1, "", "draw_rectangle"], [69, 2, 1, "", "draw_string"], [69, 2, 1, "", "erode"], [69, 2, 1, "", "find_apriltags"], [69, 2, 1, "", "find_barcodes"], [69, 2, 1, "", "find_blobs"], [69, 2, 1, "", "find_circles"], [69, 2, 1, "", "find_datamatrices"], [69, 2, 1, "", "find_displacement"], [69, 2, 1, "", "find_edges"], [69, 2, 1, "", "find_eye"], [69, 2, 1, "", "find_features"], [69, 2, 1, "", "find_hog"], [69, 2, 1, "", "find_keypoints"], [69, 2, 1, "", "find_lbp"], [69, 2, 1, "", "find_line_segments"], [69, 2, 1, "", "find_lines"], [69, 2, 1, "", "find_qrcodes"], [69, 2, 1, "", "find_rects"], [69, 2, 1, "", "find_template"], [69, 2, 1, "", "flood_fill"], [69, 2, 1, "", "flush"], [69, 2, 1, "", "format"], [69, 2, 1, "", "gamma"], [69, 2, 1, "", "gamma_corr"], [69, 2, 1, "", "gaussian"], [69, 2, 1, "", "get_histogram"], [69, 2, 1, "", "get_pixel"], [69, 2, 1, "", "get_regression"], [69, 2, 1, "", "get_similarity"], [69, 2, 1, "", "get_statistics"], [69, 2, 1, "", "height"], [69, 2, 1, "", "histeq"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "laplacian"], [69, 2, 1, "", "lens_corr"], [69, 2, 1, "", "linpolar"], [69, 2, 1, "", "logpolar"], [69, 2, 1, "", "mask_circle"], [69, 2, 1, "", "mask_ellipse"], [69, 2, 1, "", "mask_rectange"], [69, 2, 1, "", "max"], [69, 2, 1, "", "mean"], [69, 2, 1, "", "median"], [69, 2, 1, "", "midpoint"], [69, 2, 1, "", "min"], [69, 2, 1, "", "mode"], [69, 2, 1, "", "morph"], [69, 2, 1, "", "negate"], [69, 2, 1, "", "open"], [69, 2, 1, "", "replace"], [69, 2, 1, "", "rotation_corr"], [69, 2, 1, "", "save"], [69, 2, 1, "", "scale"], [69, 2, 1, "", "set"], [69, 2, 1, "", "set_pixel"], [69, 2, 1, "", "size"], [69, 2, 1, "", "stero_disparity"], [69, 2, 1, "", "sub"], [69, 2, 1, "", "to_bitmap"], [69, 2, 1, "", "to_depth"], [69, 2, 1, "", "to_evt_dark"], [69, 2, 1, "", "to_evt_light"], [69, 2, 1, "", "to_grayscale"], [69, 2, 1, "", "to_ironbow"], [69, 2, 1, "", "to_jpeg"], [69, 2, 1, "", "to_ndarray"], [69, 2, 1, "", "to_png"], [69, 2, 1, "", "to_rainbow"], [69, 2, 1, "", "to_rgb565"], [69, 2, 1, "", "top_hat"], [69, 2, 1, "", "width"]], "image.ImageIO": [[69, 5, 1, "", "FILE_STREAM"], [69, 5, 1, "", "MEMORY_STREAM"], [69, 2, 1, "", "buffer_size"], [69, 2, 1, "", "close"], [69, 2, 1, "", "count"], [69, 2, 1, "", "is_closed"], [69, 2, 1, "", "offset"], [69, 2, 1, "", "read"], [69, 2, 1, "", "seek"], [69, 2, 1, "", "size"], [69, 2, 1, "", "sync"], [69, 2, 1, "", "type"], [69, 2, 1, "", "version"], [69, 2, 1, "", "write"]], "image.Similarity": [[69, 2, 1, "", "max"], [69, 2, 1, "", "mean"], [69, 2, 1, "", "min"], [69, 2, 1, "", "stdev"]], "image.apriltag": [[69, 2, 1, "", "corners"], [69, 2, 1, "", "cx"], [69, 2, 1, "", "cxf"], [69, 2, 1, "", "cy"], [69, 2, 1, "", "cyf"], [69, 2, 1, "", "decision_margin"], [69, 2, 1, "", "family"], [69, 2, 1, "", "goodness"], [69, 2, 1, "", "h"], [69, 2, 1, "", "hamming"], [69, 2, 1, "", "id"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "rotation"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "x_rotation"], [69, 2, 1, "", "x_translation"], [69, 2, 1, "", "y"], [69, 2, 1, "", "y_rotation"], [69, 2, 1, "", "y_translation"], [69, 2, 1, "", "z_rotation"], [69, 2, 1, "", "z_translation"]], "image.barcode": [[69, 2, 1, "", "corners"], [69, 2, 1, "", "h"], [69, 2, 1, "", "payload"], [69, 2, 1, "", "quality"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "rotation"], [69, 2, 1, "", "type"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.blob": [[69, 2, 1, "", "area"], [69, 2, 1, "", "code"], [69, 2, 1, "", "compactness"], [69, 2, 1, "", "convexity"], [69, 2, 1, "", "corners"], [69, 2, 1, "", "count"], [69, 2, 1, "", "cx"], [69, 2, 1, "", "cxf"], [69, 2, 1, "", "cy"], [69, 2, 1, "", "cyf"], [69, 2, 1, "", "density"], [69, 2, 1, "", "elongation"], [69, 2, 1, "", "enclosed_ellipse"], [69, 2, 1, "", "enclosing_circle"], [69, 2, 1, "", "extent"], [69, 2, 1, "", "h"], [69, 2, 1, "", "major_axis_line"], [69, 2, 1, "", "min_corners"], [69, 2, 1, "", "minor_axis_line"], [69, 2, 1, "", "perimeter"], [69, 2, 1, "", "pixels"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "rotation"], [69, 2, 1, "", "rotation_deg"], [69, 2, 1, "", "rotation_rad"], [69, 2, 1, "", "roundness"], [69, 2, 1, "", "solidity"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "x_hist_bins"], [69, 2, 1, "", "y"], [69, 2, 1, "", "y_hist_bins"]], "image.circle": [[69, 2, 1, "", "magnitude"], [69, 2, 1, "", "r"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.datamatrix": [[69, 2, 1, "", "capacity"], [69, 2, 1, "", "columns"], [69, 2, 1, "", "corners"], [69, 2, 1, "", "h"], [69, 2, 1, "", "padding"], [69, 2, 1, "", "payload"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "rotation"], [69, 2, 1, "", "rows"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.displacement": [[69, 2, 1, "", "response"], [69, 2, 1, "", "rotation"], [69, 2, 1, "", "scale"], [69, 2, 1, "", "x_translation"], [69, 2, 1, "", "y_translation"]], "image.histogram": [[69, 2, 1, "", "a_bins"], [69, 2, 1, "", "b_bins"], [69, 2, 1, "", "bins"], [69, 2, 1, "", "get_percentile"], [69, 2, 1, "", "get_statistics"], [69, 2, 1, "", "get_threshold"], [69, 2, 1, "", "l_bins"]], "image.kptmatch": [[69, 2, 1, "", "count"], [69, 2, 1, "", "cx"], [69, 2, 1, "", "cy"], [69, 2, 1, "", "h"], [69, 2, 1, "", "match"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "theta"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.line": [[69, 2, 1, "", "length"], [69, 2, 1, "", "line"], [69, 2, 1, "", "magnitude"], [69, 2, 1, "", "rho"], [69, 2, 1, "", "theta"], [69, 2, 1, "", "x1"], [69, 2, 1, "", "x2"], [69, 2, 1, "", "y1"], [69, 2, 1, "", "y2"]], "image.percentile": [[69, 2, 1, "", "a_value"], [69, 2, 1, "", "b_value"], [69, 2, 1, "", "l_value"], [69, 2, 1, "", "value"]], "image.qrcode": [[69, 2, 1, "", "corners"], [69, 2, 1, "", "data_type"], [69, 2, 1, "", "ecc_level"], [69, 2, 1, "", "eci"], [69, 2, 1, "", "h"], [69, 2, 1, "", "is_alphanumeric"], [69, 2, 1, "", "is_binary"], [69, 2, 1, "", "is_kanji"], [69, 2, 1, "", "is_numeric"], [69, 2, 1, "", "mask"], [69, 2, 1, "", "payload"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "version"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.rect": [[69, 2, 1, "", "corners"], [69, 2, 1, "", "h"], [69, 2, 1, "", "magnitude"], [69, 2, 1, "", "rect"], [69, 2, 1, "", "w"], [69, 2, 1, "", "x"], [69, 2, 1, "", "y"]], "image.statistics": [[69, 2, 1, "", "a_lq"], [69, 2, 1, "", "a_max"], [69, 2, 1, "", "a_mean"], [69, 2, 1, "", "a_median"], [69, 2, 1, "", "a_min"], [69, 2, 1, "", "a_mode"], [69, 2, 1, "", "a_stdev"], [69, 2, 1, "", "a_uq"], [69, 2, 1, "", "b_lq"], [69, 2, 1, "", "b_max"], [69, 2, 1, "", "b_mean"], [69, 2, 1, "", "b_median"], [69, 2, 1, "", "b_min"], [69, 2, 1, "", "b_mode"], [69, 2, 1, "", "b_stdev"], [69, 2, 1, "", "b_uq"], [69, 2, 1, "", "l_lq"], [69, 2, 1, "", "l_max"], [69, 2, 1, "", "l_mean"], [69, 2, 1, "", "l_median"], [69, 2, 1, "", "l_min"], [69, 2, 1, "", "l_mode"], [69, 2, 1, "", "l_stdev"], [69, 2, 1, "", "l_uq"], [69, 2, 1, "", "lq"], [69, 2, 1, "", "max"], [69, 2, 1, "", "mean"], [69, 2, 1, "", "median"], [69, 2, 1, "", "min"], [69, 2, 1, "", "mode"], [69, 2, 1, "", "stdev"], [69, 2, 1, "", "uq"]], "image.threshold": [[69, 2, 1, "", "a_value"], [69, 2, 1, "", "b_value"], [69, 2, 1, "", "l_value"], [69, 2, 1, "", "value"]], "imu": [[70, 4, 1, "", "__read_reg"], [70, 4, 1, "", "__write_reg"], [70, 4, 1, "", "acceleration_mg"], [70, 4, 1, "", "angular_rate_mdps"], [70, 4, 1, "", "pitch"], [70, 4, 1, "", "roll"], [70, 4, 1, "", "sleep"], [70, 4, 1, "", "temperature_c"]], "int": [[17, 2, 1, "", "from_bytes"], [17, 2, 1, "", "to_bytes"]], "io": [[28, 3, 1, "", "BytesIO"], [28, 3, 1, "", "StringIO"], [28, 4, 1, "", "open"]], "io.BytesIO": [[28, 2, 1, "", "getvalue"]], "json": [[29, 4, 1, "", "dump"], [29, 4, 1, "", "dumps"], [29, 4, 1, "", "load"], [29, 4, 1, "", "loads"]], "machine": [[31, 3, 1, "", "ADC"], [32, 3, 1, "", "ADCBlock"], [33, 3, 1, "", "CAN"], [34, 3, 1, "", "I2C"], [35, 3, 1, "", "I2S"], [36, 3, 1, "", "LED"], [37, 3, 1, "", "PWM"], [38, 3, 1, "", "Pin"], [39, 3, 1, "", "RTC"], [40, 3, 1, "", "SPI"], [41, 3, 1, "", "Signal"], [34, 3, 1, "", "SoftI2C"], [40, 3, 1, "", "SoftSPI"], [42, 3, 1, "", "Timer"], [43, 3, 1, "", "UART"], [44, 3, 1, "", "WDT"], [30, 4, 1, "", "bitstream"], [30, 4, 1, "", "bootloader"], [30, 4, 1, "", "deepsleep"], [30, 4, 1, "", "disable_irq"], [30, 4, 1, "", "enable_irq"], [30, 4, 1, "", "freq"], [30, 4, 1, "", "idle"], [30, 4, 1, "", "lightsleep"], [30, 5, 1, "", "mem16"], [30, 5, 1, "", "mem32"], [30, 5, 1, "", "mem8"], [30, 4, 1, "", "reset"], [30, 4, 1, "", "reset_cause"], [30, 4, 1, "", "sleep"], [30, 4, 1, "", "soft_reset"], [30, 4, 1, "", "time_pulse_us"], [30, 4, 1, "", "unique_id"]], "machine.ADC": [[31, 2, 1, "", "block"], [31, 2, 1, "", "init"], [31, 2, 1, "", "read_u16"], [31, 2, 1, "", "read_uv"]], "machine.ADCBlock": [[32, 2, 1, "", "connect"], [32, 2, 1, "", "init"]], "machine.CAN": [[33, 5, 1, "", "BUS_OFF"], [33, 5, 1, "", "DUAL"], [33, 5, 1, "", "ERROR_ACTIVE"], [33, 5, 1, "", "ERROR_PASSIVE"], [33, 5, 1, "", "ERROR_WARNING"], [33, 5, 1, "", "LIST32"], [33, 5, 1, "", "LOOPBACK"], [33, 5, 1, "", "NORMAL"], [33, 5, 1, "", "SILENT"], [33, 5, 1, "", "SILENT_LOOPBACK"], [33, 5, 1, "", "STOPPED"], [33, 2, 1, "", "any"], [33, 2, 1, "", "clearfilter"], [33, 2, 1, "", "deinit"], [33, 2, 1, "", "info"], [33, 2, 1, "", "init"], [33, 2, 1, "", "recv"], [33, 2, 1, "", "restart"], [33, 2, 1, "", "rxcallback"], [33, 2, 1, "", "send"], [33, 2, 1, "", "setfilter"], [33, 2, 1, "", "state"]], "machine.I2C": [[34, 2, 1, "", "init"], [34, 2, 1, "", "readfrom"], [34, 2, 1, "", "readfrom_into"], [34, 2, 1, "", "readfrom_mem"], [34, 2, 1, "", "readfrom_mem_into"], [34, 2, 1, "", "readinto"], [34, 2, 1, "", "scan"], [34, 2, 1, "", "start"], [34, 2, 1, "", "stop"], [34, 2, 1, "", "write"], [34, 2, 1, "", "writeto"], [34, 2, 1, "", "writeto_mem"], [34, 2, 1, "", "writevto"]], "machine.I2S": [[35, 5, 1, "", "MONO"], [35, 5, 1, "", "RX"], [35, 5, 1, "", "STEREO"], [35, 5, 1, "", "TX"], [35, 2, 1, "", "deinit"], [35, 2, 1, "", "init"], [35, 2, 1, "", "irq"], [35, 2, 1, "", "readinto"], [35, 2, 1, "", "shift"], [35, 2, 1, "", "write"]], "machine.LED": [[36, 2, 1, "", "boardname"], [36, 2, 1, "", "on"], [36, 2, 1, "", "toggle"], [36, 2, 1, "", "value"]], "machine.PWM": [[37, 2, 1, "", "deinit"], [37, 2, 1, "", "duty_ns"], [37, 2, 1, "", "duty_u16"], [37, 2, 1, "", "freq"], [37, 2, 1, "", "init"]], "machine.Pin": [[38, 5, 1, "", "ALT"], [38, 5, 1, "", "ALT_OPEN_DRAIN"], [38, 5, 1, "", "ANALOG"], [38, 5, 1, "", "DRIVE_0"], [38, 5, 1, "", "DRIVE_1"], [38, 5, 1, "", "DRIVE_2"], [38, 5, 1, "", "IN"], [38, 5, 1, "", "IRQ_FALLING"], [38, 5, 1, "", "IRQ_HIGH_LEVEL"], [38, 5, 1, "", "IRQ_LOW_LEVEL"], [38, 5, 1, "", "IRQ_RISING"], [38, 5, 1, "", "OPEN_DRAIN"], [38, 5, 1, "", "OUT"], [38, 5, 1, "", "PULL_DOWN"], [38, 5, 1, "", "PULL_HOLD"], [38, 5, 1, "", "PULL_UP"], [38, 2, 1, "", "__call__"], [38, 2, 1, "", "drive"], [38, 2, 1, "", "high"], [38, 2, 1, "", "init"], [38, 2, 1, "", "irq"], [38, 2, 1, "", "low"], [38, 2, 1, "", "mode"], [38, 2, 1, "", "off"], [38, 2, 1, "", "on"], [38, 2, 1, "", "pull"], [38, 2, 1, "", "toggle"], [38, 2, 1, "", "value"]], "machine.RTC": [[39, 5, 1, "", "ALARM0"], [39, 2, 1, "", "alarm"], [39, 2, 1, "", "alarm_cancel"], [39, 2, 1, "", "alarm_left"], [39, 2, 1, "", "datetime"], [39, 2, 1, "", "deinit"], [39, 2, 1, "", "init"], [39, 2, 1, "", "irq"], [39, 2, 1, "", "memory"], [39, 2, 1, "", "now"]], "machine.SPI": [[40, 5, 1, "", "CONTROLLER"], [40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"], [40, 2, 1, "", "deinit"], [40, 2, 1, "", "init"], [40, 2, 1, "", "read"], [40, 2, 1, "", "readinto"], [40, 2, 1, "", "write"], [40, 2, 1, "", "write_readinto"]], "machine.Signal": [[41, 2, 1, "", "off"], [41, 2, 1, "", "on"], [41, 2, 1, "", "value"]], "machine.SoftSPI": [[40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"]], "machine.Timer": [[42, 5, 1, "", "ONE_SHOT"], [42, 5, 1, "", "PERIODIC"], [42, 2, 1, "", "deinit"], [42, 2, 1, "", "init"]], "machine.UART": [[43, 5, 1, "", "CTS"], [43, 5, 1, "", "IRQ_BREAK"], [43, 5, 1, "", "IRQ_RX"], [43, 5, 1, "", "IRQ_RXIDLE"], [43, 5, 1, "", "IRQ_TXIDLE"], [43, 5, 1, "", "RTS"], [43, 2, 1, "", "any"], [43, 2, 1, "", "deinit"], [43, 2, 1, "", "flush"], [43, 2, 1, "", "init"], [43, 2, 1, "", "irq"], [43, 2, 1, "", "read"], [43, 2, 1, "", "readinto"], [43, 2, 1, "", "readline"], [43, 2, 1, "", "sendbreak"], [43, 2, 1, "", "txdone"], [43, 2, 1, "", "write"]], "machine.WDT": [[44, 2, 1, "", "feed"]], "machine.machine": [[30, 5, 1, "", "DEEPSLEEP"], [30, 5, 1, "", "DEEPSLEEP_RESET"], [30, 5, 1, "", "HARD_RESET"], [30, 5, 1, "", "IDLE"], [30, 5, 1, "", "PIN_WAKE"], [30, 5, 1, "", "PWRON_RESET"], [30, 5, 1, "", "RTC_WAKE"], [30, 5, 1, "", "SLEEP"], [30, 5, 1, "", "SOFT_RESET"], [30, 5, 1, "", "WDT_RESET"], [30, 5, 1, "", "WLAN_WAKE"]], "marshal": [[45, 4, 1, "", "dumps"], [45, 4, 1, "", "loads"]], "math": [[46, 4, 1, "", "acos"], [46, 4, 1, "", "acosh"], [46, 4, 1, "", "asin"], [46, 4, 1, "", "asinh"], [46, 4, 1, "", "atan"], [46, 4, 1, "", "atan2"], [46, 4, 1, "", "atanh"], [46, 4, 1, "", "ceil"], [46, 4, 1, "", "copysign"], [46, 4, 1, "", "cos"], [46, 4, 1, "", "cosh"], [46, 4, 1, "", "degrees"], [46, 5, 1, "", "e"], [46, 4, 1, "", "erf"], [46, 4, 1, "", "erfc"], [46, 4, 1, "", "exp"], [46, 4, 1, "", "expm1"], [46, 4, 1, "", "fabs"], [46, 4, 1, "", "floor"], [46, 4, 1, "", "fmod"], [46, 4, 1, "", "frexp"], [46, 4, 1, "", "gamma"], [46, 4, 1, "", "isfinite"], [46, 4, 1, "", "isinf"], [46, 4, 1, "", "isnan"], [46, 4, 1, "", "ldexp"], [46, 4, 1, "", "lgamma"], [46, 4, 1, "", "log"], [46, 4, 1, "", "log10"], [46, 4, 1, "", "log2"], [46, 4, 1, "", "modf"], [46, 5, 1, "", "pi"], [46, 4, 1, "", "pow"], [46, 4, 1, "", "radians"], [46, 4, 1, "", "sin"], [46, 4, 1, "", "sinh"], [46, 4, 1, "", "sqrt"], [46, 4, 1, "", "tan"], [46, 4, 1, "", "tanh"], [46, 4, 1, "", "trunc"]], "micropython": [[47, 3, 1, "", "RingIO"], [47, 4, 1, "", "alloc_emergency_exception_buf"], [47, 4, 1, "", "const"], [47, 4, 1, "", "heap_lock"], [47, 4, 1, "", "heap_locked"], [47, 4, 1, "", "heap_unlock"], [47, 4, 1, "", "kbd_intr"], [47, 4, 1, "", "mem_info"], [47, 4, 1, "", "opt_level"], [47, 4, 1, "", "qstr_info"], [47, 4, 1, "", "schedule"], [47, 4, 1, "", "stack_use"]], "micropython.RingIO": [[47, 2, 1, "", "any"], [47, 2, 1, "", "close"], [47, 2, 1, "", "read"], [47, 2, 1, "", "readinto"], [47, 2, 1, "", "readline"], [47, 2, 1, "", "write"]], "mjpeg": [[71, 3, 1, "", "Mjpeg"]], "mjpeg.Mjpeg": [[71, 2, 1, "", "add_frame"], [71, 2, 1, "", "close"], [71, 2, 1, "", "count"], [71, 2, 1, "", "height"], [71, 2, 1, "", "is_closed"], [71, 2, 1, "", "size"], [71, 2, 1, "", "sync"], [71, 2, 1, "", "width"], [71, 2, 1, "", "write"]], "ml": [[72, 3, 1, "", "Model"], [73, 1, 0, "-", "apps"], [74, 1, 0, "-", "postprocessing"], [75, 1, 0, "-", "preprocessing"], [76, 1, 0, "-", "utils"]], "ml.Model": [[72, 6, 1, "", "input_dtype"], [72, 6, 1, "", "input_scale"], [72, 6, 1, "", "input_shape"], [72, 6, 1, "", "input_zero_point"], [72, 6, 1, "", "labels"], [72, 6, 1, "", "len"], [72, 6, 1, "", "output_dtype"], [72, 6, 1, "", "output_scale"], [72, 6, 1, "", "output_shape"], [72, 6, 1, "", "output_zero_point"], [72, 2, 1, "", "predict"], [72, 6, 1, "", "ram"]], "ml.apps": [[73, 3, 1, "", "MicroSpeech"]], "ml.apps.MicroSpeech": [[73, 2, 1, "", "listen"]], "ml.postprocessing": [[74, 3, 1, "", "fomo_postprocess"], [74, 3, 1, "", "yolo_lc_postprocess"], [74, 3, 1, "", "yolo_v2_postprocess"], [74, 3, 1, "", "yolo_v5_postprocess"], [74, 3, 1, "", "yolo_v8_postprocess"]], "ml.preprocessing": [[75, 3, 1, "", "Normalization"]], "ml.utils": [[76, 3, 1, "", "NMS"]], "ml.utils.NMS": [[76, 2, 1, "", "add_bounding_boxes"], [76, 2, 1, "", "get_bounding_boxes"]], "mutex": [[48, 3, 1, "", "Mutex"]], "mutex.Mutex": [[48, 2, 1, "", "release"], [48, 2, 1, "", "test"]], "network": [[49, 3, 1, "", "AbstractNIC"], [50, 3, 1, "", "LAN"], [51, 3, 1, "", "PPP"], [52, 3, 1, "", "WINC"], [53, 3, 1, "", "WLAN"], [49, 4, 1, "", "country"], [49, 4, 1, "", "hostname"], [49, 4, 1, "", "ipconfig"], [49, 4, 1, "", "phy_mode"]], "network.AbstractNIC": [[49, 2, 1, "", "active"], [49, 2, 1, "", "config"], [49, 2, 1, "", "connect"], [49, 2, 1, "", "disconnect"], [49, 2, 1, "", "ifconfig"], [49, 2, 1, "", "ipconfig"], [49, 2, 1, "", "isconnected"], [49, 2, 1, "", "scan"], [49, 2, 1, "", "status"]], "network.LAN": [[50, 2, 1, "", "active"], [50, 2, 1, "", "config"], [50, 2, 1, "", "ifconfig"], [50, 2, 1, "", "isconnected"], [50, 2, 1, "", "status"]], "network.PPP": [[51, 5, 1, "", "SEC_CHAP"], [51, 5, 1, "", "SEC_NONE"], [51, 5, 1, "", "SEC_PAP"], [51, 2, 1, "", "config"], [51, 2, 1, "", "connect"], [51, 2, 1, "", "disconnect"], [51, 2, 1, "", "ifconfig"], [51, 2, 1, "", "ipconfig"], [51, 2, 1, "", "isconnected"], [51, 2, 1, "", "poll"], [51, 2, 1, "", "status"]], "network.WINC": [[52, 5, 1, "", "802_1X"], [52, 5, 1, "", "MODE_AP"], [52, 5, 1, "", "MODE_BSP"], [52, 5, 1, "", "MODE_FIRMWARE"], [52, 5, 1, "", "MODE_P2P"], [52, 5, 1, "", "MODE_STA"], [52, 5, 1, "", "OPEN"], [52, 5, 1, "", "WPA_PSK"], [52, 2, 1, "", "active"], [52, 2, 1, "", "connect"], [52, 2, 1, "", "connected_sta"], [52, 2, 1, "", "disconnect"], [52, 2, 1, "", "fw_dump"], [52, 2, 1, "", "fw_update"], [52, 2, 1, "", "fw_version"], [52, 2, 1, "", "ifconfig"], [52, 2, 1, "", "isconnected"], [52, 2, 1, "", "netinfo"], [52, 2, 1, "", "rssi"], [52, 2, 1, "", "scan"], [52, 2, 1, "", "start_ap"], [52, 2, 1, "", "wait_for_sta"]], "network.WLAN": [[53, 5, 1, "", "PM_NONE"], [53, 5, 1, "", "PM_PERFORMANCE"], [53, 5, 1, "", "PM_POWERSAVE"], [53, 2, 1, "", "active"], [53, 2, 1, "", "config"], [53, 2, 1, "", "connect"], [53, 2, 1, "", "disconnect"], [53, 2, 1, "", "ifconfig"], [53, 2, 1, "", "isconnected"], [53, 2, 1, "", "scan"], [53, 2, 1, "", "status"]], "omv": [[77, 4, 1, "", "arch"], [77, 4, 1, "", "board_id"], [77, 4, 1, "", "board_type"], [77, 4, 1, "", "disable_fb"], [77, 4, 1, "", "version_major"], [77, 4, 1, "", "version_minor"], [77, 4, 1, "", "version_patch"], [77, 4, 1, "", "version_string"]], "openamp": [[84, 3, 1, "", "Endpoint"], [84, 3, 1, "", "RemoteProc"], [84, 4, 1, "", "new_service_callback"]], "openamp.Endpoint": [[84, 2, 1, "", "deinit"], [84, 2, 1, "", "is_ready"], [84, 2, 1, "", "send"]], "openamp.RemoteProc": [[84, 2, 1, "", "shutdown"], [84, 2, 1, "", "start"], [84, 2, 1, "", "stop"]], "os": [[85, 3, 1, "", "VfsFat"], [85, 3, 1, "", "VfsLfs1"], [85, 3, 1, "", "VfsLfs2"], [85, 3, 1, "", "VfsPosix"], [85, 4, 1, "", "chdir"], [85, 4, 1, "", "dupterm"], [85, 4, 1, "", "getcwd"], [85, 4, 1, "", "ilistdir"], [85, 4, 1, "", "listdir"], [85, 4, 1, "", "mkdir"], [85, 4, 1, "", "mount"], [85, 4, 1, "", "remove"], [85, 4, 1, "", "rename"], [85, 4, 1, "", "rmdir"], [85, 4, 1, "", "stat"], [85, 4, 1, "", "statvfs"], [85, 4, 1, "", "sync"], [85, 4, 1, "", "umount"], [85, 4, 1, "", "uname"], [85, 4, 1, "", "urandom"]], "platform": [[86, 4, 1, "", "libc_ver"], [86, 4, 1, "", "platform"], [86, 4, 1, "", "python_compiler"]], "pyb": [[88, 3, 1, "", "ADC"], [89, 3, 1, "", "CAN"], [90, 3, 1, "", "DAC"], [91, 3, 1, "", "ExtInt"], [92, 3, 1, "", "Flash"], [93, 3, 1, "", "I2C"], [94, 3, 1, "", "LED"], [95, 3, 1, "", "Pin"], [96, 3, 1, "", "RTC"], [97, 3, 1, "", "SPI"], [98, 3, 1, "", "Servo"], [99, 3, 1, "", "Timer"], [100, 3, 1, "", "UART"], [101, 3, 1, "", "USB_HID"], [102, 3, 1, "", "USB_VCP"], [87, 4, 1, "", "bootloader"], [87, 4, 1, "", "delay"], [87, 4, 1, "", "disable_irq"], [87, 4, 1, "", "elapsed_micros"], [87, 4, 1, "", "elapsed_millis"], [87, 4, 1, "", "enable_irq"], [87, 4, 1, "", "fault_debug"], [87, 4, 1, "", "hard_reset"], [87, 4, 1, "", "have_cdc"], [87, 4, 1, "", "hid"], [87, 4, 1, "", "info"], [87, 4, 1, "", "main"], [87, 4, 1, "", "micros"], [87, 4, 1, "", "millis"], [87, 4, 1, "", "mount"], [87, 4, 1, "", "repl_uart"], [87, 4, 1, "", "rng"], [87, 4, 1, "", "standby"], [87, 4, 1, "", "stop"], [87, 4, 1, "", "sync"], [87, 4, 1, "", "udelay"], [87, 4, 1, "", "unique_id"], [87, 4, 1, "", "usb_mode"], [87, 4, 1, "", "wfi"]], "pyb.ADC": [[88, 2, 1, "", "read"], [88, 2, 1, "", "read_timed"]], "pyb.CAN": [[89, 5, 1, "", "BUS_OFF"], [89, 5, 1, "", "DUAL"], [89, 5, 1, "", "ERROR_ACTIVE"], [89, 5, 1, "", "ERROR_PASSIVE"], [89, 5, 1, "", "ERROR_WARNING"], [89, 5, 1, "", "LIST16"], [89, 5, 1, "", "LIST32"], [89, 5, 1, "", "LOOPBACK"], [89, 5, 1, "", "MASK"], [89, 5, 1, "", "MASK16"], [89, 5, 1, "", "MASK32"], [89, 5, 1, "", "NORMAL"], [89, 5, 1, "", "RANGE"], [89, 5, 1, "", "SILENT"], [89, 5, 1, "", "SILENT_LOOPBACK"], [89, 5, 1, "", "STOPPED"], [89, 2, 1, "", "any"], [89, 2, 1, "", "clearfilter"], [89, 2, 1, "", "deinit"], [89, 2, 1, "", "info"], [89, 2, 1, "", "recv"], [89, 2, 1, "", "restart"], [89, 2, 1, "", "rxcallback"], [89, 2, 1, "", "send"], [89, 2, 1, "", "setfilter"], [89, 2, 1, "", "state"]], "pyb.DAC": [[90, 5, 1, "", "CIRCULAR"], [90, 5, 1, "", "NORMAL"], [90, 2, 1, "", "deinit"], [90, 2, 1, "", "init"], [90, 2, 1, "", "noise"], [90, 2, 1, "", "triangle"], [90, 2, 1, "", "write"], [90, 2, 1, "", "write_timed"]], "pyb.ExtInt": [[91, 5, 1, "", "IRQ_FALLING"], [91, 5, 1, "", "IRQ_RISING"], [91, 5, 1, "", "IRQ_RISING_FALLING"], [91, 2, 1, "", "disable"], [91, 2, 1, "", "enable"], [91, 2, 1, "", "line"], [91, 2, 1, "", "regs"], [91, 2, 1, "", "swint"]], "pyb.Flash": [[92, 2, 1, "", "ioctl"], [92, 2, 1, "", "readblocks"], [92, 2, 1, "", "writeblocks"]], "pyb.I2C": [[93, 5, 1, "", "CONTROLLER"], [93, 5, 1, "", "PERIPHERAL"], [93, 2, 1, "", "deinit"], [93, 2, 1, "", "init"], [93, 2, 1, "", "is_ready"], [93, 2, 1, "", "mem_read"], [93, 2, 1, "", "mem_write"], [93, 2, 1, "", "recv"], [93, 2, 1, "", "scan"], [93, 2, 1, "", "send"]], "pyb.LED": [[94, 2, 1, "", "intensity"], [94, 2, 1, "", "off"], [94, 2, 1, "", "on"], [94, 2, 1, "", "toggle"]], "pyb.Pin": [[95, 5, 1, "", "AF_OD"], [95, 5, 1, "", "AF_PP"], [95, 5, 1, "", "ALT"], [95, 5, 1, "", "ANALOG"], [95, 5, 1, "", "IN"], [95, 5, 1, "", "OUT_OD"], [95, 5, 1, "", "OUT_PP"], [95, 5, 1, "", "PULL_DOWN"], [95, 5, 1, "", "PULL_NONE"], [95, 5, 1, "", "PULL_UP"], [95, 2, 1, "", "__str__"], [95, 2, 1, "", "af"], [95, 2, 1, "", "af_list"], [95, 2, 1, "", "debug"], [95, 2, 1, "", "dict"], [95, 2, 1, "", "gpio"], [95, 2, 1, "", "init"], [95, 2, 1, "", "mapper"], [95, 2, 1, "", "mode"], [95, 2, 1, "", "name"], [95, 2, 1, "", "names"], [95, 2, 1, "", "pin"], [95, 2, 1, "", "port"], [95, 2, 1, "", "pull"], [95, 2, 1, "", "value"]], "pyb.RTC": [[96, 2, 1, "", "calibration"], [96, 2, 1, "", "datetime"], [96, 2, 1, "", "info"], [96, 2, 1, "", "wakeup"]], "pyb.SPI": [[97, 5, 1, "", "CONTROLLER"], [97, 5, 1, "", "LSB"], [97, 5, 1, "", "MSB"], [97, 5, 1, "", "PERIPHERAL"], [97, 2, 1, "", "deinit"], [97, 2, 1, "", "init"], [97, 2, 1, "", "recv"], [97, 2, 1, "", "send"], [97, 2, 1, "", "send_recv"]], "pyb.Servo": [[98, 2, 1, "", "angle"], [98, 2, 1, "", "calibration"], [98, 2, 1, "", "pulse_width"], [98, 2, 1, "", "speed"]], "pyb.Timer": [[99, 5, 1, "", "BRK_HIGH"], [99, 5, 1, "", "BRK_LOW"], [99, 5, 1, "", "BRK_OFF"], [99, 5, 1, "", "CENTER"], [99, 5, 1, "", "DOWN"], [99, 5, 1, "", "UP"], [99, 2, 1, "", "callback"], [99, 2, 1, "", "channel"], [99, 2, 1, "", "counter"], [99, 2, 1, "", "deinit"], [99, 2, 1, "", "freq"], [99, 2, 1, "", "init"], [99, 2, 1, "", "period"], [99, 2, 1, "", "prescaler"], [99, 2, 1, "", "source_freq"]], "pyb.UART": [[100, 5, 1, "", "CTS"], [100, 5, 1, "", "RTS"], [100, 2, 1, "", "any"], [100, 2, 1, "", "deinit"], [100, 2, 1, "", "init"], [100, 2, 1, "", "read"], [100, 2, 1, "", "readchar"], [100, 2, 1, "", "readinto"], [100, 2, 1, "", "readline"], [100, 2, 1, "", "sendbreak"], [100, 2, 1, "", "write"], [100, 2, 1, "", "writechar"]], "pyb.USB_HID": [[101, 2, 1, "", "recv"], [101, 2, 1, "", "send"]], "pyb.USB_VCP": [[102, 5, 1, "", "CTS"], [102, 5, 1, "", "IRQ_RX"], [102, 5, 1, "", "RTS"], [102, 2, 1, "", "any"], [102, 2, 1, "", "close"], [102, 2, 1, "", "debug_mode_enabled"], [102, 2, 1, "", "init"], [102, 2, 1, "", "irq"], [102, 2, 1, "", "isconnected"], [102, 2, 1, "", "read"], [102, 2, 1, "", "readinto"], [102, 2, 1, "", "readline"], [102, 2, 1, "", "readlines"], [102, 2, 1, "", "recv"], [102, 2, 1, "", "send"], [102, 2, 1, "", "setinterrupt"], [102, 2, 1, "", "write"]], "pyb.pinaf": [[95, 2, 1, "", "__str__"], [95, 2, 1, "", "index"], [95, 2, 1, "", "name"], [95, 2, 1, "", "reg"]], "pyb.pyb": [[87, 5, 1, "", "hid_keyboard"], [87, 5, 1, "", "hid_mouse"]], "pyb.timerchannel": [[99, 2, 1, "", "callback"], [99, 2, 1, "", "capture"], [99, 2, 1, "", "compare"], [99, 2, 1, "", "pulse_width"], [99, 2, 1, "", "pulse_width_percent"]], "random": [[103, 4, 1, "", "choice"], [103, 4, 1, "", "getrandbits"], [103, 4, 1, "", "randint"], [103, 4, 1, "", "random"], [103, 4, 1, "", "randrange"], [103, 4, 1, "", "seed"], [103, 4, 1, "", "uniform"]], "re": [[104, 5, 1, "", "DEBUG"], [104, 4, 1, "", "compile"], [104, 4, 1, "", "match"], [104, 4, 1, "", "search"], [104, 4, 1, "", "sub"]], "re.match": [[104, 2, 1, "", "end"], [104, 2, 1, "", "group"], [104, 2, 1, "", "groups"], [104, 2, 1, "", "span"], [104, 2, 1, "", "start"]], "re.regex": [[104, 2, 1, "", "match"], [104, 2, 1, "", "search"], [104, 2, 1, "", "split"], [104, 2, 1, "", "sub"]], "requests": [[105, 3, 1, "", "Response"], [105, 4, 1, "", "delete"], [105, 4, 1, "", "get"], [105, 4, 1, "", "head"], [105, 4, 1, "", "patch"], [105, 4, 1, "", "post"], [105, 4, 1, "", "put"], [105, 4, 1, "", "request"]], "requests.Response": [[105, 4, 1, "", "content"], [105, 4, 1, "", "headers"], [105, 2, 1, "", "json"]], "rpc": [[78, 3, 1, "", "rpc"], [78, 3, 1, "", "rpc_can_master"], [78, 3, 1, "", "rpc_can_slave"], [78, 3, 1, "", "rpc_i2c_master"], [78, 3, 1, "", "rpc_i2c_slave"], [78, 3, 1, "", "rpc_master"], [78, 3, 1, "", "rpc_slave"], [78, 3, 1, "", "rpc_spi_master"], [78, 3, 1, "", "rpc_spi_slave"], [78, 3, 1, "", "rpc_uart_master"], [78, 3, 1, "", "rpc_uart_slave"]], "rpc.rpc": [[78, 2, 1, "", "get_bytes"], [78, 2, 1, "", "put_bytes"], [78, 2, 1, "", "stream_reader"], [78, 2, 1, "", "stream_writer"]], "rpc.rpc_master": [[78, 2, 1, "", "call"]], "rpc.rpc_slave": [[78, 2, 1, "", "loop"], [78, 2, 1, "", "register_callback"], [78, 2, 1, "", "schedule_callback"], [78, 2, 1, "", "setup_loop_callback"]], "rtsp": [[79, 3, 1, "", "rtsp_server"]], "rtsp.rtsp_server": [[79, 2, 1, "", "register_pause_cb"], [79, 2, 1, "", "register_play_cb"], [79, 2, 1, "", "register_setup_cb"], [79, 2, 1, "", "register_teardown_cb"], [79, 2, 1, "", "stream"]], "select": [[106, 4, 1, "", "poll"], [106, 4, 1, "", "select"]], "select.poll": [[106, 2, 1, "", "ipoll"], [106, 2, 1, "", "modify"], [106, 2, 1, "", "poll"], [106, 2, 1, "", "register"], [106, 2, 1, "", "unregister"]], "sensor": [[80, 5, 1, "", "B128X128"], [80, 5, 1, "", "B128X64"], [80, 5, 1, "", "B160X160"], [80, 5, 1, "", "B320X320"], [80, 5, 1, "", "B64X32"], [80, 5, 1, "", "B64X64"], [80, 5, 1, "", "BAYER"], [80, 5, 1, "", "BINARY"], [80, 5, 1, "", "BOSON320"], [80, 5, 1, "", "BOSON640"], [80, 5, 1, "", "CIF"], [80, 5, 1, "", "DOUBLE_BUFFER"], [80, 5, 1, "", "ENX320_BIAS_REFR"], [80, 5, 1, "", "FHD"], [80, 5, 1, "", "FROGEYE2020"], [80, 5, 1, "", "GC2145"], [80, 5, 1, "", "GENX320"], [80, 5, 1, "", "GENX320ES"], [80, 5, 1, "", "GENX320_BIASES_ACTIVE_MARKER"], [80, 5, 1, "", "GENX320_BIASES_DEFAULT"], [80, 5, 1, "", "GENX320_BIASES_HIGH_SPEED"], [80, 5, 1, "", "GENX320_BIASES_LOW_LIGHT"], [80, 5, 1, "", "GENX320_BIASES_LOW_NOISE"], [80, 5, 1, "", "GENX320_BIAS_DIFF_OFF"], [80, 5, 1, "", "GENX320_BIAS_DIFF_ON"], [80, 5, 1, "", "GENX320_BIAS_FO"], [80, 5, 1, "", "GENX320_BIAS_HPF"], [80, 5, 1, "", "GRAYSCALE"], [80, 5, 1, "", "HD"], [80, 5, 1, "", "HM01B0"], [80, 5, 1, "", "HM0360"], [80, 5, 1, "", "HQQQQVGA"], [80, 5, 1, "", "HQQQVGA"], [80, 5, 1, "", "HQQVGA"], [80, 5, 1, "", "HQVGA"], [80, 5, 1, "", "HVGA"], [80, 5, 1, "", "IOCTL_GENX320_SET_AFK"], [80, 5, 1, "", "IOCTL_GENX320_SET_BIAS"], [80, 5, 1, "", "IOCTL_GENX320_SET_BIASES"], [80, 5, 1, "", "IOCTL_GET_FOV_WIDE"], [80, 5, 1, "", "IOCTL_GET_NIGHT_MODE"], [80, 5, 1, "", "IOCTL_GET_READOUT_WINDOW"], [80, 5, 1, "", "IOCTL_GET_TRIGGERED_MODE"], [80, 5, 1, "", "IOCTL_HIMAX_MD_CLEAR"], [80, 5, 1, "", "IOCTL_HIMAX_MD_ENABLE"], [80, 5, 1, "", "IOCTL_HIMAX_MD_THRESHOLD"], [80, 5, 1, "", "IOCTL_HIMAX_MD_WINDOW"], [80, 5, 1, "", "IOCTL_HIMAX_OSC_ENABLE"], [80, 5, 1, "", "IOCTL_LEPTON_GET_ATTRIBUTE"], [80, 5, 1, "", "IOCTL_LEPTON_GET_AUX_TEMP"], [80, 5, 1, "", "IOCTL_LEPTON_GET_FPA_TEMP"], [80, 5, 1, "", "IOCTL_LEPTON_GET_HEIGHT"], [80, 5, 1, "", "IOCTL_LEPTON_GET_MODE"], [80, 5, 1, "", "IOCTL_LEPTON_GET_RADIOMETRY"], [80, 5, 1, "", "IOCTL_LEPTON_GET_RANGE"], [80, 5, 1, "", "IOCTL_LEPTON_GET_REFRESH"], [80, 5, 1, "", "IOCTL_LEPTON_GET_RESOLUTION"], [80, 5, 1, "", "IOCTL_LEPTON_GET_WIDTH"], [80, 5, 1, "", "IOCTL_LEPTON_RUN_COMMAND"], [80, 5, 1, "", "IOCTL_LEPTON_SET_ATTRIBUTE"], [80, 5, 1, "", "IOCTL_LEPTON_SET_MODE"], [80, 5, 1, "", "IOCTL_LEPTON_SET_RANGE"], [80, 5, 1, "", "IOCTL_PAUSE_AUTO_FOCUS"], [80, 5, 1, "", "IOCTL_RESET_AUTO_FOCUS"], [80, 5, 1, "", "IOCTL_RGB_STATS"], [80, 5, 1, "", "IOCTL_SET_FOV_WIDE"], [80, 5, 1, "", "IOCTL_SET_NIGHT_MODE"], [80, 5, 1, "", "IOCTL_SET_READOUT_WINDOW"], [80, 5, 1, "", "IOCTL_SET_TRIGGERED_MODE"], [80, 5, 1, "", "IOCTL_TRIGGER_AUTO_FOCUS"], [80, 5, 1, "", "IOCTL_WAIT_ON_AUTO_FOCUS"], [80, 5, 1, "", "JPEG"], [80, 5, 1, "", "LCD"], [80, 5, 1, "", "LEPTON"], [80, 5, 1, "", "MT9M114"], [80, 5, 1, "", "MT9V022"], [80, 5, 1, "", "MT9V024"], [80, 5, 1, "", "MT9V032"], [80, 5, 1, "", "MT9V034"], [80, 5, 1, "", "OV2640"], [80, 5, 1, "", "OV5640"], [80, 5, 1, "", "OV7690"], [80, 5, 1, "", "OV7725"], [80, 5, 1, "", "OV9650"], [80, 5, 1, "", "PAG7920"], [80, 5, 1, "", "PAG7936"], [80, 5, 1, "", "PAJ6100"], [80, 5, 1, "", "QCIF"], [80, 5, 1, "", "QHD"], [80, 5, 1, "", "QQCIF"], [80, 5, 1, "", "QQQQVGA"], [80, 5, 1, "", "QQQVGA"], [80, 5, 1, "", "QQSIF"], [80, 5, 1, "", "QQVGA"], [80, 5, 1, "", "QQVGA2"], [80, 5, 1, "", "QSIF"], [80, 5, 1, "", "QVGA"], [80, 5, 1, "", "QXGA"], [80, 5, 1, "", "RGB565"], [80, 5, 1, "", "SIF"], [80, 5, 1, "", "SINGLE_BUFFER"], [80, 5, 1, "", "SVGA"], [80, 5, 1, "", "SXGA"], [80, 5, 1, "", "SXGAM"], [80, 5, 1, "", "TRIPLE_BUFFER"], [80, 5, 1, "", "UXGA"], [80, 5, 1, "", "VGA"], [80, 5, 1, "", "VIDEO_FIFO"], [80, 5, 1, "", "WQXGA"], [80, 5, 1, "", "WQXGA2"], [80, 5, 1, "", "WVGA"], [80, 5, 1, "", "WVGA2"], [80, 5, 1, "", "WXGA"], [80, 5, 1, "", "XGA"], [80, 5, 1, "", "YUV422"], [80, 4, 1, "", "__read_reg"], [80, 4, 1, "", "__write_reg"], [80, 4, 1, "", "alloc_extra_fb"], [80, 4, 1, "", "dealloc_extra_fb"], [80, 4, 1, "", "disable_delays"], [80, 4, 1, "", "disable_full_flush"], [80, 4, 1, "", "flush"], [80, 4, 1, "", "get_auto_rotation"], [80, 4, 1, "", "get_blc_regs"], [80, 4, 1, "", "get_color_palette"], [80, 4, 1, "", "get_exposure_us"], [80, 4, 1, "", "get_fb"], [80, 4, 1, "", "get_frame_available"], [80, 4, 1, "", "get_framebuffers"], [80, 4, 1, "", "get_framerate"], [80, 4, 1, "", "get_framesize"], [80, 4, 1, "", "get_gain_db"], [80, 4, 1, "", "get_hmirror"], [80, 4, 1, "", "get_id"], [80, 4, 1, "", "get_pixformat"], [80, 4, 1, "", "get_rgb_gain_db"], [80, 4, 1, "", "get_transpose"], [80, 4, 1, "", "get_vflip"], [80, 4, 1, "", "get_windowing"], [80, 4, 1, "", "height"], [80, 4, 1, "", "ioctl"], [80, 4, 1, "", "reset"], [80, 4, 1, "", "set_auto_blc"], [80, 4, 1, "", "set_auto_exposure"], [80, 4, 1, "", "set_auto_gain"], [80, 4, 1, "", "set_auto_rotation"], [80, 4, 1, "", "set_auto_whitebal"], [80, 4, 1, "", "set_brightness"], [80, 4, 1, "", "set_color_palette"], [80, 4, 1, "", "set_colorbar"], [80, 4, 1, "", "set_contrast"], [80, 4, 1, "", "set_frame_callback"], [80, 4, 1, "", "set_framebuffers"], [80, 4, 1, "", "set_framerate"], [80, 4, 1, "", "set_framesize"], [80, 4, 1, "", "set_gainceiling"], [80, 4, 1, "", "set_hmirror"], [80, 4, 1, "", "set_lens_correction"], [80, 4, 1, "", "set_pixformat"], [80, 4, 1, "", "set_quality"], [80, 4, 1, "", "set_saturation"], [80, 4, 1, "", "set_transpose"], [80, 4, 1, "", "set_vflip"], [80, 4, 1, "", "set_vsync_callback"], [80, 4, 1, "", "set_windowing"], [80, 4, 1, "", "shutdown"], [80, 4, 1, "", "skip_frames"], [80, 4, 1, "", "sleep"], [80, 4, 1, "", "snapshot"], [80, 4, 1, "", "width"]], "socket": [[107, 5, 1, "", "AF_INET"], [107, 5, 1, "", "AF_INET6"], [107, 5, 1, "", "IPPROTO_SEC"], [107, 5, 1, "", "IPPROTO_TCP"], [107, 5, 1, "", "IPPROTO_UDP"], [107, 5, 1, "", "SOCK_DGRAM"], [107, 5, 1, "", "SOCK_STREAM"], [107, 4, 1, "", "getaddrinfo"], [107, 4, 1, "", "inet_ntop"], [107, 4, 1, "", "inet_pton"], [107, 3, 1, "", "socket"]], "socket.socket": [[107, 2, 1, "", "accept"], [107, 2, 1, "", "bind"], [107, 2, 1, "", "close"], [107, 2, 1, "", "connect"], [107, 0, 1, "", "error"], [107, 2, 1, "", "listen"], [107, 2, 1, "", "makefile"], [107, 2, 1, "", "read"], [107, 2, 1, "", "readinto"], [107, 2, 1, "", "readline"], [107, 2, 1, "", "recv"], [107, 2, 1, "", "recvfrom"], [107, 2, 1, "", "send"], [107, 2, 1, "", "sendall"], [107, 2, 1, "", "sendto"], [107, 2, 1, "", "setblocking"], [107, 2, 1, "", "setsockopt"], [107, 2, 1, "", "settimeout"], [107, 2, 1, "", "write"]], "ssl": [[108, 3, 1, "", "SSLContext"]], "ssl.SSLContext": [[108, 2, 1, "", "get_ciphers"], [108, 2, 1, "", "load_cert_chain"], [108, 2, 1, "", "load_verify_locations"], [108, 2, 1, "", "set_ciphers"], [108, 6, 1, "", "verify_mode"], [108, 2, 1, "", "wrap_socket"]], "ssl.ssl": [[108, 5, 1, "", "CERT_NONE"], [108, 5, 1, "", "CERT_OPTIONAL"], [108, 5, 1, "", "CERT_REQUIRED"], [108, 5, 1, "", "PROTOCOL_DTLS_CLIENT"], [108, 5, 1, "", "PROTOCOL_DTLS_SERVER"], [108, 5, 1, "", "PROTOCOL_TLS_CLIENT"], [108, 5, 1, "", "PROTOCOL_TLS_SERVER"], [108, 5, 1, "", "SSLError"], [108, 4, 1, "", "wrap_socket"]], "stm": [[109, 5, 1, "", "GPIOA"], [109, 5, 1, "", "GPIOB"], [109, 5, 1, "", "GPIO_BSRR"], [109, 5, 1, "", "GPIO_IDR"], [109, 5, 1, "", "GPIO_ODR"], [109, 5, 1, "", "mem16"], [109, 5, 1, "", "mem32"], [109, 5, 1, "", "mem8"], [109, 4, 1, "", "rfcore_fw_version"], [109, 4, 1, "", "rfcore_status"], [109, 4, 1, "", "rfcore_sys_hci"], [109, 4, 1, "", "subghz_cs"], [109, 4, 1, "", "subghz_irq"], [109, 4, 1, "", "subghz_is_busy"]], "struct": [[110, 4, 1, "", "calcsize"], [110, 4, 1, "", "pack"], [110, 4, 1, "", "pack_into"], [110, 4, 1, "", "unpack"], [110, 4, 1, "", "unpack_from"]], "sys": [[111, 5, 1, "", "argv"], [111, 4, 1, "", "atexit"], [111, 5, 1, "", "byteorder"], [111, 4, 1, "", "exit"], [111, 5, 1, "", "implementation"], [111, 5, 1, "", "maxsize"], [111, 5, 1, "", "modules"], [111, 5, 1, "", "path"], [111, 5, 1, "", "platform"], [111, 4, 1, "", "print_exception"], [111, 5, 1, "", "ps1"], [111, 5, 1, "", "ps2"], [111, 4, 1, "", "settrace"], [111, 5, 1, "", "stderr"], [111, 5, 1, "", "stdin"], [111, 5, 1, "", "stdout"], [111, 5, 1, "", "tracebacklimit"], [111, 5, 1, "", "version"], [111, 5, 1, "", "version_info"]], "time": [[112, 3, 1, "", "clock"], [112, 4, 1, "", "gmtime"], [112, 4, 1, "", "localtime"], [112, 4, 1, "", "mktime"], [112, 4, 1, "", "sleep"], [112, 4, 1, "", "sleep_ms"], [112, 4, 1, "", "sleep_us"], [112, 4, 1, "", "ticks_add"], [112, 4, 1, "", "ticks_cpu"], [112, 4, 1, "", "ticks_diff"], [112, 4, 1, "", "ticks_ms"], [112, 4, 1, "", "ticks_us"], [112, 4, 1, "", "time"], [112, 4, 1, "", "time_ns"]], "time.clock": [[112, 2, 1, "", "avg"], [112, 2, 1, "", "fps"], [112, 2, 1, "", "reset"], [112, 2, 1, "", "tick"]], "tof": [[82, 5, 1, "", "TOF_NONE"], [82, 5, 1, "", "TOF_VL53LX"], [82, 4, 1, "", "deinit"], [82, 4, 1, "", "draw_depth"], [82, 4, 1, "", "height"], [82, 4, 1, "", "init"], [82, 4, 1, "", "read_depth"], [82, 4, 1, "", "refresh"], [82, 4, 1, "", "reset"], [82, 4, 1, "", "snapshot"], [82, 4, 1, "", "type"], [82, 4, 1, "", "width"]], "tv": [[83, 5, 1, "", "TV_NONE"], [83, 5, 1, "", "TV_SHIELD"], [83, 4, 1, "", "channel"], [83, 4, 1, "", "deinit"], [83, 4, 1, "", "display"], [83, 4, 1, "", "height"], [83, 4, 1, "", "init"], [83, 4, 1, "", "refresh"], [83, 4, 1, "", "triple_buffer"], [83, 4, 1, "", "type"], [83, 4, 1, "", "width"]], "uctypes": [[113, 5, 1, "", "ARRAY"], [113, 5, 1, "", "BIG_ENDIAN"], [113, 5, 1, "", "FLOAT32"], [113, 5, 1, "", "FLOAT64"], [113, 5, 1, "", "INT16"], [113, 5, 1, "", "INT32"], [113, 5, 1, "", "INT64"], [113, 5, 1, "", "INT8"], [113, 5, 1, "", "LITTLE_ENDIAN"], [113, 5, 1, "", "NATIVE"], [113, 5, 1, "", "PTR"], [113, 5, 1, "", "UINT16"], [113, 5, 1, "", "UINT32"], [113, 5, 1, "", "UINT64"], [113, 5, 1, "", "UINT8"], [113, 5, 1, "", "VOID"], [113, 4, 1, "", "addressof"], [113, 4, 1, "", "bytearray_at"], [113, 4, 1, "", "bytes_at"], [113, 4, 1, "", "sizeof"], [113, 3, 1, "", "struct"]], "uping": [[114, 4, 1, "", "ping"]], "vfs": [[115, 3, 1, "", "AbstractBlockDev"], [115, 3, 1, "", "VfsFat"], [115, 3, 1, "", "VfsLfs1"], [115, 3, 1, "", "VfsLfs2"], [115, 3, 1, "", "VfsPosix"], [115, 4, 1, "", "mount"], [115, 4, 1, "", "umount"]], "vfs.AbstractBlockDev": [[115, 2, 1, "", "ioctl"], [115, 2, 1, "", "readblocks"], [115, 2, 1, "", "writeblocks"]], "vfs.VfsFat": [[115, 2, 1, "", "mkfs"]], "vfs.VfsLfs1": [[115, 2, 1, "", "mkfs"]], "vfs.VfsLfs2": [[115, 2, 1, "", "mkfs"]], "zlib": [[116, 4, 1, "", "compress"], [116, 4, 1, "", "decompress"]]}, "objtypes": {"0": "py:exception", "1": "py:module", "2": "py:method", "3": "py:class", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "module", "Python module"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"python": [0, 1, 2, 3, 4, 5, 27, 45, 151], "3": [0, 1, 2, 3, 4, 5, 98], "10": 0, "5": 1, "6": 2, "7": 3, "8": 4, "9": 5, "builtin": [6, 17], "type": [6, 7, 17, 19, 110, 138], "except": [6, 9, 17, 108, 151], "all": 6, "have": [6, 7], "readabl": 6, "valu": [6, 7, 9, 147], "errno": [6, 22], "attribut": [6, 7, 9, 72], "just": 6, "stopiter": 6, "oserror": 6, "chain": 6, "implement": [6, 7, 9, 10, 37, 49, 50, 150], "user": [6, 7], "defin": [6, 7, 113, 136], "ar": [6, 7, 10], "support": [6, 7, 9, 12, 84, 108], "while": 6, "loop": [6, 14], "condit": [6, 135], "mai": [6, 7], "unexpect": [6, 7], "line": [6, 69], "number": [6, 10, 18, 103], "__init__": [6, 7], "method": [6, 7, 9, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 76, 78, 79, 81, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 112, 138, 151], "doe": [6, 7, 9, 10], "exist": 6, "bytearrai": 6, "arrai": [6, 9, 13, 27, 160], "slice": 6, "assign": [6, 10], "unsupport": [6, 7, 138], "rh": 6, "byte": [6, 160], "object": [6, 7, 9, 45, 48, 69, 88, 94, 104, 113, 151, 160], "format": [6, 9, 107], "keyword": [6, 10], "subscript": [6, 9], "step": [6, 9], "1": [6, 9], "dict": 6, "dictionari": 6, "kei": 6, "view": 6, "behav": 6, "set": [6, 106], "float": [6, 103, 137, 151, 160], "upi": [6, 9, 10], "allow": [6, 10], "implicit": 6, "convers": [6, 7, 15, 31, 69, 88, 90, 119], "math": [6, 46, 69], "oper": [6, 10, 34, 85, 145, 147], "cpython": [6, 7, 8, 9, 10, 23, 28, 106, 107, 108, 110, 111, 112, 153], "output": [6, 28, 121], "differ": [6, 7, 8, 9, 23, 28, 106, 107, 108, 110, 111, 112], "int": 6, "bit_length": 6, "doesn": [6, 7, 10], "t": [6, 7, 10], "No": 6, "deriv": [6, 27], "avail": [6, 43], "to_byt": 6, "sign": 6, "paramet": [6, 9], "list": [6, 7], "delet": [6, 9], "store": [6, 146], "non": [6, 76, 138], "iter": 6, "i": [6, 7, 9, 10, 14, 38, 41, 91, 95, 124], "memoryview": [6, 160], "can": [6, 9, 33, 78, 89], "becom": 6, "invalid": 6, "its": 6, "target": [6, 100], "resiz": 6, "str": 6, "start": 6, "end": 6, "indic": 6, "endswith": 6, "": [6, 86, 100, 107, 138], "subscr": 6, "ljust": 6, "rjust": 6, "none": 6, "first": 6, "argument": [6, 7, 10, 138], "rsplit": 6, "n": [6, 10], "yet": [6, 9], "tupl": 6, "load": [6, 141], "core": [7, 14, 137], "languag": [7, 150], "f": 7, "string": [7, 147, 160], "don": 7, "concaten": 7, "adjac": 7, "liter": [7, 10], "contain": [7, 19, 72], "brace": 7, "cannot": 7, "express": [7, 104], "requir": [7, 10], "pars": 7, "resolv": 7, "unbalanc": 7, "nest": 7, "bracket": 7, "class": [7, 13, 14, 16, 19, 20, 21, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 138], "special": [7, 142, 158], "__del__": 7, "resolut": 7, "order": 7, "mro": 7, "compliant": 7, "privat": 7, "member": 7, "name": [7, 10, 138], "mangl": 7, "when": [7, 9], "inherit": 7, "nativ": [7, 9, 160], "call": 7, "self": 7, "befor": 7, "super": 7, "rais": [7, 10], "an": [7, 9, 10, 50, 121, 151], "attributeerror": 7, "segfault": 7, "micropy_builtin_method_check_self_arg": 7, "enabl": 7, "from": [7, 8, 27, 141], "multipl": [7, 134, 138], "onli": [7, 9], "one": 7, "getter": 7, "properti": 7, "subclass": 7, "return": [7, 9, 138, 147], "function": [7, 14, 15, 17, 18, 23, 24, 26, 28, 29, 30, 45, 46, 47, 49, 54, 55, 56, 65, 69, 70, 77, 80, 82, 83, 84, 85, 86, 87, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 140, 152], "error": [7, 9, 22, 118], "messag": 7, "displai": [7, 57, 60, 61, 62, 63, 64, 127], "count": 7, "do": 7, "__module__": 7, "gener": [7, 34, 85, 103, 118, 119, 151], "context": 7, "manag": [7, 156], "__exit__": 7, "which": 7, "run": [7, 127, 157, 158], "complet": [7, 158], "runtim": 7, "local": [7, 118], "variabl": [7, 10, 158], "aren": 7, "includ": 7, "result": 7, "code": [7, 22, 129, 138, 155, 160], "eval": 7, "access": [7, 30, 47, 85, 86, 92, 109, 113, 157, 160], "import": 7, "__all__": 7, "py": [7, 157, 159], "micropython": [7, 8, 10, 11, 27, 47, 117, 138, 147, 150, 151, 152, 153, 154, 155, 158, 160], "__path__": 7, "packag": [7, 156], "ha": 7, "singl": 7, "instead": [7, 9], "namespac": 7, "split": 7, "across": 7, "filesystem": [7, 85, 115, 118, 148, 153, 157], "modul": [9, 37, 48, 50, 54, 72, 107, 108, 113, 119, 124], "posit": 9, "exampl": [9, 21, 24, 127, 139, 152, 154], "comparison": [9, 135, 137], "between": [9, 10, 137, 151], "typecod": 9, "overflow": 9, "check": 9, "look": 9, "integ": [9, 103, 137, 138], "json": [9, 29], "throw": 9, "serialis": 9, "o": [9, 14, 38, 41, 85, 91, 95, 124, 153], "environ": 9, "getenv": 9, "actual": 9, "cach": [9, 160], "random": [9, 103], "getrandbit": 9, "maximum": [9, 76], "32": 9, "bit": [9, 10, 135], "time": [9, 39, 82, 87, 96, 112, 119], "randint": 9, "most": 9, "word": 9, "size": [9, 21], "struct": [9, 110], "pack": [9, 110], "too": 9, "few": 9, "arg": 9, "mani": 9, "whitespac": 9, "ignor": 9, "sy": [9, 111], "overrid": 9, "stdin": 9, "stdout": 9, "stderr": 9, "possibl": 9, "syntax": 10, "unpack": [10, 110], "work": [10, 148], "being": 10, "nth": 10, "greater": 10, "where": 10, "mp_small_int": 10, "us": [10, 78, 79, 138, 151, 156, 157], "comprehens": 10, "syntaxerror": 10, "space": 10, "cpy": 10, "unicod": 10, "escap": 10, "document": [11, 134, 135, 137, 139, 140, 141, 142, 144, 145, 146], "refer": [11, 119, 139, 160], "_thread": 12, "multithread": 12, "numer": 13, "data": [13, 61, 86, 110, 113, 136, 137, 138], "asyncio": [14, 151], "asynchron": 14, "schedul": [14, 151], "addit": [14, 134], "task": 14, "event": [14, 16, 91, 106], "threadsafeflag": 14, "lock": 14, "tcp": 14, "stream": [14, 28, 106], "connect": [14, 16, 51, 127, 154], "binascii": 15, "binari": [15, 69, 113, 155], "ascii": 15, "bluetooth": 16, "low": [16, 152], "level": [16, 152], "ble": 16, "constructor": [16, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 81, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112], "configur": [16, 49, 91], "handl": 16, "broadcast": 16, "role": 16, "advertis": 16, "observ": 16, "scanner": 16, "central": 16, "peripher": [16, 32, 40, 109, 153], "gatt": 16, "server": 16, "client": [16, 105], "l2cap": 16, "orient": 16, "channel": [16, 99], "pair": 16, "bond": 16, "uuid": 16, "cmath": 18, "mathemat": [18, 46], "complex": 18, "constant": [18, 21, 22, 30, 33, 35, 38, 39, 40, 42, 43, 46, 51, 52, 53, 55, 57, 65, 66, 69, 80, 82, 83, 87, 89, 90, 91, 93, 95, 97, 99, 100, 102, 107, 108, 109, 111, 138, 155], "collect": [19, 147, 160], "cryptolib": 20, "cryptograph": 20, "cipher": 20, "deflat": 21, "compress": [21, 24, 116], "decompress": [21, 24, 116], "window": [21, 131], "system": [22, 85, 111, 132], "gc": [23, 147], "control": [23, 27, 32, 33, 36, 38, 40, 41, 42, 47, 50, 53, 56, 60, 81, 89, 95, 97, 99, 100, 115, 119, 121, 125, 133, 147, 154, 160], "garbag": [23, 147, 160], "collector": 23, "gzip": 24, "hashlib": 25, "hash": 25, "algorithm": [25, 26, 160], "heapq": 26, "heap": [26, 147], "queue": 26, "librari": [27, 78, 79, 157], "standard": [27, 34, 84], "micro": 27, "specif": [27, 37, 49, 50, 109, 111], "openmv": [27, 77, 100, 119, 123, 127, 129, 148], "cam": [27, 77, 100, 119, 123, 127, 129, 148], "third": 27, "parti": 27, "ulab": 27, "numpi": 27, "like": 27, "manipul": 27, "pid": 27, "proport": 27, "integr": 27, "bno055": 27, "imu": [27, 70], "driver": [27, 52, 55, 57, 62, 63, 64, 65, 66, 68, 82, 83, 98, 119], "ssd1306": 27, "ol": 27, "tb6612": 27, "stepper": 27, "motor": 27, "modbu": 27, "protocol": [27, 34, 35, 40, 93, 97], "mqtt": 27, "vl53l1x": 27, "tof": [27, 82], "distanc": 27, "sensor": [27, 65, 70, 80, 82], "extend": [27, 115], "built": [27, 53, 92, 148], "io": [28, 120], "input": [28, 121], "conceptu": 28, "hierarchi": 28, "encod": [29, 155], "decod": 29, "machin": [30, 69, 72, 127], "relat": [30, 87, 105, 112], "hardwar": [30, 42, 92, 119, 122, 153, 160], "memori": [30, 34, 109, 132, 137, 141, 146, 147], "reset": [30, 87, 154, 158, 159], "interrupt": [30, 87, 91, 119, 151, 158], "power": [30, 87], "miscellan": [30, 87, 143], "adc": [31, 32, 88, 119], "analog": [31, 88, 90, 119, 120], "digit": [31, 88, 90, 119], "adcblock": 32, "area": [33, 89], "network": [33, 49, 51, 89], "commun": [33, 43, 89, 100, 151], "bu": [33, 34, 35, 40, 43, 89, 100, 119], "i2c": [34, 78, 93, 119], "two": [34, 93], "wire": [34, 93, 98], "serial": [34, 40, 43, 45, 51, 93, 97, 100, 119, 127], "primit": [34, 110], "i2": 35, "inter": 35, "ic": 35, "sound": 35, "led": [36, 94, 118, 119, 125], "pwm": [37, 59, 119], "puls": [37, 119], "width": [37, 119], "limit": [37, 113, 151], "pin": [38, 91, 95, 119], "rtc": [39, 96, 119], "real": [39, 96, 119], "clock": [39, 96, 119], "spi": [40, 64, 78, 97, 119], "interfac": [40, 49, 53, 78, 101, 115, 151], "side": 40, "signal": 41, "sens": 41, "extern": [41, 91, 119], "devic": [41, 101, 115, 148, 157], "timer": [42, 44, 99, 119], "uart": [43, 78, 100, 119, 133], "duplex": [43, 100], "trigger": 43, "wdt": 44, "watchdog": 44, "marshal": 45, "intern": [47, 99], "mutex": 48, "common": 49, "adapt": 49, "lan": 50, "ethernet": 50, "ppp": 51, "creat": 51, "over": 51, "winc": 52, "wifi": [52, 53, 127], "shield": [52, 83], "wlan": 53, "audio": 54, "buzzer": 55, "cpufreq": 56, "cpu": 56, "frequenc": 56, "dacbacklight": 58, "dac": [58, 90, 119], "backlight": [58, 59], "pwmbacklight": 59, "st7701": 60, "displaydata": 61, "dsidisplai": 62, "dsi": 62, "rgbdisplai": 63, "rgb": 63, "spidisplai": 64, "fir": 65, "thermal": 65, "far": 65, "infrar": 65, "ft5x06": 66, "touch": [66, 68], "screen": [66, 68], "gif": 67, "record": [67, 71], "gt911": 68, "imag": [69, 75], "vision": [69, 127], "haarcascad": 69, "featur": 69, "descriptor": [69, 113], "similar": 69, "histogram": [69, 127], "percentil": 69, "threshold": 69, "statist": 69, "blob": 69, "circl": 69, "rect": 69, "rectangl": 69, "qrcode": 69, "apriltag": 69, "datamatrix": 69, "barcod": 69, "displac": 69, "kptmatch": 69, "keypoint": 69, "imageio": 69, "basic": [69, 85], "draw": 69, "mask": 69, "isp": 69, "filter": 69, "geometr": 69, "get": 69, "detect": 69, "mjpeg": 71, "ml": [72, 73, 74, 75, 76], "learn": 72, "sub": 72, "model": 72, "app": 73, "microspeech": 73, "speech": 73, "recognit": 73, "postprocess": 74, "fomo_postprocess": 74, "fomo": 74, "yolo_lc_postprocess": 74, "yolo": 74, "lc": 74, "yolo_v2_postprocess": 74, "v2": 74, "yolo_v5_postprocess": 74, "v5": 74, "yolo_v8_postprocess": 74, "v8": 74, "preprocess": 75, "normal": 75, "util": 76, "nm": 76, "soft": [76, 154, 158, 159], "suppress": 76, "omv": 77, "inform": [77, 117, 118, 126], "rpc": 78, "how": [78, 79, 129], "virtual": [78, 102, 115, 119], "rpc_master": 78, "rpc_slave": 78, "rpc_can_mast": 78, "master": 78, "rpc_can_slav": 78, "slave": 78, "rpc_i2c_mast": 78, "rpc_i2c_slav": 78, "rpc_spi_mast": 78, "rpc_spi_slav": 78, "rpc_uart_mast": 78, "rpc_uart_slav": 78, "rtsp": 79, "rtsp_server": 79, "camera": 80, "tfp410": 81, "dvi": 81, "hdmi": 81, "flight": 82, "tv": 83, "openamp": 84, "provid": 84, "asymmetr": 84, "multiprocess": 84, "amp": 84, "endpoint": 84, "remoteproc": 84, "servic": 85, "termin": [85, 127], "redirect": 85, "duplic": 85, "mount": [85, 115], "platform": 86, "underli": 86, "identifi": [86, 160], "pyb": [87, 124], "board": [87, 119, 152], "The": [88, 124, 135, 147, 151, 155, 157, 158, 160], "adcal": 88, "extint": 91, "flash": [92, 118, 122, 147], "storag": 92, "note": [92, 122], "pinaf": 95, "altern": 95, "driven": 97, "servo": [98, 119], "hobbi": 98, "timerchannel": 99, "setup": [99, 122, 131], "flow": 100, "ct": 100, "transmitt": 100, "rt": 100, "usb_hid": 101, "usb": [101, 102, 122], "human": 101, "hid": 101, "usb_vcp": 102, "comm": 102, "port": [102, 156], "other": 103, "re": 104, "simpl": [104, 115], "regular": 104, "regex": 104, "match": 104, "request": 105, "http": 105, "respons": 105, "select": 106, "wait": 106, "poll": 106, "socket": 107, "address": 107, "ssl": 108, "tl": 108, "sslcontext": 108, "dtl": 108, "stm": 109, "stm32": [109, 119, 148], "mcu": 109, "regist": [109, 135, 137, 141, 144, 146], "stm32wbxx": 109, "stm32wlxx": 109, "uctyp": 113, "structur": [113, 130], "wai": 113, "layout": 113, "content": [113, 118, 148, 160], "instanti": 113, "up": 114, "ping": 114, "anoth": 114, "comput": 114, "vf": [115, 148], "block": [115, 148], "zlib": 116, "licens": 117, "about": 118, "openmvcam": [118, 119], "sd": 118, "card": 118, "boot": [118, 159], "mode": [118, 158], "quick": 119, "delai": 119, "gpio": [119, 121], "softwar": [119, 131], "onewir": 119, "dht": 119, "base": 119, "As": 121, "drive": 122, "tutori": [123, 124], "more": 126, "id": 127, "overview": [127, 128, 153], "file": [127, 152, 155], "menu": 127, "text": 127, "edit": 127, "your": [127, 129], "script": [127, 129, 130, 157], "frame": 127, "buffer": [127, 151, 160], "viewer": 127, "statu": [127, 135], "bar": 127, "tool": [127, 157], "debug": 127, "open": 127, "video": 127, "option": 127, "releas": 129, "product": 129, "freez": [129, 156], "protect": 129, "mac": 131, "linux": 131, "desktop": 131, "raspberrypi": 131, "architectur": [132, 139], "arithmet": [134, 137], "instruct": [134, 135, 137, 138, 139, 140, 142, 143, 144], "convent": [134, 135, 137, 139, 140, 141, 142, 144, 145, 146], "subtract": 134, "negat": 134, "divis": 134, "applic": 135, "program": [135, 151, 158], "apsr": 135, "execut": [135, 147], "assembl": [136, 138, 139], "direct": 136, "label": [136, 140], "inlin": [136, 139], "point": [137, 160], "move": [137, 144], "arm": 137, "fpu": 137, "convert": 137, "hint": 138, "tip": [138, 151], "branch": [138, 140], "subroutin": [138, 140], "pass": 138, "overcom": [138, 151], "restrict": 138, "thumb2": 139, "categori": 139, "usag": 139, "long": 140, "logic": 142, "bitwis": 142, "shift": 142, "rotat": 142, "stack": 145, "push": 145, "pop": 145, "microcontrol": 147, "ram": [147, 160], "compil": 147, "phase": 147, "fragment": 147, "report": 147, "postscript": 147, "footnot": 147, "pyboard": [148, 157], "esp8266": 148, "esp32": 148, "custom": [148, 152], "fat": 148, "littlef": 148, "hybrid": 148, "glossari": 149, "write": [151, 152, 156], "handler": 151, "recommend": 151, "practic": 151, "issu": 151, "emerg": 151, "simplic": 151, "isr": 151, "main": [151, 159], "callback": 151, "creation": 151, "design": [151, 160], "reentranc": 151, "critic": 151, "section": [151, 160], "repl": [151, 158, 159], "manifest": 152, "summari": 152, "build": 152, "ad": 152, "definit": 152, "high": 152, "2": 153, "0": 153, "migrat": 153, "guid": 153, "chang": 153, "compat": [153, 155], "remot": 154, "mpremot": [154, 156], "command": [154, 157], "auto": [154, 158], "shortcut": 154, "mpy": 155, "version": 155, "header": 155, "global": 155, "qstr": 155, "tabl": 155, "raw": [155, 158], "element": 155, "instal": 156, "mip": 156, "unix": 156, "manual": 156, "publish": 156, "interact": [158, 159], "interpret": [158, 159], "aka": 158, "indent": 158, "past": 158, "_": 158, "underscor": 158, "sequenc": 159, "hard": 159, "_boot": 159, "brick": 159, "failur": 159, "keyboardinterrupt": 159, "maximis": 160, "speed": 160, "alloc": 160, "v": 160, "slowest": 160, "improv": 160, "const": 160, "declar": 160, "emitt": 160, "viper": 160, "directli": 160}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Python 3.10": [[0, "python-3-10"]], "Python 3.5": [[1, "python-3-5"]], "Python 3.6": [[2, "python-3-6"]], "Python 3.7": [[3, "python-3-7"]], "Python 3.8": [[4, "python-3-8"]], "Python 3.9": [[5, "python-3-9"]], "Builtin types": [[6, "builtin-types"]], "Exception": [[6, "exception"]], "All exceptions have readable value and errno attributes, not just StopIteration and OSError.": [[6, "all-exceptions-have-readable-value-and-errno-attributes-not-just-stopiteration-and-oserror"]], "Exception chaining not implemented": [[6, "exception-chaining-not-implemented"]], "User-defined attributes for builtin exceptions are not supported": [[6, "user-defined-attributes-for-builtin-exceptions-are-not-supported"]], "Exception in while loop condition may have unexpected line number": [[6, "exception-in-while-loop-condition-may-have-unexpected-line-number"]], "Exception.__init__ method does not exist.": [[6, "exception-init-method-does-not-exist"]], "bytearray": [[6, "bytearray"]], "Array slice assignment with unsupported RHS": [[6, "array-slice-assignment-with-unsupported-rhs"]], "bytes": [[6, "bytes"]], "bytes objects support .format() method": [[6, "bytes-objects-support-format-method"]], "bytes() with keywords not implemented": [[6, "bytes-with-keywords-not-implemented"]], "Bytes subscription with step != 1 not implemented": [[6, "bytes-subscription-with-step-1-not-implemented"]], "dict": [[6, "dict"]], "Dictionary keys view does not behave as a set.": [[6, "dictionary-keys-view-does-not-behave-as-a-set"]], "float": [[6, "float"]], "uPy allows implicit conversion of objects in maths operations while CPython does not.": [[6, "upy-allows-implicit-conversion-of-objects-in-maths-operations-while-cpython-does-not"]], "uPy and CPython outputs formats may differ": [[6, "upy-and-cpython-outputs-formats-may-differ"]], "int": [[6, "int"]], "bit_length method doesn\u2019t exist.": [[6, "bit-length-method-doesn-t-exist"]], "No int conversion for int-derived types available": [[6, "no-int-conversion-for-int-derived-types-available"]], "to_bytes method doesn\u2019t implement signed parameter.": [[6, "to-bytes-method-doesn-t-implement-signed-parameter"]], "list": [[6, "list"]], "List delete with step != 1 not implemented": [[6, "list-delete-with-step-1-not-implemented"]], "List slice-store with non-iterable on RHS is not implemented": [[6, "list-slice-store-with-non-iterable-on-rhs-is-not-implemented"]], "List store with step != 1 not implemented": [[6, "list-store-with-step-1-not-implemented"]], "memoryview": [[6, "memoryview"]], "memoryview can become invalid if its target is resized": [[6, "memoryview-can-become-invalid-if-its-target-is-resized"]], "str": [[6, "str"]], "Start/end indices such as str.endswith(s, start) not implemented": [[6, "start-end-indices-such-as-str-endswith-s-start-not-implemented"]], "Attributes/subscr not implemented": [[6, "attributes-subscr-not-implemented"]], "str(\u2026) with keywords not implemented": [[6, "str-with-keywords-not-implemented"]], "str.ljust() and str.rjust() not implemented": [[6, "str-ljust-and-str-rjust-not-implemented"]], "None as first argument for rsplit such as str.rsplit(None, n) not implemented": [[6, "none-as-first-argument-for-rsplit-such-as-str-rsplit-none-n-not-implemented"]], "Subscript with step != 1 is not yet implemented": [[6, "subscript-with-step-1-is-not-yet-implemented"], [9, "subscript-with-step-1-is-not-yet-implemented"]], "tuple": [[6, "tuple"]], "Tuple load with step != 1 not implemented": [[6, "tuple-load-with-step-1-not-implemented"]], "Core language": [[7, "core-language"]], "f-strings don\u2019t support concatenation with adjacent literals if the adjacent literals contain braces": [[7, "f-strings-don-t-support-concatenation-with-adjacent-literals-if-the-adjacent-literals-contain-braces"]], "f-strings cannot support expressions that require parsing to resolve unbalanced nested braces and brackets": [[7, "f-strings-cannot-support-expressions-that-require-parsing-to-resolve-unbalanced-nested-braces-and-brackets"]], "f-strings don\u2019t support !a conversions": [[7, "f-strings-don-t-support-a-conversions"]], "Classes": [[7, "classes"], [13, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [24, "classes"], [28, "classes"], [30, "classes"], [47, "classes"], [57, "classes"], [87, "classes"]], "Special method __del__ not implemented for user-defined classes": [[7, "special-method-del-not-implemented-for-user-defined-classes"]], "Method Resolution Order (MRO) is not compliant with CPython": [[7, "method-resolution-order-mro-is-not-compliant-with-cpython"]], "Private Class Members name mangling is not implemented": [[7, "private-class-members-name-mangling-is-not-implemented"]], "When inheriting native types, calling a method in __init__(self, ...) before super().__init__() raises an AttributeError (or segfaults if MICROPY_BUILTIN_METHOD_CHECK_SELF_ARG is not enabled).": [[7, "when-inheriting-native-types-calling-a-method-in-init-self-before-super-init-raises-an-attributeerror-or-segfaults-if-micropy-builtin-method-check-self-arg-is-not-enabled"]], "When inheriting from multiple classes super() only calls one class": [[7, "when-inheriting-from-multiple-classes-super-only-calls-one-class"]], "Calling super() getter property in subclass will return a property object, not the value": [[7, "calling-super-getter-property-in-subclass-will-return-a-property-object-not-the-value"]], "Functions": [[7, "functions"], [15, "functions"], [18, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [65, "functions"], [69, "functions"], [70, "functions"], [77, "functions"], [80, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [86, "functions"], [104, "functions"], [105, "functions"], [106, "functions"], [107, "functions"], [108, "functions"], [110, "functions"], [111, "functions"], [112, "functions"], [116, "functions"]], "Error messages for methods may display unexpected argument counts": [[7, "error-messages-for-methods-may-display-unexpected-argument-counts"]], "Function objects do not have the __module__ attribute": [[7, "function-objects-do-not-have-the-module-attribute"]], "User-defined attributes for functions are not supported": [[7, "user-defined-attributes-for-functions-are-not-supported"]], "Generator": [[7, "generator"]], "Context manager __exit__() not called in a generator which does not run to completion": [[7, "context-manager-exit-not-called-in-a-generator-which-does-not-run-to-completion"]], "Runtime": [[7, "runtime"]], "Local variables aren\u2019t included in locals() result": [[7, "local-variables-aren-t-included-in-locals-result"]], "Code running in eval() function doesn\u2019t have access to local variables": [[7, "code-running-in-eval-function-doesn-t-have-access-to-local-variables"]], "import": [[7, "import"]], "__all__ is unsupported in __init__.py in MicroPython.": [[7, "all-is-unsupported-in-init-py-in-micropython"]], "__path__ attribute of a package has a different type (single string instead of list of strings) in MicroPython": [[7, "path-attribute-of-a-package-has-a-different-type-single-string-instead-of-list-of-strings-in-micropython"]], "MicroPython doesn\u2019t support namespace packages split across filesystem.": [[7, "micropython-doesn-t-support-namespace-packages-split-across-filesystem"]], "MicroPython differences from CPython": [[8, "micropython-differences-from-cpython"]], "Modules": [[9, "modules"]], "Positional-only Parameters": [[9, "positional-only-parameters"]], "Example": [[9, "example"]], "array": [[9, "array"]], "Comparison between different typecodes not supported": [[9, "comparison-between-different-typecodes-not-supported"]], "Overflow checking is not implemented": [[9, "overflow-checking-is-not-implemented"]], "Looking for integer not implemented": [[9, "looking-for-integer-not-implemented"]], "Array deletion not implemented": [[9, "array-deletion-not-implemented"]], "json": [[9, "json"]], "JSON module does not throw exception when object is not serialisable": [[9, "json-module-does-not-throw-exception-when-object-is-not-serialisable"]], "os": [[9, "os"]], "environ attribute is not implemented": [[9, "environ-attribute-is-not-implemented"]], "getenv returns actual value instead of cached value": [[9, "getenv-returns-actual-value-instead-of-cached-value"]], "random": [[9, "random"]], "getrandbits method can only return a maximum of 32 bits at a time.": [[9, "getrandbits-method-can-only-return-a-maximum-of-32-bits-at-a-time"]], "randint method can only return an integer that is at most the native word size.": [[9, "randint-method-can-only-return-an-integer-that-is-at-most-the-native-word-size"]], "struct": [[9, "struct"]], "Struct pack with too few args, not checked by uPy": [[9, "struct-pack-with-too-few-args-not-checked-by-upy"]], "Struct pack with too many args, not checked by uPy": [[9, "struct-pack-with-too-many-args-not-checked-by-upy"]], "Struct pack with whitespace in format, whitespace ignored by CPython, error on uPy": [[9, "struct-pack-with-whitespace-in-format-whitespace-ignored-by-cpython-error-on-upy"]], "sys": [[9, "sys"]], "Overriding sys.stdin, sys.stdout and sys.stderr not possible": [[9, "overriding-sys-stdin-sys-stdout-and-sys-stderr-not-possible"]], "Syntax": [[10, "syntax"]], "Argument unpacking does not work if the argument being unpacked is the nth or greater argument where n is the number of bits in an MP_SMALL_INT.": [[10, "argument-unpacking-does-not-work-if-the-argument-being-unpacked-is-the-nth-or-greater-argument-where-n-is-the-number-of-bits-in-an-mp-small-int"]], "Operators": [[10, "operators"]], "MicroPython allows using := to assign to the variable of a comprehension, CPython raises a SyntaxError.": [[10, "micropython-allows-using-to-assign-to-the-variable-of-a-comprehension-cpython-raises-a-syntaxerror"]], "Spaces": [[10, "spaces"]], "uPy requires spaces between literal numbers and keywords, CPy doesn\u2019t": [[10, "upy-requires-spaces-between-literal-numbers-and-keywords-cpy-doesn-t"]], "Unicode": [[10, "unicode"]], "Unicode name escapes are not implemented": [[10, "unicode-name-escapes-are-not-implemented"]], "MicroPython documentation and references": [[11, "micropython-documentation-and-references"]], "_thread \u2013 multithreading support": [[12, "module-_thread"]], "array \u2013 arrays of numeric data": [[13, "module-array"]], "asyncio \u2014 asynchronous I/O scheduler": [[14, "module-asyncio"]], "Core functions": [[14, "core-functions"]], "Additional functions": [[14, "additional-functions"]], "class Task": [[14, "class-task"]], "class Event": [[14, "class-event"]], "class ThreadSafeFlag": [[14, "class-threadsafeflag"]], "class Lock": [[14, "class-lock"]], "TCP stream connections": [[14, "tcp-stream-connections"]], "Event Loop": [[14, "event-loop"]], "binascii \u2013 binary/ASCII conversions": [[15, "module-binascii"]], "bluetooth \u2014 low-level Bluetooth": [[16, "module-bluetooth"]], "class BLE": [[16, "class-ble"]], "Constructor": [[16, "constructor"], [16, "id1"], [35, "constructor"]], "Configuration": [[16, "configuration"]], "Event Handling": [[16, "event-handling"]], "Broadcaster Role (Advertiser)": [[16, "broadcaster-role-advertiser"]], "Observer Role (Scanner)": [[16, "observer-role-scanner"]], "Central Role": [[16, "central-role"]], "Peripheral Role": [[16, "peripheral-role"]], "Central & Peripheral Roles": [[16, "central-peripheral-roles"]], "GATT Server": [[16, "gatt-server"]], "GATT Client": [[16, "gatt-client"]], "L2CAP connection-oriented-channels": [[16, "l2cap-connection-oriented-channels"]], "Pairing and bonding": [[16, "pairing-and-bonding"]], "class UUID": [[16, "class-uuid"]], "builtins \u2013 builtin functions and exceptions": [[17, "builtins-builtin-functions-and-exceptions"]], "Functions and types": [[17, "functions-and-types"]], "Exceptions": [[17, "exceptions"], [108, "exceptions"], [151, "exceptions"]], "cmath \u2013 mathematical functions for complex numbers": [[18, "module-cmath"]], "Constants": [[18, "constants"], [21, "constants"], [22, "constants"], [30, "constants"], [33, "constants"], [35, "constants"], [38, "constants"], [39, "constants"], [40, "constants"], [42, "constants"], [43, "constants"], [46, "constants"], [51, "constants"], [52, "constants"], [53, "constants"], [55, "constants"], [57, "constants"], [65, "constants"], [66, "constants"], [69, "constants"], [80, "constants"], [82, "constants"], [83, "constants"], [87, "constants"], [89, "constants"], [90, "constants"], [91, "constants"], [93, "constants"], [95, "constants"], [97, "constants"], [99, "constants"], [100, "constants"], [102, "constants"], [107, "constants"], [108, "constants"], [111, "constants"]], "collections \u2013 collection and container types": [[19, "module-collections"]], "cryptolib \u2013 cryptographic ciphers": [[20, "module-cryptolib"]], "deflate \u2013 deflate compression & decompression": [[21, "module-deflate"]], "Examples": [[21, "examples"], [24, "examples"], [152, "examples"], [154, "examples"]], "Deflate window size": [[21, "deflate-window-size"]], "Decompression": [[21, "decompression"]], "Compression": [[21, "compression"]], "errno \u2013 system error codes": [[22, "module-errno"]], "gc \u2013 control the garbage collector": [[23, "module-gc"]], "Difference to CPython": [[23, null], [23, null], [23, null], [28, null], [28, null], [106, null], [106, null], [107, null], [107, null], [107, null], [107, null], [107, null], [107, null], [108, null], [108, null], [110, null], [111, null], [111, null], [111, null], [111, null], [111, null], [112, null]], "gzip \u2013 gzip compression & decompression": [[24, "module-gzip"]], "hashlib \u2013 hashing algorithms": [[25, "module-hashlib"]], "Constructors": [[25, "constructors"], [31, "constructors"], [32, "constructors"], [33, "constructors"], [34, "constructors"], [36, "constructors"], [37, "constructors"], [38, "constructors"], [39, "constructors"], [40, "constructors"], [41, "constructors"], [42, "constructors"], [43, "constructors"], [44, "constructors"], [48, "constructors"], [50, "constructors"], [51, "constructors"], [52, "constructors"], [53, "constructors"], [58, "constructors"], [59, "constructors"], [60, "constructors"], [61, "constructors"], [62, "constructors"], [63, "constructors"], [64, "constructors"], [66, "constructors"], [67, "constructors"], [68, "constructors"], [71, "constructors"], [72, "constructors"], [73, "constructors"], [74, "constructors"], [74, "id1"], [74, "id2"], [74, "id3"], [74, "id4"], [75, "constructors"], [76, "constructors"], [78, "constructors"], [78, "id1"], [78, "id3"], [78, "id5"], [78, "id6"], [78, "id7"], [78, "id8"], [78, "id9"], [79, "constructors"], [81, "constructors"], [88, "constructors"], [89, "constructors"], [90, "constructors"], [91, "constructors"], [92, "constructors"], [93, "constructors"], [94, "constructors"], [95, "constructors"], [96, "constructors"], [97, "constructors"], [98, "constructors"], [99, "constructors"], [100, "constructors"], [101, "constructors"], [102, "constructors"], [112, "constructors"]], "Methods": [[25, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [48, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [76, "methods"], [78, "methods"], [78, "id2"], [78, "id4"], [79, "methods"], [81, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [95, "id1"], [96, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [99, "id1"], [100, "methods"], [101, "methods"], [102, "methods"], [105, "methods"], [106, "methods"], [107, "methods"], [112, "methods"]], "heapq \u2013 heap queue algorithm": [[26, "module-heapq"]], "MicroPython libraries": [[27, "micropython-libraries"]], "Python standard libraries and micro-libraries": [[27, "python-standard-libraries-and-micro-libraries"]], "MicroPython-specific libraries": [[27, "micropython-specific-libraries"]], "Libraries specific to the OpenMV Cam": [[27, "libraries-specific-to-the-openmv-cam"]], "Third-party libraries on the OpenMV Cam": [[27, "third-party-libraries-on-the-openmv-cam"]], "ulab \u2014 numpy-like array manipulation library": [[27, "module-ulab"]], "pid \u2014 Proportional/Integral/Derivative Control": [[27, "module-pid"]], "bno055 \u2014 IMU Driver": [[27, "module-bno055"]], "ssd1306 \u2014 OLED Driver": [[27, "module-ssd1306"]], "tb6612 \u2014 Stepper Motor Driver": [[27, "module-tb6612"]], "modbus \u2014 modbus protocol library": [[27, "module-modbus"]], "mqtt \u2014 mqtt protocol library": [[27, "module-mqtt"]], "vl53l1x \u2014 ToF Distance Sensor Driver": [[27, "module-vl53l1x"]], "Extending built-in libraries from Python": [[27, "extending-built-in-libraries-from-python"]], "io \u2013 input/output streams": [[28, "module-io"]], "Conceptual hierarchy": [[28, "conceptual-hierarchy"]], "json \u2013 JSON encoding and decoding": [[29, "module-json"]], "machine \u2014 functions related to the hardware": [[30, "module-machine"]], "Memory access": [[30, "memory-access"], [109, "memory-access"]], "Reset related functions": [[30, "reset-related-functions"], [87, "reset-related-functions"]], "Interrupt related functions": [[30, "interrupt-related-functions"], [87, "interrupt-related-functions"]], "Power related functions": [[30, "power-related-functions"], [87, "power-related-functions"]], "Miscellaneous functions": [[30, "miscellaneous-functions"], [87, "miscellaneous-functions"]], "class ADC \u2013 analog to digital conversion": [[31, "class-adc-analog-to-digital-conversion"], [88, "class-adc-analog-to-digital-conversion"]], "class ADCBlock \u2013 control ADC peripherals": [[32, "class-adcblock-control-adc-peripherals"]], "class CAN \u2013 controller area network communication bus": [[33, "class-can-controller-area-network-communication-bus"], [89, "class-can-controller-area-network-communication-bus"]], "class I2C \u2013 a two-wire serial protocol": [[34, "class-i2c-a-two-wire-serial-protocol"], [93, "class-i2c-a-two-wire-serial-protocol"]], "General Methods": [[34, "general-methods"]], "Primitive I2C operations": [[34, "primitive-i2c-operations"]], "Standard bus operations": [[34, "standard-bus-operations"]], "Memory operations": [[34, "memory-operations"]], "class I2S \u2013 Inter-IC Sound bus protocol": [[35, "class-i2s-inter-ic-sound-bus-protocol"]], "class LED \u2013 LED Control": [[36, "class-led-led-control"]], "class PWM \u2013 pulse width modulation": [[37, "class-pwm-pulse-width-modulation"]], "Specific PWM class implementations": [[37, "specific-pwm-class-implementations"]], "Limitations of PWM": [[37, "limitations-of-pwm"]], "class Pin \u2013 control I/O pins": [[38, "class-pin-control-i-o-pins"], [95, "class-pin-control-i-o-pins"]], "class RTC \u2013 real time clock": [[39, "class-rtc-real-time-clock"], [96, "class-rtc-real-time-clock"]], "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)": [[40, "class-spi-a-serial-peripheral-interface-bus-protocol-controller-side"]], "class Signal \u2013 control and sense external I/O devices": [[41, "class-signal-control-and-sense-external-i-o-devices"]], "class Timer \u2013 control hardware timers": [[42, "class-timer-control-hardware-timers"]], "class UART \u2013 duplex serial communication bus": [[43, "class-uart-duplex-serial-communication-bus"], [100, "class-uart-duplex-serial-communication-bus"]], "Availability of triggers": [[43, "id1"]], "class WDT \u2013 watchdog timer": [[44, "class-wdt-watchdog-timer"]], "marshal \u2013 Python object serialization": [[45, "module-marshal"]], "math \u2013 mathematical functions": [[46, "module-math"]], "micropython \u2013 access and control MicroPython internals": [[47, "module-micropython"]], "mutex \u2014 mutex module": [[48, "module-mutex"]], "class Mutex \u2013 mutex object": [[48, "class-mutex-mutex-object"]], "network \u2014 network configuration": [[49, "module-network"]], "Common network adapter interface": [[49, "common-network-adapter-interface"]], "Specific network class implementations": [[49, "specific-network-class-implementations"]], "Network functions": [[49, "network-functions"]], "class LAN \u2013 control an Ethernet module": [[50, "class-lan-control-an-ethernet-module"]], "Specific LAN class implementations": [[50, "specific-lan-class-implementations"]], "class PPP \u2013 create network connections over serial PPP": [[51, "class-ppp-create-network-connections-over-serial-ppp"]], "class WINC \u2013 wifi shield driver": [[52, "class-winc-wifi-shield-driver"]], "class WLAN \u2013 control built-in WiFi interfaces": [[53, "class-wlan-control-built-in-wifi-interfaces"]], "audio \u2014 Audio Module": [[54, "module-audio"]], "buzzer \u2014 buzzer driver": [[55, "module-buzzer"]], "cpufreq \u2014 CPU Frequency Control": [[56, "module-cpufreq"]], "display \u2014 display driver": [[57, "module-display"]], "class DACBacklight \u2013 DAC Backlight": [[58, "class-dacbacklight-dac-backlight"]], "class PWMBacklight \u2013 PWM Backlight": [[59, "class-pwmbacklight-pwm-backlight"]], "class ST7701 \u2013 Display Controller": [[60, "class-st7701-display-controller"]], "class DisplayData \u2013 Display Data": [[61, "class-displaydata-display-data"]], "class DSIDisplay \u2013 DSI Display Driver": [[62, "class-dsidisplay-dsi-display-driver"]], "class RGBDisplay \u2013 RGB Display Driver": [[63, "class-rgbdisplay-rgb-display-driver"]], "class SPIDisplay \u2013 SPI Display Driver": [[64, "class-spidisplay-spi-display-driver"]], "fir \u2014 thermal sensor driver (fir == far infrared)": [[65, "module-fir"]], "ft5x06 \u2014 Touch Screen Driver": [[66, "module-ft5x06"]], "gif \u2014 gif recording": [[67, "module-gif"]], "class Gif \u2013 Gif recorder": [[67, "class-gif-gif-recorder"]], "gt911 \u2014 Touch Screen Driver": [[68, "module-gt911"]], "image \u2014 machine vision": [[69, "module-image"]], "class HaarCascade \u2013 Feature Descriptor": [[69, "class-haarcascade-feature-descriptor"]], "class Similarity \u2013 Similarity Object": [[69, "class-similarity-similarity-object"]], "class Histogram \u2013 Histogram Object": [[69, "class-histogram-histogram-object"]], "class Percentile \u2013 Percentile Object": [[69, "class-percentile-percentile-object"]], "class Threshold \u2013 Threshold Object": [[69, "class-threshold-threshold-object"]], "class Statistics \u2013 Statistics Object": [[69, "class-statistics-statistics-object"]], "class Blob \u2013 Blob object": [[69, "class-blob-blob-object"]], "class Line \u2013 Line object": [[69, "class-line-line-object"]], "class Circle \u2013 Circle object": [[69, "class-circle-circle-object"]], "class Rect \u2013 Rectangle Object": [[69, "class-rect-rectangle-object"]], "class QRCode \u2013 QRCode object": [[69, "class-qrcode-qrcode-object"]], "class AprilTag \u2013 AprilTag object": [[69, "class-apriltag-apriltag-object"]], "class DataMatrix \u2013 DataMatrix object": [[69, "class-datamatrix-datamatrix-object"]], "class BarCode \u2013 BarCode object": [[69, "class-barcode-barcode-object"]], "class Displacement \u2013 Displacement object": [[69, "class-displacement-displacement-object"]], "class kptmatch \u2013 Keypoint Object": [[69, "class-kptmatch-keypoint-object"]], "class ImageIO  \u2013 ImageIO Object": [[69, "class-imageio-imageio-object"]], "class Image \u2013 Image object": [[69, "class-image-image-object"]], "Basic Methods": [[69, "basic-methods"]], "Conversion Methods": [[69, "conversion-methods"]], "Drawing Methods": [[69, "drawing-methods"]], "Masking Methods": [[69, "masking-methods"]], "Binary Methods": [[69, "binary-methods"]], "ISP Methods": [[69, "isp-methods"]], "Math Methods": [[69, "math-methods"]], "Filtering Methods": [[69, "filtering-methods"]], "Geometric Methods": [[69, "geometric-methods"]], "Get Methods": [[69, "get-methods"]], "Detection Methods": [[69, "detection-methods"]], "imu \u2014 imu sensor": [[70, "module-imu"]], "mjpeg \u2014 mjpeg recording": [[71, "module-mjpeg"]], "class Mjpeg \u2013 Mjpeg recorder": [[71, "class-mjpeg-mjpeg-recorder"]], "ml \u2014 Machine Learning": [[72, "module-ml"]], "Sub Modules": [[72, "sub-modules"]], "class model \u2013 Model Container": [[72, "class-model-model-container"]], "Attributes": [[72, "attributes"]], "ml.apps \u2014 ML Apps": [[73, "module-ml.apps"]], "class MicroSpeech \u2013 Speech Recognition": [[73, "class-microspeech-speech-recognition"]], "ml.postprocessing \u2014 ML Postprocessing": [[74, "module-ml.postprocessing"]], "class fomo_postprocess \u2013 FOMO": [[74, "class-fomo-postprocess-fomo"]], "class yolo_lc_postprocess \u2013 YOLO LC": [[74, "class-yolo-lc-postprocess-yolo-lc"]], "class yolo_v2_postprocess \u2013 YOLO V2": [[74, "class-yolo-v2-postprocess-yolo-v2"]], "class yolo_v5_postprocess \u2013 YOLO V5": [[74, "class-yolo-v5-postprocess-yolo-v5"]], "class yolo_v8_postprocess \u2013 YOLO V8": [[74, "class-yolo-v8-postprocess-yolo-v8"]], "ml.preprocessing \u2014 ML Preprocessing": [[75, "module-ml.preprocessing"]], "class Normalization \u2013 Image Normalization": [[75, "class-normalization-image-normalization"]], "ml.utils \u2014 ML Utils": [[76, "module-ml.utils"]], "class NMS - Soft-Non-Maximum Suppression": [[76, "class-nms-soft-non-maximum-suppression"]], "omv \u2014 OpenMV Cam Information": [[77, "module-omv"]], "rpc \u2014 rpc library": [[78, "module-rpc"]], "How to use the Library": [[78, "how-to-use-the-library"], [79, "how-to-use-the-library"]], "class rpc - rpc virtual class": [[78, "class-rpc-rpc-virtual-class"]], "class rpc_master - rpc_master virtual class": [[78, "class-rpc-master-rpc-master-virtual-class"]], "class rpc_slave - rpc_slave virtual class": [[78, "class-rpc-slave-rpc-slave-virtual-class"]], "class rpc_can_master - CAN Master Interface": [[78, "class-rpc-can-master-can-master-interface"]], "class rpc_can_slave - CAN Slave Interface": [[78, "class-rpc-can-slave-can-slave-interface"]], "class rpc_i2c_master - I2C Master Interface": [[78, "class-rpc-i2c-master-i2c-master-interface"]], "class rpc_i2c_slave - I2C Slave Interface": [[78, "class-rpc-i2c-slave-i2c-slave-interface"]], "class rpc_spi_master - SPI Master Interface": [[78, "class-rpc-spi-master-spi-master-interface"]], "class rpc_spi_slave - SPI Slave Interface": [[78, "class-rpc-spi-slave-spi-slave-interface"]], "class rpc_uart_master - UART Master Interface": [[78, "class-rpc-uart-master-uart-master-interface"]], "class rpc_uart_slave - UART Slave Interface": [[78, "class-rpc-uart-slave-uart-slave-interface"]], "rtsp \u2014 rtsp library": [[79, "module-rtsp"]], "class rtsp_server - rtsp_server class": [[79, "class-rtsp-server-rtsp-server-class"]], "sensor \u2014 camera sensor": [[80, "module-sensor"]], "tfp410 \u2014 DVI/HDMI Controller": [[81, "module-TFP410"]], "tof \u2014 time-of-flight sensor driver": [[82, "module-tof"]], "tv \u2014 tv shield driver": [[83, "module-tv"]], "openamp \u2013 provides standard Asymmetric Multiprocessing (AMP) support": [[84, "module-openamp"]], "Endpoint class": [[84, "endpoint-class"]], "RemoteProc class": [[84, "remoteproc-class"]], "os \u2013 basic \u201coperating system\u201d services": [[85, "module-os"]], "General functions": [[85, "general-functions"]], "Filesystem access": [[85, "filesystem-access"], [157, "filesystem-access"]], "Terminal redirection and duplication": [[85, "terminal-redirection-and-duplication"]], "Filesystem mounting": [[85, "filesystem-mounting"], [115, "filesystem-mounting"]], "platform \u2013 access to underlying platform\u2019s identifying data": [[86, "module-platform"]], "pyb \u2014 functions related to the board": [[87, "module-pyb"]], "Time related functions": [[87, "time-related-functions"]], "The ADCAll Object": [[88, "the-adcall-object"]], "class DAC \u2013 digital to analog conversion": [[90, "class-dac-digital-to-analog-conversion"]], "class ExtInt \u2013 configure I/O pins to interrupt on external events": [[91, "class-extint-configure-i-o-pins-to-interrupt-on-external-events"]], "Class methods": [[91, "class-methods"], [95, "class-methods"]], "class Flash \u2013 access to built-in flash storage": [[92, "class-flash-access-to-built-in-flash-storage"]], "Hardware Note": [[92, "hardware-note"]], "class LED \u2013 LED object": [[94, "class-led-led-object"]], "class PinAF \u2013 Pin Alternate Functions": [[95, "class-pinaf-pin-alternate-functions"]], "class SPI \u2013 a controller-driven serial protocol": [[97, "class-spi-a-controller-driven-serial-protocol"]], "class Servo \u2013 3-wire hobby servo driver": [[98, "class-servo-3-wire-hobby-servo-driver"]], "class Timer \u2013 control internal timers": [[99, "class-timer-control-internal-timers"]], "class TimerChannel \u2014 setup a channel for a timer": [[99, "class-timerchannel-setup-a-channel-for-a-timer"]], "Flow Control": [[100, "flow-control"]], "CTS: target controls OpenMV Cam transmitter": [[100, "cts-target-controls-openmv-cam-transmitter"]], "RTS: OpenMV Cam controls target\u2019s transmitter": [[100, "rts-openmv-cam-controls-target-s-transmitter"]], "class USB_HID \u2013 USB Human Interface Device (HID)": [[101, "class-usb-hid-usb-human-interface-device-hid"]], "class USB_VCP \u2013 USB virtual comm port": [[102, "class-usb-vcp-usb-virtual-comm-port"]], "random \u2013 generate random numbers": [[103, "module-random"]], "Functions for integers": [[103, "functions-for-integers"]], "Functions for floats": [[103, "functions-for-floats"]], "Other Functions": [[103, "other-functions"]], "re \u2013 simple regular expressions": [[104, "module-re"]], "Regex objects": [[104, "regex-objects"]], "Match objects": [[104, "match-objects"]], "requests \u2014 Related functions of HTTP client": [[105, "module-requests"]], "Response class": [[105, "response-class"]], "select \u2013 wait for events on a set of streams": [[106, "module-select"]], "class Poll": [[106, "class-poll"]], "socket \u2013 socket module": [[107, "module-socket"]], "Socket address format(s)": [[107, "socket-address-format-s"]], "class socket": [[107, "class-socket"]], "ssl \u2013 SSL/TLS module": [[108, "module-ssl"]], "class SSLContext": [[108, "class-sslcontext"]], "DTLS support": [[108, "dtls-support"]], "stm \u2014 functionality specific to STM32 MCUs": [[109, "module-stm"]], "Peripheral register constants": [[109, "peripheral-register-constants"]], "Functions specific to STM32WBxx MCUs": [[109, "functions-specific-to-stm32wbxx-mcus"]], "Functions specific to STM32WLxx MCUs": [[109, "functions-specific-to-stm32wlxx-mcus"]], "struct \u2013 pack and unpack primitive data types": [[110, "module-struct"]], "sys \u2013 system specific functions": [[111, "module-sys"]], "time \u2013 time related functions": [[112, "module-time"]], "uctypes \u2013 access binary data in a structured way": [[113, "module-uctypes"]], "Defining structure layout": [[113, "defining-structure-layout"]], "Module contents": [[113, "module-contents"]], "Structure descriptors and instantiating structure objects": [[113, "structure-descriptors-and-instantiating-structure-objects"]], "Structure objects": [[113, "structure-objects"]], "Limitations": [[113, "limitations"]], "uping \u2014 Ping another computer": [[114, "module-uping"]], "vfs \u2013 virtual filesystem control": [[115, "module-vfs"]], "Block devices": [[115, "block-devices"], [148, "block-devices"]], "Simple and extended interface": [[115, "simple-and-extended-interface"]], "zlib \u2013 zlib compression & decompression": [[116, "module-zlib"]], "MicroPython license information": [[117, "micropython-license-information"]], "General information about the openmvcam": [[118, "general-information-about-the-openmvcam"]], "Contents": [[118, "contents"], [148, "contents"], [160, "contents"]], "Local filesystem and SD card": [[118, "local-filesystem-and-sd-card"]], "Boot modes": [[118, "boot-modes"]], "Flashing LED Errors": [[118, "flashing-led-errors"]], "Quick reference for the openmvcam": [[119, "quick-reference-for-the-openmvcam"]], "General OpenMV Cams Board Control": [[119, "general-openmv-cams-board-control"]], "Delay and timing": [[119, "delay-and-timing"], [119, "id1"]], "Virtual Timers": [[119, "virtual-timers"]], "Pins and GPIO": [[119, "pins-and-gpio"], [119, "id2"]], "UART (serial bus)": [[119, "uart-serial-bus"], [119, "id5"]], "PWM (pulse width modulation)": [[119, "pwm-pulse-width-modulation"], [119, "id3"]], "ADC (analog to digital conversion)": [[119, "adc-analog-to-digital-conversion"], [119, "id4"]], "Software SPI bus": [[119, "software-spi-bus"]], "Hardware SPI bus": [[119, "hardware-spi-bus"]], "Software I2C bus": [[119, "software-i2c-bus"]], "Hardware I2C bus": [[119, "hardware-i2c-bus"]], "Real time clock (RTC)": [[119, "real-time-clock-rtc"]], "OneWire driver": [[119, "onewire-driver"]], "DHT driver": [[119, "dht-driver"]], "STM32 Based OpenMV Cams General Board Control": [[119, "stm32-based-openmv-cams-general-board-control"]], "LEDs": [[119, "leds"]], "Servo control": [[119, "servo-control"]], "External interrupts": [[119, "external-interrupts"]], "Timers": [[119, "timers"]], "DAC (digital to analog conversion)": [[119, "dac-digital-to-analog-conversion"]], "SPI bus": [[119, "spi-bus"]], "I2C bus": [[119, "i2c-bus"]], "Analog IO": [[120, "analog-io"]], "GPIO Control": [[121, "gpio-control"]], "As an Input": [[121, "as-an-input"]], "As an Output": [[121, "as-an-output"]], "Hardware Setup": [[122, "hardware-setup"]], "USB Flash Drive Notes": [[122, "usb-flash-drive-notes"]], "OpenMV Cam Tutorial": [[123, "openmv-cam-tutorial"]], "I/O Tutorial": [[124, "i-o-tutorial"]], "The PYB Module": [[124, "the-pyb-module"]], "LED Control": [[125, "led-control"]], "More Information": [[126, "more-information"]], "OpenMV IDE Overview": [[127, "openmv-ide-overview"]], "File Menu and Examples": [[127, "file-menu-and-examples"]], "Text Editing": [[127, "text-editing"]], "Connecting to your OpenMV Cam": [[127, "connecting-to-your-openmv-cam"]], "Running scripts": [[127, "running-scripts"]], "Frame Buffer Viewer": [[127, "frame-buffer-viewer"]], "Histogram Display": [[127, "histogram-display"]], "Serial Terminal": [[127, "serial-terminal"]], "Status Bar": [[127, "status-bar"]], "Tools": [[127, "tools"]], "WiFi Debug": [[127, "wifi-debug"]], "Open Terminal": [[127, "open-terminal"]], "Machine Vision": [[127, "machine-vision"]], "Video Tools": [[127, "video-tools"]], "Options": [[127, "options"]], "Overview": [[128, "overview"], [153, "overview"], [153, "id1"], [153, "id3"]], "Releasing your OpenMV Cam Scripts for Production": [[129, "releasing-your-openmv-cam-scripts-for-production"]], "How to freeze your scripts": [[129, "how-to-freeze-your-scripts"]], "How to protect your code": [[129, "how-to-protect-your-code"]], "Script Structure": [[130, "script-structure"]], "Software Setup": [[131, "software-setup"]], "Windows": [[131, "windows"]], "Mac": [[131, "mac"]], "Linux-Desktop": [[131, "linux-desktop"]], "Linux-RaspberryPi": [[131, "linux-raspberrypi"]], "System Architecture": [[132, "system-architecture"]], "Memory Architecture": [[132, "memory-architecture"]], "UART Control": [[133, "uart-control"]], "Arithmetic instructions": [[134, "arithmetic-instructions"]], "Document conventions": [[134, "document-conventions"], [135, "document-conventions"], [137, "document-conventions"], [139, "document-conventions"], [140, "document-conventions"], [141, "document-conventions"], [142, "document-conventions"], [144, "document-conventions"], [145, "document-conventions"], [146, "document-conventions"]], "Addition": [[134, "addition"]], "Subtraction": [[134, "subtraction"]], "Negation": [[134, "negation"]], "Multiplication and division": [[134, "multiplication-and-division"]], "Comparison instructions": [[135, "comparison-instructions"], [135, "id1"]], "The Application Program Status Register (APSR)": [[135, "the-application-program-status-register-apsr"]], "APSR Bits": [[135, "apsr-bits"]], "Conditional execution": [[135, "conditional-execution"]], "Assembler directives": [[136, "assembler-directives"]], "Labels": [[136, "labels"]], "Defining inline data": [[136, "defining-inline-data"]], "Floating point instructions": [[137, "floating-point-instructions"]], "Arithmetic": [[137, "arithmetic"]], "Move between ARM core and FPU registers": [[137, "move-between-arm-core-and-fpu-registers"]], "Move between FPU register and memory": [[137, "move-between-fpu-register-and-memory"]], "Data comparison": [[137, "data-comparison"]], "Convert between integer and float": [[137, "convert-between-integer-and-float"]], "Hints and tips": [[138, "hints-and-tips"]], "Code branches and subroutines": [[138, "code-branches-and-subroutines"]], "Argument passing and return": [[138, "argument-passing-and-return"]], "Multiple arguments": [[138, "multiple-arguments"]], "Non-integer data types": [[138, "non-integer-data-types"]], "Named constants": [[138, "named-constants"]], "Assembler code as class methods": [[138, "assembler-code-as-class-methods"]], "Use of unsupported instructions": [[138, "use-of-unsupported-instructions"]], "Overcoming MicroPython\u2019s integer restriction": [[138, "overcoming-micropython-s-integer-restriction"]], "Inline assembler for Thumb2 architectures": [[139, "inline-assembler-for-thumb2-architectures"]], "Instruction categories": [[139, "instruction-categories"]], "Usage examples": [[139, "usage-examples"]], "References": [[139, "references"]], "Branch instructions": [[140, "branch-instructions"]], "Branch to label": [[140, "branch-to-label"]], "Long branches": [[140, "long-branches"]], "Subroutines (functions)": [[140, "subroutines-functions"]], "Load register from memory": [[141, "load-register-from-memory"]], "Register Load": [[141, "register-load"]], "Logical & bitwise instructions": [[142, "logical-bitwise-instructions"]], "Logical instructions": [[142, "logical-instructions"]], "Shift and rotation instructions": [[142, "shift-and-rotation-instructions"]], "Special instructions": [[142, "special-instructions"]], "Miscellaneous instructions": [[143, "miscellaneous-instructions"]], "Register move instructions": [[144, "register-move-instructions"]], "Register moves": [[144, "register-moves"]], "Stack push and pop": [[145, "stack-push-and-pop"]], "Stack operations": [[145, "stack-operations"]], "Store register to memory": [[146, "store-register-to-memory"]], "Register Store": [[146, "register-store"]], "MicroPython on microcontrollers": [[147, "micropython-on-microcontrollers"]], "Flash memory": [[147, "flash-memory"]], "RAM": [[147, "ram"]], "Compilation phase": [[147, "compilation-phase"]], "Execution phase": [[147, "execution-phase"]], "The heap": [[147, "the-heap"]], "Fragmentation": [[147, "fragmentation"]], "Reporting": [[147, "reporting"]], "Control of garbage collection": [[147, "control-of-garbage-collection"]], "String operations": [[147, "string-operations"]], "Postscript": [[147, "postscript"]], "Footnote: gc.collect() return value": [[147, "footnote-gc-collect-return-value"]], "Working with filesystems": [[148, "working-with-filesystems"]], "VFS": [[148, "vfs"]], "Built-in block devices": [[148, "built-in-block-devices"]], "STM32 / Pyboard / OpenMV Cam": [[148, "stm32-pyboard-openmv-cam"]], "ESP8266": [[148, "esp8266"]], "ESP32": [[148, "esp32"]], "Custom block devices": [[148, "custom-block-devices"]], "Filesystems": [[148, "filesystems"]], "FAT": [[148, "fat"]], "Littlefs": [[148, "littlefs"]], "Hybrid (STM32)": [[148, "hybrid-stm32"]], "Hybrid (ESP32)": [[148, "hybrid-esp32"]], "Glossary": [[149, "glossary"]], "MicroPython language and implementation": [[150, "micropython-language-and-implementation"]], "Writing interrupt handlers": [[151, "writing-interrupt-handlers"]], "Tips and recommended practices": [[151, "tips-and-recommended-practices"]], "MicroPython issues": [[151, "micropython-issues"]], "The emergency exception buffer": [[151, "the-emergency-exception-buffer"]], "Simplicity": [[151, "simplicity"]], "Communication between an ISR and the main program": [[151, "communication-between-an-isr-and-the-main-program"]], "The use of object methods as callbacks": [[151, "the-use-of-object-methods-as-callbacks"]], "Creation of Python objects": [[151, "creation-of-python-objects"]], "Use of Python objects": [[151, "use-of-python-objects"]], "Overcoming the float limitation": [[151, "overcoming-the-float-limitation"]], "Using micropython.schedule": [[151, "using-micropython-schedule"]], "Interfacing to asyncio": [[151, "interfacing-to-asyncio"]], "General issues": [[151, "general-issues"]], "Interrupt handler design": [[151, "interrupt-handler-design"]], "Reentrancy": [[151, "reentrancy"]], "Critical sections": [[151, "critical-sections"]], "Interrupts and the REPL": [[151, "interrupts-and-the-repl"]], "MicroPython manifest files": [[152, "micropython-manifest-files"]], "Summary": [[152, "summary"]], "Writing manifest files": [[152, "writing-manifest-files"]], "Building with a custom manifest": [[152, "building-with-a-custom-manifest"]], "Adding a manifest to a board definition": [[152, "adding-a-manifest-to-a-board-definition"]], "High-level functions": [[152, "high-level-functions"]], "Low-level functions": [[152, "low-level-functions"]], "MicroPython 2.0 Migration Guide": [[153, "micropython-2-0-migration-guide"]], "Hardware and peripherals": [[153, "hardware-and-peripherals"]], "Changes": [[153, "changes"], [153, "id2"], [153, "id4"]], "OS & filesystem": [[153, "os-filesystem"]], "CPython compatibility": [[153, "cpython-compatibility"]], "MicroPython remote control: mpremote": [[154, "micropython-remote-control-mpremote"]], "Commands": [[154, "commands"]], "Auto connection and soft-reset": [[154, "auto-connection-and-soft-reset"]], "Shortcuts": [[154, "shortcuts"]], "MicroPython .mpy files": [[155, "micropython-mpy-files"]], "Versioning and compatibility of .mpy files": [[155, "versioning-and-compatibility-of-mpy-files"]], "Binary encoding of .mpy files": [[155, "binary-encoding-of-mpy-files"]], "The header": [[155, "the-header"]], "The global qstr and constant tables": [[155, "the-global-qstr-and-constant-tables"]], "Raw code elements": [[155, "raw-code-elements"]], "Package management": [[156, "package-management"]], "Installing packages with mip": [[156, "installing-packages-with-mip"]], "Using mip on the Unix port": [[156, "using-mip-on-the-unix-port"]], "Installing packages with mpremote": [[156, "installing-packages-with-mpremote"]], "Installing packages manually": [[156, "installing-packages-manually"]], "Writing & publishing packages": [[156, "writing-publishing-packages"]], "Freezing packages": [[156, "freezing-packages"]], "The pyboard.py tool": [[157, "the-pyboard-py-tool"]], "Running a command on the device": [[157, "running-a-command-on-the-device"]], "Running a script on the device": [[157, "running-a-script-on-the-device"]], "Using the pyboard library": [[157, "using-the-pyboard-library"]], "The MicroPython Interactive Interpreter Mode (aka REPL)": [[158, "the-micropython-interactive-interpreter-mode-aka-repl"]], "Auto-indent": [[158, "auto-indent"]], "Auto-completion": [[158, "auto-completion"]], "Interrupting a running program": [[158, "interrupting-a-running-program"]], "Paste mode": [[158, "paste-mode"]], "Soft reset": [[158, "soft-reset"]], "The special variable _ (underscore)": [[158, "the-special-variable-underscore"]], "Raw mode and raw-paste mode": [[158, "raw-mode-and-raw-paste-mode"]], "Reset and Boot Sequence": [[159, "reset-and-boot-sequence"]], "Hard reset": [[159, "hard-reset"]], "Soft Reset": [[159, "soft-reset"]], "Boot Sequence": [[159, "boot-sequence"]], "_boot.py": [[159, "boot-py"]], "boot.py": [[159, "id4"]], "main.py": [[159, "main-py"]], "Interactive Interpreter (REPL)": [[159, "interactive-interpreter-repl"]], "Soft Bricking (failure to boot)": [[159, "soft-bricking-failure-to-boot"]], "KeyboardInterrupt": [[159, "keyboardinterrupt"]], "Maximising MicroPython speed": [[160, "maximising-micropython-speed"]], "Designing for speed": [[160, "designing-for-speed"]], "Algorithms": [[160, "algorithms"]], "RAM allocation": [[160, "ram-allocation"]], "Buffers": [[160, "buffers"]], "Floating point": [[160, "floating-point"]], "Arrays": [[160, "arrays"]], "Memoryviews": [[160, "memoryviews"]], "Strings vs Bytes": [[160, "strings-vs-bytes"]], "Identifying the slowest section of code": [[160, "identifying-the-slowest-section-of-code"]], "MicroPython code improvements": [[160, "micropython-code-improvements"]], "The const() declaration": [[160, "the-const-declaration"]], "Caching object references": [[160, "caching-object-references"]], "Controlling garbage collection": [[160, "controlling-garbage-collection"]], "The Native code emitter": [[160, "the-native-code-emitter"]], "The Viper code emitter": [[160, "the-viper-code-emitter"]], "Accessing hardware directly": [[160, "accessing-hardware-directly"]]}, "indexentries": {"pep 526": [[0, "index-1"]], "pep 618": [[0, "index-0"]], "python enhancement proposals": [[0, "index-0"], [0, "index-1"]], "_thread": [[12, "module-_thread"]], "module": [[12, "module-_thread"], [13, "module-array"], [14, "module-asyncio"], [15, "module-binascii"], [16, "module-bluetooth"], [18, "module-cmath"], [19, "module-collections"], [20, "module-cryptolib"], [21, "module-deflate"], [22, "module-errno"], [23, "module-gc"], [24, "module-gzip"], [25, "module-hashlib"], [26, "module-heapq"], [27, "module-bno055"], [27, "module-modbus"], [27, "module-mqtt"], [27, "module-pid"], [27, "module-ssd1306"], [27, "module-tb6612"], [27, "module-ulab"], [27, "module-vl53l1x"], [28, "module-io"], [29, "module-json"], [30, "module-machine"], [45, "module-marshal"], [46, "module-math"], [47, "module-micropython"], [48, "module-mutex"], [49, "module-network"], [54, "module-audio"], [55, "module-buzzer"], [56, "module-cpufreq"], [57, "module-display"], [65, "module-fir"], [66, "module-ft5x06"], [67, "module-gif"], [68, "module-gt911"], [69, "module-image"], [70, "module-imu"], [71, "module-mjpeg"], [72, "module-ml"], [73, "module-ml.apps"], [74, "module-ml.postprocessing"], [75, "module-ml.preprocessing"], [76, "module-ml.utils"], [77, "module-omv"], [78, "module-rpc"], [79, "module-rtsp"], [80, "module-sensor"], [81, "module-TFP410"], [82, "module-tof"], [83, "module-tv"], [84, "module-openamp"], [85, "module-os"], [86, "module-platform"], [87, "module-pyb"], [103, "module-random"], [104, "module-re"], [105, "module-requests"], [106, "module-select"], [107, "module-socket"], [108, "module-ssl"], [109, "module-stm"], [110, "module-struct"], [111, "module-sys"], [112, "module-time"], [113, "module-uctypes"], [114, "module-uping"], [115, "module-vfs"], [116, "module-zlib"]], "__add__() (array.array method)": [[13, "array.array.__add__"]], "__getitem__() (array.array method)": [[13, "array.array.__getitem__"]], "__iadd__() (array.array method)": [[13, "array.array.__iadd__"]], "__len__() (array.array method)": [[13, "array.array.__len__"]], "__repr__() (array.array method)": [[13, "array.array.__repr__"]], "__setitem__() (array.array method)": [[13, "array.array.__setitem__"]], "append() (array.array method)": [[13, "array.array.append"]], "array": [[13, "module-array"]], "array (class in array)": [[13, "array.array"]], "extend() (array.array method)": [[13, "array.array.extend"]], "event (class in asyncio)": [[14, "asyncio.Event"]], "lock (class in asyncio)": [[14, "asyncio.Lock"]], "loop (class in asyncio)": [[14, "asyncio.Loop"]], "server (class in asyncio)": [[14, "asyncio.Server"]], "stream (class in asyncio)": [[14, "asyncio.Stream"]], "task (class in asyncio)": [[14, "asyncio.Task"]], "threadsafeflag (class in asyncio)": [[14, "asyncio.ThreadSafeFlag"]], "acquire() (asyncio.lock method)": [[14, "asyncio.Lock.acquire"]], "asyncio": [[14, "module-asyncio"]], "call_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.call_exception_handler"]], "cancel() (asyncio.task method)": [[14, "asyncio.Task.cancel"]], "clear() (asyncio.event method)": [[14, "asyncio.Event.clear"]], "clear() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.clear"]], "close() (asyncio.loop method)": [[14, "asyncio.Loop.close"]], "close() (asyncio.server method)": [[14, "asyncio.Server.close"]], "close() (asyncio.stream method)": [[14, "asyncio.Stream.close"]], "create_task() (asyncio.loop method)": [[14, "asyncio.Loop.create_task"]], "create_task() (in module asyncio)": [[14, "asyncio.create_task"]], "current_task() (in module asyncio)": [[14, "asyncio.current_task"]], "default_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.default_exception_handler"]], "drain() (asyncio.stream method)": [[14, "asyncio.Stream.drain"]], "gather() (in module asyncio)": [[14, "asyncio.gather"]], "get_event_loop() (in module asyncio)": [[14, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.get_exception_handler"]], "get_extra_info() (asyncio.stream method)": [[14, "asyncio.Stream.get_extra_info"]], "is_set() (asyncio.event method)": [[14, "asyncio.Event.is_set"]], "locked() (asyncio.lock method)": [[14, "asyncio.Lock.locked"]], "new_event_loop() (in module asyncio)": [[14, "asyncio.new_event_loop"]], "open_connection() (in module asyncio)": [[14, "asyncio.open_connection"]], "read() (asyncio.stream method)": [[14, "asyncio.Stream.read"]], "readexactly() (asyncio.stream method)": [[14, "asyncio.Stream.readexactly"]], "readinto() (asyncio.stream method)": [[14, "asyncio.Stream.readinto"]], "readline() (asyncio.stream method)": [[14, "asyncio.Stream.readline"]], "release() (asyncio.lock method)": [[14, "asyncio.Lock.release"]], "run() (in module asyncio)": [[14, "asyncio.run"]], "run_forever() (asyncio.loop method)": [[14, "asyncio.Loop.run_forever"]], "run_until_complete() (asyncio.loop method)": [[14, "asyncio.Loop.run_until_complete"]], "set() (asyncio.event method)": [[14, "asyncio.Event.set"]], "set() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.set"]], "set_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.set_exception_handler"]], "sleep() (in module asyncio)": [[14, "asyncio.sleep"]], "sleep_ms() (in module asyncio)": [[14, "asyncio.sleep_ms"]], "start_server() (in module asyncio)": [[14, "asyncio.start_server"]], "stop() (asyncio.loop method)": [[14, "asyncio.Loop.stop"]], "wait() (asyncio.event method)": [[14, "asyncio.Event.wait"]], "wait() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.wait"]], "wait_closed() (asyncio.server method)": [[14, "asyncio.Server.wait_closed"]], "wait_closed() (asyncio.stream method)": [[14, "asyncio.Stream.wait_closed"]], "wait_for() (in module asyncio)": [[14, "asyncio.wait_for"]], "wait_for_ms() (in module asyncio)": [[14, "asyncio.wait_for_ms"]], "write() (asyncio.stream method)": [[14, "asyncio.Stream.write"]], "a2b_base64() (in module binascii)": [[15, "binascii.a2b_base64"]], "b2a_base64() (in module binascii)": [[15, "binascii.b2a_base64"]], "binascii": [[15, "module-binascii"]], "crc32() (in module binascii)": [[15, "binascii.crc32"]], "hexlify() (in module binascii)": [[15, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[15, "binascii.unhexlify"]], "ble (class in bluetooth)": [[16, "bluetooth.BLE"]], "uuid (class in bluetooth)": [[16, "bluetooth.UUID"]], "active() (bluetooth.ble method)": [[16, "bluetooth.BLE.active"]], "bluetooth": [[16, "module-bluetooth"]], "config() (bluetooth.ble method)": [[16, "bluetooth.BLE.config"]], "gap_advertise() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_advertise"]], "gap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_connect"]], "gap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_disconnect"]], "gap_pair() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_pair"]], "gap_passkey() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_passkey"]], "gap_scan() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_scan"]], "gattc_discover_characteristics() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_characteristics"]], "gattc_discover_descriptors() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_descriptors"]], "gattc_discover_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_services"]], "gattc_exchange_mtu() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_exchange_mtu"]], "gattc_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_read"]], "gattc_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_write"]], "gatts_indicate() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_indicate"]], "gatts_notify() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_notify"]], "gatts_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_read"]], "gatts_register_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_register_services"]], "gatts_set_buffer() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_set_buffer"]], "gatts_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_write"]], "irq() (bluetooth.ble method)": [[16, "bluetooth.BLE.irq"]], "l2cap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_connect"]], "l2cap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_disconnect"]], "l2cap_listen() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_listen"]], "l2cap_recvinto() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_recvinto"]], "l2cap_send() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_send"]], "assertionerror": [[17, "AssertionError"]], "attributeerror": [[17, "AttributeError"]], "exception": [[17, "Exception"]], "importerror": [[17, "ImportError"]], "indexerror": [[17, "IndexError"]], "keyerror": [[17, "KeyError"]], "keyboardinterrupt": [[17, "KeyboardInterrupt"]], "memoryerror": [[17, "MemoryError"]], "nameerror": [[17, "NameError"]], "notimplementederror": [[17, "NotImplementedError"]], "oserror": [[17, "OSError"]], "runtimeerror": [[17, "RuntimeError"]], "stopiteration": [[17, "StopIteration"]], "syntaxerror": [[17, "SyntaxError"]], "systemexit": [[17, "SystemExit"]], "typeerror": [[17, "TypeError"]], "valueerror": [[17, "ValueError"]], "zerodivisionerror": [[17, "ZeroDivisionError"]], "abs()": [[17, "abs"]], "all()": [[17, "all"]], "any()": [[17, "any"]], "bin()": [[17, "bin"]], "bool (built-in class)": [[17, "bool"]], "built-in function": [[17, "abs"], [17, "all"], [17, "any"], [17, "bin"], [17, "callable"], [17, "chr"], [17, "classmethod"], [17, "compile"], [17, "delattr"], [17, "dir"], [17, "divmod"], [17, "enumerate"], [17, "eval"], [17, "exec"], [17, "filter"], [17, "getattr"], [17, "globals"], [17, "hasattr"], [17, "hash"], [17, "hex"], [17, "id"], [17, "input"], [17, "isinstance"], [17, "issubclass"], [17, "iter"], [17, "len"], [17, "locals"], [17, "map"], [17, "max"], [17, "min"], [17, "next"], [17, "oct"], [17, "open"], [17, "ord"], [17, "pow"], [17, "print"], [17, "property"], [17, "range"], [17, "repr"], [17, "reversed"], [17, "round"], [17, "setattr"], [17, "sorted"], [17, "staticmethod"], [17, "sum"], [17, "super"], [17, "type"], [17, "zip"], [152, "add_library"], [152, "freeze"], [152, "freeze_as_mpy"], [152, "freeze_as_str"], [152, "freeze_mpy"], [152, "include"], [152, "metadata"], [152, "module"], [152, "package"], [152, "require"]], "bytearray (built-in class)": [[17, "bytearray"]], "bytes (built-in class)": [[17, "bytes"]], "callable()": [[17, "callable"]], "chr()": [[17, "chr"]], "classmethod()": [[17, "classmethod"]], "compile()": [[17, "compile"]], "complex (built-in class)": [[17, "complex"]], "delattr()": [[17, "delattr"]], "dict (built-in class)": [[17, "dict"]], "dir()": [[17, "dir"]], "divmod()": [[17, "divmod"]], "enumerate()": [[17, "enumerate"]], "eval()": [[17, "eval"]], "exec()": [[17, "exec"]], "filter()": [[17, "filter"]], "float (built-in class)": [[17, "float"]], "from_bytes() (int class method)": [[17, "int.from_bytes"]], "frozenset (built-in class)": [[17, "frozenset"]], "getattr()": [[17, "getattr"]], "globals()": [[17, "globals"]], "hasattr()": [[17, "hasattr"]], "hash()": [[17, "hash"]], "hex()": [[17, "hex"]], "id()": [[17, "id"]], "input()": [[17, "input"]], "int (built-in class)": [[17, "int"]], "isinstance()": [[17, "isinstance"]], "issubclass()": [[17, "issubclass"]], "iter()": [[17, "iter"]], "len()": [[17, "len"]], "list (built-in class)": [[17, "list"]], "locals()": [[17, "locals"]], "map()": [[17, "map"]], "max()": [[17, "max"]], "memoryview (built-in class)": [[17, "memoryview"]], "min()": [[17, "min"]], "next()": [[17, "next"]], "object (built-in class)": [[17, "object"]], "oct()": [[17, "oct"]], "open()": [[17, "open"]], "ord()": [[17, "ord"]], "pow()": [[17, "pow"]], "print()": [[17, "print"]], "property()": [[17, "property"]], "range()": [[17, "range"]], "repr()": [[17, "repr"]], "reversed()": [[17, "reversed"]], "round()": [[17, "round"]], "set (built-in class)": [[17, "set"]], "setattr()": [[17, "setattr"]], "slice (built-in class)": [[17, "slice"]], "sorted()": [[17, "sorted"]], "staticmethod()": [[17, "staticmethod"]], "str (built-in class)": [[17, "str"]], "sum()": [[17, "sum"]], "super()": [[17, "super"]], "to_bytes() (int method)": [[17, "int.to_bytes"]], "tuple (built-in class)": [[17, "tuple"]], "type()": [[17, "type"]], "zip()": [[17, "zip"]], "cmath": [[18, "module-cmath"]], "cos() (in module cmath)": [[18, "cmath.cos"]], "e (in module cmath)": [[18, "cmath.e"]], "exp() (in module cmath)": [[18, "cmath.exp"]], "log() (in module cmath)": [[18, "cmath.log"]], "log10() (in module cmath)": [[18, "cmath.log10"]], "phase() (in module cmath)": [[18, "cmath.phase"]], "pi (in module cmath)": [[18, "cmath.pi"]], "polar() (in module cmath)": [[18, "cmath.polar"]], "rect() (in module cmath)": [[18, "cmath.rect"]], "sin() (in module cmath)": [[18, "cmath.sin"]], "sqrt() (in module cmath)": [[18, "cmath.sqrt"]], "ordereddict (class in collections)": [[19, "collections.OrderedDict"]], "append() (collections.deque method)": [[19, "collections.deque.append"]], "appendleft() (collections.deque method)": [[19, "collections.deque.appendleft"]], "collections": [[19, "module-collections"]], "deque (class in collections)": [[19, "collections.deque"]], "extend() (collections.deque method)": [[19, "collections.deque.extend"]], "namedtuple() (in module collections)": [[19, "collections.namedtuple"]], "pop() (collections.deque method)": [[19, "collections.deque.pop"]], "popleft() (collections.deque method)": [[19, "collections.deque.popleft"]], "__init__() (cryptolib.aes class method)": [[20, "cryptolib.aes.__init__"]], "aes (class in cryptolib)": [[20, "cryptolib.aes"]], "cryptolib": [[20, "module-cryptolib"]], "decrypt() (cryptolib.aes method)": [[20, "cryptolib.aes.decrypt"]], "encrypt() (cryptolib.aes method)": [[20, "cryptolib.aes.encrypt"]], "deflateio (class in deflate)": [[21, "deflate.DeflateIO"]], "deflate": [[21, "module-deflate"]], "deflate.auto (in module deflate)": [[21, "deflate.deflate.AUTO"]], "deflate.gzip (in module deflate)": [[21, "deflate.deflate.GZIP"]], "deflate.raw (in module deflate)": [[21, "deflate.deflate.RAW"]], "deflate.zlib (in module deflate)": [[21, "deflate.deflate.ZLIB"]], "errno": [[22, "module-errno"]], "errorcode (in module errno)": [[22, "errno.errorcode"]], "collect() (in module gc)": [[23, "gc.collect"]], "disable() (in module gc)": [[23, "gc.disable"]], "enable() (in module gc)": [[23, "gc.enable"]], "gc": [[23, "module-gc"]], "mem_alloc() (in module gc)": [[23, "gc.mem_alloc"]], "mem_free() (in module gc)": [[23, "gc.mem_free"]], "threshold() (in module gc)": [[23, "gc.threshold"]], "gzipfile (class in gzip)": [[24, "gzip.GzipFile"]], "compress() (in module gzip)": [[24, "gzip.compress"]], "decompress() (in module gzip)": [[24, "gzip.decompress"]], "gzip": [[24, "module-gzip"]], "open() (in module gzip)": [[24, "gzip.open"]], "digest() (hashlib.hash method)": [[25, "hashlib.hash.digest"]], "hashlib": [[25, "module-hashlib"]], "hashlib.md5 (class in hashlib)": [[25, "hashlib.hashlib.md5"]], "hashlib.sha1 (class in hashlib)": [[25, "hashlib.hashlib.sha1"]], "hashlib.sha256 (class in hashlib)": [[25, "hashlib.hashlib.sha256"]], "hexdigest() (hashlib.hash method)": [[25, "hashlib.hash.hexdigest"]], "update() (hashlib.hash method)": [[25, "hashlib.hash.update"]], "heapify() (in module heapq)": [[26, "heapq.heapify"]], "heappop() (in module heapq)": [[26, "heapq.heappop"]], "heappush() (in module heapq)": [[26, "heapq.heappush"]], "heapq": [[26, "module-heapq"]], "bno055": [[27, "module-bno055"]], "modbus": [[27, "module-modbus"]], "mqtt": [[27, "module-mqtt"]], "pid": [[27, "module-pid"]], "ssd1306": [[27, "module-ssd1306"]], "tb6612": [[27, "module-tb6612"]], "ulab": [[27, "module-ulab"]], "vl53l1x": [[27, "module-vl53l1x"]], "bytesio (class in io)": [[28, "io.BytesIO"]], "stringio (class in io)": [[28, "io.StringIO"]], "getvalue() (io.bytesio method)": [[28, "io.BytesIO.getvalue"]], "io": [[28, "module-io"]], "open() (in module io)": [[28, "io.open"]], "dump() (in module json)": [[29, "json.dump"]], "dumps() (in module json)": [[29, "json.dumps"]], "json": [[29, "module-json"]], "load() (in module json)": [[29, "json.load"]], "loads() (in module json)": [[29, "json.loads"]], "bitstream() (in module machine)": [[30, "machine.bitstream"]], "bootloader() (in module machine)": [[30, "machine.bootloader"]], "deepsleep() (in module machine)": [[30, "machine.deepsleep"]], "disable_irq() (in module machine)": [[30, "machine.disable_irq"]], "enable_irq() (in module machine)": [[30, "machine.enable_irq"]], "freq() (in module machine)": [[30, "machine.freq"]], "idle() (in module machine)": [[30, "machine.idle"]], "lightsleep() (in module machine)": [[30, "machine.lightsleep"]], "machine": [[30, "module-machine"]], "machine.deepsleep (in module machine)": [[30, "machine.machine.DEEPSLEEP"]], "machine.deepsleep_reset (in module machine)": [[30, "machine.machine.DEEPSLEEP_RESET"]], "machine.hard_reset (in module machine)": [[30, "machine.machine.HARD_RESET"]], "machine.idle (in module machine)": [[30, "machine.machine.IDLE"]], "machine.pin_wake (in module machine)": [[30, "machine.machine.PIN_WAKE"]], "machine.pwron_reset (in module machine)": [[30, "machine.machine.PWRON_RESET"]], "machine.rtc_wake (in module machine)": [[30, "machine.machine.RTC_WAKE"]], "machine.sleep (in module machine)": [[30, "machine.machine.SLEEP"]], "machine.soft_reset (in module machine)": [[30, "machine.machine.SOFT_RESET"]], "machine.wdt_reset (in module machine)": [[30, "machine.machine.WDT_RESET"]], "machine.wlan_wake (in module machine)": [[30, "machine.machine.WLAN_WAKE"]], "mem16 (in module machine)": [[30, "machine.mem16"]], "mem32 (in module machine)": [[30, "machine.mem32"]], "mem8 (in module machine)": [[30, "machine.mem8"]], "reset() (in module machine)": [[30, "machine.reset"]], "reset_cause() (in module machine)": [[30, "machine.reset_cause"]], "sleep() (in module machine)": [[30, "machine.sleep"]], "soft_reset() (in module machine)": [[30, "machine.soft_reset"]], "time_pulse_us() (in module machine)": [[30, "machine.time_pulse_us"]], "unique_id() (in module machine)": [[30, "machine.unique_id"]], "adc (class in machine)": [[31, "machine.ADC"]], "block() (machine.adc method)": [[31, "machine.ADC.block"]], "init() (machine.adc method)": [[31, "machine.ADC.init"]], "read_u16() (machine.adc method)": [[31, "machine.ADC.read_u16"]], "read_uv() (machine.adc method)": [[31, "machine.ADC.read_uv"]], "adcblock (class in machine)": [[32, "machine.ADCBlock"]], "connect() (machine.adcblock method)": [[32, "machine.ADCBlock.connect"]], "init() (machine.adcblock method)": [[32, "machine.ADCBlock.init"]], "can (class in machine)": [[33, "machine.CAN"]], "can.bus_off (in module machine)": [[33, "machine.CAN.BUS_OFF"]], "can.dual (in module machine)": [[33, "machine.CAN.DUAL"]], "can.error_active (in module machine)": [[33, "machine.CAN.ERROR_ACTIVE"]], "can.error_passive (in module machine)": [[33, "machine.CAN.ERROR_PASSIVE"]], "can.error_warning (in module machine)": [[33, "machine.CAN.ERROR_WARNING"]], "can.list32 (in module machine)": [[33, "machine.CAN.LIST32"]], "can.loopback (in module machine)": [[33, "machine.CAN.LOOPBACK"]], "can.normal (in module machine)": [[33, "machine.CAN.NORMAL"]], "can.silent (in module machine)": [[33, "machine.CAN.SILENT"]], "can.silent_loopback (in module machine)": [[33, "machine.CAN.SILENT_LOOPBACK"]], "can.stopped (in module machine)": [[33, "machine.CAN.STOPPED"]], "any() (machine.can method)": [[33, "machine.CAN.any"]], "clearfilter() (machine.can method)": [[33, "machine.CAN.clearfilter"]], "deinit() (machine.can method)": [[33, "machine.CAN.deinit"]], "info() (machine.can method)": [[33, "machine.CAN.info"]], "init() (machine.can method)": [[33, "machine.CAN.init"]], "recv() (machine.can method)": [[33, "machine.CAN.recv"]], "restart() (machine.can method)": [[33, "machine.CAN.restart"]], "rxcallback() (machine.can method)": [[33, "machine.CAN.rxcallback"]], "send() (machine.can method)": [[33, "machine.CAN.send"]], "setfilter() (machine.can method)": [[33, "machine.CAN.setfilter"]], "state() (machine.can method)": [[33, "machine.CAN.state"]], "i2c (class in machine)": [[34, "machine.I2C"]], "softi2c (class in machine)": [[34, "machine.SoftI2C"]], "init() (machine.i2c method)": [[34, "machine.I2C.init"]], "readfrom() (machine.i2c method)": [[34, "machine.I2C.readfrom"]], "readfrom_into() (machine.i2c method)": [[34, "machine.I2C.readfrom_into"]], "readfrom_mem() (machine.i2c method)": [[34, "machine.I2C.readfrom_mem"]], "readfrom_mem_into() (machine.i2c method)": [[34, "machine.I2C.readfrom_mem_into"]], "readinto() (machine.i2c method)": [[34, "machine.I2C.readinto"]], "scan() (machine.i2c method)": [[34, "machine.I2C.scan"]], "start() (machine.i2c method)": [[34, "machine.I2C.start"]], "stop() (machine.i2c method)": [[34, "machine.I2C.stop"]], "write() (machine.i2c method)": [[34, "machine.I2C.write"]], "writeto() (machine.i2c method)": [[34, "machine.I2C.writeto"]], "writeto_mem() (machine.i2c method)": [[34, "machine.I2C.writeto_mem"]], "writevto() (machine.i2c method)": [[34, "machine.I2C.writevto"]], "i2s (class in machine)": [[35, "machine.I2S"]], "i2s.mono (in module machine)": [[35, "machine.I2S.MONO"]], "i2s.rx (in module machine)": [[35, "machine.I2S.RX"]], "i2s.stereo (in module machine)": [[35, "machine.I2S.STEREO"]], "i2s.tx (in module machine)": [[35, "machine.I2S.TX"]], "deinit() (machine.i2s method)": [[35, "machine.I2S.deinit"]], "init() (machine.i2s method)": [[35, "machine.I2S.init"]], "irq() (machine.i2s method)": [[35, "machine.I2S.irq"]], "readinto() (machine.i2s method)": [[35, "machine.I2S.readinto"]], "shift() (machine.i2s static method)": [[35, "machine.I2S.shift"]], "write() (machine.i2s method)": [[35, "machine.I2S.write"]], "led (class in machine)": [[36, "machine.LED"]], "boardname() (machine.led method)": [[36, "machine.LED.boardname"]], "on() (machine.led method)": [[36, "machine.LED.on"]], "toggle() (machine.led method)": [[36, "machine.LED.toggle"]], "value() (machine.led method)": [[36, "machine.LED.value"]], "pwm (class in machine)": [[37, "machine.PWM"]], "deinit() (machine.pwm method)": [[37, "machine.PWM.deinit"]], "duty_ns() (machine.pwm method)": [[37, "machine.PWM.duty_ns"]], "duty_u16() (machine.pwm method)": [[37, "machine.PWM.duty_u16"]], "freq() (machine.pwm method)": [[37, "machine.PWM.freq"]], "init() (machine.pwm method)": [[37, "machine.PWM.init"]], "pin (class in machine)": [[38, "machine.Pin"]], "pin.alt (in module machine)": [[38, "machine.Pin.ALT"]], "pin.alt_open_drain (in module machine)": [[38, "machine.Pin.ALT_OPEN_DRAIN"]], "pin.analog (in module machine)": [[38, "machine.Pin.ANALOG"]], "pin.drive_0 (in module machine)": [[38, "machine.Pin.DRIVE_0"]], "pin.drive_1 (in module machine)": [[38, "machine.Pin.DRIVE_1"]], "pin.drive_2 (in module machine)": [[38, "machine.Pin.DRIVE_2"]], "pin.in (in module machine)": [[38, "machine.Pin.IN"]], "pin.irq_falling (in module machine)": [[38, "machine.Pin.IRQ_FALLING"]], "pin.irq_high_level (in module machine)": [[38, "machine.Pin.IRQ_HIGH_LEVEL"]], "pin.irq_low_level (in module machine)": [[38, "machine.Pin.IRQ_LOW_LEVEL"]], "pin.irq_rising (in module machine)": [[38, "machine.Pin.IRQ_RISING"]], "pin.open_drain (in module machine)": [[38, "machine.Pin.OPEN_DRAIN"]], "pin.out (in module machine)": [[38, "machine.Pin.OUT"]], "pin.pull_down (in module machine)": [[38, "machine.Pin.PULL_DOWN"]], "pin.pull_hold (in module machine)": [[38, "machine.Pin.PULL_HOLD"]], "pin.pull_up (in module machine)": [[38, "machine.Pin.PULL_UP"]], "__call__() (machine.pin method)": [[38, "machine.Pin.__call__"]], "drive() (machine.pin method)": [[38, "machine.Pin.drive"]], "high() (machine.pin method)": [[38, "machine.Pin.high"]], "init() (machine.pin method)": [[38, "machine.Pin.init"]], "irq() (machine.pin method)": [[38, "machine.Pin.irq"]], "low() (machine.pin method)": [[38, "machine.Pin.low"]], "mode() (machine.pin method)": [[38, "machine.Pin.mode"]], "off() (machine.pin method)": [[38, "machine.Pin.off"]], "on() (machine.pin method)": [[38, "machine.Pin.on"]], "pull() (machine.pin method)": [[38, "machine.Pin.pull"]], "toggle() (machine.pin method)": [[38, "machine.Pin.toggle"]], "value() (machine.pin method)": [[38, "machine.Pin.value"]], "rtc (class in machine)": [[39, "machine.RTC"]], "rtc.alarm0 (in module machine)": [[39, "machine.RTC.ALARM0"]], "alarm() (machine.rtc method)": [[39, "machine.RTC.alarm"]], "alarm_cancel() (machine.rtc method)": [[39, "machine.RTC.alarm_cancel"]], "alarm_left() (machine.rtc method)": [[39, "machine.RTC.alarm_left"]], "datetime() (machine.rtc method)": [[39, "machine.RTC.datetime"]], "deinit() (machine.rtc method)": [[39, "machine.RTC.deinit"]], "init() (machine.rtc method)": [[39, "machine.RTC.init"]], "irq() (machine.rtc method)": [[39, "machine.RTC.irq"]], "memory() (machine.rtc method)": [[39, "machine.RTC.memory"]], "now() (machine.rtc method)": [[39, "machine.RTC.now"]], "spi (class in machine)": [[40, "machine.SPI"]], "spi.controller (in module machine)": [[40, "machine.SPI.CONTROLLER"]], "spi.lsb (in module machine)": [[40, "machine.SPI.LSB"]], "spi.msb (in module machine)": [[40, "machine.SPI.MSB"]], "softspi (class in machine)": [[40, "machine.SoftSPI"]], "softspi.lsb (in module machine)": [[40, "machine.SoftSPI.LSB"]], "softspi.msb (in module machine)": [[40, "machine.SoftSPI.MSB"]], "deinit() (machine.spi method)": [[40, "machine.SPI.deinit"]], "init() (machine.spi method)": [[40, "machine.SPI.init"]], "read() (machine.spi method)": [[40, "machine.SPI.read"]], "readinto() (machine.spi method)": [[40, "machine.SPI.readinto"]], "write() (machine.spi method)": [[40, "machine.SPI.write"]], "write_readinto() (machine.spi method)": [[40, "machine.SPI.write_readinto"]], "signal (class in machine)": [[41, "machine.Signal"]], "off() (machine.signal method)": [[41, "machine.Signal.off"]], "on() (machine.signal method)": [[41, "machine.Signal.on"]], "value() (machine.signal method)": [[41, "machine.Signal.value"]], "timer (class in machine)": [[42, "machine.Timer"]], "timer.one_shot (in module machine)": [[42, "machine.Timer.ONE_SHOT"]], "timer.periodic (in module machine)": [[42, "machine.Timer.PERIODIC"]], "deinit() (machine.timer method)": [[42, "machine.Timer.deinit"]], "init() (machine.timer method)": [[42, "machine.Timer.init"]], "uart (class in machine)": [[43, "machine.UART"]], "uart.cts (in module machine)": [[43, "machine.UART.CTS"]], "uart.irq_break (in module machine)": [[43, "machine.UART.IRQ_BREAK"]], "uart.irq_rx (in module machine)": [[43, "machine.UART.IRQ_RX"]], "uart.irq_rxidle (in module machine)": [[43, "machine.UART.IRQ_RXIDLE"]], "uart.irq_txidle (in module machine)": [[43, "machine.UART.IRQ_TXIDLE"]], "uart.rts (in module machine)": [[43, "machine.UART.RTS"]], "any() (machine.uart method)": [[43, "machine.UART.any"]], "deinit() (machine.uart method)": [[43, "machine.UART.deinit"]], "flush() (machine.uart method)": [[43, "machine.UART.flush"]], "init() (machine.uart method)": [[43, "machine.UART.init"]], "irq() (machine.uart method)": [[43, "machine.UART.irq"]], "read() (machine.uart method)": [[43, "machine.UART.read"]], "readinto() (machine.uart method)": [[43, "machine.UART.readinto"]], "readline() (machine.uart method)": [[43, "machine.UART.readline"]], "sendbreak() (machine.uart method)": [[43, "machine.UART.sendbreak"]], "txdone() (machine.uart method)": [[43, "machine.UART.txdone"]], "write() (machine.uart method)": [[43, "machine.UART.write"]], "wdt (class in machine)": [[44, "machine.WDT"]], "feed() (machine.wdt method)": [[44, "machine.WDT.feed"]], "dumps() (in module marshal)": [[45, "marshal.dumps"]], "loads() (in module marshal)": [[45, "marshal.loads"]], "marshal": [[45, "module-marshal"]], "acos() (in module math)": [[46, "math.acos"]], "acosh() (in module math)": [[46, "math.acosh"]], "asin() (in module math)": [[46, "math.asin"]], "asinh() (in module math)": [[46, "math.asinh"]], "atan() (in module math)": [[46, "math.atan"]], "atan2() (in module math)": [[46, "math.atan2"]], "atanh() (in module math)": [[46, "math.atanh"]], "ceil() (in module math)": [[46, "math.ceil"]], "copysign() (in module math)": [[46, "math.copysign"]], "cos() (in module math)": [[46, "math.cos"]], "cosh() (in module math)": [[46, "math.cosh"]], "degrees() (in module math)": [[46, "math.degrees"]], "e (in module math)": [[46, "math.e"]], "erf() (in module math)": [[46, "math.erf"]], "erfc() (in module math)": [[46, "math.erfc"]], "exp() (in module math)": [[46, "math.exp"]], "expm1() (in module math)": [[46, "math.expm1"]], "fabs() (in module math)": [[46, "math.fabs"]], "floor() (in module math)": [[46, "math.floor"]], "fmod() (in module math)": [[46, "math.fmod"]], "frexp() (in module math)": [[46, "math.frexp"]], "gamma() (in module math)": [[46, "math.gamma"]], "isfinite() (in module math)": [[46, "math.isfinite"]], "isinf() (in module math)": [[46, "math.isinf"]], "isnan() (in module math)": [[46, "math.isnan"]], "ldexp() (in module math)": [[46, "math.ldexp"]], "lgamma() (in module math)": [[46, "math.lgamma"]], "log() (in module math)": [[46, "math.log"]], "log10() (in module math)": [[46, "math.log10"]], "log2() (in module math)": [[46, "math.log2"]], "math": [[46, "module-math"]], "modf() (in module math)": [[46, "math.modf"]], "pi (in module math)": [[46, "math.pi"]], "pow() (in module math)": [[46, "math.pow"]], "radians() (in module math)": [[46, "math.radians"]], "sin() (in module math)": [[46, "math.sin"]], "sinh() (in module math)": [[46, "math.sinh"]], "sqrt() (in module math)": [[46, "math.sqrt"]], "tan() (in module math)": [[46, "math.tan"]], "tanh() (in module math)": [[46, "math.tanh"]], "trunc() (in module math)": [[46, "math.trunc"]], "ringio (class in micropython)": [[47, "micropython.RingIO"]], "alloc_emergency_exception_buf() (in module micropython)": [[47, "micropython.alloc_emergency_exception_buf"]], "any() (micropython.ringio method)": [[47, "micropython.RingIO.any"]], "close() (micropython.ringio method)": [[47, "micropython.RingIO.close"]], "const() (in module micropython)": [[47, "micropython.const"]], "heap_lock() (in module micropython)": [[47, "micropython.heap_lock"]], "heap_locked() (in module micropython)": [[47, "micropython.heap_locked"]], "heap_unlock() (in module micropython)": [[47, "micropython.heap_unlock"]], "kbd_intr() (in module micropython)": [[47, "micropython.kbd_intr"]], "mem_info() (in module micropython)": [[47, "micropython.mem_info"]], "micropython": [[47, "module-micropython"]], "opt_level() (in module micropython)": [[47, "micropython.opt_level"]], "qstr_info() (in module micropython)": [[47, "micropython.qstr_info"]], "read() (micropython.ringio method)": [[47, "micropython.RingIO.read"]], "readinto() (micropython.ringio method)": [[47, "micropython.RingIO.readinto"]], "readline() (micropython.ringio method)": [[47, "micropython.RingIO.readline"]], "schedule() (in module micropython)": [[47, "micropython.schedule"]], "stack_use() (in module micropython)": [[47, "micropython.stack_use"]], "write() (micropython.ringio method)": [[47, "micropython.RingIO.write"]], "mutex (class in mutex)": [[48, "mutex.Mutex"]], "mutex": [[48, "module-mutex"]], "release() (mutex.mutex method)": [[48, "mutex.Mutex.release"]], "test() (mutex.mutex method)": [[48, "mutex.Mutex.test"]], "abstractnic (class in network)": [[49, "network.AbstractNIC"]], "active() (network.abstractnic method)": [[49, "network.AbstractNIC.active"]], "config() (network.abstractnic method)": [[49, "network.AbstractNIC.config"]], "connect() (network.abstractnic method)": [[49, "network.AbstractNIC.connect"]], "country() (in module network)": [[49, "network.country"]], "disconnect() (network.abstractnic method)": [[49, "network.AbstractNIC.disconnect"]], "hostname() (in module network)": [[49, "network.hostname"]], "ifconfig() (network.abstractnic method)": [[49, "network.AbstractNIC.ifconfig"]], "ipconfig() (in module network)": [[49, "network.ipconfig"]], "ipconfig() (network.abstractnic method)": [[49, "network.AbstractNIC.ipconfig"]], "isconnected() (network.abstractnic method)": [[49, "network.AbstractNIC.isconnected"]], "network": [[49, "module-network"]], "phy_mode() (in module network)": [[49, "network.phy_mode"]], "scan() (network.abstractnic method)": [[49, "network.AbstractNIC.scan"]], "status() (network.abstractnic method)": [[49, "network.AbstractNIC.status"]], "lan (class in network)": [[50, "network.LAN"]], "active() (network.lan method)": [[50, "network.LAN.active"]], "config() (network.lan method)": [[50, "network.LAN.config"]], "ifconfig() (network.lan method)": [[50, "network.LAN.ifconfig"]], "isconnected() (network.lan method)": [[50, "network.LAN.isconnected"]], "status() (network.lan method)": [[50, "network.LAN.status"]], "ppp (class in network)": [[51, "network.PPP"]], "ppp.sec_chap (in module network)": [[51, "network.PPP.SEC_CHAP"]], "ppp.sec_none (in module network)": [[51, "network.PPP.SEC_NONE"]], "ppp.sec_pap (in module network)": [[51, "network.PPP.SEC_PAP"]], "config() (network.ppp method)": [[51, "network.PPP.config"]], "connect() (network.ppp method)": [[51, "network.PPP.connect"]], "disconnect() (network.ppp method)": [[51, "network.PPP.disconnect"]], "ifconfig() (network.ppp method)": [[51, "network.PPP.ifconfig"]], "ipconfig() (network.ppp method)": [[51, "network.PPP.ipconfig"]], "isconnected() (network.ppp method)": [[51, "network.PPP.isconnected"]], "poll() (network.ppp method)": [[51, "network.PPP.poll"]], "status() (network.ppp method)": [[51, "network.PPP.status"]], "winc (class in network)": [[52, "network.WINC"]], "winc.802_1x (in module network)": [[52, "network.WINC.802_1X"]], "winc.mode_ap (in module network)": [[52, "network.WINC.MODE_AP"]], "winc.mode_bsp (in module network)": [[52, "network.WINC.MODE_BSP"]], "winc.mode_firmware (in module network)": [[52, "network.WINC.MODE_FIRMWARE"]], "winc.mode_p2p (in module network)": [[52, "network.WINC.MODE_P2P"]], "winc.mode_sta (in module network)": [[52, "network.WINC.MODE_STA"]], "winc.open (in module network)": [[52, "network.WINC.OPEN"]], "winc.wpa_psk (in module network)": [[52, "network.WINC.WPA_PSK"]], "active() (network.winc method)": [[52, "network.WINC.active"]], "connect() (network.winc method)": [[52, "network.WINC.connect"]], "connected_sta() (network.winc method)": [[52, "network.WINC.connected_sta"]], "disconnect() (network.winc method)": [[52, "network.WINC.disconnect"]], "fw_dump() (network.winc method)": [[52, "network.WINC.fw_dump"]], "fw_update() (network.winc method)": [[52, "network.WINC.fw_update"]], "fw_version() (network.winc method)": [[52, "network.WINC.fw_version"]], "ifconfig() (network.winc method)": [[52, "network.WINC.ifconfig"]], "isconnected() (network.winc method)": [[52, "network.WINC.isconnected"]], "netinfo() (network.winc method)": [[52, "network.WINC.netinfo"]], "rssi() (network.winc method)": [[52, "network.WINC.rssi"]], "scan() (network.winc method)": [[52, "network.WINC.scan"]], "start_ap() (network.winc method)": [[52, "network.WINC.start_ap"]], "wait_for_sta() (network.winc method)": [[52, "network.WINC.wait_for_sta"]], "wlan (class in network)": [[53, "network.WLAN"]], "wlan.pm_none (in module network)": [[53, "network.WLAN.PM_NONE"]], "wlan.pm_performance (in module network)": [[53, "network.WLAN.PM_PERFORMANCE"]], "wlan.pm_powersave (in module network)": [[53, "network.WLAN.PM_POWERSAVE"]], "active() (network.wlan method)": [[53, "network.WLAN.active"]], "config() (network.wlan method)": [[53, "network.WLAN.config"]], "connect() (network.wlan method)": [[53, "network.WLAN.connect"]], "disconnect() (network.wlan method)": [[53, "network.WLAN.disconnect"]], "ifconfig() (network.wlan method)": [[53, "network.WLAN.ifconfig"]], "isconnected() (network.wlan method)": [[53, "network.WLAN.isconnected"]], "scan() (network.wlan method)": [[53, "network.WLAN.scan"]], "status() (network.wlan method)": [[53, "network.WLAN.status"]], "audio": [[54, "module-audio"]], "init() (in module audio)": [[54, "audio.init"]], "start_streaming() (in module audio)": [[54, "audio.start_streaming"]], "stop_streaming() (in module audio)": [[54, "audio.stop_streaming"]], "resonant_freq (in module buzzer)": [[55, "buzzer.RESONANT_FREQ"]], "buzzer": [[55, "module-buzzer"]], "duty() (in module buzzer)": [[55, "buzzer.duty"]], "freq() (in module buzzer)": [[55, "buzzer.freq"]], "cpufreq": [[56, "module-cpufreq"]], "get_current_frequencies() (in module cpufreq)": [[56, "cpufreq.get_current_frequencies"]], "get_supported_frequencies() (in module cpufreq)": [[56, "cpufreq.get_supported_frequencies"]], "set_frequency() (in module cpufreq)": [[56, "cpufreq.set_frequency"]], "fhd (in module display)": [[57, "display.FHD"]], "fhvga (in module display)": [[57, "display.FHVGA"]], "fhvga2 (in module display)": [[57, "display.FHVGA2"]], "fwvga (in module display)": [[57, "display.FWVGA"]], "fwvga2 (in module display)": [[57, "display.FWVGA2"]], "hd (in module display)": [[57, "display.HD"]], "qvga (in module display)": [[57, "display.QVGA"]], "svga (in module display)": [[57, "display.SVGA"]], "sxga (in module display)": [[57, "display.SXGA"]], "sxga2 (in module display)": [[57, "display.SXGA2"]], "tfwvga (in module display)": [[57, "display.TFWVGA"]], "tfwvga2 (in module display)": [[57, "display.TFWVGA2"]], "thvga (in module display)": [[57, "display.THVGA"]], "tqvga (in module display)": [[57, "display.TQVGA"]], "uxga (in module display)": [[57, "display.UXGA"]], "vga (in module display)": [[57, "display.VGA"]], "wsvga (in module display)": [[57, "display.WSVGA"]], "xga (in module display)": [[57, "display.XGA"]], "display": [[57, "module-display"]], "backlight() (display.dacbacklight method)": [[58, "display.DACBacklight.backlight"]], "deinit() (display.dacbacklight method)": [[58, "display.DACBacklight.deinit"]], "display.dacbacklight (class in display)": [[58, "display.display.DACBacklight"]], "backlight() (display.pwmbacklight method)": [[59, "display.PWMBacklight.backlight"]], "deinit() (display.pwmbacklight method)": [[59, "display.PWMBacklight.deinit"]], "display.pwmbacklight (class in display)": [[59, "display.display.PWMBacklight"]], "display.st7701 (class in display)": [[60, "display.display.ST7701"]], "init() (display.st7701 method)": [[60, "display.ST7701.init"]], "read_id() (display.st7701 method)": [[60, "display.ST7701.read_id"]], "display.displaydata (class in display)": [[61, "display.display.DisplayData"]], "display_id() (display.displaydata method)": [[61, "display.DisplayData.display_id"]], "frame_callback() (display.displaydata method)": [[61, "display.DisplayData.frame_callback"]], "receive_frame() (display.displaydata method)": [[61, "display.DisplayData.receive_frame"]], "send_frame() (display.displaydata method)": [[61, "display.DisplayData.send_frame"]], "backlight() (display.dsidisplay method)": [[62, "display.DSIDisplay.backlight"]], "bus_read() (display.dsidisplay method)": [[62, "display.DSIDisplay.bus_read"]], "bus_write() (display.dsidisplay method)": [[62, "display.DSIDisplay.bus_write"]], "clear() (display.dsidisplay method)": [[62, "display.DSIDisplay.clear"]], "deinit() (display.dsidisplay method)": [[62, "display.DSIDisplay.deinit"]], "display.dsidisplay (class in display)": [[62, "display.display.DSIDisplay"]], "height() (display.dsidisplay method)": [[62, "display.DSIDisplay.height"]], "refresh() (display.dsidisplay method)": [[62, "display.DSIDisplay.refresh"]], "width() (display.dsidisplay method)": [[62, "display.DSIDisplay.width"]], "write() (display.dsidisplay method)": [[62, "display.DSIDisplay.write"]], "backlight() (display.rgbdisplay method)": [[63, "display.RGBDisplay.backlight"]], "clear() (display.rgbdisplay method)": [[63, "display.RGBDisplay.clear"]], "deinit() (display.rgbdisplay method)": [[63, "display.RGBDisplay.deinit"]], "display.rgbdisplay (class in display)": [[63, "display.display.RGBDisplay"]], "height() (display.rgbdisplay method)": [[63, "display.RGBDisplay.height"]], "refresh() (display.rgbdisplay method)": [[63, "display.RGBDisplay.refresh"]], "width() (display.rgbdisplay method)": [[63, "display.RGBDisplay.width"]], "write() (display.rgbdisplay method)": [[63, "display.RGBDisplay.write"]], "spidisplay (class in display)": [[64, "display.SPIDisplay"]], "backlight() (display.spidisplay method)": [[64, "display.SPIDisplay.backlight"]], "bgr() (display.spidisplay method)": [[64, "display.SPIDisplay.bgr"]], "bus_write() (display.spidisplay method)": [[64, "display.SPIDisplay.bus_write"]], "byte_swap() (display.spidisplay method)": [[64, "display.SPIDisplay.byte_swap"]], "clear() (display.spidisplay method)": [[64, "display.SPIDisplay.clear"]], "deinit() (display.spidisplay method)": [[64, "display.SPIDisplay.deinit"]], "height() (display.spidisplay method)": [[64, "display.SPIDisplay.height"]], "refresh() (display.spidisplay method)": [[64, "display.SPIDisplay.refresh"]], "triple_buffer() (display.spidisplay method)": [[64, "display.SPIDisplay.triple_buffer"]], "width() (display.spidisplay method)": [[64, "display.SPIDisplay.width"]], "write() (display.spidisplay method)": [[64, "display.SPIDisplay.write"]], "fir_amg8833 (in module fir)": [[65, "fir.FIR_AMG8833"]], "fir_lepton (in module fir)": [[65, "fir.FIR_LEPTON"]], "fir_mlx90621 (in module fir)": [[65, "fir.FIR_MLX90621"]], "fir_mlx90640 (in module fir)": [[65, "fir.FIR_MLX90640"]], "fir_mlx90641 (in module fir)": [[65, "fir.FIR_MLX90641"]], "fir_none (in module fir)": [[65, "fir.FIR_NONE"]], "fir_shield (in module fir)": [[65, "fir.FIR_SHIELD"]], "deinit() (in module fir)": [[65, "fir.deinit"]], "draw_ir() (in module fir)": [[65, "fir.draw_ir"]], "fir": [[65, "module-fir"]], "get_frame_available() (in module fir)": [[65, "fir.get_frame_available"]], "height() (in module fir)": [[65, "fir.height"]], "init() (in module fir)": [[65, "fir.init"]], "radiometric() (in module fir)": [[65, "fir.radiometric"]], "read_ir() (in module fir)": [[65, "fir.read_ir"]], "read_ta() (in module fir)": [[65, "fir.read_ta"]], "refresh() (in module fir)": [[65, "fir.refresh"]], "register_frame_cb() (in module fir)": [[65, "fir.register_frame_cb"]], "register_vsync_cb() (in module fir)": [[65, "fir.register_vsync_cb"]], "resolution() (in module fir)": [[65, "fir.resolution"]], "snapshot() (in module fir)": [[65, "fir.snapshot"]], "trigger_ffc() (in module fir)": [[65, "fir.trigger_ffc"]], "type() (in module fir)": [[65, "fir.type"]], "width() (in module fir)": [[65, "fir.width"]], "lcd_flag_moved (in module ft5x06)": [[66, "ft5x06.LCD_FLAG_MOVED"]], "lcd_flag_pressed (in module ft5x06)": [[66, "ft5x06.LCD_FLAG_PRESSED"]], "lcd_flag_released (in module ft5x06)": [[66, "ft5x06.LCD_FLAG_RELEASED"]], "lcd_gesture_move_down (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_MOVE_DOWN"]], "lcd_gesture_move_left (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_MOVE_LEFT"]], "lcd_gesture_move_right (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_MOVE_RIGHT"]], "lcd_gesture_move_up (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_MOVE_UP"]], "lcd_gesture_none (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_NONE"]], "lcd_gesture_zoom_in (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_ZOOM_IN"]], "lcd_gesture_zoom_out (in module ft5x06)": [[66, "ft5x06.LCD_GESTURE_ZOOM_OUT"]], "ft5x06": [[66, "module-ft5x06"]], "ft5x06.ft5x06 (class in ft5x06)": [[66, "ft5x06.ft5x06.FT5X06"]], "get_gesture() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_gesture"]], "get_point_flag() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_point_flag"]], "get_point_id() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_point_id"]], "get_point_x() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_point_x"]], "get_point_y() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_point_y"]], "get_points() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.get_points"]], "touch_callback() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.touch_callback"]], "update_points() (ft5x06.ft5x06 method)": [[66, "ft5x06.FT5X06.update_points"]], "gif (class in gif)": [[67, "gif.Gif"]], "add_frame() (gif.gif method)": [[67, "gif.Gif.add_frame"]], "close() (gif.gif method)": [[67, "gif.Gif.close"]], "format() (gif.gif method)": [[67, "gif.Gif.format"]], "gif": [[67, "module-gif"]], "height() (gif.gif method)": [[67, "gif.Gif.height"]], "loop() (gif.gif method)": [[67, "gif.Gif.loop"]], "size() (gif.gif method)": [[67, "gif.Gif.size"]], "width() (gif.gif method)": [[67, "gif.Gif.width"]], "_read_reg() (gt911.gt911 method)": [[68, "gt911.GT911._read_reg"]], "_write_reg() (gt911.gt911 method)": [[68, "gt911.GT911._write_reg"]], "gt911": [[68, "module-gt911"]], "gt911.gt911 (class in gt911)": [[68, "gt911.gt911.GT911"]], "read_id() (gt911.gt911 method)": [[68, "gt911.GT911.read_id"]], "read_points() (gt911.gt911 method)": [[68, "gt911.GT911.read_points"]], "reset() (gt911.gt911 method)": [[68, "gt911.GT911.reset"]], "apply_color_palette_first (in module image)": [[69, "image.APPLY_COLOR_PALETTE_FIRST"]], "area (in module image)": [[69, "image.AREA"]], "artoolkit (in module image)": [[69, "image.ARTOOLKIT"]], "bayer (in module image)": [[69, "image.BAYER"]], "bicubic (in module image)": [[69, "image.BICUBIC"]], "bilinear (in module image)": [[69, "image.BILINEAR"]], "binary (in module image)": [[69, "image.BINARY"]], "black_background (in module image)": [[69, "image.BLACK_BACKGROUND"]], "center (in module image)": [[69, "image.CENTER"]], "codabar (in module image)": [[69, "image.CODABAR"]], "code128 (in module image)": [[69, "image.CODE128"]], "code39 (in module image)": [[69, "image.CODE39"]], "code93 (in module image)": [[69, "image.CODE93"]], "corner_agast (in module image)": [[69, "image.CORNER_AGAST"]], "corner_fast (in module image)": [[69, "image.CORNER_FAST"]], "databar (in module image)": [[69, "image.DATABAR"]], "databar_exp (in module image)": [[69, "image.DATABAR_EXP"]], "ean13 (in module image)": [[69, "image.EAN13"]], "ean2 (in module image)": [[69, "image.EAN2"]], "ean5 (in module image)": [[69, "image.EAN5"]], "ean8 (in module image)": [[69, "image.EAN8"]], "edge_canny (in module image)": [[69, "image.EDGE_CANNY"]], "edge_simple (in module image)": [[69, "image.EDGE_SIMPLE"]], "extract_rgb_channel_first (in module image)": [[69, "image.EXTRACT_RGB_CHANNEL_FIRST"]], "grayscale (in module image)": [[69, "image.GRAYSCALE"]], "hmirror (in module image)": [[69, "image.HMIRROR"]], "haarcascade (class in image)": [[69, "image.HaarCascade"]], "i25 (in module image)": [[69, "image.I25"]], "isbn10 (in module image)": [[69, "image.ISBN10"]], "isbn13 (in module image)": [[69, "image.ISBN13"]], "image (class in image)": [[69, "image.Image"]], "imageio (class in image)": [[69, "image.ImageIO"]], "imageio.file_stream (in module image)": [[69, "image.ImageIO.FILE_STREAM"]], "imageio.memory_stream (in module image)": [[69, "image.ImageIO.MEMORY_STREAM"]], "jpeg (in module image)": [[69, "image.JPEG"]], "jpeg_subsampling_420 (in module image)": [[69, "image.JPEG_SUBSAMPLING_420"]], "jpeg_subsampling_422 (in module image)": [[69, "image.JPEG_SUBSAMPLING_422"]], "jpeg_subsampling_444 (in module image)": [[69, "image.JPEG_SUBSAMPLING_444"]], "jpeg_subsampling_auto (in module image)": [[69, "image.JPEG_SUBSAMPLING_AUTO"]], "palette_depth (in module image)": [[69, "image.PALETTE_DEPTH"]], "palette_evt_dark (in module image)": [[69, "image.PALETTE_EVT_DARK"]], "palette_evt_light (in module image)": [[69, "image.PALETTE_EVT_LIGHT"]], "palette_ironbow (in module image)": [[69, "image.PALETTE_IRONBOW"]], "palette_rainbow (in module image)": [[69, "image.PALETTE_RAINBOW"]], "pdf417 (in module image)": [[69, "image.PDF417"]], "png (in module image)": [[69, "image.PNG"]], "rgb565 (in module image)": [[69, "image.RGB565"]], "rotate_180 (in module image)": [[69, "image.ROTATE_180"]], "rotate_270 (in module image)": [[69, "image.ROTATE_270"]], "rotate_90 (in module image)": [[69, "image.ROTATE_90"]], "scale_aspect_expand (in module image)": [[69, "image.SCALE_ASPECT_EXPAND"]], "scale_aspect_ignore (in module image)": [[69, "image.SCALE_ASPECT_IGNORE"]], "scale_aspect_keep (in module image)": [[69, "image.SCALE_ASPECT_KEEP"]], "search_ds (in module image)": [[69, "image.SEARCH_DS"]], "search_ex (in module image)": [[69, "image.SEARCH_EX"]], "similarity (class in image)": [[69, "image.Similarity"]], "tag16h5 (in module image)": [[69, "image.TAG16H5"]], "tag25h7 (in module image)": [[69, "image.TAG25H7"]], "tag25h9 (in module image)": [[69, "image.TAG25H9"]], "tag36h10 (in module image)": [[69, "image.TAG36H10"]], "tag36h11 (in module image)": [[69, "image.TAG36H11"]], "transpose (in module image)": [[69, "image.TRANSPOSE"]], "upca (in module image)": [[69, "image.UPCA"]], "upce (in module image)": [[69, "image.UPCE"]], "vflip (in module image)": [[69, "image.VFLIP"]], "yuv422 (in module image)": [[69, "image.YUV422"]], "a_bins() (image.histogram method)": [[69, "image.histogram.a_bins"]], "a_lq() (image.statistics method)": [[69, "image.statistics.a_lq"]], "a_max() (image.statistics method)": [[69, "image.statistics.a_max"]], "a_mean() (image.statistics method)": [[69, "image.statistics.a_mean"]], "a_median() (image.statistics method)": [[69, "image.statistics.a_median"]], "a_min() (image.statistics method)": [[69, "image.statistics.a_min"]], "a_mode() (image.statistics method)": [[69, "image.statistics.a_mode"]], "a_stdev() (image.statistics method)": [[69, "image.statistics.a_stdev"]], "a_uq() (image.statistics method)": [[69, "image.statistics.a_uq"]], "a_value() (image.percentile method)": [[69, "image.percentile.a_value"]], "a_value() (image.threshold method)": [[69, "image.threshold.a_value"]], "add() (image.image method)": [[69, "image.Image.add"]], "apriltag (class in image)": [[69, "image.apriltag"]], "area() (image.blob method)": [[69, "image.blob.area"]], "assign() (image.image method)": [[69, "image.Image.assign"]], "awb() (image.image method)": [[69, "image.Image.awb"]], "b_and() (image.image method)": [[69, "image.Image.b_and"]], "b_bins() (image.histogram method)": [[69, "image.histogram.b_bins"]], "b_lq() (image.statistics method)": [[69, "image.statistics.b_lq"]], "b_max() (image.statistics method)": [[69, "image.statistics.b_max"]], "b_mean() (image.statistics method)": [[69, "image.statistics.b_mean"]], "b_median() (image.statistics method)": [[69, "image.statistics.b_median"]], "b_min() (image.statistics method)": [[69, "image.statistics.b_min"]], "b_mode() (image.statistics method)": [[69, "image.statistics.b_mode"]], "b_nand() (image.image method)": [[69, "image.Image.b_nand"]], "b_nor() (image.image method)": [[69, "image.Image.b_nor"]], "b_or() (image.image method)": [[69, "image.Image.b_or"]], "b_stdev() (image.statistics method)": [[69, "image.statistics.b_stdev"]], "b_uq() (image.statistics method)": [[69, "image.statistics.b_uq"]], "b_value() (image.percentile method)": [[69, "image.percentile.b_value"]], "b_value() (image.threshold method)": [[69, "image.threshold.b_value"]], "b_xnor() (image.image method)": [[69, "image.Image.b_xnor"]], "b_xor() (image.image method)": [[69, "image.Image.b_xor"]], "barcode (class in image)": [[69, "image.barcode"]], "bilateral() (image.image method)": [[69, "image.Image.bilateral"]], "binary() (image.image method)": [[69, "image.Image.binary"]], "binary_to_grayscale() (in module image)": [[69, "image.binary_to_grayscale"]], "binary_to_lab() (in module image)": [[69, "image.binary_to_lab"]], "binary_to_rgb() (in module image)": [[69, "image.binary_to_rgb"]], "binary_to_yuv() (in module image)": [[69, "image.binary_to_yuv"]], "bins() (image.histogram method)": [[69, "image.histogram.bins"]], "black_hat() (image.image method)": [[69, "image.Image.black_hat"]], "blend() (image.image method)": [[69, "image.Image.blend"]], "blob (class in image)": [[69, "image.blob"]], "buffer_size() (image.imageio method)": [[69, "image.ImageIO.buffer_size"]], "bytearray() (image.image method)": [[69, "image.Image.bytearray"]], "capacity() (image.datamatrix method)": [[69, "image.datamatrix.capacity"]], "ccm() (image.image method)": [[69, "image.Image.ccm"]], "circle (class in image)": [[69, "image.circle"]], "clear() (image.image method)": [[69, "image.Image.clear"]], "close() (image.image method)": [[69, "image.Image.close"]], "close() (image.imageio method)": [[69, "image.ImageIO.close"]], "code() (image.blob method)": [[69, "image.blob.code"]], "columns() (image.datamatrix method)": [[69, "image.datamatrix.columns"]], "compactness() (image.blob method)": [[69, "image.blob.compactness"]], "compress() (image.image method)": [[69, "image.Image.compress"]], "convexity() (image.blob method)": [[69, "image.blob.convexity"]], "copy() (image.image method)": [[69, "image.Image.copy"]], "corners() (image.apriltag method)": [[69, "image.apriltag.corners"]], "corners() (image.barcode method)": [[69, "image.barcode.corners"]], "corners() (image.blob method)": [[69, "image.blob.corners"]], "corners() (image.datamatrix method)": [[69, "image.datamatrix.corners"]], "corners() (image.qrcode method)": [[69, "image.qrcode.corners"]], "corners() (image.rect method)": [[69, "image.rect.corners"]], "count() (image.imageio method)": [[69, "image.ImageIO.count"]], "count() (image.blob method)": [[69, "image.blob.count"]], "count() (image.kptmatch method)": [[69, "image.kptmatch.count"]], "crop() (image.image method)": [[69, "image.Image.crop"]], "cx() (image.apriltag method)": [[69, "image.apriltag.cx"]], "cx() (image.blob method)": [[69, "image.blob.cx"]], "cx() (image.kptmatch method)": [[69, "image.kptmatch.cx"]], "cxf() (image.apriltag method)": [[69, "image.apriltag.cxf"]], "cxf() (image.blob method)": [[69, "image.blob.cxf"]], "cy() (image.apriltag method)": [[69, "image.apriltag.cy"]], "cy() (image.blob method)": [[69, "image.blob.cy"]], "cy() (image.kptmatch method)": [[69, "image.kptmatch.cy"]], "cyf() (image.apriltag method)": [[69, "image.apriltag.cyf"]], "cyf() (image.blob method)": [[69, "image.blob.cyf"]], "data_type() (image.qrcode method)": [[69, "image.qrcode.data_type"]], "datamatrix (class in image)": [[69, "image.datamatrix"]], "decision_margin() (image.apriltag method)": [[69, "image.apriltag.decision_margin"]], "density() (image.blob method)": [[69, "image.blob.density"]], "difference() (image.image method)": [[69, "image.Image.difference"]], "dilate() (image.image method)": [[69, "image.Image.dilate"]], "displacement (class in image)": [[69, "image.displacement"]], "draw_arrow() (image.image method)": [[69, "image.Image.draw_arrow"]], "draw_circle() (image.image method)": [[69, "image.Image.draw_circle"]], "draw_cross() (image.image method)": [[69, "image.Image.draw_cross"]], "draw_edges() (image.image method)": [[69, "image.Image.draw_edges"]], "draw_ellipse() (image.image method)": [[69, "image.Image.draw_ellipse"]], "draw_image() (image.image method)": [[69, "image.Image.draw_image"]], "draw_keypoints() (image.image method)": [[69, "image.Image.draw_keypoints"]], "draw_line() (image.image method)": [[69, "image.Image.draw_line"]], "draw_rectangle() (image.image method)": [[69, "image.Image.draw_rectangle"]], "draw_string() (image.image method)": [[69, "image.Image.draw_string"]], "ecc_level() (image.qrcode method)": [[69, "image.qrcode.ecc_level"]], "eci() (image.qrcode method)": [[69, "image.qrcode.eci"]], "elongation() (image.blob method)": [[69, "image.blob.elongation"]], "enclosed_ellipse() (image.blob method)": [[69, "image.blob.enclosed_ellipse"]], "enclosing_circle() (image.blob method)": [[69, "image.blob.enclosing_circle"]], "erode() (image.image method)": [[69, "image.Image.erode"]], "extent() (image.blob method)": [[69, "image.blob.extent"]], "family() (image.apriltag method)": [[69, "image.apriltag.family"]], "find_apriltags() (image.image method)": [[69, "image.Image.find_apriltags"]], "find_barcodes() (image.image method)": [[69, "image.Image.find_barcodes"]], "find_blobs() (image.image method)": [[69, "image.Image.find_blobs"]], "find_circles() (image.image method)": [[69, "image.Image.find_circles"]], "find_datamatrices() (image.image method)": [[69, "image.Image.find_datamatrices"]], "find_displacement() (image.image method)": [[69, "image.Image.find_displacement"]], "find_edges() (image.image method)": [[69, "image.Image.find_edges"]], "find_eye() (image.image method)": [[69, "image.Image.find_eye"]], "find_features() (image.image method)": [[69, "image.Image.find_features"]], "find_hog() (image.image method)": [[69, "image.Image.find_hog"]], "find_keypoints() (image.image method)": [[69, "image.Image.find_keypoints"]], "find_lbp() (image.image method)": [[69, "image.Image.find_lbp"]], "find_line_segments() (image.image method)": [[69, "image.Image.find_line_segments"]], "find_lines() (image.image method)": [[69, "image.Image.find_lines"]], "find_qrcodes() (image.image method)": [[69, "image.Image.find_qrcodes"]], "find_rects() (image.image method)": [[69, "image.Image.find_rects"]], "find_template() (image.image method)": [[69, "image.Image.find_template"]], "flood_fill() (image.image method)": [[69, "image.Image.flood_fill"]], "flush() (image.image method)": [[69, "image.Image.flush"]], "format() (image.image method)": [[69, "image.Image.format"]], "gamma() (image.image method)": [[69, "image.Image.gamma"]], "gamma_corr() (image.image method)": [[69, "image.Image.gamma_corr"]], "gaussian() (image.image method)": [[69, "image.Image.gaussian"]], "get_histogram() (image.image method)": [[69, "image.Image.get_histogram"]], "get_percentile() (image.histogram method)": [[69, "image.histogram.get_percentile"]], "get_pixel() (image.image method)": [[69, "image.Image.get_pixel"]], "get_regression() (image.image method)": [[69, "image.Image.get_regression"]], "get_similarity() (image.image method)": [[69, "image.Image.get_similarity"]], "get_statistics() (image.image method)": [[69, "image.Image.get_statistics"]], "get_statistics() (image.histogram method)": [[69, "image.histogram.get_statistics"]], "get_threshold() (image.histogram method)": [[69, "image.histogram.get_threshold"]], "goodness() (image.apriltag method)": [[69, "image.apriltag.goodness"]], "grayscale_to_binary() (in module image)": [[69, "image.grayscale_to_binary"]], "grayscale_to_lab() (in module image)": [[69, "image.grayscale_to_lab"]], "grayscale_to_rgb() (in module image)": [[69, "image.grayscale_to_rgb"]], "grayscale_to_yuv() (in module image)": [[69, "image.grayscale_to_yuv"]], "h() (image.apriltag method)": [[69, "image.apriltag.h"]], "h() (image.barcode method)": [[69, "image.barcode.h"]], "h() (image.blob method)": [[69, "image.blob.h"]], "h() (image.datamatrix method)": [[69, "image.datamatrix.h"]], "h() (image.kptmatch method)": [[69, "image.kptmatch.h"]], "h() (image.qrcode method)": [[69, "image.qrcode.h"]], "h() (image.rect method)": [[69, "image.rect.h"]], "hamming() (image.apriltag method)": [[69, "image.apriltag.hamming"]], "height() (image.image method)": [[69, "image.Image.height"]], "histeq() (image.image method)": [[69, "image.Image.histeq"]], "histogram (class in image)": [[69, "image.histogram"]], "id() (image.apriltag method)": [[69, "image.apriltag.id"]], "image": [[69, "module-image"]], "invert() (image.image method)": [[69, "image.Image.invert"]], "is_alphanumeric() (image.qrcode method)": [[69, "image.qrcode.is_alphanumeric"]], "is_binary() (image.qrcode method)": [[69, "image.qrcode.is_binary"]], "is_closed() (image.imageio method)": [[69, "image.ImageIO.is_closed"]], "is_kanji() (image.qrcode method)": [[69, "image.qrcode.is_kanji"]], "is_numeric() (image.qrcode method)": [[69, "image.qrcode.is_numeric"]], "kptmatch (class in image)": [[69, "image.kptmatch"]], "l_bins() (image.histogram method)": [[69, "image.histogram.l_bins"]], "l_lq() (image.statistics method)": [[69, "image.statistics.l_lq"]], "l_max() (image.statistics method)": [[69, "image.statistics.l_max"]], "l_mean() (image.statistics method)": [[69, "image.statistics.l_mean"]], "l_median() (image.statistics method)": [[69, "image.statistics.l_median"]], "l_min() (image.statistics method)": [[69, "image.statistics.l_min"]], "l_mode() (image.statistics method)": [[69, "image.statistics.l_mode"]], "l_stdev() (image.statistics method)": [[69, "image.statistics.l_stdev"]], "l_uq() (image.statistics method)": [[69, "image.statistics.l_uq"]], "l_value() (image.percentile method)": [[69, "image.percentile.l_value"]], "l_value() (image.threshold method)": [[69, "image.threshold.l_value"]], "lab_to_binary() (in module image)": [[69, "image.lab_to_binary"]], "lab_to_grayscale() (in module image)": [[69, "image.lab_to_grayscale"]], "lab_to_rgb() (in module image)": [[69, "image.lab_to_rgb"]], "lab_to_yuv() (in module image)": [[69, "image.lab_to_yuv"]], "laplacian() (image.image method)": [[69, "image.Image.laplacian"]], "length() (image.line method)": [[69, "image.line.length"]], "lens_corr() (image.image method)": [[69, "image.Image.lens_corr"]], "line (class in image)": [[69, "image.line"]], "line() (image.line method)": [[69, "image.line.line"]], "linpolar() (image.image method)": [[69, "image.Image.linpolar"]], "load_decriptor() (in module image)": [[69, "image.load_decriptor"]], "logpolar() (image.image method)": [[69, "image.Image.logpolar"]], "lq() (image.statistics method)": [[69, "image.statistics.lq"]], "magnitude() (image.circle method)": [[69, "image.circle.magnitude"]], "magnitude() (image.line method)": [[69, "image.line.magnitude"]], "magnitude() (image.rect method)": [[69, "image.rect.magnitude"]], "major_axis_line() (image.blob method)": [[69, "image.blob.major_axis_line"]], "mask() (image.qrcode method)": [[69, "image.qrcode.mask"]], "mask_circle() (image.image method)": [[69, "image.Image.mask_circle"]], "mask_ellipse() (image.image method)": [[69, "image.Image.mask_ellipse"]], "mask_rectange() (image.image method)": [[69, "image.Image.mask_rectange"]], "match() (image.kptmatch method)": [[69, "image.kptmatch.match"]], "match_descriptor() (in module image)": [[69, "image.match_descriptor"]], "max() (image.image method)": [[69, "image.Image.max"]], "max() (image.similarity method)": [[69, "image.Similarity.max"]], "max() (image.statistics method)": [[69, "image.statistics.max"]], "mean() (image.image method)": [[69, "image.Image.mean"]], "mean() (image.similarity method)": [[69, "image.Similarity.mean"]], "mean() (image.statistics method)": [[69, "image.statistics.mean"]], "median() (image.image method)": [[69, "image.Image.median"]], "median() (image.statistics method)": [[69, "image.statistics.median"]], "midpoint() (image.image method)": [[69, "image.Image.midpoint"]], "min() (image.image method)": [[69, "image.Image.min"]], "min() (image.similarity method)": [[69, "image.Similarity.min"]], "min() (image.statistics method)": [[69, "image.statistics.min"]], "min_corners() (image.blob method)": [[69, "image.blob.min_corners"]], "minor_axis_line() (image.blob method)": [[69, "image.blob.minor_axis_line"]], "mode() (image.image method)": [[69, "image.Image.mode"]], "mode() (image.statistics method)": [[69, "image.statistics.mode"]], "morph() (image.image method)": [[69, "image.Image.morph"]], "negate() (image.image method)": [[69, "image.Image.negate"]], "offset() (image.imageio method)": [[69, "image.ImageIO.offset"]], "open() (image.image method)": [[69, "image.Image.open"]], "padding() (image.datamatrix method)": [[69, "image.datamatrix.padding"]], "payload() (image.barcode method)": [[69, "image.barcode.payload"]], "payload() (image.datamatrix method)": [[69, "image.datamatrix.payload"]], "payload() (image.qrcode method)": [[69, "image.qrcode.payload"]], "percentile (class in image)": [[69, "image.percentile"]], "perimeter() (image.blob method)": [[69, "image.blob.perimeter"]], "pixels() (image.blob method)": [[69, "image.blob.pixels"]], "qrcode (class in image)": [[69, "image.qrcode"]], "quality() (image.barcode method)": [[69, "image.barcode.quality"]], "r() (image.circle method)": [[69, "image.circle.r"]], "read() (image.imageio method)": [[69, "image.ImageIO.read"]], "rect (class in image)": [[69, "image.rect"]], "rect() (image.apriltag method)": [[69, "image.apriltag.rect"]], "rect() (image.barcode method)": [[69, "image.barcode.rect"]], "rect() (image.blob method)": [[69, "image.blob.rect"]], "rect() (image.datamatrix method)": [[69, "image.datamatrix.rect"]], "rect() (image.kptmatch method)": [[69, "image.kptmatch.rect"]], "rect() (image.qrcode method)": [[69, "image.qrcode.rect"]], "rect() (image.rect method)": [[69, "image.rect.rect"]], "replace() (image.image method)": [[69, "image.Image.replace"]], "response() (image.displacement method)": [[69, "image.displacement.response"]], "rgb_to_binary() (in module image)": [[69, "image.rgb_to_binary"]], "rgb_to_grayscale() (in module image)": [[69, "image.rgb_to_grayscale"]], "rgb_to_lab() (in module image)": [[69, "image.rgb_to_lab"]], "rgb_to_yuv() (in module image)": [[69, "image.rgb_to_yuv"]], "rho() (image.line method)": [[69, "image.line.rho"]], "rotation() (image.apriltag method)": [[69, "image.apriltag.rotation"]], "rotation() (image.barcode method)": [[69, "image.barcode.rotation"]], "rotation() (image.blob method)": [[69, "image.blob.rotation"]], "rotation() (image.datamatrix method)": [[69, "image.datamatrix.rotation"]], "rotation() (image.displacement method)": [[69, "image.displacement.rotation"]], "rotation_corr() (image.image method)": [[69, "image.Image.rotation_corr"]], "rotation_deg() (image.blob method)": [[69, "image.blob.rotation_deg"]], "rotation_rad() (image.blob method)": [[69, "image.blob.rotation_rad"]], "roundness() (image.blob method)": [[69, "image.blob.roundness"]], "rows() (image.datamatrix method)": [[69, "image.datamatrix.rows"]], "save() (image.image method)": [[69, "image.Image.save"]], "save_descriptor() (in module image)": [[69, "image.save_descriptor"]], "scale() (image.image method)": [[69, "image.Image.scale"]], "scale() (image.displacement method)": [[69, "image.displacement.scale"]], "seek() (image.imageio method)": [[69, "image.ImageIO.seek"]], "set() (image.image method)": [[69, "image.Image.set"]], "set_pixel() (image.image method)": [[69, "image.Image.set_pixel"]], "size() (image.image method)": [[69, "image.Image.size"]], "size() (image.imageio method)": [[69, "image.ImageIO.size"]], "solidity() (image.blob method)": [[69, "image.blob.solidity"]], "statistics (class in image)": [[69, "image.statistics"]], "stdev() (image.similarity method)": [[69, "image.Similarity.stdev"]], "stdev() (image.statistics method)": [[69, "image.statistics.stdev"]], "stero_disparity() (image.image method)": [[69, "image.Image.stero_disparity"]], "sub() (image.image method)": [[69, "image.Image.sub"]], "sync() (image.imageio method)": [[69, "image.ImageIO.sync"]], "theta() (image.kptmatch method)": [[69, "image.kptmatch.theta"]], "theta() (image.line method)": [[69, "image.line.theta"]], "threshold (class in image)": [[69, "image.threshold"]], "to_bitmap() (image.image method)": [[69, "image.Image.to_bitmap"]], "to_depth() (image.image method)": [[69, "image.Image.to_depth"]], "to_evt_dark() (image.image method)": [[69, "image.Image.to_evt_dark"]], "to_evt_light() (image.image method)": [[69, "image.Image.to_evt_light"]], "to_grayscale() (image.image method)": [[69, "image.Image.to_grayscale"]], "to_ironbow() (image.image method)": [[69, "image.Image.to_ironbow"]], "to_jpeg() (image.image method)": [[69, "image.Image.to_jpeg"]], "to_ndarray() (image.image method)": [[69, "image.Image.to_ndarray"]], "to_png() (image.image method)": [[69, "image.Image.to_png"]], "to_rainbow() (image.image method)": [[69, "image.Image.to_rainbow"]], "to_rgb565() (image.image method)": [[69, "image.Image.to_rgb565"]], "top_hat() (image.image method)": [[69, "image.Image.top_hat"]], "type() (image.imageio method)": [[69, "image.ImageIO.type"]], "type() (image.barcode method)": [[69, "image.barcode.type"]], "uq() (image.statistics method)": [[69, "image.statistics.uq"]], "value() (image.percentile method)": [[69, "image.percentile.value"]], "value() (image.threshold method)": [[69, "image.threshold.value"]], "version() (image.imageio method)": [[69, "image.ImageIO.version"]], "version() (image.qrcode method)": [[69, "image.qrcode.version"]], "w() (image.apriltag method)": [[69, "image.apriltag.w"]], "w() (image.barcode method)": [[69, "image.barcode.w"]], "w() (image.blob method)": [[69, "image.blob.w"]], "w() (image.datamatrix method)": [[69, "image.datamatrix.w"]], "w() (image.kptmatch method)": [[69, "image.kptmatch.w"]], "w() (image.qrcode method)": [[69, "image.qrcode.w"]], "w() (image.rect method)": [[69, "image.rect.w"]], "width() (image.image method)": [[69, "image.Image.width"]], "write() (image.imageio method)": [[69, "image.ImageIO.write"]], "x() (image.apriltag method)": [[69, "image.apriltag.x"]], "x() (image.barcode method)": [[69, "image.barcode.x"]], "x() (image.blob method)": [[69, "image.blob.x"]], "x() (image.circle method)": [[69, "image.circle.x"]], "x() (image.datamatrix method)": [[69, "image.datamatrix.x"]], "x() (image.kptmatch method)": [[69, "image.kptmatch.x"]], "x() (image.qrcode method)": [[69, "image.qrcode.x"]], "x() (image.rect method)": [[69, "image.rect.x"]], "x1() (image.line method)": [[69, "image.line.x1"]], "x2() (image.line method)": [[69, "image.line.x2"]], "x_hist_bins() (image.blob method)": [[69, "image.blob.x_hist_bins"]], "x_rotation() (image.apriltag method)": [[69, "image.apriltag.x_rotation"]], "x_translation() (image.apriltag method)": [[69, "image.apriltag.x_translation"]], "x_translation() (image.displacement method)": [[69, "image.displacement.x_translation"]], "y() (image.apriltag method)": [[69, "image.apriltag.y"]], "y() (image.barcode method)": [[69, "image.barcode.y"]], "y() (image.blob method)": [[69, "image.blob.y"]], "y() (image.circle method)": [[69, "image.circle.y"]], "y() (image.datamatrix method)": [[69, "image.datamatrix.y"]], "y() (image.kptmatch method)": [[69, "image.kptmatch.y"]], "y() (image.qrcode method)": [[69, "image.qrcode.y"]], "y() (image.rect method)": [[69, "image.rect.y"]], "y1() (image.line method)": [[69, "image.line.y1"]], "y2() (image.line method)": [[69, "image.line.y2"]], "y_hist_bins() (image.blob method)": [[69, "image.blob.y_hist_bins"]], "y_rotation() (image.apriltag method)": [[69, "image.apriltag.y_rotation"]], "y_translation() (image.apriltag method)": [[69, "image.apriltag.y_translation"]], "y_translation() (image.displacement method)": [[69, "image.displacement.y_translation"]], "yuv_to_binary() (in module image)": [[69, "image.yuv_to_binary"]], "yuv_to_grayscale() (in module image)": [[69, "image.yuv_to_grayscale"]], "yuv_to_lab() (in module image)": [[69, "image.yuv_to_lab"]], "yuv_to_rgb() (in module image)": [[69, "image.yuv_to_rgb"]], "z_rotation() (image.apriltag method)": [[69, "image.apriltag.z_rotation"]], "z_translation() (image.apriltag method)": [[69, "image.apriltag.z_translation"]], "__read_reg() (in module imu)": [[70, "imu.__read_reg"]], "__write_reg() (in module imu)": [[70, "imu.__write_reg"]], "acceleration_mg() (in module imu)": [[70, "imu.acceleration_mg"]], "angular_rate_mdps() (in module imu)": [[70, "imu.angular_rate_mdps"]], "imu": [[70, "module-imu"]], "pitch() (in module imu)": [[70, "imu.pitch"]], "roll() (in module imu)": [[70, "imu.roll"]], "sleep() (in module imu)": [[70, "imu.sleep"]], "temperature_c() (in module imu)": [[70, "imu.temperature_c"]], "mjpeg (class in mjpeg)": [[71, "mjpeg.Mjpeg"]], "add_frame() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.add_frame"]], "close() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.close"]], "count() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.count"]], "height() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.height"]], "is_closed() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.is_closed"]], "mjpeg": [[71, "module-mjpeg"]], "size() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.size"]], "sync() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.sync"]], "width() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.width"]], "write() (mjpeg.mjpeg method)": [[71, "mjpeg.Mjpeg.write"]], "model (class in ml)": [[72, "ml.Model"]], "input_dtype (ml.model attribute)": [[72, "ml.Model.input_dtype"]], "input_scale (ml.model attribute)": [[72, "ml.Model.input_scale"]], "input_shape (ml.model attribute)": [[72, "ml.Model.input_shape"]], "input_zero_point (ml.model attribute)": [[72, "ml.Model.input_zero_point"]], "labels (ml.model attribute)": [[72, "ml.Model.labels"]], "len (ml.model attribute)": [[72, "ml.Model.len"]], "ml": [[72, "module-ml"]], "output_dtype (ml.model attribute)": [[72, "ml.Model.output_dtype"]], "output_scale (ml.model attribute)": [[72, "ml.Model.output_scale"]], "output_shape (ml.model attribute)": [[72, "ml.Model.output_shape"]], "output_zero_point (ml.model attribute)": [[72, "ml.Model.output_zero_point"]], "predict() (ml.model method)": [[72, "ml.Model.predict"]], "ram (ml.model attribute)": [[72, "ml.Model.ram"]], "microspeech (class in ml.apps)": [[73, "ml.apps.MicroSpeech"]], "listen() (ml.apps.microspeech method)": [[73, "ml.apps.MicroSpeech.listen"]], "ml.apps": [[73, "module-ml.apps"]], "fomo_postprocess (class in ml.postprocessing)": [[74, "ml.postprocessing.fomo_postprocess"]], "ml.postprocessing": [[74, "module-ml.postprocessing"]], "yolo_lc_postprocess (class in ml.postprocessing)": [[74, "ml.postprocessing.yolo_lc_postprocess"]], "yolo_v2_postprocess (class in ml.postprocessing)": [[74, "ml.postprocessing.yolo_v2_postprocess"]], "yolo_v5_postprocess (class in ml.postprocessing)": [[74, "ml.postprocessing.yolo_v5_postprocess"]], "yolo_v8_postprocess (class in ml.postprocessing)": [[74, "ml.postprocessing.yolo_v8_postprocess"]], "normalization (class in ml.preprocessing)": [[75, "ml.preprocessing.Normalization"]], "ml.preprocessing": [[75, "module-ml.preprocessing"]], "nms (class in ml.utils)": [[76, "ml.utils.NMS"]], "add_bounding_boxes() (ml.utils.nms method)": [[76, "ml.utils.NMS.add_bounding_boxes"]], "get_bounding_boxes() (ml.utils.nms method)": [[76, "ml.utils.NMS.get_bounding_boxes"]], "ml.utils": [[76, "module-ml.utils"]], "arch() (in module omv)": [[77, "omv.arch"]], "board_id() (in module omv)": [[77, "omv.board_id"]], "board_type() (in module omv)": [[77, "omv.board_type"]], "disable_fb() (in module omv)": [[77, "omv.disable_fb"]], "omv": [[77, "module-omv"]], "version_major() (in module omv)": [[77, "omv.version_major"]], "version_minor() (in module omv)": [[77, "omv.version_minor"]], "version_patch() (in module omv)": [[77, "omv.version_patch"]], "version_string() (in module omv)": [[77, "omv.version_string"]], "call() (rpc.rpc_master method)": [[78, "rpc.rpc_master.call"]], "get_bytes() (rpc.rpc method)": [[78, "rpc.rpc.get_bytes"]], "loop() (rpc.rpc_slave method)": [[78, "rpc.rpc_slave.loop"]], "put_bytes() (rpc.rpc method)": [[78, "rpc.rpc.put_bytes"]], "register_callback() (rpc.rpc_slave method)": [[78, "rpc.rpc_slave.register_callback"]], "rpc": [[78, "module-rpc"]], "rpc (class in rpc)": [[78, "rpc.rpc"]], "rpc_can_master (class in rpc)": [[78, "rpc.rpc_can_master"]], "rpc_can_slave (class in rpc)": [[78, "rpc.rpc_can_slave"]], "rpc_i2c_master (class in rpc)": [[78, "rpc.rpc_i2c_master"]], "rpc_i2c_slave (class in rpc)": [[78, "rpc.rpc_i2c_slave"]], "rpc_master (class in rpc)": [[78, "rpc.rpc_master"]], "rpc_slave (class in rpc)": [[78, "rpc.rpc_slave"]], "rpc_spi_master (class in rpc)": [[78, "rpc.rpc_spi_master"]], "rpc_spi_slave (class in rpc)": [[78, "rpc.rpc_spi_slave"]], "rpc_uart_master (class in rpc)": [[78, "rpc.rpc_uart_master"]], "rpc_uart_slave (class in rpc)": [[78, "rpc.rpc_uart_slave"]], "schedule_callback() (rpc.rpc_slave method)": [[78, "rpc.rpc_slave.schedule_callback"]], "setup_loop_callback() (rpc.rpc_slave method)": [[78, "rpc.rpc_slave.setup_loop_callback"]], "stream_reader() (rpc.rpc method)": [[78, "rpc.rpc.stream_reader"]], "stream_writer() (rpc.rpc method)": [[78, "rpc.rpc.stream_writer"]], "register_pause_cb() (rtsp.rtsp_server method)": [[79, "rtsp.rtsp_server.register_pause_cb"]], "register_play_cb() (rtsp.rtsp_server method)": [[79, "rtsp.rtsp_server.register_play_cb"]], "register_setup_cb() (rtsp.rtsp_server method)": [[79, "rtsp.rtsp_server.register_setup_cb"]], "register_teardown_cb() (rtsp.rtsp_server method)": [[79, "rtsp.rtsp_server.register_teardown_cb"]], "rtsp": [[79, "module-rtsp"]], "rtsp_server (class in rtsp)": [[79, "rtsp.rtsp_server"]], "stream() (rtsp.rtsp_server method)": [[79, "rtsp.rtsp_server.stream"]], "b128x128 (in module sensor)": [[80, "sensor.B128X128"]], "b128x64 (in module sensor)": [[80, "sensor.B128X64"]], "b160x160 (in module sensor)": [[80, "sensor.B160X160"]], "b320x320 (in module sensor)": [[80, "sensor.B320X320"]], "b64x32 (in module sensor)": [[80, "sensor.B64X32"]], "b64x64 (in module sensor)": [[80, "sensor.B64X64"]], "bayer (in module sensor)": [[80, "sensor.BAYER"]], "binary (in module sensor)": [[80, "sensor.BINARY"]], "boson320 (in module sensor)": [[80, "sensor.BOSON320"]], "boson640 (in module sensor)": [[80, "sensor.BOSON640"]], "cif (in module sensor)": [[80, "sensor.CIF"]], "double_buffer (in module sensor)": [[80, "sensor.DOUBLE_BUFFER"]], "enx320_bias_refr (in module sensor)": [[80, "sensor.ENX320_BIAS_REFR"]], "fhd (in module sensor)": [[80, "sensor.FHD"]], "frogeye2020 (in module sensor)": [[80, "sensor.FROGEYE2020"]], "gc2145 (in module sensor)": [[80, "sensor.GC2145"]], "genx320 (in module sensor)": [[80, "sensor.GENX320"]], "genx320es (in module sensor)": [[80, "sensor.GENX320ES"]], "genx320_biases_active_marker (in module sensor)": [[80, "sensor.GENX320_BIASES_ACTIVE_MARKER"]], "genx320_biases_default (in module sensor)": [[80, "sensor.GENX320_BIASES_DEFAULT"]], "genx320_biases_high_speed (in module sensor)": [[80, "sensor.GENX320_BIASES_HIGH_SPEED"]], "genx320_biases_low_light (in module sensor)": [[80, "sensor.GENX320_BIASES_LOW_LIGHT"]], "genx320_biases_low_noise (in module sensor)": [[80, "sensor.GENX320_BIASES_LOW_NOISE"]], "genx320_bias_diff_off (in module sensor)": [[80, "sensor.GENX320_BIAS_DIFF_OFF"]], "genx320_bias_diff_on (in module sensor)": [[80, "sensor.GENX320_BIAS_DIFF_ON"]], "genx320_bias_fo (in module sensor)": [[80, "sensor.GENX320_BIAS_FO"]], "genx320_bias_hpf (in module sensor)": [[80, "sensor.GENX320_BIAS_HPF"]], "grayscale (in module sensor)": [[80, "sensor.GRAYSCALE"]], "hd (in module sensor)": [[80, "sensor.HD"]], "hm01b0 (in module sensor)": [[80, "sensor.HM01B0"]], "hm0360 (in module sensor)": [[80, "sensor.HM0360"]], "hqqqqvga (in module sensor)": [[80, "sensor.HQQQQVGA"]], "hqqqvga (in module sensor)": [[80, "sensor.HQQQVGA"]], "hqqvga (in module sensor)": [[80, "sensor.HQQVGA"]], "hqvga (in module sensor)": [[80, "sensor.HQVGA"]], "hvga (in module sensor)": [[80, "sensor.HVGA"]], "ioctl_genx320_set_afk (in module sensor)": [[80, "sensor.IOCTL_GENX320_SET_AFK"]], "ioctl_genx320_set_bias (in module sensor)": [[80, "sensor.IOCTL_GENX320_SET_BIAS"]], "ioctl_genx320_set_biases (in module sensor)": [[80, "sensor.IOCTL_GENX320_SET_BIASES"]], "ioctl_get_fov_wide (in module sensor)": [[80, "sensor.IOCTL_GET_FOV_WIDE"]], "ioctl_get_night_mode (in module sensor)": [[80, "sensor.IOCTL_GET_NIGHT_MODE"]], "ioctl_get_readout_window (in module sensor)": [[80, "sensor.IOCTL_GET_READOUT_WINDOW"]], "ioctl_get_triggered_mode (in module sensor)": [[80, "sensor.IOCTL_GET_TRIGGERED_MODE"]], "ioctl_himax_md_clear (in module sensor)": [[80, "sensor.IOCTL_HIMAX_MD_CLEAR"]], "ioctl_himax_md_enable (in module sensor)": [[80, "sensor.IOCTL_HIMAX_MD_ENABLE"]], "ioctl_himax_md_threshold (in module sensor)": [[80, "sensor.IOCTL_HIMAX_MD_THRESHOLD"]], "ioctl_himax_md_window (in module sensor)": [[80, "sensor.IOCTL_HIMAX_MD_WINDOW"]], "ioctl_himax_osc_enable (in module sensor)": [[80, "sensor.IOCTL_HIMAX_OSC_ENABLE"]], "ioctl_lepton_get_attribute (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_ATTRIBUTE"]], "ioctl_lepton_get_aux_temp (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_AUX_TEMP"]], "ioctl_lepton_get_fpa_temp (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_FPA_TEMP"]], "ioctl_lepton_get_height (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_HEIGHT"]], "ioctl_lepton_get_mode (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_MODE"]], "ioctl_lepton_get_radiometry (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_RADIOMETRY"]], "ioctl_lepton_get_range (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_RANGE"]], "ioctl_lepton_get_refresh (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_REFRESH"]], "ioctl_lepton_get_resolution (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_RESOLUTION"]], "ioctl_lepton_get_width (in module sensor)": [[80, "sensor.IOCTL_LEPTON_GET_WIDTH"]], "ioctl_lepton_run_command (in module sensor)": [[80, "sensor.IOCTL_LEPTON_RUN_COMMAND"]], "ioctl_lepton_set_attribute (in module sensor)": [[80, "sensor.IOCTL_LEPTON_SET_ATTRIBUTE"]], "ioctl_lepton_set_mode (in module sensor)": [[80, "sensor.IOCTL_LEPTON_SET_MODE"]], "ioctl_lepton_set_range (in module sensor)": [[80, "sensor.IOCTL_LEPTON_SET_RANGE"]], "ioctl_pause_auto_focus (in module sensor)": [[80, "sensor.IOCTL_PAUSE_AUTO_FOCUS"]], "ioctl_reset_auto_focus (in module sensor)": [[80, "sensor.IOCTL_RESET_AUTO_FOCUS"]], "ioctl_rgb_stats (in module sensor)": [[80, "sensor.IOCTL_RGB_STATS"]], "ioctl_set_fov_wide (in module sensor)": [[80, "sensor.IOCTL_SET_FOV_WIDE"]], "ioctl_set_night_mode (in module sensor)": [[80, "sensor.IOCTL_SET_NIGHT_MODE"]], "ioctl_set_readout_window (in module sensor)": [[80, "sensor.IOCTL_SET_READOUT_WINDOW"]], "ioctl_set_triggered_mode (in module sensor)": [[80, "sensor.IOCTL_SET_TRIGGERED_MODE"]], "ioctl_trigger_auto_focus (in module sensor)": [[80, "sensor.IOCTL_TRIGGER_AUTO_FOCUS"]], "ioctl_wait_on_auto_focus (in module sensor)": [[80, "sensor.IOCTL_WAIT_ON_AUTO_FOCUS"]], "jpeg (in module sensor)": [[80, "sensor.JPEG"]], "lcd (in module sensor)": [[80, "sensor.LCD"]], "lepton (in module sensor)": [[80, "sensor.LEPTON"]], "mt9m114 (in module sensor)": [[80, "sensor.MT9M114"]], "mt9v022 (in module sensor)": [[80, "sensor.MT9V022"]], "mt9v024 (in module sensor)": [[80, "sensor.MT9V024"]], "mt9v032 (in module sensor)": [[80, "sensor.MT9V032"]], "mt9v034 (in module sensor)": [[80, "sensor.MT9V034"]], "ov2640 (in module sensor)": [[80, "sensor.OV2640"]], "ov5640 (in module sensor)": [[80, "sensor.OV5640"]], "ov7690 (in module sensor)": [[80, "sensor.OV7690"]], "ov7725 (in module sensor)": [[80, "sensor.OV7725"]], "ov9650 (in module sensor)": [[80, "sensor.OV9650"]], "pag7920 (in module sensor)": [[80, "sensor.PAG7920"]], "pag7936 (in module sensor)": [[80, "sensor.PAG7936"]], "paj6100 (in module sensor)": [[80, "sensor.PAJ6100"]], "qcif (in module sensor)": [[80, "sensor.QCIF"]], "qhd (in module sensor)": [[80, "sensor.QHD"]], "qqcif (in module sensor)": [[80, "sensor.QQCIF"]], "qqqqvga (in module sensor)": [[80, "sensor.QQQQVGA"]], "qqqvga (in module sensor)": [[80, "sensor.QQQVGA"]], "qqsif (in module sensor)": [[80, "sensor.QQSIF"]], "qqvga (in module sensor)": [[80, "sensor.QQVGA"]], "qqvga2 (in module sensor)": [[80, "sensor.QQVGA2"]], "qsif (in module sensor)": [[80, "sensor.QSIF"]], "qvga (in module sensor)": [[80, "sensor.QVGA"]], "qxga (in module sensor)": [[80, "sensor.QXGA"]], "rgb565 (in module sensor)": [[80, "sensor.RGB565"]], "sif (in module sensor)": [[80, "sensor.SIF"]], "single_buffer (in module sensor)": [[80, "sensor.SINGLE_BUFFER"]], "svga (in module sensor)": [[80, "sensor.SVGA"]], "sxga (in module sensor)": [[80, "sensor.SXGA"]], "sxgam (in module sensor)": [[80, "sensor.SXGAM"]], "triple_buffer (in module sensor)": [[80, "sensor.TRIPLE_BUFFER"]], "uxga (in module sensor)": [[80, "sensor.UXGA"]], "vga (in module sensor)": [[80, "sensor.VGA"]], "video_fifo (in module sensor)": [[80, "sensor.VIDEO_FIFO"]], "wqxga (in module sensor)": [[80, "sensor.WQXGA"]], "wqxga2 (in module sensor)": [[80, "sensor.WQXGA2"]], "wvga (in module sensor)": [[80, "sensor.WVGA"]], "wvga2 (in module sensor)": [[80, "sensor.WVGA2"]], "wxga (in module sensor)": [[80, "sensor.WXGA"]], "xga (in module sensor)": [[80, "sensor.XGA"]], "yuv422 (in module sensor)": [[80, "sensor.YUV422"]], "__read_reg() (in module sensor)": [[80, "sensor.__read_reg"]], "__write_reg() (in module sensor)": [[80, "sensor.__write_reg"]], "alloc_extra_fb() (in module sensor)": [[80, "sensor.alloc_extra_fb"]], "dealloc_extra_fb() (in module sensor)": [[80, "sensor.dealloc_extra_fb"]], "disable_delays() (in module sensor)": [[80, "sensor.disable_delays"]], "disable_full_flush() (in module sensor)": [[80, "sensor.disable_full_flush"]], "flush() (in module sensor)": [[80, "sensor.flush"]], "get_auto_rotation() (in module sensor)": [[80, "sensor.get_auto_rotation"]], "get_blc_regs() (in module sensor)": [[80, "sensor.get_blc_regs"]], "get_color_palette() (in module sensor)": [[80, "sensor.get_color_palette"]], "get_exposure_us() (in module sensor)": [[80, "sensor.get_exposure_us"]], "get_fb() (in module sensor)": [[80, "sensor.get_fb"]], "get_frame_available() (in module sensor)": [[80, "sensor.get_frame_available"]], "get_framebuffers() (in module sensor)": [[80, "sensor.get_framebuffers"]], "get_framerate() (in module sensor)": [[80, "sensor.get_framerate"]], "get_framesize() (in module sensor)": [[80, "sensor.get_framesize"]], "get_gain_db() (in module sensor)": [[80, "sensor.get_gain_db"]], "get_hmirror() (in module sensor)": [[80, "sensor.get_hmirror"]], "get_id() (in module sensor)": [[80, "sensor.get_id"]], "get_pixformat() (in module sensor)": [[80, "sensor.get_pixformat"]], "get_rgb_gain_db() (in module sensor)": [[80, "sensor.get_rgb_gain_db"]], "get_transpose() (in module sensor)": [[80, "sensor.get_transpose"]], "get_vflip() (in module sensor)": [[80, "sensor.get_vflip"]], "get_windowing() (in module sensor)": [[80, "sensor.get_windowing"]], "height() (in module sensor)": [[80, "sensor.height"]], "ioctl() (in module sensor)": [[80, "sensor.ioctl"]], "reset() (in module sensor)": [[80, "sensor.reset"]], "sensor": [[80, "module-sensor"]], "set_auto_blc() (in module sensor)": [[80, "sensor.set_auto_blc"]], "set_auto_exposure() (in module sensor)": [[80, "sensor.set_auto_exposure"]], "set_auto_gain() (in module sensor)": [[80, "sensor.set_auto_gain"]], "set_auto_rotation() (in module sensor)": [[80, "sensor.set_auto_rotation"]], "set_auto_whitebal() (in module sensor)": [[80, "sensor.set_auto_whitebal"]], "set_brightness() (in module sensor)": [[80, "sensor.set_brightness"]], "set_color_palette() (in module sensor)": [[80, "sensor.set_color_palette"]], "set_colorbar() (in module sensor)": [[80, "sensor.set_colorbar"]], "set_contrast() (in module sensor)": [[80, "sensor.set_contrast"]], "set_frame_callback() (in module sensor)": [[80, "sensor.set_frame_callback"]], "set_framebuffers() (in module sensor)": [[80, "sensor.set_framebuffers"]], "set_framerate() (in module sensor)": [[80, "sensor.set_framerate"]], "set_framesize() (in module sensor)": [[80, "sensor.set_framesize"]], "set_gainceiling() (in module sensor)": [[80, "sensor.set_gainceiling"]], "set_hmirror() (in module sensor)": [[80, "sensor.set_hmirror"]], "set_lens_correction() (in module sensor)": [[80, "sensor.set_lens_correction"]], "set_pixformat() (in module sensor)": [[80, "sensor.set_pixformat"]], "set_quality() (in module sensor)": [[80, "sensor.set_quality"]], "set_saturation() (in module sensor)": [[80, "sensor.set_saturation"]], "set_transpose() (in module sensor)": [[80, "sensor.set_transpose"]], "set_vflip() (in module sensor)": [[80, "sensor.set_vflip"]], "set_vsync_callback() (in module sensor)": [[80, "sensor.set_vsync_callback"]], "set_windowing() (in module sensor)": [[80, "sensor.set_windowing"]], "shutdown() (in module sensor)": [[80, "sensor.shutdown"]], "skip_frames() (in module sensor)": [[80, "sensor.skip_frames"]], "sleep() (in module sensor)": [[80, "sensor.sleep"]], "snapshot() (in module sensor)": [[80, "sensor.snapshot"]], "width() (in module sensor)": [[80, "sensor.width"]], "tfp410": [[81, "module-TFP410"]], "hotplug_callback() (tfp410.tfp410 method)": [[81, "TFP410.TFP410.hotplug_callback"]], "isconnected() (tfp410.tfp410 method)": [[81, "TFP410.TFP410.isconnected"]], "tfp410.tfp410 (class in tfp410)": [[81, "TFP410.tfp410.TFP410"]], "tof_none (in module tof)": [[82, "tof.TOF_NONE"]], "tof_vl53lx (in module tof)": [[82, "tof.TOF_VL53LX"]], "deinit() (in module tof)": [[82, "tof.deinit"]], "draw_depth() (in module tof)": [[82, "tof.draw_depth"]], "height() (in module tof)": [[82, "tof.height"]], "init() (in module tof)": [[82, "tof.init"]], "read_depth() (in module tof)": [[82, "tof.read_depth"]], "refresh() (in module tof)": [[82, "tof.refresh"]], "reset() (in module tof)": [[82, "tof.reset"]], "snapshot() (in module tof)": [[82, "tof.snapshot"]], "tof": [[82, "module-tof"]], "type() (in module tof)": [[82, "tof.type"]], "width() (in module tof)": [[82, "tof.width"]], "tv_none (in module tv)": [[83, "tv.TV_NONE"]], "tv_shield (in module tv)": [[83, "tv.TV_SHIELD"]], "channel() (in module tv)": [[83, "tv.channel"]], "deinit() (in module tv)": [[83, "tv.deinit"]], "display() (in module tv)": [[83, "tv.display"]], "height() (in module tv)": [[83, "tv.height"]], "init() (in module tv)": [[83, "tv.init"]], "refresh() (in module tv)": [[83, "tv.refresh"]], "triple_buffer() (in module tv)": [[83, "tv.triple_buffer"]], "tv": [[83, "module-tv"]], "type() (in module tv)": [[83, "tv.type"]], "width() (in module tv)": [[83, "tv.width"]], "endpoint (class in openamp)": [[84, "openamp.Endpoint"]], "remoteproc (class in openamp)": [[84, "openamp.RemoteProc"]], "deinit() (openamp.endpoint method)": [[84, "openamp.Endpoint.deinit"]], "is_ready() (openamp.endpoint method)": [[84, "openamp.Endpoint.is_ready"]], "new_service_callback() (in module openamp)": [[84, "openamp.new_service_callback"]], "openamp": [[84, "module-openamp"]], "send() (openamp.endpoint method)": [[84, "openamp.Endpoint.send"]], "shutdown() (openamp.remoteproc method)": [[84, "openamp.RemoteProc.shutdown"]], "start() (openamp.remoteproc method)": [[84, "openamp.RemoteProc.start"]], "stop() (openamp.remoteproc method)": [[84, "openamp.RemoteProc.stop"]], "vfsfat (class in os)": [[85, "os.VfsFat"]], "vfslfs1 (class in os)": [[85, "os.VfsLfs1"]], "vfslfs2 (class in os)": [[85, "os.VfsLfs2"]], "vfsposix (class in os)": [[85, "os.VfsPosix"]], "chdir() (in module os)": [[85, "os.chdir"]], "dupterm() (in module os)": [[85, "os.dupterm"]], "getcwd() (in module os)": [[85, "os.getcwd"]], "ilistdir() (in module os)": [[85, "os.ilistdir"]], "listdir() (in module os)": [[85, "os.listdir"]], "mkdir() (in module os)": [[85, "os.mkdir"]], "mount() (in module os)": [[85, "os.mount"]], "os": [[85, "module-os"]], "remove() (in module os)": [[85, "os.remove"]], "rename() (in module os)": [[85, "os.rename"]], "rmdir() (in module os)": [[85, "os.rmdir"]], "stat() (in module os)": [[85, "os.stat"]], "statvfs() (in module os)": [[85, "os.statvfs"]], "sync() (in module os)": [[85, "os.sync"]], "umount() (in module os)": [[85, "os.umount"]], "uname() (in module os)": [[85, "os.uname"]], "urandom() (in module os)": [[85, "os.urandom"]], "libc_ver() (in module platform)": [[86, "platform.libc_ver"]], "platform": [[86, "module-platform"]], "platform() (in module platform)": [[86, "platform.platform"]], "python_compiler() (in module platform)": [[86, "platform.python_compiler"]], "bootloader() (in module pyb)": [[87, "pyb.bootloader"]], "delay() (in module pyb)": [[87, "pyb.delay"]], "disable_irq() (in module pyb)": [[87, "pyb.disable_irq"]], "elapsed_micros() (in module pyb)": [[87, "pyb.elapsed_micros"]], "elapsed_millis() (in module pyb)": [[87, "pyb.elapsed_millis"]], "enable_irq() (in module pyb)": [[87, "pyb.enable_irq"]], "fault_debug() (in module pyb)": [[87, "pyb.fault_debug"]], "hard_reset() (in module pyb)": [[87, "pyb.hard_reset"]], "have_cdc() (in module pyb)": [[87, "pyb.have_cdc"]], "hid() (in module pyb)": [[87, "pyb.hid"]], "info() (in module pyb)": [[87, "pyb.info"]], "main() (in module pyb)": [[87, "pyb.main"]], "micros() (in module pyb)": [[87, "pyb.micros"]], "millis() (in module pyb)": [[87, "pyb.millis"]], "mount() (in module pyb)": [[87, "pyb.mount"]], "pyb": [[87, "module-pyb"]], "pyb.hid_keyboard (in module pyb)": [[87, "pyb.pyb.hid_keyboard"]], "pyb.hid_mouse (in module pyb)": [[87, "pyb.pyb.hid_mouse"]], "repl_uart() (in module pyb)": [[87, "pyb.repl_uart"]], "rng() (in module pyb)": [[87, "pyb.rng"]], "standby() (in module pyb)": [[87, "pyb.standby"]], "stop() (in module pyb)": [[87, "pyb.stop"]], "sync() (in module pyb)": [[87, "pyb.sync"]], "udelay() (in module pyb)": [[87, "pyb.udelay"]], "unique_id() (in module pyb)": [[87, "pyb.unique_id"]], "usb_mode() (in module pyb)": [[87, "pyb.usb_mode"]], "wfi() (in module pyb)": [[87, "pyb.wfi"]], "adc (class in pyb)": [[88, "pyb.ADC"]], "read() (pyb.adc method)": [[88, "pyb.ADC.read"]], "read_timed() (pyb.adc method)": [[88, "pyb.ADC.read_timed"]], "can (class in pyb)": [[89, "pyb.CAN"]], "can.bus_off (in module pyb)": [[89, "pyb.CAN.BUS_OFF"]], "can.dual (in module pyb)": [[89, "pyb.CAN.DUAL"]], "can.error_active (in module pyb)": [[89, "pyb.CAN.ERROR_ACTIVE"]], "can.error_passive (in module pyb)": [[89, "pyb.CAN.ERROR_PASSIVE"]], "can.error_warning (in module pyb)": [[89, "pyb.CAN.ERROR_WARNING"]], "can.list16 (in module pyb)": [[89, "pyb.CAN.LIST16"]], "can.list32 (in module pyb)": [[89, "pyb.CAN.LIST32"]], "can.loopback (in module pyb)": [[89, "pyb.CAN.LOOPBACK"]], "can.mask (in module pyb)": [[89, "pyb.CAN.MASK"]], "can.mask16 (in module pyb)": [[89, "pyb.CAN.MASK16"]], "can.mask32 (in module pyb)": [[89, "pyb.CAN.MASK32"]], "can.normal (in module pyb)": [[89, "pyb.CAN.NORMAL"]], "can.range (in module pyb)": [[89, "pyb.CAN.RANGE"]], "can.silent (in module pyb)": [[89, "pyb.CAN.SILENT"]], "can.silent_loopback (in module pyb)": [[89, "pyb.CAN.SILENT_LOOPBACK"]], "can.stopped (in module pyb)": [[89, "pyb.CAN.STOPPED"]], "any() (pyb.can method)": [[89, "pyb.CAN.any"]], "clearfilter() (pyb.can method)": [[89, "pyb.CAN.clearfilter"]], "deinit() (pyb.can method)": [[89, "pyb.CAN.deinit"]], "info() (pyb.can method)": [[89, "pyb.CAN.info"]], "recv() (pyb.can method)": [[89, "pyb.CAN.recv"]], "restart() (pyb.can method)": [[89, "pyb.CAN.restart"]], "rxcallback() (pyb.can method)": [[89, "pyb.CAN.rxcallback"]], "send() (pyb.can method)": [[89, "pyb.CAN.send"]], "setfilter() (pyb.can method)": [[89, "pyb.CAN.setfilter"]], "state() (pyb.can method)": [[89, "pyb.CAN.state"]], "dac (class in pyb)": [[90, "pyb.DAC"]], "dac.circular (in module pyb)": [[90, "pyb.DAC.CIRCULAR"]], "dac.normal (in module pyb)": [[90, "pyb.DAC.NORMAL"]], "deinit() (pyb.dac method)": [[90, "pyb.DAC.deinit"]], "init() (pyb.dac method)": [[90, "pyb.DAC.init"]], "noise() (pyb.dac method)": [[90, "pyb.DAC.noise"]], "triangle() (pyb.dac method)": [[90, "pyb.DAC.triangle"]], "write() (pyb.dac method)": [[90, "pyb.DAC.write"]], "write_timed() (pyb.dac method)": [[90, "pyb.DAC.write_timed"]], "extint (class in pyb)": [[91, "pyb.ExtInt"]], "extint.irq_falling (in module pyb)": [[91, "pyb.ExtInt.IRQ_FALLING"]], "extint.irq_rising (in module pyb)": [[91, "pyb.ExtInt.IRQ_RISING"]], "extint.irq_rising_falling (in module pyb)": [[91, "pyb.ExtInt.IRQ_RISING_FALLING"]], "disable() (pyb.extint method)": [[91, "pyb.ExtInt.disable"]], "enable() (pyb.extint method)": [[91, "pyb.ExtInt.enable"]], "line() (pyb.extint method)": [[91, "pyb.ExtInt.line"]], "regs() (pyb.extint class method)": [[91, "pyb.ExtInt.regs"]], "swint() (pyb.extint method)": [[91, "pyb.ExtInt.swint"]], "flash (class in pyb)": [[92, "pyb.Flash"]], "ioctl() (pyb.flash method)": [[92, "pyb.Flash.ioctl"]], "readblocks() (pyb.flash method)": [[92, "pyb.Flash.readblocks"]], "writeblocks() (pyb.flash method)": [[92, "pyb.Flash.writeblocks"]], "i2c (class in pyb)": [[93, "pyb.I2C"]], "i2c.controller (in module pyb)": [[93, "pyb.I2C.CONTROLLER"]], "i2c.peripheral (in module pyb)": [[93, "pyb.I2C.PERIPHERAL"]], "deinit() (pyb.i2c method)": [[93, "pyb.I2C.deinit"]], "init() (pyb.i2c method)": [[93, "pyb.I2C.init"]], "is_ready() (pyb.i2c method)": [[93, "pyb.I2C.is_ready"]], "mem_read() (pyb.i2c method)": [[93, "pyb.I2C.mem_read"]], "mem_write() (pyb.i2c method)": [[93, "pyb.I2C.mem_write"]], "recv() (pyb.i2c method)": [[93, "pyb.I2C.recv"]], "scan() (pyb.i2c method)": [[93, "pyb.I2C.scan"]], "send() (pyb.i2c method)": [[93, "pyb.I2C.send"]], "led (class in pyb)": [[94, "pyb.LED"]], "off() (pyb.led method)": [[94, "pyb.LED.off"]], "on() (pyb.led method)": [[94, "pyb.LED.on"]], "toggle() (pyb.led method)": [[94, "pyb.LED.toggle"]], "pin (class in pyb)": [[95, "pyb.Pin"]], "pin.af_od (in module pyb)": [[95, "pyb.Pin.AF_OD"]], "pin.af_pp (in module pyb)": [[95, "pyb.Pin.AF_PP"]], "pin.alt (in module pyb)": [[95, "pyb.Pin.ALT"]], "pin.analog (in module pyb)": [[95, "pyb.Pin.ANALOG"]], "pin.in (in module pyb)": [[95, "pyb.Pin.IN"]], "pin.out_od (in module pyb)": [[95, "pyb.Pin.OUT_OD"]], "pin.out_pp (in module pyb)": [[95, "pyb.Pin.OUT_PP"]], "pin.pull_down (in module pyb)": [[95, "pyb.Pin.PULL_DOWN"]], "pin.pull_none (in module pyb)": [[95, "pyb.Pin.PULL_NONE"]], "pin.pull_up (in module pyb)": [[95, "pyb.Pin.PULL_UP"]], "__str__() (pyb.pin method)": [[95, "pyb.Pin.__str__"]], "__str__() (pyb.pinaf method)": [[95, "pyb.pinaf.__str__"]], "af() (pyb.pin method)": [[95, "pyb.Pin.af"]], "af_list() (pyb.pin method)": [[95, "pyb.Pin.af_list"]], "debug() (pyb.pin class method)": [[95, "pyb.Pin.debug"]], "dict() (pyb.pin class method)": [[95, "pyb.Pin.dict"]], "gpio() (pyb.pin method)": [[95, "pyb.Pin.gpio"]], "index() (pyb.pinaf method)": [[95, "pyb.pinaf.index"]], "init() (pyb.pin method)": [[95, "pyb.Pin.init"]], "mapper() (pyb.pin class method)": [[95, "pyb.Pin.mapper"]], "mode() (pyb.pin method)": [[95, "pyb.Pin.mode"]], "name() (pyb.pin method)": [[95, "pyb.Pin.name"]], "name() (pyb.pinaf method)": [[95, "pyb.pinaf.name"]], "names() (pyb.pin method)": [[95, "pyb.Pin.names"]], "pin() (pyb.pin method)": [[95, "pyb.Pin.pin"]], "port() (pyb.pin method)": [[95, "pyb.Pin.port"]], "pull() (pyb.pin method)": [[95, "pyb.Pin.pull"]], "reg() (pyb.pinaf method)": [[95, "pyb.pinaf.reg"]], "value() (pyb.pin method)": [[95, "pyb.Pin.value"]], "rtc (class in pyb)": [[96, "pyb.RTC"]], "calibration() (pyb.rtc method)": [[96, "pyb.RTC.calibration"]], "datetime() (pyb.rtc method)": [[96, "pyb.RTC.datetime"]], "info() (pyb.rtc method)": [[96, "pyb.RTC.info"]], "wakeup() (pyb.rtc method)": [[96, "pyb.RTC.wakeup"]], "spi (class in pyb)": [[97, "pyb.SPI"]], "spi.controller (in module pyb)": [[97, "pyb.SPI.CONTROLLER"]], "spi.lsb (in module pyb)": [[97, "pyb.SPI.LSB"]], "spi.msb (in module pyb)": [[97, "pyb.SPI.MSB"]], "spi.peripheral (in module pyb)": [[97, "pyb.SPI.PERIPHERAL"]], "deinit() (pyb.spi method)": [[97, "pyb.SPI.deinit"]], "init() (pyb.spi method)": [[97, "pyb.SPI.init"]], "recv() (pyb.spi method)": [[97, "pyb.SPI.recv"]], "send() (pyb.spi method)": [[97, "pyb.SPI.send"]], "send_recv() (pyb.spi method)": [[97, "pyb.SPI.send_recv"]], "servo (class in pyb)": [[98, "pyb.Servo"]], "angle() (pyb.servo method)": [[98, "pyb.Servo.angle"]], "calibration() (pyb.servo method)": [[98, "pyb.Servo.calibration"]], "pulse_width() (pyb.servo method)": [[98, "pyb.Servo.pulse_width"]], "speed() (pyb.servo method)": [[98, "pyb.Servo.speed"]], "timer (class in pyb)": [[99, "pyb.Timer"]], "timer.brk_high (in module pyb)": [[99, "pyb.Timer.BRK_HIGH"]], "timer.brk_low (in module pyb)": [[99, "pyb.Timer.BRK_LOW"]], "timer.brk_off (in module pyb)": [[99, "pyb.Timer.BRK_OFF"]], "timer.center (in module pyb)": [[99, "pyb.Timer.CENTER"]], "timer.down (in module pyb)": [[99, "pyb.Timer.DOWN"]], "timer.up (in module pyb)": [[99, "pyb.Timer.UP"]], "callback() (pyb.timer method)": [[99, "pyb.Timer.callback"]], "callback() (pyb.timerchannel method)": [[99, "pyb.timerchannel.callback"]], "capture() (pyb.timerchannel method)": [[99, "pyb.timerchannel.capture"]], "channel() (pyb.timer method)": [[99, "pyb.Timer.channel"]], "compare() (pyb.timerchannel method)": [[99, "pyb.timerchannel.compare"]], "counter() (pyb.timer method)": [[99, "pyb.Timer.counter"]], "deinit() (pyb.timer method)": [[99, "pyb.Timer.deinit"]], "freq() (pyb.timer method)": [[99, "pyb.Timer.freq"]], "init() (pyb.timer method)": [[99, "pyb.Timer.init"]], "period() (pyb.timer method)": [[99, "pyb.Timer.period"]], "prescaler() (pyb.timer method)": [[99, "pyb.Timer.prescaler"]], "pulse_width() (pyb.timerchannel method)": [[99, "pyb.timerchannel.pulse_width"]], "pulse_width_percent() (pyb.timerchannel method)": [[99, "pyb.timerchannel.pulse_width_percent"]], "source_freq() (pyb.timer method)": [[99, "pyb.Timer.source_freq"]], "uart (class in pyb)": [[100, "pyb.UART"]], "uart.cts (in module pyb)": [[100, "pyb.UART.CTS"]], "uart.rts (in module pyb)": [[100, "pyb.UART.RTS"]], "any() (pyb.uart method)": [[100, "pyb.UART.any"]], "deinit() (pyb.uart method)": [[100, "pyb.UART.deinit"]], "init() (pyb.uart method)": [[100, "pyb.UART.init"]], "read() (pyb.uart method)": [[100, "pyb.UART.read"]], "readchar() (pyb.uart method)": [[100, "pyb.UART.readchar"]], "readinto() (pyb.uart method)": [[100, "pyb.UART.readinto"]], "readline() (pyb.uart method)": [[100, "pyb.UART.readline"]], "sendbreak() (pyb.uart method)": [[100, "pyb.UART.sendbreak"]], "write() (pyb.uart method)": [[100, "pyb.UART.write"]], "writechar() (pyb.uart method)": [[100, "pyb.UART.writechar"]], "usb_hid (class in pyb)": [[101, "pyb.USB_HID"]], "recv() (pyb.usb_hid method)": [[101, "pyb.USB_HID.recv"]], "send() (pyb.usb_hid method)": [[101, "pyb.USB_HID.send"]], "usb_vcp (class in pyb)": [[102, "pyb.USB_VCP"]], "usb_vcp.cts (in module pyb)": [[102, "pyb.USB_VCP.CTS"]], "usb_vcp.irq_rx (in module pyb)": [[102, "pyb.USB_VCP.IRQ_RX"]], "usb_vcp.rts (in module pyb)": [[102, "pyb.USB_VCP.RTS"]], "any() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.any"]], "close() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.close"]], "debug_mode_enabled() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.debug_mode_enabled"]], "init() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.init"]], "irq() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.irq"]], "isconnected() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.isconnected"]], "read() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.read"]], "readinto() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.readinto"]], "readline() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.readline"]], "readlines() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.readlines"]], "recv() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.recv"]], "send() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.send"]], "setinterrupt() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.setinterrupt"]], "write() (pyb.usb_vcp method)": [[102, "pyb.USB_VCP.write"]], "choice() (in module random)": [[103, "random.choice"]], "getrandbits() (in module random)": [[103, "random.getrandbits"]], "randint() (in module random)": [[103, "random.randint"]], "random": [[103, "module-random"]], "random() (in module random)": [[103, "random.random"]], "randrange() (in module random)": [[103, "random.randrange"]], "seed() (in module random)": [[103, "random.seed"]], "uniform() (in module random)": [[103, "random.uniform"]], "debug (in module re)": [[104, "re.DEBUG"]], "compile() (in module re)": [[104, "re.compile"]], "end() (re.match method)": [[104, "re.match.end"]], "group() (re.match method)": [[104, "re.match.group"]], "groups() (re.match method)": [[104, "re.match.groups"]], "match() (in module re)": [[104, "re.match"]], "match() (re.regex method)": [[104, "re.regex.match"]], "re": [[104, "module-re"]], "search() (in module re)": [[104, "re.search"]], "search() (re.regex method)": [[104, "re.regex.search"]], "span() (re.match method)": [[104, "re.match.span"]], "split() (re.regex method)": [[104, "re.regex.split"]], "start() (re.match method)": [[104, "re.match.start"]], "sub() (in module re)": [[104, "re.sub"]], "sub() (re.regex method)": [[104, "re.regex.sub"]], "response (class in requests)": [[105, "requests.Response"]], "response.content() (in module requests)": [[105, "requests.Response.content"]], "response.headers() (in module requests)": [[105, "requests.Response.headers"]], "delete() (in module requests)": [[105, "requests.delete"]], "get() (in module requests)": [[105, "requests.get"]], "head() (in module requests)": [[105, "requests.head"]], "json() (requests.response method)": [[105, "requests.Response.json"]], "patch() (in module requests)": [[105, "requests.patch"]], "post() (in module requests)": [[105, "requests.post"]], "put() (in module requests)": [[105, "requests.put"]], "request() (in module requests)": [[105, "requests.request"]], "requests": [[105, "module-requests"]], "ipoll() (select.poll method)": [[106, "select.poll.ipoll"]], "modify() (select.poll method)": [[106, "select.poll.modify"]], "poll() (in module select)": [[106, "select.poll"]], "poll() (select.poll method)": [[106, "select.poll.poll"]], "register() (select.poll method)": [[106, "select.poll.register"]], "select": [[106, "module-select"]], "select() (in module select)": [[106, "select.select"]], "unregister() (select.poll method)": [[106, "select.poll.unregister"]], "af_inet (in module socket)": [[107, "socket.AF_INET"]], "af_inet6 (in module socket)": [[107, "socket.AF_INET6"]], "ipproto_tcp (in module socket)": [[107, "socket.IPPROTO_TCP"]], "ipproto_udp (in module socket)": [[107, "socket.IPPROTO_UDP"]], "sock_dgram (in module socket)": [[107, "socket.SOCK_DGRAM"]], "sock_stream (in module socket)": [[107, "socket.SOCK_STREAM"]], "accept() (socket.socket method)": [[107, "socket.socket.accept"]], "bind() (socket.socket method)": [[107, "socket.socket.bind"]], "close() (socket.socket method)": [[107, "socket.socket.close"]], "connect() (socket.socket method)": [[107, "socket.socket.connect"]], "getaddrinfo() (in module socket)": [[107, "socket.getaddrinfo"]], "inet_ntop() (in module socket)": [[107, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[107, "socket.inet_pton"]], "listen() (socket.socket method)": [[107, "socket.socket.listen"]], "makefile() (socket.socket method)": [[107, "socket.socket.makefile"]], "read() (socket.socket method)": [[107, "socket.socket.read"]], "readinto() (socket.socket method)": [[107, "socket.socket.readinto"]], "readline() (socket.socket method)": [[107, "socket.socket.readline"]], "recv() (socket.socket method)": [[107, "socket.socket.recv"]], "recvfrom() (socket.socket method)": [[107, "socket.socket.recvfrom"]], "send() (socket.socket method)": [[107, "socket.socket.send"]], "sendall() (socket.socket method)": [[107, "socket.socket.sendall"]], "sendto() (socket.socket method)": [[107, "socket.socket.sendto"]], "setblocking() (socket.socket method)": [[107, "socket.socket.setblocking"]], "setsockopt() (socket.socket method)": [[107, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[107, "socket.socket.settimeout"]], "socket": [[107, "module-socket"]], "socket (class in socket)": [[107, "socket.socket"]], "socket.error": [[107, "socket.socket.error"]], "write() (socket.socket method)": [[107, "socket.socket.write"]], "sslcontext (class in ssl)": [[108, "ssl.SSLContext"]], "get_ciphers() (ssl.sslcontext method)": [[108, "ssl.SSLContext.get_ciphers"]], "load_cert_chain() (ssl.sslcontext method)": [[108, "ssl.SSLContext.load_cert_chain"]], "load_verify_locations() (ssl.sslcontext method)": [[108, "ssl.SSLContext.load_verify_locations"]], "set_ciphers() (ssl.sslcontext method)": [[108, "ssl.SSLContext.set_ciphers"]], "ssl": [[108, "module-ssl"]], "ssl.cert_none (in module ssl)": [[108, "ssl.ssl.CERT_NONE"]], "ssl.cert_optional (in module ssl)": [[108, "ssl.ssl.CERT_OPTIONAL"]], "ssl.cert_required (in module ssl)": [[108, "ssl.ssl.CERT_REQUIRED"]], "ssl.protocol_dtls_client (in module ssl)": [[108, "ssl.ssl.PROTOCOL_DTLS_CLIENT"]], "ssl.protocol_dtls_server (in module ssl)": [[108, "ssl.ssl.PROTOCOL_DTLS_SERVER"]], "ssl.protocol_tls_client (in module ssl)": [[108, "ssl.ssl.PROTOCOL_TLS_CLIENT"]], "ssl.protocol_tls_server (in module ssl)": [[108, "ssl.ssl.PROTOCOL_TLS_SERVER"]], "ssl.sslerror (in module ssl)": [[108, "ssl.ssl.SSLError"]], "ssl.wrap_socket() (in module ssl)": [[108, "ssl.ssl.wrap_socket"]], "verify_mode (ssl.sslcontext attribute)": [[108, "ssl.SSLContext.verify_mode"]], "wrap_socket() (ssl.sslcontext method)": [[108, "ssl.SSLContext.wrap_socket"]], "gpioa (in module stm)": [[109, "stm.GPIOA"]], "gpiob (in module stm)": [[109, "stm.GPIOB"]], "gpio_bsrr (in module stm)": [[109, "stm.GPIO_BSRR"]], "gpio_idr (in module stm)": [[109, "stm.GPIO_IDR"]], "gpio_odr (in module stm)": [[109, "stm.GPIO_ODR"]], "mem16 (in module stm)": [[109, "stm.mem16"]], "mem32 (in module stm)": [[109, "stm.mem32"]], "mem8 (in module stm)": [[109, "stm.mem8"]], "rfcore_fw_version() (in module stm)": [[109, "stm.rfcore_fw_version"]], "rfcore_status() (in module stm)": [[109, "stm.rfcore_status"]], "rfcore_sys_hci() (in module stm)": [[109, "stm.rfcore_sys_hci"]], "stm": [[109, "module-stm"]], "subghz_cs() (in module stm)": [[109, "stm.subghz_cs"]], "subghz_irq() (in module stm)": [[109, "stm.subghz_irq"]], "subghz_is_busy() (in module stm)": [[109, "stm.subghz_is_busy"]], "calcsize() (in module struct)": [[110, "struct.calcsize"]], "pack() (in module struct)": [[110, "struct.pack"]], "pack_into() (in module struct)": [[110, "struct.pack_into"]], "struct": [[110, "module-struct"]], "unpack() (in module struct)": [[110, "struct.unpack"]], "unpack_from() (in module struct)": [[110, "struct.unpack_from"]], "argv (in module sys)": [[111, "sys.argv"]], "atexit() (in module sys)": [[111, "sys.atexit"]], "byteorder (in module sys)": [[111, "sys.byteorder"]], "exit() (in module sys)": [[111, "sys.exit"]], "implementation (in module sys)": [[111, "sys.implementation"]], "maxsize (in module sys)": [[111, "sys.maxsize"]], "modules (in module sys)": [[111, "sys.modules"]], "path (in module sys)": [[111, "sys.path"]], "platform (in module sys)": [[111, "sys.platform"]], "print_exception() (in module sys)": [[111, "sys.print_exception"]], "ps1 (in module sys)": [[111, "sys.ps1"]], "ps2 (in module sys)": [[111, "sys.ps2"]], "settrace() (in module sys)": [[111, "sys.settrace"]], "stderr (in module sys)": [[111, "sys.stderr"]], "stdin (in module sys)": [[111, "sys.stdin"]], "stdout (in module sys)": [[111, "sys.stdout"]], "sys": [[111, "module-sys"]], "tracebacklimit (in module sys)": [[111, "sys.tracebacklimit"]], "version (in module sys)": [[111, "sys.version"]], "version_info (in module sys)": [[111, "sys.version_info"]], "avg() (time.clock method)": [[112, "time.clock.avg"]], "clock (class in time)": [[112, "time.clock"]], "fps() (time.clock method)": [[112, "time.clock.fps"]], "gmtime() (in module time)": [[112, "time.gmtime"]], "localtime() (in module time)": [[112, "time.localtime"]], "mktime() (in module time)": [[112, "time.mktime"]], "reset() (time.clock method)": [[112, "time.clock.reset"]], "sleep() (in module time)": [[112, "time.sleep"]], "sleep_ms() (in module time)": [[112, "time.sleep_ms"]], "sleep_us() (in module time)": [[112, "time.sleep_us"]], "tick() (time.clock method)": [[112, "time.clock.tick"]], "ticks_add() (in module time)": [[112, "time.ticks_add"]], "ticks_cpu() (in module time)": [[112, "time.ticks_cpu"]], "ticks_diff() (in module time)": [[112, "time.ticks_diff"]], "ticks_ms() (in module time)": [[112, "time.ticks_ms"]], "ticks_us() (in module time)": [[112, "time.ticks_us"]], "time": [[112, "module-time"]], "time() (in module time)": [[112, "time.time"]], "time_ns() (in module time)": [[112, "time.time_ns"]], "array (in module uctypes)": [[113, "uctypes.ARRAY"]], "big_endian (in module uctypes)": [[113, "uctypes.BIG_ENDIAN"]], "float32 (in module uctypes)": [[113, "uctypes.FLOAT32"]], "float64 (in module uctypes)": [[113, "uctypes.FLOAT64"]], "int16 (in module uctypes)": [[113, "uctypes.INT16"]], "int32 (in module uctypes)": [[113, "uctypes.INT32"]], "int64 (in module uctypes)": [[113, "uctypes.INT64"]], "int8 (in module uctypes)": [[113, "uctypes.INT8"]], "little_endian (in module uctypes)": [[113, "uctypes.LITTLE_ENDIAN"]], "native (in module uctypes)": [[113, "uctypes.NATIVE"]], "ptr (in module uctypes)": [[113, "uctypes.PTR"]], "uint16 (in module uctypes)": [[113, "uctypes.UINT16"]], "uint32 (in module uctypes)": [[113, "uctypes.UINT32"]], "uint64 (in module uctypes)": [[113, "uctypes.UINT64"]], "uint8 (in module uctypes)": [[113, "uctypes.UINT8"]], "void (in module uctypes)": [[113, "uctypes.VOID"]], "addressof() (in module uctypes)": [[113, "uctypes.addressof"]], "bytearray_at() (in module uctypes)": [[113, "uctypes.bytearray_at"]], "bytes_at() (in module uctypes)": [[113, "uctypes.bytes_at"]], "sizeof() (in module uctypes)": [[113, "uctypes.sizeof"]], "struct (class in uctypes)": [[113, "uctypes.struct"]], "uctypes": [[113, "module-uctypes"]], "ping() (in module uping)": [[114, "uping.ping"]], "uping": [[114, "module-uping"]], "abstractblockdev (class in vfs)": [[115, "vfs.AbstractBlockDev"]], "vfsfat (class in vfs)": [[115, "vfs.VfsFat"]], "vfslfs1 (class in vfs)": [[115, "vfs.VfsLfs1"]], "vfslfs2 (class in vfs)": [[115, "vfs.VfsLfs2"]], "vfsposix (class in vfs)": [[115, "vfs.VfsPosix"]], "ioctl() (vfs.abstractblockdev method)": [[115, "vfs.AbstractBlockDev.ioctl"]], "mkfs() (vfs.vfsfat static method)": [[115, "vfs.VfsFat.mkfs"]], "mkfs() (vfs.vfslfs1 static method)": [[115, "vfs.VfsLfs1.mkfs"]], "mkfs() (vfs.vfslfs2 static method)": [[115, "vfs.VfsLfs2.mkfs"]], "mount() (in module vfs)": [[115, "vfs.mount"]], "readblocks() (vfs.abstractblockdev method)": [[115, "vfs.AbstractBlockDev.readblocks"]], "umount() (in module vfs)": [[115, "vfs.umount"]], "vfs": [[115, "module-vfs"]], "writeblocks() (vfs.abstractblockdev method)": [[115, "vfs.AbstractBlockDev.writeblocks"]], "compress() (in module zlib)": [[116, "zlib.compress"]], "decompress() (in module zlib)": [[116, "zlib.decompress"]], "zlib": [[116, "module-zlib"]], ".mpy file": [[149, "term-.mpy-file"]], ".py file": [[149, "term-.py-file"]], "cpython": [[149, "term-CPython"]], "circuitpython": [[149, "term-CircuitPython"]], "ffi": [[149, "term-FFI"]], "gpio": [[149, "term-GPIO"]], "gpio port": [[149, "term-GPIO-port"]], "garbage collector": [[149, "term-Garbage-Collector"]], "mcu": [[149, "term-MCU"]], "micropython unix port": [[149, "term-MicroPython-Unix-port"]], "micropython port": [[149, "term-MicroPython-port"]], "repl": [[149, "term-REPL"]], "uart": [[149, "term-UART"]], "baremetal": [[149, "term-baremetal"]], "board": [[149, "term-board"]], "buffer protocol": [[149, "term-buffer-protocol"]], "bytecode": [[149, "term-bytecode"]], "callee-owned tuple": [[149, "term-callee-owned-tuple"]], "cross-compiler": [[149, "term-cross-compiler"]], "driver": [[149, "term-driver"]], "filesystem": [[149, "term-filesystem"]], "frozen module": [[149, "term-frozen-module"]], "heap": [[149, "term-heap"]], "interned string": [[149, "term-interned-string"]], "micropython-lib": [[149, "term-micropython-lib"]], "mip": [[149, "term-mip"]], "mpremote": [[149, "term-mpremote"]], "native": [[149, "term-native"]], "port": [[149, "term-port"]], "stream": [[149, "term-stream"]], "upip": [[149, "term-upip"]], "webrepl": [[149, "term-webrepl"]], "add_library()": [[152, "add_library"]], "freeze()": [[152, "freeze"]], "freeze_as_mpy()": [[152, "freeze_as_mpy"]], "freeze_as_str()": [[152, "freeze_as_str"]], "freeze_mpy()": [[152, "freeze_mpy"]], "include()": [[152, "include"]], "metadata()": [[152, "metadata"]], "module()": [[152, "module"]], "package()": [[152, "package"]], "require()": [[152, "require"]]}})