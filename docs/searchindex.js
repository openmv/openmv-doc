Search.setIndex({"docnames": ["differences/python_310", "differences/python_35", "differences/python_36", "differences/python_37", "differences/python_38", "differences/python_39", "genrst/builtin_types", "genrst/core_language", "genrst/index", "genrst/modules", "genrst/syntax", "index", "library/_thread", "library/array", "library/asyncio", "library/binascii", "library/bluetooth", "library/builtins", "library/cmath", "library/collections", "library/cryptolib", "library/deflate", "library/errno", "library/gc", "library/gzip", "library/hashlib", "library/heapq", "library/index", "library/io", "library/json", "library/machine", "library/machine.ADC", "library/machine.ADCBlock", "library/machine.CAN", "library/machine.I2C", "library/machine.I2S", "library/machine.LED", "library/machine.PWM", "library/machine.Pin", "library/machine.RTC", "library/machine.SPI", "library/machine.Signal", "library/machine.Timer", "library/machine.UART", "library/machine.WDT", "library/math", "library/micropython", "library/mutex", "library/network", "library/network.LAN", "library/network.PPP", "library/network.WINC", "library/network.WLAN", "library/omv.audio", "library/omv.buzzer", "library/omv.cpufreq", "library/omv.display", "library/omv.display.DACBacklight", "library/omv.display.PWMBacklight", "library/omv.display.ST7701", "library/omv.display.displaydata", "library/omv.display.dsidisplay", "library/omv.display.rgbdisplay", "library/omv.display.spidisplay", "library/omv.fir", "library/omv.ft5x06", "library/omv.gif", "library/omv.gt911", "library/omv.image", "library/omv.imu", "library/omv.mjpeg", "library/omv.ml", "library/omv.ml.apps", "library/omv.ml.postprocessing", "library/omv.ml.preprocessing", "library/omv.ml.utils", "library/omv.omv", "library/omv.rpc", "library/omv.rtsp", "library/omv.sensor", "library/omv.tfp410", "library/omv.tof", "library/omv.tv", "library/openamp", "library/os", "library/platform", "library/pyb", "library/pyb.ADC", "library/pyb.CAN", "library/pyb.DAC", "library/pyb.ExtInt", "library/pyb.Flash", "library/pyb.I2C", "library/pyb.LED", "library/pyb.Pin", "library/pyb.RTC", "library/pyb.SPI", "library/pyb.Servo", "library/pyb.Timer", "library/pyb.UART", "library/pyb.USB_HID", "library/pyb.USB_VCP", "library/random", "library/re", "library/requests", "library/select", "library/socket", "library/ssl", "library/stm", "library/struct", "library/sys", "library/time", "library/uctypes", "library/uping", "library/vfs", "library/zlib", "license", "openmvcam/general", "openmvcam/quickref", "openmvcam/tutorial/analog_io", "openmvcam/tutorial/gpio_control", "openmvcam/tutorial/hardware_setup", "openmvcam/tutorial/index", "openmvcam/tutorial/io_tutorial", "openmvcam/tutorial/led_control", "openmvcam/tutorial/more_information", "openmvcam/tutorial/openmvide_overview", "openmvcam/tutorial/overview", "openmvcam/tutorial/production", "openmvcam/tutorial/script_structure", "openmvcam/tutorial/software_setup", "openmvcam/tutorial/system_architecture", "openmvcam/tutorial/uart_control", "reference/asm_thumb2_arith", "reference/asm_thumb2_compare", "reference/asm_thumb2_directives", "reference/asm_thumb2_float", "reference/asm_thumb2_hints_tips", "reference/asm_thumb2_index", "reference/asm_thumb2_label_branch", "reference/asm_thumb2_ldr", "reference/asm_thumb2_logical_bit", "reference/asm_thumb2_misc", "reference/asm_thumb2_mov", "reference/asm_thumb2_stack", "reference/asm_thumb2_str", "reference/constrained", "reference/filesystem", "reference/glossary", "reference/index", "reference/isr_rules", "reference/manifest", "reference/micropython2_migration", "reference/mpremote", "reference/mpyfiles", "reference/packages", "reference/pyboard.py", "reference/repl", "reference/speed_python"], "filenames": ["differences/python_310.rst", "differences/python_35.rst", "differences/python_36.rst", "differences/python_37.rst", "differences/python_38.rst", "differences/python_39.rst", "genrst/builtin_types.rst", "genrst/core_language.rst", "genrst/index.rst", "genrst/modules.rst", "genrst/syntax.rst", "index.rst", "library/_thread.rst", "library/array.rst", "library/asyncio.rst", "library/binascii.rst", "library/bluetooth.rst", "library/builtins.rst", "library/cmath.rst", "library/collections.rst", "library/cryptolib.rst", "library/deflate.rst", "library/errno.rst", "library/gc.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/index.rst", "library/io.rst", "library/json.rst", "library/machine.rst", "library/machine.ADC.rst", "library/machine.ADCBlock.rst", "library/machine.CAN.rst", "library/machine.I2C.rst", "library/machine.I2S.rst", "library/machine.LED.rst", "library/machine.PWM.rst", "library/machine.Pin.rst", "library/machine.RTC.rst", "library/machine.SPI.rst", "library/machine.Signal.rst", "library/machine.Timer.rst", "library/machine.UART.rst", "library/machine.WDT.rst", "library/math.rst", "library/micropython.rst", "library/mutex.rst", "library/network.rst", "library/network.LAN.rst", "library/network.PPP.rst", "library/network.WINC.rst", "library/network.WLAN.rst", "library/omv.audio.rst", "library/omv.buzzer.rst", "library/omv.cpufreq.rst", "library/omv.display.rst", "library/omv.display.DACBacklight.rst", "library/omv.display.PWMBacklight.rst", "library/omv.display.ST7701.rst", "library/omv.display.displaydata.rst", "library/omv.display.dsidisplay.rst", "library/omv.display.rgbdisplay.rst", "library/omv.display.spidisplay.rst", "library/omv.fir.rst", "library/omv.ft5x06.rst", "library/omv.gif.rst", "library/omv.gt911.rst", "library/omv.image.rst", "library/omv.imu.rst", "library/omv.mjpeg.rst", "library/omv.ml.rst", "library/omv.ml.apps.rst", "library/omv.ml.postprocessing.rst", "library/omv.ml.preprocessing.rst", "library/omv.ml.utils.rst", "library/omv.omv.rst", "library/omv.rpc.rst", "library/omv.rtsp.rst", "library/omv.sensor.rst", "library/omv.tfp410.rst", "library/omv.tof.rst", "library/omv.tv.rst", "library/openamp.rst", "library/os.rst", "library/platform.rst", "library/pyb.rst", "library/pyb.ADC.rst", "library/pyb.CAN.rst", "library/pyb.DAC.rst", "library/pyb.ExtInt.rst", "library/pyb.Flash.rst", "library/pyb.I2C.rst", "library/pyb.LED.rst", "library/pyb.Pin.rst", "library/pyb.RTC.rst", "library/pyb.SPI.rst", "library/pyb.Servo.rst", "library/pyb.Timer.rst", "library/pyb.UART.rst", "library/pyb.USB_HID.rst", "library/pyb.USB_VCP.rst", "library/random.rst", "library/re.rst", "library/requests.rst", "library/select.rst", "library/socket.rst", "library/ssl.rst", "library/stm.rst", "library/struct.rst", "library/sys.rst", "library/time.rst", "library/uctypes.rst", "library/uping.rst", "library/vfs.rst", "library/zlib.rst", "license.rst", "openmvcam/general.rst", "openmvcam/quickref.rst", "openmvcam/tutorial/analog_io.rst", "openmvcam/tutorial/gpio_control.rst", "openmvcam/tutorial/hardware_setup.rst", "openmvcam/tutorial/index.rst", "openmvcam/tutorial/io_tutorial.rst", "openmvcam/tutorial/led_control.rst", "openmvcam/tutorial/more_information.rst", "openmvcam/tutorial/openmvide_overview.rst", "openmvcam/tutorial/overview.rst", "openmvcam/tutorial/production.rst", "openmvcam/tutorial/script_structure.rst", "openmvcam/tutorial/software_setup.rst", "openmvcam/tutorial/system_architecture.rst", "openmvcam/tutorial/uart_control.rst", "reference/asm_thumb2_arith.rst", "reference/asm_thumb2_compare.rst", "reference/asm_thumb2_directives.rst", "reference/asm_thumb2_float.rst", "reference/asm_thumb2_hints_tips.rst", "reference/asm_thumb2_index.rst", "reference/asm_thumb2_label_branch.rst", "reference/asm_thumb2_ldr.rst", "reference/asm_thumb2_logical_bit.rst", "reference/asm_thumb2_misc.rst", "reference/asm_thumb2_mov.rst", "reference/asm_thumb2_stack.rst", "reference/asm_thumb2_str.rst", "reference/constrained.rst", "reference/filesystem.rst", "reference/glossary.rst", "reference/index.rst", "reference/isr_rules.rst", "reference/manifest.rst", "reference/micropython2_migration.rst", "reference/mpremote.rst", "reference/mpyfiles.rst", "reference/packages.rst", "reference/pyboard.py.rst", "reference/repl.rst", "reference/speed_python.rst"], "titles": ["Python 3.10", "Python 3.5", "Python 3.6", "Python 3.7", "Python 3.8", "Python 3.9", "Builtin types", "Core language", "MicroPython differences from CPython", "Modules", "Syntax", "MicroPython documentation and references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2013 multithreading support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2013 arrays of numeric data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 asynchronous I/O scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2013 binary/ASCII conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluetooth</span></code> \u2014 low-level Bluetooth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2013 builtin functions and exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2013 mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2013 collection and container types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cryptolib</span></code> \u2013 cryptographic ciphers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deflate</span></code> \u2013 deflate compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2013 system error codes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2013 control the garbage collector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2013 gzip compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2013 hashing algorithms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2013 heap queue algorithm", "MicroPython libraries", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2013 input/output streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2013 JSON encoding and decoding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">machine</span></code> \u2014 functions related to the hardware", "class ADC \u2013 analog to digital conversion", "class ADCBlock \u2013 control ADC peripherals", "class CAN \u2013 controller area network communication bus", "class I2C \u2013 a two-wire serial protocol", "class I2S \u2013 Inter-IC Sound bus protocol", "class LED \u2013 LED Control", "class PWM \u2013 pulse width modulation", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)", "class Signal \u2013 control and sense external I/O devices", "class Timer \u2013 control hardware timers", "class UART \u2013 duplex serial communication bus", "class WDT \u2013 watchdog timer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2013 mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">micropython</span></code> \u2013 access and control MicroPython internals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mutex</span></code> \u2014 mutex module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">network</span></code> \u2014 network configuration", "class LAN \u2013 control an Ethernet module", "class PPP \u2013 create network connections over serial PPP", "class WINC \u2013 wifi shield driver", "class WLAN \u2013 control built-in WiFi interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audio</span></code> \u2014 Audio Module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">buzzer</span></code> \u2014 buzzer driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cpufreq</span></code> \u2014 CPU Frequency Control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">display</span></code> \u2014 display driver", "class DACBacklight \u2013 DAC Backlight", "class PWMBacklight \u2013 PWM Backlight", "class ST7701 \u2013 Display Controller", "class DisplayData \u2013 Display Data", "class DSIDisplay \u2013 DSI Display Driver", "class RGBDisplay \u2013 RGB Display Driver", "class SPIDisplay \u2013 SPI Display Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fir</span></code> \u2014 thermal sensor driver (fir == far infrared)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ft5x06</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gif</span></code> \u2014 gif recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gt911</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">image</span></code> \u2014 machine vision", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imu</span></code> \u2014 imu sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mjpeg</span></code> \u2014 mjpeg recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml</span></code> \u2014 Machine Learning", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.apps</span></code> \u2014 ML Apps", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.postprocessing</span></code> \u2014 ML Postprocessing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.preprocessing</span></code> \u2014 ML Preprocessing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.utils</span></code> \u2014 ML Utils", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">omv</span></code> \u2014 OpenMV Cam Information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rpc</span></code> \u2014 rpc library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rtsp</span></code> \u2014 rtsp library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sensor</span></code> \u2014 camera sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfp410</span></code> \u2014 DVI/HDMI Controller", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tof</span></code> \u2014 time-of-flight sensor driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tv</span></code> \u2014 tv shield driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openamp</span></code> \u2013 provides standard Asymmetric Multiprocessing (AMP) support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2013 basic \u201coperating system\u201d services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2013 access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyb</span></code> \u2014 functions related to the board", "class ADC \u2013 analog to digital conversion", "class CAN \u2013 controller area network communication bus", "class DAC \u2013 digital to analog conversion", "class ExtInt \u2013 configure I/O pins to interrupt on external events", "class Flash \u2013 access to built-in flash storage", "class I2C \u2013 a two-wire serial protocol", "class LED \u2013 LED object", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a controller-driven serial protocol", "class Servo \u2013 3-wire hobby servo driver", "class Timer \u2013 control internal timers", "class UART \u2013 duplex serial communication bus", "class USB_HID \u2013 USB Human Interface Device (HID)", "class USB_VCP \u2013 USB virtual comm port", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2013 generate random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2013 simple regular expressions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">requests</span></code> \u2014 Related functions of HTTP client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2013 wait for events on a set of streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2013 socket module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2013 SSL/TLS module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stm</span></code> \u2014 functionality specific to STM32 MCUs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2013 pack and unpack primitive data types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2013 system specific functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2013 time related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uctypes</span></code> \u2013 access binary data in a structured way", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uping</span></code> \u2014 Ping another computer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">vfs</span></code> \u2013 virtual filesystem control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2013 zlib compression &amp; decompression", "MicroPython license information", "General information about the openmvcam", "Quick reference for the openmvcam", "<span class=\"section-number\">6.1.3. </span>Analog IO", "<span class=\"section-number\">6.1.2. </span>GPIO Control", "<span class=\"section-number\">3. </span>Hardware Setup", "OpenMV Cam Tutorial", "<span class=\"section-number\">6. </span>I/O Tutorial", "<span class=\"section-number\">6.1.1. </span>LED Control", "<span class=\"section-number\">9. </span>More Information", "<span class=\"section-number\">4. </span>OpenMV IDE Overview", "<span class=\"section-number\">1. </span>Overview", "<span class=\"section-number\">8. </span>Releasing your OpenMV Cam Scripts for Production", "<span class=\"section-number\">5. </span>Script Structure", "<span class=\"section-number\">2. </span>Software Setup", "<span class=\"section-number\">7. </span>System Architecture", "<span class=\"section-number\">6.1.4. </span>UART Control", "<span class=\"section-number\">5. </span>Arithmetic instructions", "<span class=\"section-number\">6. </span>Comparison instructions", "<span class=\"section-number\">11. </span>Assembler directives", "<span class=\"section-number\">10. </span>Floating point instructions", "<span class=\"section-number\">1. </span>Hints and tips", "Inline assembler for Thumb2 architectures", "<span class=\"section-number\">7. </span>Branch instructions", "<span class=\"section-number\">2. </span>Load register from memory", "<span class=\"section-number\">4. </span>Logical &amp; bitwise instructions", "<span class=\"section-number\">9. </span>Miscellaneous instructions", "<span class=\"section-number\">1. </span>Register move instructions", "<span class=\"section-number\">8. </span>Stack push and pop", "<span class=\"section-number\">3. </span>Store register to memory", "MicroPython on microcontrollers", "Working with filesystems", "Glossary", "MicroPython language and implementation", "Writing interrupt handlers", "MicroPython manifest files", "MicroPython 2.0 Migration Guide", "MicroPython remote control: mpremote", "MicroPython .mpy files", "Package management", "The pyboard.py tool", "The MicroPython Interactive Interpreter Mode (aka REPL)", "Maximising MicroPython speed"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 16, 21, 27, 30, 31, 33, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 132, 137, 140, 141, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158], "final": [0, 4, 5, 14, 27, 28, 40, 64, 66, 68, 70, 77, 81, 111, 119, 120, 121, 124, 126, 129, 130, 131, 132, 146, 154, 157, 158], "wa": [0, 2, 4, 5, 16, 21, 30, 40, 47, 48, 60, 64, 68, 70, 71, 73, 74, 75, 77, 79, 81, 82, 86, 92, 94, 96, 99, 103, 106, 110, 111, 114, 117, 121, 124, 126, 127, 131, 139, 146, 154, 157, 158], "releas": [0, 2, 4, 5, 11, 14, 24, 47, 61, 62, 63, 65, 79, 83, 84, 90, 106, 122, 152, 154], "4": [0, 1, 6, 8, 9, 10, 16, 32, 34, 40, 48, 49, 51, 52, 64, 68, 71, 73, 79, 81, 84, 85, 86, 88, 89, 92, 93, 95, 96, 98, 99, 106, 109, 112, 113, 114, 118, 124, 135, 137, 139, 146, 147, 149, 150, 153, 154, 157], "octob": [0, 4, 5], "2021": 0, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 148, 149, 151, 152, 153, 155], "featur": [0, 2, 3, 4, 5, 8, 11, 16, 21, 27, 46, 98, 101, 121, 126, 128, 131, 148, 149, 151, 154, 157, 158], "ar": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 55, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "defin": [0, 1, 4, 5, 8, 11, 16, 21, 33, 38, 42, 46, 48, 52, 68, 77, 86, 88, 91, 104, 106, 108, 114, 127, 129, 137, 138, 139, 146, 147, 150, 151, 153, 154, 155, 158], "pep": [0, 1, 2, 3, 4, 5, 9], "619": 0, "detail": [0, 4, 5, 7, 9, 16, 17, 37, 38, 46, 68, 83, 86, 88, 90, 106, 110, 112, 114, 115, 126, 137, 138, 139, 146, 147, 150, 151, 153, 158], "descript": [0, 4, 5, 35, 40, 52, 68, 138, 151, 158], "chang": [0, 1, 2, 3, 4, 5, 6, 11, 16, 30, 31, 34, 35, 38, 40, 43, 44, 48, 51, 55, 57, 58, 67, 68, 78, 79, 80, 84, 87, 89, 97, 98, 106, 112, 114, 117, 126, 127, 134, 147, 150, 151, 154, 155, 157, 158], "can": [0, 1, 2, 3, 4, 5, 7, 11, 14, 16, 19, 20, 21, 23, 24, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 66, 68, 70, 71, 72, 74, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "found": [0, 2, 4, 5, 6, 7, 9, 10, 16, 27, 51, 68, 110, 114, 137, 146, 147, 150, 154, 158], "what": [0, 4, 5, 16, 30, 31, 41, 68, 71, 74, 77, 78, 98, 111, 112, 117, 118, 120, 121, 126, 127, 128, 131, 132, 148, 150, 157, 158], "": [0, 1, 4, 5, 7, 9, 11, 14, 15, 16, 18, 21, 27, 28, 33, 34, 42, 43, 45, 46, 48, 50, 51, 53, 57, 58, 64, 68, 69, 71, 74, 77, 78, 79, 81, 83, 84, 87, 88, 91, 92, 98, 103, 104, 105, 107, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 141, 146, 147, 148, 150, 151, 153, 154, 155, 156, 158], "new": [0, 1, 2, 3, 4, 5, 13, 14, 16, 19, 23, 25, 30, 33, 34, 37, 40, 42, 43, 64, 68, 72, 75, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 92, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 117, 118, 121, 124, 126, 128, 131, 146, 148, 150, 152, 157, 158], "syntax": [0, 1, 2, 4, 8, 11, 16, 19, 48, 52, 103, 112, 138, 149, 158], "statu": [0, 1, 2, 3, 4, 5, 8, 11, 16, 41, 48, 49, 50, 52, 84, 108, 122, 139, 142], "634": 0, "structur": [0, 11, 27, 68, 77, 79, 106, 122, 131, 137, 146, 147, 150, 158], "pattern": [0, 1, 46, 68, 79, 87, 103, 111], "match": [0, 1, 2, 3, 11, 16, 33, 48, 49, 61, 62, 63, 64, 68, 71, 73, 74, 77, 81, 82, 83, 88, 94, 98, 106, 126, 152, 153, 154], "specif": [0, 2, 5, 11, 14, 16, 19, 28, 30, 34, 35, 38, 42, 46, 52, 64, 77, 79, 84, 86, 89, 92, 111, 112, 114, 115, 118, 146, 148, 150, 152, 153, 158], "1": [0, 1, 2, 3, 4, 5, 7, 10, 11, 14, 16, 19, 20, 23, 30, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 61, 62, 63, 64, 67, 68, 70, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 114, 118, 119, 120, 124, 126, 132, 134, 135, 137, 141, 146, 147, 148, 150, 152, 153, 154, 156, 157, 158], "635": 0, "motiv": 0, "rational": [0, 111], "636": 0, "tutori": [0, 11, 118, 125, 126, 127, 137, 146, 147, 150, 152, 158], "bpo": 0, "12782": 0, "parenthes": [0, 4], "context": [0, 1, 2, 3, 8, 11, 14, 30, 35, 46, 47, 64, 79, 107, 136, 148, 150, 158], "manag": [0, 2, 8, 11, 21, 24, 27, 40, 47, 52, 83, 115, 126, 130, 131, 148, 149, 153, 156, 158], "now": [0, 1, 2, 3, 4, 5, 11, 16, 27, 39, 41, 43, 48, 49, 52, 68, 77, 79, 90, 94, 106, 111, 118, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 148, 157], "offici": [0, 24], "allow": [0, 1, 2, 3, 4, 8, 11, 16, 19, 21, 24, 27, 28, 29, 30, 32, 34, 35, 37, 38, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 86, 87, 91, 92, 94, 97, 100, 101, 106, 107, 111, 112, 114, 115, 117, 121, 124, 126, 127, 131, 147, 148, 151, 153, 156, 157], "standard": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 21, 22, 24, 25, 33, 42, 43, 46, 48, 52, 61, 62, 68, 74, 88, 91, 97, 99, 106, 107, 109, 110, 111, 112, 121, 126, 132, 139, 146, 147, 148, 149, 157, 158], "librari": [0, 1, 2, 5, 11, 16, 21, 28, 68, 71, 79, 83, 115, 123, 128, 146, 148, 149, 150, 151, 155, 158], "618": 0, "add": [0, 2, 4, 11, 16, 19, 27, 41, 66, 68, 70, 75, 79, 94, 120, 126, 128, 130, 133, 137, 138, 147, 150, 151], "option": [0, 1, 2, 3, 4, 11, 16, 17, 19, 21, 25, 28, 30, 33, 38, 43, 48, 50, 51, 64, 68, 71, 81, 86, 88, 98, 102, 105, 106, 110, 111, 112, 114, 118, 121, 122, 147, 150, 151, 152, 153, 155, 156, 157], "length": [0, 1, 6, 11, 14, 16, 19, 30, 33, 34, 35, 39, 40, 43, 46, 48, 68, 77, 84, 86, 88, 91, 99, 106, 112, 114, 137, 154], "check": [0, 1, 2, 5, 6, 10, 11, 19, 30, 34, 48, 68, 76, 92, 99, 107, 110, 131, 146, 153, 154, 157, 158], "To": [0, 2, 4, 9, 14, 16, 19, 27, 29, 30, 48, 49, 52, 64, 68, 77, 79, 81, 86, 87, 89, 92, 94, 98, 99, 103, 104, 106, 111, 117, 120, 121, 124, 126, 127, 128, 130, 131, 132, 137, 147, 150, 151, 153, 154, 155, 158], "zip": [0, 1, 11, 17], "interpret": [0, 1, 4, 7, 11, 29, 30, 46, 68, 77, 107, 137, 146, 148, 149, 150, 151, 153, 156, 158], "improv": [0, 1, 2, 11, 21, 68, 79, 131, 146, 148, 152], "626": 0, "precis": [0, 2, 30, 45, 61, 62, 63, 64, 68, 70, 79, 81, 82, 87, 92, 96, 111, 136, 137, 146, 150], "line": [0, 2, 5, 7, 9, 10, 11, 14, 33, 34, 35, 40, 41, 43, 46, 79, 88, 90, 92, 96, 99, 101, 106, 118, 126, 127, 146, 150, 151, 153, 156, 157], "number": [0, 1, 3, 4, 8, 9, 11, 13, 14, 16, 23, 25, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 58, 65, 66, 67, 68, 70, 71, 76, 77, 78, 79, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 108, 109, 110, 111, 112, 113, 114, 121, 126, 134, 137, 141, 142, 146, 147, 150, 152, 153, 154, 157, 158], "debug": [0, 4, 11, 68, 76, 86, 94, 103, 122, 128, 146, 148, 150, 158], "other": [0, 1, 2, 3, 4, 5, 6, 11, 13, 14, 16, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 41, 42, 46, 47, 48, 51, 52, 64, 68, 72, 77, 79, 87, 88, 89, 90, 91, 92, 96, 98, 103, 105, 106, 108, 110, 111, 112, 114, 116, 123, 124, 126, 127, 129, 131, 136, 137, 146, 147, 150, 151, 152, 153, 158], "tool": [0, 11, 68, 121, 122, 127, 128, 147, 148, 149, 153, 154, 155, 157, 158], "type": [0, 1, 3, 4, 5, 8, 9, 11, 13, 16, 27, 28, 33, 38, 48, 49, 50, 51, 52, 63, 64, 68, 71, 74, 76, 77, 78, 79, 81, 82, 84, 88, 99, 101, 104, 106, 107, 110, 112, 114, 121, 126, 128, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158], "604": 0, "write": [0, 1, 10, 11, 13, 14, 16, 21, 24, 28, 29, 30, 34, 35, 38, 39, 40, 43, 46, 61, 62, 63, 67, 68, 70, 77, 79, 84, 86, 89, 92, 98, 99, 101, 106, 107, 108, 114, 115, 117, 118, 119, 121, 126, 127, 128, 129, 132, 143, 147, 148, 149, 152, 153, 157, 158], "union": [0, 5], "x": [0, 3, 5, 6, 7, 9, 11, 19, 26, 38, 41, 45, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 79, 81, 82, 86, 90, 102, 112, 126, 130, 134, 137, 146, 150, 152, 153, 154, 155, 157, 158], "y": [0, 5, 7, 11, 45, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 79, 81, 82, 86, 92, 112, 126, 134, 152, 153, 155], "613": 0, "explicit": [0, 6, 112, 139, 146, 153, 157], "alias": [0, 28, 68, 98, 153], "612": 0, "paramet": [0, 3, 4, 5, 8, 11, 16, 17, 20, 21, 23, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 52, 53, 68, 79, 84, 86, 87, 88, 89, 92, 96, 99, 104, 106, 107, 111, 114, 115], "variabl": [0, 2, 3, 5, 8, 11, 16, 27, 46, 47, 77, 129, 131, 137, 146, 147, 150, 151, 153, 154, 156, 158], "import": [0, 1, 2, 3, 9, 11, 14, 16, 19, 21, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 66, 67, 70, 79, 81, 82, 83, 87, 88, 89, 92, 96, 97, 98, 99, 103, 110, 112, 118, 119, 120, 123, 124, 126, 129, 132, 137, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158], "deprec": [0, 1, 30, 48, 52, 86, 91, 106, 118], "remov": [0, 1, 2, 5, 11, 19, 27, 33, 38, 65, 68, 79, 84, 91, 121, 126, 146, 152, 153, 156], "restrict": [0, 4, 5, 6, 11, 34, 40, 46, 52, 98, 116, 150, 151, 158], "644": 0, "requir": [0, 4, 6, 8, 11, 16, 21, 28, 30, 34, 37, 38, 40, 41, 43, 46, 48, 49, 51, 52, 68, 71, 72, 74, 77, 78, 79, 86, 87, 89, 90, 92, 96, 98, 99, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 121, 126, 127, 137, 142, 146, 147, 148, 150, 151, 152, 154, 158], "openssl": [0, 2], "newer": [0, 1, 2], "632": 0, "distutil": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "Not": [0, 1, 5, 6, 7, 25, 37, 38, 68, 106, 111, 118, 139], "relev": [0, 1, 5, 99, 104, 110, 114, 138, 146, 158], "623": 0, "prepar": [0, 71], "wstr": 0, "member": [0, 8, 11], "pyunicodeobject": 0, "624": 0, "py_unicod": 0, "encod": [0, 2, 5, 6, 11, 15, 16, 27, 30, 68, 74, 98, 104, 106, 107, 109, 112, 139, 146], "api": [0, 2, 3, 4, 12, 16, 30, 35, 38, 83, 85, 89, 90, 91, 98, 111, 112, 148, 152], "597": 0, "encodingwarn": 0, "languag": [0, 1, 2, 3, 4, 5, 8, 11, 110, 112, 129, 138, 148, 150, 158], "int": [0, 1, 2, 4, 8, 9, 11, 13, 17, 36, 38, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 89, 109, 110, 119, 136, 137, 146, 154, 158], "ha": [0, 1, 2, 4, 5, 6, 8, 9, 11, 14, 16, 21, 23, 25, 26, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 46, 48, 49, 50, 51, 52, 67, 68, 71, 79, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 99, 106, 107, 108, 110, 111, 114, 118, 119, 120, 121, 124, 126, 131, 132, 134, 136, 146, 148, 150, 151, 153, 154, 155, 157, 158], "method": [0, 1, 2, 3, 4, 5, 8, 11, 13, 14, 16, 19, 21, 24, 27, 28, 30, 46, 48, 64, 79, 81, 82, 84, 103, 107, 114, 118, 120, 124, 126, 131, 132, 146, 147, 148, 154, 157, 158], "bit_count": 0, "return": [0, 1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 126, 129, 131, 136, 138, 139, 141, 147, 148, 150, 153, 154, 157, 158], "ones": [0, 16, 131, 151], "binari": [0, 1, 2, 11, 21, 24, 25, 27, 28, 41, 51, 52, 79, 87, 106, 111, 115, 126, 132, 141, 148], "expans": [0, 157], "given": [0, 7, 13, 14, 16, 17, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 71, 75, 77, 79, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 106, 107, 109, 110, 111, 112, 114, 118, 131, 147, 150, 151, 153, 154, 156, 158], "integ": [0, 4, 6, 11, 14, 16, 17, 31, 32, 33, 34, 37, 38, 43, 45, 46, 52, 68, 71, 79, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 106, 108, 109, 110, 111, 112, 114, 134, 138, 146, 150, 154, 157, 158], "also": [0, 2, 5, 6, 16, 17, 19, 20, 30, 34, 38, 41, 43, 46, 47, 51, 52, 57, 61, 62, 63, 64, 68, 71, 74, 77, 79, 81, 83, 86, 87, 90, 92, 94, 98, 107, 111, 112, 114, 115, 126, 130, 131, 138, 139, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158], "known": [0, 16, 23, 28, 38, 48, 52, 68, 107, 111, 121, 124, 136, 139, 146, 148, 150, 153, 158], "popul": [0, 19, 33, 68, 88, 137, 154], "count": [0, 2, 8, 11, 13, 43, 46, 48, 67, 68, 70, 79, 86, 95, 98, 99, 103, 109, 110, 112, 113, 114, 120, 141, 147, 150, 154], "view": [0, 1, 11, 38, 64, 68, 79, 81, 98, 127, 134, 158], "dict": [0, 2, 3, 4, 5, 8, 11, 17, 19, 94, 104, 146], "kei": [0, 1, 2, 4, 11, 14, 16, 19, 20, 48, 50, 51, 52, 94, 107, 112, 146, 153, 157], "valu": [0, 1, 2, 4, 5, 8, 11, 13, 14, 15, 16, 19, 20, 21, 23, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 52, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 77, 79, 81, 82, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 147, 148, 150, 153, 154, 157, 158], "item": [0, 1, 13, 19, 26, 102, 150, 151, 152, 158], "all": [0, 1, 2, 3, 5, 7, 9, 11, 14, 16, 17, 19, 21, 22, 25, 27, 28, 30, 33, 34, 35, 37, 38, 40, 41, 43, 46, 48, 54, 60, 64, 68, 69, 71, 77, 78, 79, 83, 84, 86, 87, 88, 90, 91, 92, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 121, 123, 125, 126, 127, 128, 129, 131, 137, 144, 146, 147, 148, 150, 151, 153, 154, 156, 157, 158], "have": [0, 1, 2, 3, 4, 8, 9, 10, 11, 16, 17, 19, 21, 23, 27, 29, 33, 34, 37, 40, 41, 43, 45, 50, 51, 53, 64, 68, 71, 75, 77, 79, 81, 84, 86, 87, 88, 90, 92, 94, 98, 105, 106, 107, 108, 111, 112, 113, 114, 117, 118, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 137, 140, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158], "map": [0, 11, 17, 22, 38, 68, 79, 90, 94, 111, 131, 137, 150, 154, 158], "attribut": [0, 1, 2, 3, 5, 8, 11, 17, 19, 79, 107, 110, 114], "give": [0, 16, 34, 41, 42, 46, 87, 92, 98, 110, 121, 126, 156], "mappingproxytyp": 0, "object": [0, 1, 2, 3, 4, 5, 8, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 124, 127, 129, 131, 132, 137, 146, 147, 148, 151, 154], "wrap": [0, 4, 6, 14, 21, 24, 33, 41, 71, 77, 86, 88, 89, 107, 111], "origin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dictionari": [0, 7, 11, 14, 21, 22, 24, 78, 94, 104, 110, 112, 115, 146, 150, 153, 158], "function": [0, 1, 2, 3, 4, 5, 8, 9, 11, 16, 19, 27, 33, 34, 38, 39, 41, 43, 44, 65, 71, 72, 75, 77, 78, 80, 87, 88, 90, 92, 97, 98, 99, 101, 112, 114, 118, 123, 126, 129, 131, 133, 136, 137, 138, 142, 146, 148, 150, 152, 153, 154, 155, 158], "an": [0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 14, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158], "strict": 0, "flag": [0, 2, 10, 14, 16, 19, 61, 62, 63, 64, 68, 70, 76, 81, 82, 84, 103, 105, 106, 112, 133, 134, 136, 139, 140, 141, 142, 143, 145, 150, 153, 154, 156], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 19, 20, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 146, 147, 148, 149, 151, 152, 153, 154, 157, 158], "iter": [0, 1, 2, 4, 9, 10, 11, 13, 17, 19, 77, 84, 105, 151, 153, 158], "equal": [0, 1, 14, 30, 64, 66, 68, 70, 77, 79, 81, 102, 134, 139], "builtin": [0, 7, 8, 11, 27, 28, 106, 110, 148], "extens": [0, 1, 5, 14, 23, 27, 28, 41, 105, 107, 110, 126, 146, 148, 152], "take": [0, 6, 7, 9, 14, 16, 28, 31, 33, 38, 40, 42, 43, 46, 51, 53, 59, 64, 68, 71, 77, 78, 79, 86, 87, 88, 95, 97, 99, 101, 103, 107, 110, 111, 123, 126, 129, 137, 146, 150, 153, 154, 158], "argument": [0, 1, 2, 3, 4, 5, 8, 11, 14, 15, 16, 17, 19, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 68, 71, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 120, 126, 132, 133, 134, 135, 141, 142, 144, 146, 147, 150, 151, 153, 155, 156, 158], "longer": [0, 1, 4, 5, 14, 25, 33, 43, 68, 76, 88, 111, 135, 157, 158], "accept": [0, 1, 2, 4, 9, 11, 14, 16, 33, 43, 48, 51, 68, 71, 74, 78, 88, 90, 106, 107, 111, 144, 146, 150, 153], "decim": [0, 4, 53], "fraction": [0, 1, 4, 37, 45, 111], "convert": [0, 2, 5, 6, 11, 15, 17, 26, 29, 31, 33, 38, 41, 45, 52, 68, 70, 71, 74, 88, 94, 104, 106, 111, 126, 138, 146, 148, 158], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 11, 14, 16, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 61, 62, 63, 64, 68, 79, 84, 86, 87, 88, 90, 92, 96, 98, 99, 102, 103, 106, 107, 108, 110, 111, 114, 115, 117, 118, 121, 126, 128, 131, 138, 146, 147, 148, 150, 151, 153, 154, 156, 158], "loss": [0, 79, 112, 150], "e": [0, 2, 6, 7, 11, 15, 16, 18, 21, 22, 23, 27, 28, 30, 35, 37, 45, 48, 51, 61, 62, 63, 64, 68, 73, 74, 76, 79, 83, 85, 86, 88, 91, 98, 103, 105, 106, 107, 109, 110, 111, 112, 118, 121, 131, 133, 134, 141, 146, 147, 148, 151, 153, 155, 156, 157, 158], "g": [0, 2, 6, 7, 16, 21, 24, 27, 28, 35, 36, 48, 61, 62, 63, 64, 66, 68, 69, 70, 73, 74, 76, 79, 81, 82, 85, 88, 91, 94, 103, 106, 107, 110, 111, 112, 131, 133, 134, 146, 147, 148, 151, 153, 155, 156, 158], "__int__": [0, 4], "do": [0, 2, 6, 8, 10, 11, 27, 30, 32, 43, 46, 60, 61, 62, 63, 64, 65, 68, 70, 71, 74, 77, 79, 80, 81, 82, 90, 92, 102, 107, 111, 113, 116, 117, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 145, 146, 147, 150, 151, 153, 158], "__index__": [0, 4], "If": [0, 6, 9, 13, 14, 15, 16, 20, 21, 23, 24, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 51, 52, 53, 60, 61, 62, 63, 64, 65, 68, 71, 72, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 125, 126, 128, 129, 130, 131, 134, 137, 141, 146, 147, 150, 151, 153, 154, 155, 156, 157, 158], "__ipow__": 0, "notimpl": 0, "oper": [0, 1, 2, 4, 5, 7, 8, 11, 16, 20, 26, 27, 28, 30, 33, 35, 38, 42, 46, 68, 77, 79, 86, 87, 88, 102, 103, 105, 106, 111, 112, 114, 117, 121, 127, 134, 138, 139, 142, 147, 148, 150, 156, 158], "correctli": [0, 2, 29, 30, 44], "fall": [0, 38, 68, 90, 98, 111, 146], "back": [0, 21, 68, 69, 75, 77, 78, 79, 98, 111, 115, 118, 121, 126, 128, 147, 150, 153, 157], "__pow__": 0, "__rpow__": 0, "expect": [0, 16, 30, 37, 68, 71, 74, 77, 111, 136, 150], "assign": [0, 4, 8, 11, 40, 68, 83, 88, 94, 112, 118, 137, 146, 150], "express": [0, 1, 2, 3, 4, 5, 8, 10, 11, 27, 46, 106, 111, 116, 126, 153], "unparenthes": [0, 5], "within": [0, 4, 14, 16, 33, 42, 46, 48, 68, 74, 77, 79, 86, 87, 88, 92, 98, 99, 112, 114, 117, 137, 151, 154, 157], "set": [0, 1, 2, 3, 11, 14, 16, 17, 19, 21, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 115, 117, 118, 121, 126, 128, 129, 134, 136, 137, 138, 139, 141, 142, 143, 144, 148, 150, 151, 153, 154, 155, 156, 157, 158], "liter": [0, 2, 4, 8, 11, 68, 103, 112, 146], "comprehens": [0, 2, 4, 5, 8, 11, 154], "well": [0, 16, 23, 27, 33, 88, 106, 108, 112, 126, 127, 148, 151, 155], "sequenc": [0, 2, 19, 102, 103, 106, 137, 153], "index": [0, 1, 2, 6, 11, 13, 16, 19, 30, 33, 65, 68, 73, 75, 84, 88, 94, 103, 108, 110, 114, 132, 150, 155], "slice": [0, 11, 13, 17, 158], "__builtins__": 0, "which": [0, 1, 2, 3, 4, 6, 8, 11, 14, 16, 19, 20, 21, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 48, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 134, 136, 137, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "i": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "look": [0, 11, 27, 41, 68, 77, 110, 111, 117, 121, 123, 126, 128, 153, 154, 155, 157, 158], "symbol": [0, 7, 19, 22, 68, 106, 146, 153], "when": [0, 1, 2, 3, 4, 5, 6, 8, 11, 14, 16, 19, 21, 23, 24, 27, 28, 33, 34, 35, 38, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 92, 94, 98, 99, 101, 102, 103, 106, 107, 109, 112, 114, 115, 117, 121, 124, 126, 127, 129, 131, 134, 136, 137, 139, 146, 147, 148, 150, 151, 153, 154, 155, 157, 158], "execut": [0, 9, 11, 30, 42, 46, 47, 64, 71, 77, 78, 79, 86, 95, 108, 110, 117, 126, 127, 128, 130, 131, 135, 136, 137, 139, 141, 142, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "instead": [0, 1, 5, 6, 8, 11, 14, 21, 24, 27, 30, 38, 40, 41, 48, 52, 61, 62, 63, 64, 68, 71, 72, 74, 79, 81, 86, 96, 103, 105, 106, 107, 110, 111, 112, 115, 117, 121, 126, 130, 132, 141, 147, 148, 151, 153, 155, 156, 158], "__globals__": [0, 7], "initi": [0, 2, 4, 13, 16, 19, 20, 23, 28, 35, 38, 39, 50, 53, 57, 58, 59, 61, 62, 63, 64, 67, 68, 79, 80, 81, 82, 83, 89, 98, 107, 110, 129, 138, 141, 146, 150, 154, 157], "from": [0, 1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 16, 17, 19, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 57, 58, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 126, 128, 131, 132, 134, 136, 137, 138, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "exist": [0, 4, 11, 16, 20, 22, 25, 31, 33, 34, 40, 41, 46, 77, 86, 99, 101, 107, 110, 114, 121, 126, 127, 146, 151, 152, 153, 154, 156, 157, 158], "els": [0, 33, 46, 47, 71, 88, 101, 106, 110, 126, 128, 134], "current": [0, 1, 2, 3, 7, 8, 14, 16, 17, 21, 23, 25, 28, 30, 35, 36, 37, 38, 39, 46, 48, 50, 51, 52, 64, 65, 68, 71, 79, 84, 86, 92, 94, 95, 97, 98, 107, 110, 111, 112, 114, 117, 118, 121, 126, 127, 137, 142, 146, 150, 151, 152, 153, 156, 158], "two": [0, 1, 4, 5, 7, 11, 14, 16, 30, 33, 37, 41, 45, 48, 52, 53, 60, 64, 68, 78, 79, 81, 83, 86, 88, 99, 111, 114, 115, 121, 124, 126, 131, 134, 135, 136, 137, 141, 146, 150, 154, 155, 157, 158], "aiter": 0, "anext": 0, "been": [0, 1, 2, 4, 5, 16, 23, 27, 33, 43, 51, 68, 75, 79, 84, 88, 90, 126, 131, 146, 148, 151, 153, 155, 157, 158], "ad": [0, 1, 2, 3, 4, 5, 7, 11, 16, 19, 21, 28, 43, 65, 66, 68, 70, 71, 79, 95, 108, 110, 114, 128, 131, 134, 136, 140, 145, 147, 150, 152, 153, 155, 158], "provid": [0, 1, 2, 11, 13, 14, 16, 18, 21, 22, 24, 25, 27, 28, 31, 32, 33, 34, 36, 37, 38, 45, 46, 47, 48, 49, 51, 52, 59, 68, 72, 84, 86, 88, 92, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 118, 126, 134, 136, 138, 139, 142, 146, 147, 148, 150, 152, 153, 154, 156, 157, 158], "asynchron": [0, 2, 11, 27, 28, 50, 105, 123, 148], "counterpart": 0, "next": [0, 5, 7, 11, 14, 17, 37, 68, 77, 79, 99, 110, 119, 121, 126, 129, 131, 134, 146, 150, 152, 153, 154, 157], "respect": [0, 16, 34, 37, 38, 40, 68, 71, 79, 86, 87, 88, 92, 94, 96, 112, 133, 138, 149, 151], "static": [0, 16, 35, 48, 51, 114, 137, 155], "staticmethod": [0, 11, 17, 137], "class": [0, 1, 2, 3, 4, 6, 8, 11, 17, 25, 27, 65, 67, 80, 84, 103, 111, 112, 114, 118, 123, 124, 147, 148, 150, 152, 154, 158], "classmethod": [0, 11, 17, 20, 90, 94], "inherit": [0, 4, 8, 11, 27], "__module__": [0, 2, 8, 11], "__name__": [0, 7, 157], "__qualname__": 0, "__doc__": 0, "__annotations__": 0, "__wrapped__": 0, "moreov": 0, "callabl": [0, 11, 17, 38, 42, 71, 110], "regular": [0, 1, 2, 4, 6, 11, 27, 84, 124, 126, 153, 157], "annot": [0, 2, 3, 5], "complex": [0, 2, 4, 7, 11, 17, 27, 41, 71, 112, 127, 131, 146, 148], "target": [0, 11, 25, 34, 53, 83, 112, 126, 139, 148, 153, 155, 158], "everyth": [0, 44, 68, 78, 126, 127, 128, 131], "besid": 0, "simpl": [0, 11, 27, 41, 68, 72, 77, 91, 127, 131, 137, 138, 146, 147, 150, 155], "name": [0, 2, 3, 4, 5, 8, 11, 16, 17, 19, 27, 28, 36, 38, 46, 48, 49, 50, 52, 67, 68, 71, 77, 78, 83, 84, 85, 90, 94, 98, 103, 104, 106, 107, 108, 110, 111, 112, 114, 126, 128, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158], "526": [0, 2], "caus": [0, 6, 7, 9, 10, 30, 46, 64, 68, 81, 98, 99, 120, 132, 135, 137, 139, 150, 158], "ani": [0, 5, 6, 9, 11, 14, 16, 17, 19, 21, 24, 25, 30, 32, 33, 34, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 54, 57, 58, 68, 70, 71, 74, 77, 78, 79, 84, 86, 87, 88, 90, 92, 94, 96, 98, 99, 101, 102, 103, 105, 107, 111, 114, 116, 121, 126, 128, 129, 130, 131, 132, 135, 136, 137, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158], "runtim": [0, 1, 4, 6, 11, 46, 146, 148, 154, 155, 158], "effect": [0, 7, 23, 25, 46, 53, 68, 79, 94, 108, 112, 126, 129, 138, 148], "__future__": 0, "lazi": 0, "creat": [0, 1, 11, 13, 14, 16, 19, 25, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 57, 58, 59, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 112, 114, 117, 118, 120, 121, 123, 124, 125, 126, 129, 132, 135, 146, 147, 150, 153, 156, 157, 158], "empti": [0, 1, 3, 5, 13, 14, 16, 19, 26, 28, 33, 35, 68, 73, 77, 88, 103, 105, 110, 126, 146], "demand": [0, 71, 146], "store": [0, 9, 11, 16, 19, 26, 33, 34, 38, 43, 46, 64, 68, 71, 79, 81, 87, 88, 91, 99, 101, 106, 109, 110, 114, 117, 121, 126, 131, 135, 136, 137, 138, 139, 146, 147, 148, 150, 154, 157, 158], "__dict__": [0, 13], "backward": [0, 84, 86, 147], "compat": [0, 6, 9, 10, 11, 16, 17, 19, 27, 68, 78, 84, 86, 105, 106, 110, 111, 114, 147, 148], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "best": [0, 5, 27, 30, 46, 66, 68, 70, 78, 79, 126, 128, 146, 149, 150, 158], "practic": [0, 11, 149], "work": [0, 1, 2, 3, 7, 8, 9, 11, 13, 16, 18, 21, 24, 30, 38, 41, 45, 48, 51, 52, 64, 68, 71, 78, 79, 81, 98, 101, 102, 106, 111, 112, 114, 115, 117, 118, 121, 126, 127, 128, 129, 130, 131, 137, 141, 146, 148, 149, 150, 152, 153, 156, 158], "consist": [0, 5, 33, 34, 35, 40, 43, 88, 92, 98, 99, 106, 112, 148, 150, 152, 154], "yield": [0, 4, 7, 84, 105], "await": [0, 1, 3, 14, 35, 150], "forbidden": 0, "under": [0, 16, 27, 46, 65, 69, 77, 78, 80, 114, 121, 126, 129, 146], "due": [0, 1, 4, 5, 16, 23, 27, 33, 37, 43, 52, 68, 88, 103, 106, 108, 110, 121, 126, 148], "side": [0, 2, 11, 19, 28, 30, 68, 77, 103, 106, 107, 108, 121, 153], "usag": [0, 6, 7, 11, 16, 21, 22, 25, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 44, 46, 47, 49, 50, 51, 52, 61, 62, 63, 64, 66, 67, 68, 70, 79, 81, 82, 83, 87, 88, 89, 94, 95, 96, 97, 98, 105, 111, 112, 115, 118, 146, 150, 153, 156, 158], "unbound": 0, "super": [0, 2, 6, 8, 11, 17, 126], "might": [0, 16, 38, 39, 48, 68, 77, 79, 98, 114, 121, 126, 127, 131, 146, 147, 150, 151, 153, 155], "alter": [0, 150], "process": [0, 4, 5, 16, 30, 32, 47, 53, 64, 68, 71, 72, 73, 74, 75, 77, 79, 87, 105, 106, 111, 114, 126, 127, 128, 134, 137, 139, 142, 146, 148, 150, 151, 158], "tabl": [0, 11, 33, 61, 62, 63, 64, 68, 69, 70, 81, 82, 83, 88, 89, 91, 108, 146, 147], "render": [0, 61, 62, 63, 64, 68, 70, 81, 82], "effectless": 0, "hash": [0, 2, 11, 17, 27, 146, 153, 154], "nan": [0, 1, 2], "both": [0, 6, 7, 9, 13, 14, 15, 16, 21, 30, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 52, 68, 77, 79, 83, 88, 89, 92, 95, 97, 98, 99, 106, 107, 111, 112, 114, 117, 126, 146, 147, 148, 150, 152], "float": [0, 2, 4, 5, 8, 11, 13, 14, 17, 45, 52, 53, 61, 62, 63, 64, 68, 69, 71, 72, 73, 74, 75, 79, 81, 82, 87, 98, 106, 109, 111, 112, 120, 137, 138, 146], "depend": [0, 7, 13, 16, 21, 22, 25, 28, 30, 33, 34, 38, 39, 40, 41, 42, 43, 46, 48, 51, 52, 68, 71, 74, 77, 83, 87, 88, 92, 94, 103, 105, 106, 107, 108, 111, 112, 114, 123, 126, 134, 146, 150, 151, 155, 156], "ident": [0, 16, 68, 133, 136, 141, 148, 149], "formerli": [0, 5], "thei": [0, 7, 9, 16, 17, 19, 27, 28, 31, 32, 34, 38, 40, 46, 51, 66, 68, 70, 72, 79, 84, 92, 94, 98, 105, 106, 107, 110, 111, 114, 117, 137, 142, 146, 147, 150, 151, 153, 154], "alwai": [0, 1, 2, 5, 7, 21, 24, 26, 27, 32, 33, 38, 46, 48, 68, 77, 79, 84, 86, 88, 96, 103, 106, 111, 112, 118, 121, 136, 147, 148, 150], "even": [0, 2, 27, 28, 34, 41, 43, 68, 70, 79, 99, 105, 106, 111, 112, 114, 118, 127, 131, 146, 150, 153, 156], "though": [0, 4, 79, 106, 111, 112], "one": [0, 1, 2, 6, 8, 11, 14, 16, 28, 30, 33, 34, 37, 38, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 60, 61, 62, 63, 65, 68, 77, 79, 83, 84, 86, 88, 90, 94, 95, 98, 99, 101, 102, 103, 105, 107, 110, 112, 114, 117, 118, 119, 123, 124, 126, 128, 129, 131, 133, 134, 136, 137, 139, 141, 146, 148, 150, 151, 153, 154, 155, 157, 158], "anoth": [0, 2, 6, 11, 16, 21, 27, 28, 30, 34, 46, 51, 68, 76, 77, 79, 99, 108, 110, 111, 117, 126, 137, 146, 150, 151, 153], "potenti": [0, 1, 35, 77, 146, 150], "quadrat": 0, "behavior": [0, 4, 83, 117, 126, 153], "excess": [0, 23, 87], "collis": [0, 7, 131], "contain": [0, 2, 3, 5, 8, 11, 13, 14, 16, 27, 28, 30, 33, 34, 35, 40, 43, 46, 48, 51, 64, 67, 68, 72, 73, 74, 75, 77, 81, 84, 86, 88, 89, 94, 99, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 131, 134, 141, 142, 144, 146, 148, 151, 153, 154], "multipl": [0, 1, 4, 5, 8, 11, 16, 38, 40, 43, 46, 48, 52, 62, 64, 68, 71, 79, 81, 86, 90, 91, 94, 103, 105, 106, 112, 114, 117, 126, 134, 136, 146, 150, 153, 157], "A": [0, 1, 2, 3, 4, 6, 7, 10, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 43, 46, 47, 48, 51, 61, 62, 63, 64, 68, 70, 71, 73, 75, 77, 79, 81, 82, 84, 86, 88, 89, 90, 92, 94, 99, 103, 106, 107, 110, 112, 114, 115, 116, 121, 126, 127, 141, 146, 147, 148, 150, 151, 153, 154, 155, 157, 158], "syntaxerror": [0, 8, 11, 17], "nameerror": [0, 7, 11, 17], "rais": [0, 1, 2, 5, 6, 8, 9, 11, 14, 16, 19, 26, 28, 29, 34, 37, 42, 43, 46, 48, 51, 68, 77, 98, 99, 101, 102, 105, 106, 110, 111, 114, 146, 150, 153, 154, 157, 158], "delet": [0, 11, 17, 30, 71, 104], "__debug__": [0, 46], "constant": [0, 1, 2, 11, 16, 46, 48, 105, 112, 129, 146, 151, 158], "except": [0, 1, 2, 4, 7, 8, 10, 11, 14, 22, 27, 28, 33, 34, 38, 42, 43, 46, 51, 60, 65, 77, 79, 88, 90, 94, 98, 99, 101, 103, 105, 106, 110, 111, 112, 114, 133, 138, 140, 141, 142, 145, 146, 151, 153, 157], "end_lineno": 0, "end_offset": 0, "none": [0, 2, 7, 9, 11, 14, 16, 29, 33, 34, 35, 36, 38, 39, 40, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 96, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 114, 147, 150, 151, 152, 154], "determin": [0, 34, 40, 44, 68, 78, 88, 92, 94, 98, 107, 111, 115, 126, 128, 137, 139, 142, 150, 151, 154, 157, 158], "built": [0, 1, 2, 3, 4, 5, 11, 16, 24, 34, 46, 48, 68, 71, 86, 110, 115, 121, 126, 127, 131, 146, 148, 150, 153, 158], "asyncio": [0, 3, 4, 5, 11, 27, 35], "miss": [0, 4, 27, 126], "connect_accepted_socket": 0, "arrai": [0, 2, 7, 8, 11, 33, 35, 39, 41, 53, 64, 67, 68, 74, 79, 81, 87, 88, 89, 94, 112, 114, 135, 136, 137, 146, 150], "start": [0, 3, 4, 11, 14, 16, 22, 27, 30, 34, 39, 44, 46, 51, 61, 62, 63, 64, 68, 77, 78, 79, 81, 82, 83, 86, 89, 91, 92, 95, 102, 103, 109, 110, 111, 112, 114, 118, 128, 130, 131, 137, 147, 150, 151, 153, 155, 156, 157, 158], "stop": [0, 11, 14, 16, 30, 33, 34, 42, 43, 44, 51, 53, 68, 79, 83, 86, 88, 95, 98, 99, 102, 103, 111, 126, 153, 156], "gc": [0, 3, 4, 5, 7, 11, 27, 158], "audit": [0, 4], "hook": [0, 1, 4], "get_object": [0, 4], "get_referr": 0, "get_refer": 0, "hashlib": [0, 2, 11, 27], "preliminari": 0, "support": [0, 1, 2, 3, 4, 5, 8, 11, 13, 16, 17, 19, 20, 21, 24, 27, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 48, 50, 51, 52, 55, 61, 62, 68, 71, 86, 87, 88, 92, 96, 98, 99, 102, 103, 106, 107, 109, 110, 112, 114, 115, 118, 121, 124, 126, 130, 131, 136, 137, 138, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158], "pure": [0, 28, 64, 65, 68, 77, 80, 148], "fallback": [0, 157], "pbkdf2_hmac": 0, "In": [0, 3, 4, 6, 14, 16, 17, 27, 28, 30, 33, 34, 37, 40, 41, 43, 46, 47, 52, 53, 68, 77, 79, 87, 88, 91, 98, 99, 102, 105, 106, 108, 111, 112, 114, 118, 121, 126, 130, 133, 137, 138, 140, 141, 145, 146, 150, 151, 152, 153, 157, 158], "futur": [0, 4, 14, 27, 39, 68, 91, 106, 120], "pbkdf2": 0, "hmac": [0, 151], "avail": [0, 1, 2, 4, 5, 11, 16, 17, 21, 23, 24, 25, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 41, 46, 48, 50, 51, 52, 64, 68, 71, 79, 84, 85, 86, 88, 89, 90, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 115, 117, 123, 126, 131, 138, 146, 147, 148, 151, 152, 153, 155, 156, 157], "o": [0, 1, 2, 5, 8, 11, 16, 19, 22, 27, 28, 30, 51, 61, 62, 63, 64, 79, 82, 86, 87, 105, 110, 111, 112, 114, 118, 119, 120, 122, 126, 129, 131, 147, 148, 150, 153, 155, 158], "cpu_count": 0, "vxwork": 0, "rto": [0, 110, 111], "eventfd": 0, "relat": [0, 11, 27, 45, 68, 84, 134, 148, 150], "helper": [0, 28, 129], "eventfd2": 0, "syscal": [0, 1, 2], "linux": [0, 1, 2, 5, 11, 47, 110, 117, 121, 122, 126, 127, 148, 153], "splice": 0, "move": [0, 11, 65, 68, 77, 84, 97, 118, 120, 121, 126, 131, 138, 139, 152], "data": [0, 1, 3, 4, 6, 9, 11, 14, 15, 16, 20, 21, 24, 25, 27, 28, 29, 30, 33, 34, 35, 39, 40, 43, 46, 47, 48, 49, 50, 51, 56, 66, 68, 70, 71, 74, 77, 78, 79, 83, 84, 86, 87, 88, 89, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 115, 118, 121, 123, 127, 131, 132, 134, 138, 146, 147, 148, 150, 154, 157, 158], "between": [0, 2, 4, 7, 8, 11, 15, 16, 29, 30, 34, 35, 37, 38, 41, 43, 46, 64, 68, 70, 71, 77, 79, 81, 82, 83, 86, 87, 88, 89, 92, 93, 97, 98, 99, 102, 111, 113, 115, 118, 119, 120, 126, 132, 137, 146, 149, 154], "file": [0, 1, 2, 5, 6, 7, 9, 10, 11, 21, 24, 27, 28, 29, 41, 51, 66, 68, 70, 71, 83, 84, 86, 91, 101, 104, 106, 107, 108, 110, 112, 114, 115, 116, 117, 121, 122, 128, 130, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158], "descriptor": [0, 1, 5, 11, 16, 86], "without": [0, 4, 16, 23, 30, 33, 34, 43, 48, 49, 68, 71, 77, 79, 82, 86, 88, 89, 110, 111, 112, 114, 116, 117, 123, 124, 126, 128, 131, 134, 147, 148, 150, 152, 153, 156], "copi": [0, 1, 2, 3, 11, 16, 24, 33, 68, 77, 79, 86, 112, 115, 116, 121, 126, 142, 146, 148, 151, 152, 153, 155, 156, 157, 158], "kernel": [0, 2, 68, 126], "address": [0, 1, 2, 11, 14, 16, 30, 34, 48, 49, 51, 52, 60, 64, 67, 77, 79, 81, 83, 92, 94, 108, 112, 118, 136, 137, 139, 140, 145, 146, 148, 153, 156, 158], "space": [0, 3, 7, 8, 9, 11, 16, 19, 43, 46, 64, 68, 71, 79, 81, 108, 112, 121, 126, 131, 132, 146, 148, 153, 157], "user": [0, 8, 11, 16, 27, 28, 30, 35, 39, 40, 41, 50, 84, 94, 99, 106, 111, 114, 126, 128, 146, 148, 150, 153, 155, 156], "where": [0, 4, 8, 11, 13, 16, 22, 28, 30, 39, 47, 48, 52, 57, 58, 68, 75, 79, 85, 86, 87, 88, 89, 90, 106, 112, 114, 115, 126, 130, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 153, 157, 158], "must": [0, 2, 3, 14, 16, 17, 19, 21, 24, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 46, 48, 50, 51, 52, 53, 59, 64, 66, 68, 70, 75, 77, 79, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 101, 103, 105, 106, 107, 110, 111, 114, 115, 117, 118, 135, 136, 137, 138, 139, 141, 146, 147, 150, 151, 153, 154, 155, 158], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "pipe": 0, "o_evtonli": 0, "o_fsync": 0, "o_symlink": 0, "o_nofollow_ani": 0, "maco": [0, 148], "platform": [0, 5, 11, 27, 34, 37, 40, 83, 84, 92, 105, 110, 136, 146, 150, 158], "freedesktop_os_releas": 0, "retriev": [0, 48, 49, 50, 52, 85], "system": [0, 1, 2, 7, 11, 27, 28, 30, 34, 38, 39, 40, 44, 68, 76, 79, 83, 85, 86, 91, 106, 111, 112, 117, 121, 122, 123, 126, 127, 128, 130, 147, 148, 150, 153, 154, 156], "identif": 0, "freedesktop": 0, "org": [0, 6, 48, 106, 111, 112, 148, 149, 153, 155], "socket": [0, 1, 2, 5, 9, 11, 14, 16, 21, 24, 27, 28, 48, 49, 50, 51, 52, 107, 112, 115], "timeout": [0, 1, 5, 14, 16, 30, 33, 34, 43, 44, 51, 60, 64, 72, 77, 79, 81, 83, 88, 92, 95, 96, 99, 100, 101, 105, 106, 111, 113], "alia": [0, 14, 68, 70, 106, 112, 153], "timeouterror": [0, 14, 111], "mptcp": 0, "ipproto_mptcp": 0, "ip_recvto": 0, "receiv": [0, 1, 4, 14, 16, 33, 34, 35, 40, 43, 51, 60, 64, 65, 68, 71, 77, 79, 83, 88, 92, 96, 98, 99, 100, 101, 106, 107, 108, 113, 118, 123, 125, 132, 137, 148, 150, 157], "servic": [0, 11, 16, 27, 47, 48, 51, 83, 106, 150, 158], "ToS": 0, "dscp": 0, "ecn": 0, "field": [0, 19, 39, 48, 64, 68, 79, 81, 84, 112, 154], "ssl": [0, 1, 2, 5, 11, 14, 27], "op_ignore_unexpected_eof": 0, "result": [0, 1, 4, 8, 9, 11, 16, 20, 27, 29, 37, 38, 48, 53, 57, 58, 61, 62, 63, 64, 66, 68, 70, 72, 75, 77, 78, 79, 81, 82, 86, 87, 99, 103, 106, 108, 111, 118, 131, 133, 134, 136, 137, 139, 146, 150, 151, 153, 157, 158], "deprecationwarn": [0, 3], "sslcontext": [0, 2, 11, 14], "op_no_sslv2": 0, "op_no_sslv3": 0, "default": [0, 1, 2, 4, 5, 14, 16, 21, 24, 29, 31, 32, 33, 34, 39, 46, 48, 49, 51, 57, 61, 62, 63, 64, 68, 69, 70, 72, 78, 79, 81, 82, 83, 86, 87, 88, 89, 91, 98, 101, 103, 105, 106, 110, 112, 114, 115, 118, 126, 130, 132, 146, 147, 150, 151, 153, 155, 156, 158], "therefor": [0, 21, 37, 46, 89, 148, 150], "cannot": [0, 2, 6, 8, 10, 11, 13, 14, 16, 23, 25, 27, 34, 40, 44, 55, 68, 70, 117, 128, 137, 146, 150, 153, 158], "warn": [0, 27, 33, 88], "about": [0, 1, 11, 14, 16, 21, 33, 34, 37, 40, 46, 52, 60, 68, 79, 84, 86, 88, 92, 94, 95, 103, 108, 110, 112, 115, 118, 121, 123, 124, 126, 127, 129, 146, 150, 153], "again": [0, 16, 37, 39, 41, 43, 46, 77, 79, 105, 108, 111, 112, 119, 121, 126, 131, 146, 153, 157, 158], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "secur": [0, 2, 5, 16, 25, 48, 50, 51, 52, 107, 153], "cipher": [0, 1, 2, 11, 27, 107], "forward": [0, 86, 126, 127, 128], "secreci": 0, "sha": [0, 2], "mac": [0, 11, 16, 30, 48, 49, 51, 52, 121, 122, 126], "disabl": [0, 11, 23, 30, 33, 37, 42, 46, 52, 60, 65, 71, 76, 79, 80, 83, 86, 88, 89, 90, 95, 98, 99, 101, 108, 110, 112, 114, 126, 142, 150, 153], "level": [0, 2, 11, 21, 27, 28, 30, 33, 34, 35, 38, 40, 41, 43, 46, 48, 49, 52, 61, 62, 63, 64, 68, 70, 72, 77, 79, 81, 82, 88, 91, 92, 94, 96, 99, 103, 106, 108, 111, 115, 118, 148, 149, 153, 154, 157], "2": [0, 1, 2, 6, 7, 9, 10, 11, 13, 14, 16, 19, 20, 21, 30, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 61, 62, 63, 64, 67, 68, 70, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 121, 124, 126, 135, 137, 138, 139, 146, 149, 150, 153, 154, 155, 156, 157, 158], "prohibit": [0, 5, 28], "weak": [0, 38], "rsa": 0, "dh": 0, "ecc": 0, "less": [0, 1, 19, 21, 23, 28, 33, 46, 53, 61, 62, 63, 64, 68, 70, 77, 81, 82, 86, 88, 89, 102, 106, 110, 126, 139, 148, 157], "than": [0, 1, 3, 4, 5, 9, 14, 16, 21, 23, 27, 33, 34, 37, 38, 40, 41, 43, 46, 48, 53, 61, 62, 63, 64, 68, 70, 71, 74, 76, 77, 79, 81, 82, 84, 86, 88, 89, 92, 102, 105, 106, 109, 110, 111, 115, 121, 126, 127, 133, 135, 137, 139, 146, 148, 150, 151, 155, 157, 158], "112": [0, 64], "bit": [0, 5, 6, 8, 11, 16, 30, 32, 33, 34, 35, 37, 40, 41, 43, 45, 53, 56, 57, 62, 64, 66, 68, 69, 77, 79, 80, 86, 87, 88, 89, 92, 95, 96, 99, 102, 108, 109, 110, 112, 115, 118, 119, 131, 133, 136, 137, 138, 139, 140, 141, 143, 145, 146, 154, 157, 158], "minimum": [0, 2, 16, 30, 31, 64, 68, 72, 81, 89, 97, 110, 114, 128, 146, 154], "protocol": [0, 1, 2, 4, 11, 16, 30, 33, 39, 41, 43, 46, 50, 52, 86, 88, 91, 99, 106, 107, 111, 112, 114, 147, 148, 153, 157, 158], "version": [0, 1, 2, 11, 27, 51, 68, 76, 84, 85, 91, 99, 103, 105, 108, 110, 121, 126, 138, 149, 151, 155, 156], "tl": [0, 2, 11, 27], "base": [0, 2, 3, 4, 5, 11, 16, 18, 21, 22, 28, 35, 37, 45, 48, 51, 53, 57, 61, 62, 63, 64, 68, 70, 71, 74, 77, 79, 81, 82, 86, 94, 107, 108, 112, 115, 131, 142, 146, 147, 148, 151, 153, 154], "hynek": 0, "schlawack": 0, "research": 0, "doe": [0, 5, 8, 11, 13, 14, 16, 21, 38, 43, 46, 48, 64, 68, 77, 78, 86, 87, 89, 92, 101, 106, 107, 111, 114, 117, 121, 128, 131, 143, 146, 150, 153, 154, 155, 156, 157, 158], "block": [0, 1, 2, 5, 11, 14, 16, 20, 21, 28, 30, 31, 32, 34, 35, 40, 43, 46, 47, 48, 51, 63, 64, 68, 72, 77, 79, 82, 83, 84, 86, 87, 91, 94, 101, 106, 107, 112, 117, 131, 132, 135, 146, 150, 158], "them": [0, 14, 16, 28, 30, 34, 38, 40, 41, 48, 68, 71, 72, 76, 79, 84, 92, 101, 106, 111, 112, 114, 126, 134, 137, 141, 144, 148, 149, 150, 151, 152, 153, 158], "activ": [0, 11, 16, 33, 38, 41, 46, 48, 49, 51, 52, 77, 78, 79, 86, 87, 88, 98, 99, 105, 108, 118, 150, 153], "howev": [0, 1, 9, 13, 16, 27, 30, 46, 64, 68, 71, 74, 77, 79, 81, 83, 106, 111, 120, 121, 126, 128, 131, 146, 147, 148, 150, 151, 153, 155, 158], "build": [0, 5, 6, 7, 9, 10, 11, 16, 21, 27, 48, 71, 84, 110, 114, 127, 128, 131, 146, 147, 152, 154, 155], "distro": 0, "configur": [0, 2, 4, 11, 27, 30, 31, 32, 33, 34, 38, 41, 42, 43, 50, 51, 52, 86, 87, 88, 91, 92, 94, 98, 99, 101, 102, 110, 114, 115, 126, 147, 152, 153], "vendor": [0, 86], "patch": [0, 11, 51, 68, 76, 104], "suit": [0, 2, 107], "mai": [0, 8, 11, 14, 16, 21, 25, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 51, 52, 53, 60, 61, 62, 63, 64, 65, 68, 71, 72, 76, 77, 78, 79, 81, 84, 86, 87, 92, 98, 99, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 117, 118, 121, 126, 127, 130, 133, 134, 136, 137, 141, 142, 146, 147, 148, 150, 153, 154, 157, 158], "prevent": [0, 6, 16, 23, 27, 43, 44, 46, 68, 79, 87, 121, 126, 128, 153, 158], "success": [0, 16, 47, 52, 77, 105, 114, 150], "handshak": [0, 1, 2, 107], "get_server_certif": 0, "heap": [0, 11, 23, 27, 30, 33, 46, 64, 68, 71, 77, 79, 81, 87, 88, 111, 131, 148, 150, 153, 158], "multi": [0, 41, 46, 68, 112], "phase": [0, 11, 18, 40, 68, 88, 96, 118], "verifi": [0, 44, 60, 121], "verify_x509_partial_chain": 0, "sy": [0, 1, 2, 3, 4, 5, 7, 8, 11, 27, 108, 154, 155], "orig_argv": 0, "list": [0, 1, 2, 3, 8, 11, 13, 14, 16, 17, 19, 26, 33, 34, 46, 48, 51, 52, 55, 64, 65, 68, 71, 72, 73, 75, 81, 84, 86, 88, 92, 100, 101, 102, 103, 104, 105, 106, 107, 110, 118, 125, 139, 146, 150, 151, 152, 153, 154, 156, 158], "command": [0, 5, 11, 77, 79, 108, 126, 130, 146, 148, 151, 157], "pass": [0, 1, 3, 4, 6, 7, 11, 14, 16, 25, 27, 30, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 86, 90, 92, 94, 96, 98, 101, 102, 103, 107, 108, 111, 112, 120, 124, 136, 142, 146, 150, 151, 156, 158], "stdlib_module_nam": 0, "_thread": [0, 11, 27], "interrupt_main": 0, "signal": [0, 4, 11, 28, 30, 33, 35, 38, 40, 43, 48, 51, 86, 88, 89, 96, 97, 98, 99, 108, 118, 131, 148, 158], "simul": [0, 150], "still": [0, 2, 16, 23, 27, 28, 30, 43, 46, 48, 62, 76, 87, 94, 103, 106, 110, 111, 115, 121, 126, 127, 128, 131, 146, 147, 148, 151, 154, 155, 156], "sigint": [0, 4], "note": [0, 1, 3, 4, 5, 11, 13, 14, 16, 20, 21, 24, 28, 30, 33, 34, 38, 44, 45, 46, 47, 48, 57, 58, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 77, 78, 79, 81, 82, 83, 86, 88, 90, 92, 96, 98, 99, 103, 105, 106, 107, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 126, 129, 132, 134, 136, 137, 141, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158], "discuss": [0, 42, 46, 111, 131, 146, 158], "issu": [0, 11, 16, 28, 68, 77, 86, 114, 117, 121, 126, 130, 135, 137, 139, 146, 147, 153, 158], "7847": 0, "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "cpython": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "implement": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "subset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "below": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "inform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "finalis": [1, 83], "group": [1, 2, 11, 103, 118, 148, 158], "impact": [1, 30, 150], "micropython": [1, 4, 5, 6, 9, 14, 16, 17, 21, 22, 23, 24, 25, 28, 30, 33, 35, 41, 42, 47, 48, 52, 64, 68, 71, 79, 81, 83, 84, 85, 86, 91, 98, 99, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 124, 126, 127, 130, 131, 132, 136, 138, 143, 147, 148, 155, 156], "448": 1, "addit": [1, 11, 15, 23, 27, 28, 31, 32, 33, 38, 40, 41, 43, 48, 52, 79, 88, 92, 94, 96, 98, 99, 111, 115, 118, 120, 126, 130, 134, 146, 147, 151, 153, 155, 157, 158], "unpack": [1, 4, 8, 11, 27, 77], "gener": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 21, 25, 27, 30, 37, 38, 43, 48, 52, 64, 68, 77, 78, 79, 86, 88, 89, 90, 92, 98, 106, 107, 108, 112, 119, 120, 121, 123, 124, 126, 127, 128, 130, 132, 136, 137, 142, 144, 146, 148, 151, 154, 156, 158], "partial": [1, 3, 121, 142, 150], "465": 1, "matrix": [1, 68], "complet": [1, 2, 3, 4, 5, 8, 11, 14, 16, 33, 64, 66, 68, 70, 77, 83, 88, 89, 98, 106, 107, 121, 123, 126, 131, 146, 150, 151, 154], "492": [1, 39], "coroutin": [1, 4, 5, 14, 150], "async": [1, 3, 4, 5, 14, 77, 150], "461": 1, "format": [1, 2, 3, 11, 13, 15, 21, 24, 29, 30, 35, 39, 48, 51, 64, 66, 68, 70, 74, 79, 81, 88, 95, 107, 109, 110, 111, 114, 115, 118, 121, 126, 129, 132, 135, 146, 147, 148, 150, 154, 158], "string": [1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 17, 19, 22, 28, 29, 30, 32, 36, 38, 43, 46, 48, 51, 52, 68, 71, 76, 77, 84, 85, 86, 94, 99, 103, 106, 107, 109, 110, 114, 120, 132, 148, 151, 153, 156, 157], "475": 1, "retri": [1, 112], "call": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 16, 23, 25, 30, 33, 34, 35, 38, 39, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 92, 94, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 118, 121, 124, 126, 129, 131, 132, 137, 138, 139, 146, 148, 150, 151, 157, 158], "fail": [1, 3, 7, 13, 16, 21, 46, 52, 77, 79, 106, 114, 115, 121, 130, 146, 147, 150, 154, 158], "eintr": 1, "479": 1, "stopiter": [1, 9, 11, 17], "handl": [1, 4, 5, 6, 7, 11, 41, 64, 68, 71, 77, 79, 81, 83, 87, 92, 103, 118, 131, 137, 139, 146, 150], "insid": [1, 7, 30, 42, 61, 62, 63, 64, 65, 68, 70, 77, 79, 81, 82, 91, 130, 131, 151], "471": 1, "scandir": [1, 2], "485": [1, 74], "math": [1, 2, 3, 4, 5, 11, 27, 89, 119], "isclos": 1, "test": [1, 3, 6, 7, 11, 47, 61, 62, 63, 68, 90, 111, 118, 121, 126, 134, 136, 139, 148, 150, 152, 153, 154, 156, 157, 158], "approxim": 1, "miscellan": [1, 4, 11, 138], "441": 1, "applic": [1, 7, 11, 16, 23, 25, 28, 35, 38, 41, 44, 53, 68, 72, 91, 106, 111, 126, 127, 128, 130, 139, 146, 147, 150, 151, 155, 158], "486": 1, "make": [1, 2, 6, 16, 19, 21, 34, 38, 39, 46, 50, 52, 63, 64, 66, 68, 70, 77, 78, 79, 81, 82, 85, 86, 87, 89, 107, 112, 117, 120, 121, 126, 127, 130, 131, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158], "launcher": [1, 121], "awar": 1, "virtual": [1, 11, 27, 30, 42, 61, 86, 91, 117, 126, 146, 147, 150], "environ": [1, 3, 7, 11, 128, 153, 156], "484": 1, "hint": [1, 5, 11, 61, 62, 63, 64, 68, 70, 81, 82, 138, 158], "advisori": 1, "488": [1, 68, 95], "elimin": [1, 29, 68, 146, 158], "pyo": 1, "489": 1, "redesign": 1, "load": [1, 2, 9, 11, 19, 21, 27, 29, 61, 62, 63, 68, 71, 83, 87, 89, 98, 107, 110, 126, 127, 137, 138, 148, 150, 151, 154, 156, 158], "namereplac": 1, "error": [1, 2, 5, 8, 11, 27, 28, 33, 45, 68, 77, 86, 88, 92, 98, 105, 106, 110, 121, 126, 139, 146, 150, 153, 157, 158], "handler": [1, 11, 14, 16, 30, 35, 38, 39, 42, 43, 46, 77, 98, 101, 108, 111, 149], "backslashreplac": 1, "decod": [1, 5, 11, 15, 27, 68, 78, 146], "translat": [1, 68, 106], "properti": [1, 8, 11, 16, 17, 28, 30, 48, 106, 112, 118, 148], "docstr": 1, "writabl": [1, 3, 7], "especi": [1, 89, 118, 158], "collect": [1, 2, 5, 7, 11, 23, 27, 75, 83, 106, 131, 155], "namedtupl": [1, 2, 11, 19], "circular": [1, 3, 11, 68, 89, 150], "involv": [1, 3, 121, 126, 127, 146, 158], "rel": [1, 4, 5, 64, 68, 108, 111, 112, 139, 148, 150, 151], "zipzap": 1, "ordereddict": [1, 11, 19], "c": [1, 3, 4, 5, 6, 7, 10, 22, 40, 46, 70, 77, 90, 101, 103, 108, 109, 112, 116, 118, 129, 134, 136, 138, 139, 146, 153, 154, 156, 157, 158], "100": [1, 16, 42, 46, 51, 54, 55, 57, 58, 61, 62, 63, 66, 67, 68, 70, 79, 87, 88, 89, 97, 98, 111, 121, 134, 146, 150, 158], "time": [1, 2, 3, 4, 5, 11, 14, 16, 21, 23, 27, 28, 30, 31, 33, 34, 35, 37, 42, 43, 46, 47, 48, 51, 52, 67, 68, 70, 71, 72, 78, 79, 83, 87, 88, 89, 90, 92, 96, 97, 98, 99, 105, 106, 107, 108, 114, 117, 121, 126, 129, 137, 146, 150, 151, 152, 153, 155, 157, 158], "faster": [1, 30, 68, 77, 79, 111, 126, 127, 131, 146, 148, 150, 155], "revers": [1, 2, 4, 11, 17, 63, 68, 69, 77, 79, 134, 141], "dequ": [1, 2, 11, 19], "insert": [1, 3, 4, 9, 121, 150], "produc": [1, 8, 28, 61, 62, 63, 64, 68, 70, 81, 82, 97, 111, 112, 126, 131, 133, 139, 146, 150, 157, 158], "updat": [1, 3, 4, 5, 11, 16, 25, 47, 51, 63, 66, 68, 70, 79, 82, 98, 105, 114, 117, 121, 125, 126, 129, 130, 139, 150, 151, 152, 153], "userstr": 1, "__getnewargs__": 1, "__rmod__": 1, "casefold": 1, "format_map": 1, "isprint": 1, "maketran": 1, "str": [1, 3, 8, 11, 13, 16, 17, 29, 36, 38, 66, 68, 70, 71, 72, 76, 137, 145, 146, 148, 158], "heapq": [1, 11, 27], "element": [1, 4, 9, 11, 13, 16, 26, 33, 68, 87, 88, 103, 105, 112, 137, 146, 158], "comparison": [1, 11, 16, 110, 138, 139, 146], "merg": [1, 68, 116], "custom": [1, 2, 11, 14, 71, 72, 79, 104, 110, 128, 155], "keyword": [1, 2, 3, 4, 8, 9, 11, 16, 24, 31, 32, 35, 42, 43, 48, 52, 79, 86, 92, 98, 107, 118, 126, 141, 146, 151], "io": [1, 6, 11, 16, 21, 24, 27, 46, 68, 84, 120, 122, 123, 148], "bufferediobas": 1, "readinto1": 1, "most": [1, 6, 7, 11, 16, 21, 27, 29, 30, 37, 40, 42, 43, 46, 48, 49, 50, 51, 52, 86, 87, 91, 96, 99, 101, 106, 111, 112, 121, 127, 131, 137, 138, 139, 146, 148, 149, 151, 152, 154, 155, 157, 158], "underli": [1, 11, 21, 24, 27, 28, 30, 31, 34, 36, 37, 40, 41, 44, 50, 68, 84, 86, 98, 107, 110, 111, 148, 150], "raw": [1, 11, 21, 30, 31, 68, 79, 97, 101, 103, 108, 115, 126, 147, 153, 156], "stream": [1, 11, 21, 24, 27, 29, 43, 46, 50, 53, 68, 76, 77, 78, 84, 99, 101, 106, 107, 110, 115, 126, 132, 146, 148, 158], "rawiobas": 1, "read": [1, 9, 11, 13, 14, 16, 21, 24, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 43, 46, 48, 61, 64, 65, 67, 68, 69, 79, 84, 86, 87, 92, 98, 99, 100, 101, 105, 106, 107, 108, 112, 114, 115, 117, 118, 119, 126, 127, 128, 131, 132, 146, 147, 148, 150, 153, 157, 158], "readinto": [1, 11, 14, 21, 24, 34, 35, 40, 43, 46, 84, 99, 101, 106, 118, 146, 148, 158], "json": [1, 2, 8, 11, 21, 24, 27, 77, 104, 146, 155], "jsondecodeerror": 1, "valueerror": [1, 5, 6, 11, 17, 29, 37, 48, 102, 154], "better": [1, 2, 3, 16, 41, 68, 111, 118, 146, 147, 158], "inf": [1, 2], "wai": [1, 9, 11, 14, 16, 21, 26, 27, 33, 34, 38, 40, 41, 44, 46, 47, 48, 68, 71, 77, 86, 87, 88, 105, 106, 110, 111, 115, 117, 120, 126, 128, 131, 136, 137, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "gcd": [1, 5], "direntri": 1, "urandom": [1, 2, 11, 84], "getrandom": [1, 2], "17": [1, 10, 16, 46, 64, 68, 86, 87], "getentropi": 1, "openbsd": 1, "6": [1, 6, 8, 10, 11, 15, 16, 20, 21, 48, 51, 68, 69, 73, 79, 87, 88, 89, 90, 98, 111, 114, 118, 140, 145, 146, 147, 154, 157, 158], "need": [1, 6, 9, 10, 16, 21, 27, 28, 34, 41, 43, 51, 67, 68, 71, 77, 78, 79, 80, 94, 98, 100, 106, 109, 110, 111, 112, 114, 117, 118, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 134, 137, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dev": [1, 147, 153, 156], "avoid": [1, 6, 7, 28, 47, 79, 87, 111, 112, 117, 121, 131, 137, 146, 148, 150, 151, 153, 158], "failur": [1, 16, 47, 114, 121, 147, 150, 158], "exhaust": [1, 2, 7, 23, 64, 68, 77, 81], "get_block": 1, "set_block": 1, "get": [1, 2, 3, 4, 5, 9, 11, 14, 16, 28, 29, 30, 33, 37, 38, 39, 41, 42, 48, 49, 50, 52, 55, 60, 61, 62, 63, 64, 69, 71, 76, 77, 79, 84, 86, 87, 88, 94, 95, 97, 98, 104, 107, 108, 111, 112, 114, 118, 120, 121, 123, 125, 126, 127, 128, 129, 147, 148, 150, 152, 153], "mode": [1, 2, 3, 11, 16, 20, 24, 28, 33, 35, 38, 39, 40, 42, 46, 48, 49, 50, 51, 52, 53, 64, 66, 67, 68, 78, 79, 82, 84, 86, 87, 88, 89, 90, 92, 94, 96, 98, 100, 101, 106, 107, 112, 115, 118, 119, 146, 147, 149, 153], "o_nonblock": 1, "There": [1, 41, 46, 48, 50, 51, 52, 68, 86, 90, 105, 114, 117, 118, 121, 129, 136, 137, 146, 147, 148, 150, 152, 158], "path": [1, 2, 3, 5, 7, 11, 27, 51, 61, 62, 63, 66, 68, 70, 71, 83, 84, 104, 107, 110, 114, 130, 151, 153, 154, 155, 156], "commonpath": 1, "longest": [1, 68], "common": [1, 5, 11, 16, 77, 86, 150, 153, 155, 158], "sub": [1, 7, 11, 68, 75, 79, 103, 111, 112, 114, 133, 137, 153, 154], "each": [1, 3, 16, 23, 27, 28, 34, 35, 40, 41, 43, 48, 53, 64, 67, 68, 71, 73, 74, 79, 81, 84, 87, 94, 95, 96, 98, 99, 101, 103, 108, 111, 112, 113, 114, 118, 121, 123, 124, 136, 137, 138, 146, 150, 151, 153, 154, 155], "pathnam": [1, 78], "re": [1, 2, 3, 6, 11, 16, 27, 30, 38, 41, 68, 70, 79, 81, 106, 108, 120, 121, 123, 124, 126, 129, 131, 132, 146, 150, 151, 153, 157], "condit": [1, 11, 23, 30, 34, 43, 46, 87, 99, 105, 116, 133, 136, 139, 140, 141, 143, 145, 150], "fix": [1, 34, 40, 46, 68, 77, 79, 98, 117, 121, 126, 130, 131, 139, 146, 158], "lookbehind": 1, "assert": [1, 19, 41, 46, 98, 99, 103, 108, 111, 112], "captur": [1, 11, 41, 46, 68, 79, 98, 103, 112, 126, 153, 158], "limit": [1, 11, 16, 21, 27, 42, 43, 46, 48, 51, 64, 68, 71, 77, 79, 81, 87, 98, 102, 106, 108, 116, 131, 137, 146, 148, 158], "subn": 1, "replac": [1, 5, 11, 16, 27, 68, 103, 121, 126, 137, 148, 150, 153], "unmatch": [1, 103], "msg": 1, "po": 1, "lineno": 1, "colno": 1, "monoton": 1, "clock": [1, 11, 30, 34, 35, 40, 43, 49, 61, 62, 63, 68, 70, 77, 83, 86, 87, 88, 92, 96, 98, 99, 111, 124, 129, 153], "sendfil": 1, "send": [1, 11, 16, 33, 43, 48, 51, 60, 61, 63, 77, 83, 86, 88, 92, 96, 99, 100, 101, 104, 106, 107, 108, 118, 126, 132, 148, 157], "over": [1, 11, 19, 30, 31, 32, 34, 48, 67, 68, 76, 77, 79, 83, 87, 95, 96, 98, 100, 101, 108, 112, 114, 117, 126, 127, 146, 147, 148, 153, 154, 157], "high": [1, 11, 30, 34, 38, 41, 43, 53, 68, 77, 79, 94, 98, 108, 111, 118, 120, 150, 157, 158], "perform": [1, 2, 5, 28, 30, 34, 35, 38, 40, 52, 55, 68, 77, 79, 83, 86, 98, 103, 110, 111, 114, 126, 131, 133, 134, 139, 141, 146, 150, 153, 155, 156, 157, 158], "unix": [1, 6, 7, 9, 10, 11, 16, 85, 106, 111, 146, 147, 148, 153], "upload": [1, 104], "being": [1, 3, 5, 8, 11, 14, 16, 28, 30, 38, 39, 41, 43, 45, 46, 47, 49, 53, 61, 62, 63, 64, 68, 70, 71, 77, 78, 79, 80, 81, 82, 84, 95, 98, 101, 108, 112, 114, 117, 121, 123, 126, 127, 128, 134, 142, 146, 150, 151, 152, 153], "plain": 1, "sendal": [1, 11, 106], "reset": [1, 11, 14, 33, 34, 39, 44, 61, 62, 63, 64, 66, 67, 70, 79, 81, 82, 83, 88, 95, 98, 105, 108, 111, 117, 118, 121, 126, 129, 147, 150], "everi": [1, 16, 68, 77, 86, 89, 90, 95, 106, 111, 112, 148, 153], "byte": [1, 2, 3, 5, 8, 9, 11, 14, 15, 16, 17, 20, 21, 23, 24, 25, 28, 30, 33, 34, 35, 39, 40, 43, 46, 52, 60, 61, 63, 64, 68, 70, 71, 77, 79, 81, 83, 84, 86, 87, 88, 89, 91, 92, 96, 99, 100, 101, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 118, 126, 132, 135, 136, 137, 139, 140, 145, 146, 148, 150, 153, 154, 157, 158], "sent": [1, 16, 33, 34, 43, 48, 52, 63, 77, 78, 88, 101, 106, 126, 157], "maximum": [1, 11, 16, 19, 21, 30, 31, 34, 39, 44, 52, 64, 68, 71, 72, 79, 81, 84, 89, 93, 97, 103, 106, 110, 112, 131, 140, 145, 150], "total": [1, 16, 23, 61, 62, 63, 64, 68, 70, 81, 82, 90, 111, 118, 131, 150], "durat": [1, 16, 30, 37, 43, 48, 86, 99, 127, 150, 153, 158], "backlog": [1, 14, 106], "listen": [1, 11, 16, 60, 72, 77, 106, 107], "By": [1, 5, 16, 24, 41, 46, 61, 62, 63, 64, 68, 70, 78, 79, 81, 83, 86, 98, 111, 131, 134, 147, 151, 153], "somaxconn": 1, "128": [1, 9, 16, 33, 63, 64, 68, 79, 81, 88, 89, 96, 98, 157], "whichev": 1, "memori": [1, 6, 7, 9, 11, 21, 23, 24, 28, 33, 38, 39, 42, 43, 46, 48, 68, 71, 77, 79, 83, 86, 87, 88, 92, 98, 106, 112, 114, 115, 117, 118, 122, 126, 135, 137, 138, 147, 148, 150, 151, 152, 155, 158], "bio": 1, "layer": [1, 28, 77, 107, 127, 131, 147], "negoti": [1, 16], "sslsocket": [1, 2, 5, 107], "queri": [1, 16, 23, 43, 48, 51, 52, 94, 111, 114, 153], "actual": [1, 5, 11, 21, 28, 32, 33, 34, 38, 40, 41, 48, 68, 87, 88, 91, 92, 103, 107, 110, 111, 112, 114, 126, 146, 148, 156, 158], "either": [1, 2, 4, 16, 19, 20, 28, 33, 39, 44, 48, 49, 50, 64, 68, 71, 74, 77, 81, 88, 92, 96, 98, 103, 110, 111, 112, 114, 115, 121, 126, 130, 146, 148, 150, 153, 154, 155, 158], "sslwantreaderror": 1, "sslwantwriteerror": 1, "non": [1, 5, 7, 11, 16, 21, 27, 28, 33, 35, 37, 41, 42, 44, 46, 47, 63, 68, 70, 71, 77, 82, 84, 88, 93, 101, 103, 106, 107, 111, 112, 114, 126, 153, 154, 158], "would": [1, 21, 27, 28, 46, 68, 87, 94, 112, 127, 131, 136, 144, 146, 147, 148, 150, 151, 153, 157, 158], "previous": [1, 2, 5, 14, 16, 48, 68, 77, 79, 82, 94, 98, 107, 114, 126, 151], "cert_time_to_second": 1, "input": [1, 2, 6, 11, 15, 17, 21, 27, 30, 31, 38, 43, 61, 62, 63, 68, 71, 74, 75, 82, 84, 87, 88, 89, 90, 94, 98, 99, 105, 106, 108, 110, 115, 118, 119, 123, 146, 148, 150, 151, 156], "utc": [1, 6, 7, 9, 10, 111], "local": [1, 2, 3, 8, 11, 16, 17, 48, 68, 83, 106, 111, 137, 153, 155, 156, 158], "per": [1, 7, 16, 43, 53, 66, 67, 68, 69, 71, 77, 79, 98, 99, 105, 111, 148, 154], "rfc": [1, 15], "5280": 1, "addition": [1, 16, 28, 68, 75, 77, 79, 117, 126, 128, 151, 152, 153], "sslobject": [1, 107], "shared_ciph": 1, "client": [1, 2, 11, 27, 48, 51, 52, 78, 107, 153], "dure": [1, 2, 6, 16, 21, 27, 30, 35, 46, 48, 64, 68, 77, 82, 87, 98, 114, 115, 121, 126, 147, 150, 151, 153], "do_handshak": [1, 107], "shutdown": [1, 5, 11, 79, 83, 114], "match_hostnam": 1, "ip": [1, 48, 49, 50, 51, 52, 106, 153, 156], "set_coroutine_wrapp": 1, "global": [1, 2, 7, 11, 16, 17, 27, 46, 47, 48, 68, 79, 129, 131, 146, 147, 150], "whenev": [1, 28, 64, 79, 80, 84, 101, 126], "def": [1, 6, 7, 10, 14, 16, 27, 33, 42, 47, 77, 83, 88, 90, 94, 98, 137, 146, 147, 150, 157, 158], "get_coroutine_wrapp": 1, "obtain": [1, 16, 37, 48, 51, 116, 136, 140, 145, 146], "wrapper": [1, 24, 151], "is_fin": [1, 5], "shut": 1, "down": [1, 11, 16, 38, 48, 51, 52, 65, 68, 69, 70, 74, 77, 78, 79, 87, 89, 90, 94, 95, 98, 120, 121, 131, 150, 151, 157], "parser": [1, 5, 46], "correct": [1, 4, 16, 33, 64, 68, 71, 74, 79, 81, 86, 87, 88, 111, 126, 146, 147, 154, 158], "ignor": [1, 3, 5, 11, 14, 15, 33, 42, 43, 68, 71, 72, 74, 78, 83, 86, 88, 98, 103, 106, 114, 117, 121, 142, 154, 155], "beta": 2, "12": [2, 9, 10, 16, 32, 35, 64, 68, 86, 87, 89, 98, 111, 118, 119, 154], "sep": [2, 15], "2016": 2, "summari": [2, 11, 27, 146], "here": [2, 9, 17, 27, 30, 46, 48, 61, 62, 63, 68, 71, 77, 106, 112, 119, 126, 128, 129, 132, 134, 137, 138, 148, 150, 153, 157, 158], "498": 2, "515": 2, "underscor": [2, 11, 46, 146], "numer": [2, 11, 16, 19, 22, 27, 65, 68, 103, 106, 111, 158], "525": 2, "provision": [2, 4, 106], "530": 2, "468": 2, "preserv": [2, 3, 19, 68, 70, 126, 137, 153], "order": [2, 3, 4, 6, 8, 9, 11, 16, 19, 27, 35, 43, 68, 71, 84, 85, 94, 108, 109, 110, 111, 114, 144, 150, 152, 153, 154, 158], "kwarg": [2, 17, 28, 72, 79, 147, 158], "487": [2, 95], "simpler": [2, 28], "creation": [2, 3, 11, 46, 100, 101, 118, 146], "520": 2, "definit": [2, 11, 111, 112, 133, 146, 155], "495": [2, 82], "disambigu": 2, "506": 2, "secret": [2, 16], "519": 2, "intern": [2, 9, 11, 16, 27, 35, 38, 64, 68, 71, 77, 79, 81, 82, 86, 87, 88, 90, 91, 108, 117, 118, 121, 128, 131, 146, 147, 148, 150, 154], "509": 2, "privat": [2, 8, 11, 16, 107], "won": [2, 28, 42, 68, 105, 121, 126, 131, 157], "t": [2, 8, 9, 11, 14, 16, 28, 33, 34, 40, 41, 42, 51, 68, 71, 77, 84, 87, 88, 94, 98, 103, 105, 106, 111, 112, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158], "523": 2, "frame": [2, 11, 33, 60, 61, 62, 63, 64, 66, 68, 70, 71, 76, 77, 79, 81, 88, 111, 121, 122, 129, 131], "evalu": [2, 3, 68, 87, 146, 153, 158], "window": [2, 5, 11, 16, 24, 68, 75, 79, 85, 115, 121, 122, 126, 146, 148, 153, 157], "524": 2, "startup": [2, 79, 95, 126, 147, 153], "528": 2, "consol": 2, "utf": [2, 3, 6, 154], "8": [2, 3, 6, 8, 10, 11, 15, 16, 21, 30, 33, 34, 37, 39, 40, 43, 48, 49, 52, 57, 64, 68, 69, 76, 79, 81, 82, 86, 87, 88, 89, 92, 95, 96, 98, 99, 106, 108, 109, 111, 112, 118, 120, 131, 134, 146, 150, 154, 157, 158], "529": 2, "filesystem": [2, 8, 11, 27, 28, 68, 86, 91, 121, 146, 148, 149, 150, 151, 153, 155, 157], "nonloc": 2, "statement": [2, 4, 14, 46, 47, 126, 129, 135, 137, 146, 150, 157, 158], "textual": [2, 106], "appear": [2, 110, 121, 126, 127], "befor": [2, 6, 8, 11, 14, 16, 30, 35, 37, 39, 48, 53, 61, 62, 63, 64, 66, 68, 70, 71, 74, 77, 78, 79, 81, 82, 83, 94, 100, 106, 108, 111, 117, 121, 123, 126, 127, 128, 130, 137, 138, 139, 141, 146, 150, 151, 153, 157, 158], "first": [2, 4, 5, 7, 11, 16, 26, 30, 33, 40, 43, 48, 53, 66, 68, 77, 78, 79, 83, 88, 92, 96, 99, 102, 103, 106, 107, 108, 110, 111, 112, 114, 118, 121, 123, 124, 126, 128, 129, 130, 131, 132, 135, 136, 137, 141, 146, 147, 150, 151, 152, 153, 154, 155, 157], "affect": [2, 37, 48, 68, 86, 110, 133, 140, 141, 143, 145, 148, 150], "same": [2, 6, 7, 9, 16, 20, 24, 27, 29, 30, 33, 34, 37, 38, 40, 41, 43, 45, 46, 47, 48, 51, 64, 66, 67, 68, 71, 78, 84, 88, 89, 90, 92, 94, 96, 97, 98, 103, 105, 106, 111, 112, 114, 115, 117, 118, 126, 128, 146, 148, 150, 151, 153, 155, 156, 157], "scope": [2, 106, 129, 137, 139, 146, 150, 154], "syntaxwarn": [2, 4], "It": [2, 5, 14, 16, 19, 21, 24, 25, 30, 31, 32, 38, 43, 48, 50, 68, 74, 77, 83, 85, 86, 87, 89, 91, 94, 96, 98, 99, 100, 101, 105, 107, 110, 111, 115, 118, 120, 123, 126, 131, 137, 142, 143, 146, 147, 148, 150, 153, 155, 157, 158], "possibl": [2, 11, 16, 21, 28, 30, 33, 38, 40, 43, 46, 48, 52, 53, 60, 68, 74, 77, 79, 83, 84, 85, 87, 88, 97, 99, 101, 106, 111, 118, 121, 126, 128, 137, 138, 148, 150, 154, 157], "special": [2, 4, 8, 11, 28, 68, 71, 103, 112, 123, 126, 142, 150, 158], "indic": [2, 4, 9, 11, 13, 16, 21, 33, 41, 46, 48, 51, 64, 81, 82, 88, 96, 98, 106, 107, 110, 124, 134, 137, 139, 150, 154, 157], "exampl": [2, 7, 10, 11, 14, 16, 19, 22, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 61, 62, 63, 64, 66, 67, 68, 70, 71, 74, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 102, 103, 106, 108, 111, 112, 114, 115, 118, 121, 122, 123, 127, 129, 131, 132, 133, 134, 137, 141, 144, 146, 147, 148, 150, 154, 155, 156, 157, 158], "__iter__": [2, 5], "long": [2, 4, 6, 11, 30, 66, 68, 70, 77, 79, 87, 109, 110, 111, 132, 146, 150, 154, 157, 158], "repeat": [2, 39, 84, 86, 89, 146, 157], "traceback": [2, 3, 6, 7, 9, 46, 110, 157], "abbrevi": 2, "previou": [2, 16, 23, 25, 30, 31, 32, 38, 66, 68, 79, 84, 86, 87, 98, 103, 110, 111, 126, 150, 156, 157], "modulenotfounderror": 2, "find": [2, 27, 68, 111, 121, 125, 126, 147, 153], "code": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 20, 23, 25, 27, 40, 46, 47, 48, 68, 77, 79, 90, 101, 106, 108, 110, 111, 114, 117, 118, 119, 122, 126, 127, 129, 131, 132, 134, 135, 136, 138, 139, 141, 146, 147, 148, 150, 151, 152, 153, 156, 157], "importerror": [2, 3, 5, 11, 17], "try": [2, 6, 7, 9, 10, 14, 22, 25, 27, 33, 40, 41, 46, 47, 68, 71, 77, 78, 79, 88, 90, 106, 121, 126, 154, 157], "reli": [2, 6, 7, 10, 111], "zero": [2, 5, 16, 34, 46, 68, 71, 72, 74, 93, 97, 98, 103, 106, 114, 134, 137, 139, 140, 141, 142, 143, 150, 154], "metaclass": 2, "stai": [2, 77, 79], "extend": [2, 6, 11, 13, 19, 33, 68, 88, 91, 103, 134, 137, 140, 143, 147], "binascii": [2, 11, 25, 27, 52], "b2a_base64": [2, 11, 15], "newlin": [2, 15, 43, 46, 99, 101, 106], "control": [2, 4, 11, 16, 21, 30, 31, 34, 35, 43, 47, 48, 51, 54, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 70, 71, 74, 75, 77, 79, 81, 82, 86, 92, 93, 97, 101, 112, 121, 122, 123, 126, 134, 137, 148, 149, 150, 151, 157], "whether": [2, 16, 28, 31, 33, 38, 41, 43, 46, 47, 49, 52, 88, 92, 99, 105, 107, 110, 116, 126, 134, 137, 139, 146, 150, 154], "charact": [2, 3, 15, 43, 46, 48, 68, 99, 101, 103, 106, 109, 126, 132, 146, 153, 157], "append": [2, 7, 11, 13, 16, 19, 27, 46, 104, 150, 155, 158], "cmath": [2, 11, 27], "tau": 2, "\u03c4": 2, "infj": 2, "nanj": 2, "repr": [2, 11, 13, 17], "abstract": [2, 16, 28, 41, 48, 91, 118, 148], "repres": [2, 14, 29, 31, 32, 38, 46, 48, 64, 68, 71, 79, 81, 84, 88, 91, 94, 100, 101, 106, 111, 112, 114, 140, 145, 146, 150, 153], "size": [2, 6, 7, 10, 11, 16, 17, 23, 24, 25, 30, 33, 34, 35, 43, 46, 53, 63, 66, 67, 68, 70, 71, 74, 75, 77, 79, 84, 87, 88, 91, 105, 106, 109, 112, 113, 114, 115, 121, 126, 129, 131, 135, 146, 147, 153, 154, 157, 158], "__reversed__": 2, "asyncgener": 2, "specifi": [2, 4, 5, 16, 19, 21, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 52, 53, 57, 58, 61, 62, 63, 64, 68, 70, 74, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 99, 101, 103, 105, 106, 107, 111, 112, 114, 135, 136, 139, 140, 144, 145, 146, 147, 151, 153, 154, 155], "tupl": [2, 4, 7, 8, 11, 16, 17, 18, 19, 29, 30, 33, 34, 38, 39, 40, 45, 48, 49, 51, 52, 55, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 88, 95, 97, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 146, 148, 151, 153], "verbos": [2, 28, 46], "renam": [2, 11, 68, 84, 128], "recurs": [2, 112, 131, 137, 151, 153, 154], "instanc": [2, 4, 16, 21, 22, 24, 30, 31, 38, 43, 46, 47, 50, 98, 102, 103, 105, 107, 112, 126, 134, 137, 146, 147, 150, 153, 158], "pickl": [2, 4, 146], "blake2": 2, "were": [2, 16, 19, 34, 68, 94, 99, 105, 121, 126, 127, 134, 146, 153, 157], "blake2b": 2, "full": [2, 3, 9, 19, 21, 23, 30, 33, 35, 43, 46, 49, 87, 88, 89, 99, 108, 111, 137, 146, 148, 153], "sha3_224": 2, "sha3_256": 2, "sha3_384": 2, "sha3_512": 2, "shake": 2, "shake_128": 2, "shake_256": 2, "password": [2, 48, 50, 51, 52, 78, 156], "deriv": [2, 11, 47, 84, 96, 150], "scrypt": 2, "should": [2, 6, 9, 10, 14, 16, 17, 19, 21, 27, 28, 29, 30, 33, 34, 37, 40, 41, 43, 44, 46, 48, 52, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 82, 83, 84, 86, 87, 88, 99, 101, 102, 103, 106, 107, 108, 110, 111, 112, 114, 120, 121, 125, 126, 127, 128, 129, 137, 139, 146, 147, 148, 150, 151, 153, 154, 157, 158], "16": [2, 6, 10, 16, 30, 35, 37, 46, 53, 64, 68, 79, 87, 88, 90, 92, 96, 98, 108, 110, 112, 140, 143, 145, 146, 157, 158], "32": [2, 10, 11, 21, 30, 33, 35, 39, 45, 48, 64, 68, 77, 79, 84, 88, 95, 96, 102, 108, 110, 112, 114, 115, 131, 133, 136, 137, 138, 140, 141, 143, 145, 158], "close": [2, 5, 11, 14, 21, 24, 28, 37, 41, 46, 48, 50, 66, 68, 70, 87, 101, 102, 105, 106, 138, 148], "explicitli": [2, 6, 9, 16, 21, 66, 70, 106, 111, 150, 151, 153], "On": [2, 16, 27, 30, 37, 43, 44, 45, 46, 49, 60, 77, 79, 83, 87, 91, 94, 110, 111, 117, 121, 126, 131, 146, 147, 150, 151, 155], "until": [2, 5, 14, 16, 29, 30, 33, 35, 42, 43, 46, 47, 60, 61, 62, 63, 64, 65, 68, 70, 72, 79, 80, 81, 82, 86, 87, 88, 99, 105, 106, 107, 108, 121, 129, 142, 150, 153, 157], "entropi": 2, "pool": [2, 146], "increas": [2, 16, 21, 35, 38, 46, 68, 77, 79, 111, 121, 129, 131, 157, 158], "random": [2, 5, 8, 11, 16, 27, 68, 78, 84, 86, 89, 131, 150, 158], "expos": [2, 5, 30, 86, 94, 108, 111, 139, 147], "modifi": [2, 11, 16, 28, 37, 47, 68, 78, 105, 116, 126, 147, 150, 154], "span": [2, 11, 103, 147], "p": [2, 7, 38, 103, 109, 116, 118, 120, 147, 156], "ython": 2, "v": [2, 14, 19, 28, 36, 41, 55, 68, 79, 87, 110, 134, 136, 139], "r": [2, 11, 18, 28, 36, 48, 61, 62, 63, 64, 68, 70, 79, 81, 82, 103, 153, 157], "gvr": 2, "access": [2, 5, 8, 11, 16, 19, 22, 27, 28, 31, 32, 36, 38, 41, 47, 48, 51, 52, 64, 68, 78, 79, 86, 87, 89, 103, 106, 107, 114, 117, 118, 121, 123, 126, 136, 137, 140, 145, 146, 147, 148, 150, 151, 153, 155], "__getitem__": [2, 11, 13], "equival": [2, 3, 7, 13, 16, 27, 38, 103, 105, 106, 126, 146, 151, 153, 156], "so": [2, 4, 6, 9, 16, 21, 25, 28, 30, 32, 34, 37, 42, 46, 47, 48, 50, 64, 66, 68, 70, 71, 74, 79, 83, 86, 90, 94, 98, 101, 105, 106, 110, 111, 112, 115, 116, 119, 121, 123, 124, 126, 128, 130, 131, 146, 147, 148, 150, 153, 156, 157, 158], "mo": [2, 79], "like": [2, 4, 5, 11, 16, 19, 20, 21, 24, 28, 30, 37, 41, 43, 46, 48, 62, 64, 68, 71, 77, 78, 79, 81, 84, 86, 99, 101, 103, 105, 106, 107, 108, 110, 111, 112, 114, 117, 121, 124, 126, 127, 128, 129, 130, 131, 132, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158], "ioctl": [2, 11, 79, 91, 114, 147], "sio_loopback_fast_path": 2, "getsockopt": 2, "so_domain": 2, "so_protocol": 2, "so_peersec": 2, "so_passsec": 2, "setsockopt": [2, 11, 106], "optnam": [2, 106], "optlen": 2, "form": [2, 4, 15, 18, 29, 38, 39, 48, 52, 68, 84, 102, 103, 104, 106, 114, 136, 146, 148, 153, 154, 155], "famili": [2, 9, 11, 68, 106], "af_alg": 2, "interfac": [2, 11, 16, 24, 30, 31, 36, 46, 49, 50, 51, 78, 86, 91, 106, 107, 112, 115, 146, 147, 148, 153, 158], "crypto": 2, "alg_": 2, "sol_alg": 2, "sendmsg_afalg": 2, "tcp_user_timeout": 2, "tcp_congest": 2, "recommend": [2, 7, 11, 14, 16, 21, 25, 28, 30, 48, 68, 98, 103, 105, 106, 110, 112, 124, 128, 147, 151], "3de": 2, "chacha20": 2, "poly1305": 2, "session": [2, 78, 153], "connect": [2, 11, 25, 30, 32, 33, 34, 35, 48, 49, 51, 52, 68, 77, 78, 80, 86, 88, 99, 101, 106, 107, 116, 121, 122, 127, 129, 146, 148, 155, 156, 157], "sslsession": 2, "resumpt": 2, "speed": [2, 11, 68, 71, 77, 79, 87, 95, 97, 115, 118, 123, 131, 146, 149, 150, 157], "up": [2, 3, 4, 11, 14, 16, 27, 28, 30, 31, 32, 34, 38, 39, 41, 44, 46, 48, 49, 50, 51, 52, 53, 64, 65, 68, 69, 70, 71, 74, 77, 78, 79, 81, 83, 86, 87, 88, 89, 90, 94, 95, 98, 103, 106, 111, 112, 115, 117, 118, 120, 121, 123, 126, 127, 128, 129, 131, 132, 134, 147, 150, 153, 154, 155, 157, 158], "reduc": [2, 6, 7, 9, 30, 38, 43, 52, 79, 86, 87, 89, 126, 131, 146, 148, 150, 152, 158], "latenc": [2, 79, 150], "get_ciph": [2, 11, 107], "enabl": [2, 5, 8, 11, 16, 19, 21, 23, 24, 30, 38, 43, 44, 46, 47, 48, 51, 52, 60, 62, 63, 65, 68, 69, 71, 79, 82, 86, 88, 89, 90, 94, 98, 99, 102, 104, 106, 107, 108, 110, 114, 115, 118, 126, 128, 131, 136, 137, 138, 139, 140, 142, 145, 147, 150, 152, 153, 157, 158], "prioriti": [2, 38, 42, 68, 111, 142, 150], "intenum": 2, "intflag": 2, "server": [2, 11, 14, 48, 51, 52, 78, 104, 106, 107], "post_handshake_auth": 2, "verify_client_post_handshak": 2, "post": [2, 11, 68, 71, 73, 104], "authent": [2, 16, 107], "struct": [2, 8, 11, 27, 77, 79, 112, 132, 146], "ieee": [2, 3, 48], "754": [2, 3], "half": [2, 89, 109, 129, 140, 145, 158], "via": [2, 4, 14, 16, 17, 21, 32, 34, 40, 48, 50, 61, 62, 63, 64, 68, 77, 79, 80, 83, 85, 87, 91, 114, 118, 121, 126, 148, 150, 151, 153, 154, 155, 157], "getfilesystemencodeerror": 2, "unicod": [2, 7, 8, 11, 146], "filenam": [2, 5, 24, 66, 70, 84, 86, 151, 156], "zlib": [2, 11, 21, 27], "compress": [2, 11, 27, 68, 70, 74, 76, 78, 79, 126], "decompress": [2, 11, 27, 70], "538": 3, "coerc": [3, 137], "legaci": [3, 16, 25], "539": 3, "thread": [3, 14, 46, 47, 111, 121, 126, 150], "storag": [3, 11, 16, 21, 24, 46, 68, 79, 86, 114, 126, 131, 146, 147, 148, 152, 155], "540": 3, "552": 3, "determinist": 3, "pyc": 3, "553": 3, "breakpoint": 3, "557": 3, "560": 3, "core": [3, 8, 11, 25, 27, 28, 30, 38, 83, 108, 148], "562": 3, "__getattr__": 3, "__dir__": 3, "563": 3, "postpon": 3, "564": 3, "nanosecond": [3, 30, 31, 37, 111], "resolut": [3, 8, 11, 32, 37, 56, 57, 61, 62, 64, 66, 68, 70, 79, 81, 82, 87, 89, 111, 118, 119, 126], "565": 3, "show": [3, 16, 48, 61, 62, 63, 64, 68, 81, 82, 87, 96, 98, 106, 118, 121, 126, 147, 153, 154, 156, 157], "__main__": [3, 5, 7], "567": 3, "reserv": [3, 141], "255": [3, 6, 33, 37, 48, 49, 51, 52, 54, 61, 62, 63, 64, 68, 70, 71, 74, 79, 81, 82, 88, 95, 118, 119, 143], "fromhex": 3, "bytearrai": [3, 8, 11, 16, 17, 21, 33, 35, 39, 40, 46, 68, 71, 77, 79, 86, 87, 88, 89, 92, 96, 100, 112, 118, 137, 146, 147, 148, 150, 158], "ascii": [3, 7, 11, 27, 52, 68, 103, 146, 154], "whitespac": [3, 11, 29, 103, 109, 146], "gain": [3, 53, 64, 79, 158], "isascii": 3, "displai": [3, 4, 8, 11, 27, 57, 58, 64, 65, 66, 68, 70, 79, 80, 81, 82, 103, 121, 122, 148, 153, 156], "__file__": [3, 5], "absolut": [3, 5, 37, 41, 45, 46, 68, 108, 111, 115, 128, 151], "bind": [3, 11, 78, 106], "submodul": [3, 118, 151], "__format__": 3, "rather": [3, 4, 5, 14, 16, 27, 46, 112, 131, 137, 146, 148, 150, 151, 153, 155, 158], "self": [3, 4, 6, 8, 11, 33, 86, 88, 147, 150, 155, 158], "dynam": [3, 48, 79, 114, 146, 148], "stack": [3, 11, 16, 46, 50, 71, 79, 86, 131, 138, 139, 150], "trace": [3, 49, 86, 110, 150], "tracebacktyp": 3, "instanti": [3, 11, 48, 87, 108, 146, 150, 158], "tb_next": 3, "m": [3, 4, 6, 43, 44, 45, 70, 79, 86, 92, 103, 111, 119, 137, 138, 146, 150, 154, 155, 157, 158], "switch": [3, 37, 41, 79, 84, 88, 90, 124], "eagerli": 3, "expand": [3, 4, 5, 46, 68, 103, 157], "directori": [3, 5, 7, 22, 84, 104, 110, 114, 117, 126, 130, 146, 147, 151, 153, 154, 155, 156], "left": [3, 19, 35, 39, 61, 62, 63, 64, 65, 68, 69, 75, 79, 81, 82, 86, 103, 121, 126], "occur": [3, 6, 14, 42, 43, 46, 47, 79, 86, 95, 98, 99, 101, 111, 126, 142, 146, 150, 153, 158], "importtim": 3, "pythonprofileimporttim": 3, "too": [3, 6, 11, 61, 62, 63, 68, 77, 79, 111, 112, 121, 123, 126, 131, 150, 158], "mani": [3, 7, 11, 27, 28, 41, 43, 46, 61, 62, 63, 64, 68, 77, 79, 81, 99, 103, 106, 111, 112, 127, 148, 154], "includ": [3, 8, 11, 16, 21, 24, 25, 27, 34, 39, 41, 46, 48, 52, 73, 74, 77, 84, 91, 99, 100, 101, 102, 103, 106, 108, 110, 111, 112, 115, 116, 126, 128, 129, 137, 139, 146, 147, 148, 150, 151, 155, 156, 157, 158], "freez": [3, 11, 122, 151], "unfreez": 3, "get_freeze_count": 3, "remaind": [3, 45, 99, 147], "style": [3, 4, 110, 137, 153], "tidi": 3, "split": [3, 8, 11, 41, 68, 103, 112, 126, 158], "compil": [3, 4, 6, 7, 11, 17, 46, 85, 103, 108, 126, 127, 128, 137, 148, 150, 151, 155, 157, 158], "breakpointhook": 3, "_coroutine_origin_tracking_depth": 3, "mostli": [3, 147, 149], "pep564": 3, "abov": [3, 6, 7, 8, 16, 22, 27, 28, 30, 31, 33, 37, 38, 41, 46, 48, 49, 52, 67, 68, 72, 79, 87, 88, 89, 103, 105, 107, 110, 111, 112, 114, 116, 117, 118, 119, 121, 124, 126, 131, 132, 138, 139, 146, 150, 151, 153, 154, 155, 156, 158], "time_n": [3, 11, 111], "14": [4, 6, 10, 16, 35, 64, 68, 88, 98, 158], "2019": 4, "569": 4, "570": [4, 9], "posit": [4, 5, 6, 8, 11, 17, 35, 43, 45, 65, 67, 68, 72, 73, 79, 86, 88, 92, 97, 103, 106, 110, 111, 112, 115, 118, 139, 156], "572": 4, "574": 4, "5": [4, 6, 8, 10, 11, 14, 16, 19, 21, 37, 43, 45, 51, 64, 65, 67, 68, 77, 79, 89, 95, 97, 98, 99, 106, 108, 114, 115, 118, 119, 146, 147, 150, 153, 154, 157], "out": [4, 6, 11, 13, 14, 23, 28, 34, 38, 40, 41, 46, 49, 65, 68, 75, 77, 79, 86, 87, 99, 106, 111, 116, 118, 121, 124, 126, 134, 138, 146, 150, 152, 153, 154, 157], "band": 4, "578": 4, "587": 4, "590": 4, "vectorcal": 4, "fast": [4, 5, 21, 34, 38, 40, 68, 77, 126, 127, 129, 150, 158], "f": [4, 8, 11, 13, 21, 24, 67, 68, 71, 84, 109, 112, 119, 126, 137, 146, 147, 153, 155, 156, 158], "continu": [4, 16, 29, 30, 31, 35, 40, 77, 79, 86, 89, 110, 118, 134, 135, 137, 150, 154, 156, 157], "illeg": 4, "claus": [4, 5], "problem": [4, 52, 121, 127, 130, 137, 146, 150], "lift": [4, 46], "bool": [4, 11, 17, 19, 47, 49, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 81, 82, 108, 158], "as_integer_ratio": 4, "constructor": [4, 9, 11, 28, 46, 68, 112, 114, 120, 132, 146, 150, 158], "__float__": [4, 6], "__complex__": 4, "n": [4, 5, 8, 11, 14, 48, 49, 64, 67, 68, 79, 84, 99, 102, 103, 109, 118, 132, 133, 134, 135, 136, 137, 139, 140, 143, 145, 146, 157, 158], "escap": [4, 8, 11, 103, 153], "dictview": 4, "further": [4, 21, 27, 30, 38, 48, 98, 105, 110, 112, 115, 138, 139, 146, 150, 151, 152, 154, 158], "particular": [4, 22, 25, 27, 28, 30, 31, 34, 35, 38, 40, 48, 68, 77, 79, 83, 94, 106, 107, 111, 112, 116, 121, 124, 126, 146, 148, 150, 154, 158], "arg": [4, 7, 10, 11, 46, 61, 63, 68, 79, 91, 94, 105, 106, 114, 147, 153, 158], "enclos": [4, 68], "comma": [4, 13], "10": [4, 6, 7, 8, 10, 11, 16, 18, 21, 28, 34, 39, 43, 45, 64, 66, 68, 79, 87, 99, 102, 106, 113, 115, 118, 119, 120, 123, 127, 137, 154, 157], "20": [4, 6, 7, 9, 10, 16, 68, 85, 95, 137, 150, 154, 158], "30": [4, 10, 16, 56, 68, 79, 86, 97, 98, 109, 118, 126, 137, 150, 157, 158], "40": [4, 10, 68], "help": [4, 27, 79, 125, 126, 146, 156, 157], "suggest": [4, 112], "arithmet": [4, 11, 111, 134, 138, 141, 150, 158], "subclass": [4, 6, 8, 11, 19, 28, 86, 106], "datetim": [4, 11, 39, 95, 111, 118, 153], "date": [4, 39, 84, 95, 107, 111, 118, 121, 126, 138], "timedelta": 4, "interrupt": [4, 11, 38, 39, 42, 43, 46, 47, 50, 64, 77, 79, 98, 101, 108, 111, 112, 142, 149, 153, 158], "ctrl": [4, 46, 101, 126, 146, 150, 153, 156, 157], "keyboardinterrupt": [4, 11, 17, 46, 101, 157], "caught": [4, 14], "exit": [4, 5, 7, 11, 14, 46, 86, 110, 117, 153, 156, 157], "detect": [4, 21, 43, 75, 79, 110, 114, 115, 117, 121, 126, 147, 153, 155], "di": 4, "some": [4, 8, 16, 18, 27, 28, 30, 34, 37, 38, 40, 42, 45, 48, 51, 68, 77, 79, 84, 86, 94, 105, 106, 107, 108, 110, 111, 112, 114, 118, 121, 126, 127, 129, 131, 132, 133, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158], "advanc": [4, 19, 68, 103, 126, 150, 158], "program": [4, 11, 16, 28, 30, 39, 51, 87, 98, 110, 114, 117, 121, 126, 128, 129, 137, 138, 139, 146, 148, 152, 153, 154, 155, 156, 158], "codetyp": 4, "three": [4, 16, 30, 33, 47, 68, 74, 79, 88, 108, 110, 124, 129, 135, 137, 141, 144, 146, 154, 156, 157, 158], "pow": [4, 11, 17, 45, 68], "permit": [4, 116, 150, 158], "expon": [4, 45], "neg": [4, 6, 13, 17, 18, 30, 35, 45, 46, 61, 62, 63, 64, 68, 81, 82, 84, 86, 95, 106, 109, 111, 115, 118, 133, 134, 139], "case": [4, 5, 6, 10, 16, 20, 21, 24, 27, 28, 30, 33, 34, 37, 40, 41, 43, 46, 52, 68, 70, 83, 84, 87, 88, 91, 98, 102, 105, 106, 107, 110, 111, 112, 114, 118, 126, 131, 133, 138, 140, 141, 145, 146, 150, 151, 152, 153, 154, 157, 158], "prime": 4, "modulu": [4, 18], "sync": [4, 11, 68, 70, 84, 86, 114, 117, 118, 157], "comput": [4, 11, 27, 37, 46, 68, 77, 79, 96, 118, 121, 126, 127, 131, 146, 157, 158], "second": [4, 11, 14, 16, 33, 39, 40, 48, 66, 68, 69, 77, 79, 87, 88, 92, 95, 96, 102, 106, 108, 111, 112, 114, 117, 118, 121, 132, 135, 136, 146, 150, 153, 154, 156, 157], "__reduce__": 4, "six": [4, 68], "run": [4, 5, 8, 11, 14, 16, 20, 23, 35, 39, 42, 43, 44, 46, 47, 51, 53, 68, 75, 77, 78, 79, 86, 87, 101, 108, 110, 111, 112, 117, 121, 122, 127, 128, 129, 130, 131, 134, 135, 146, 148, 150, 153, 154, 155, 158], "graduat": 4, "stabl": [4, 68], "launch": [4, 121, 130, 153], "nativ": [4, 6, 8, 11, 68, 84, 106, 109, 110, 112, 148, 154], "repl": [4, 11, 27, 30, 46, 84, 86, 110, 146, 148, 149, 153, 155, 156], "cancellederror": [4, 14], "baseexcept": 4, "concurr": [4, 14, 16, 127, 150], "task": [4, 5, 11, 79, 98, 111, 126, 150], "get_coro": 4, "create_task": [4, 11, 14, 150], "event": [4, 11, 27, 30, 38, 42, 43, 65, 68, 86, 98, 99, 101, 111, 116, 150], "loop": [4, 5, 11, 30, 47, 66, 68, 77, 79, 87, 111, 129, 137, 146, 148, 150, 153, 157, 158], "set_nam": 4, "happi": [4, 150], "eyebal": 4, "create_connect": 4, "happy_eyeballs_delai": 4, "interleav": [4, 53], "while": [4, 7, 11, 14, 16, 28, 34, 35, 40, 41, 43, 47, 48, 50, 51, 61, 62, 63, 64, 67, 68, 70, 74, 76, 77, 78, 79, 81, 82, 83, 86, 99, 110, 111, 115, 118, 119, 120, 121, 126, 127, 129, 131, 134, 135, 137, 146, 148, 150, 153, 154, 156, 157, 158], "dist": 4, "euclidean": 4, "distanc": [4, 11, 68], "point": [4, 5, 11, 13, 16, 30, 45, 46, 48, 51, 52, 65, 67, 68, 69, 71, 73, 74, 77, 79, 83, 86, 87, 88, 98, 102, 106, 109, 110, 111, 112, 121, 127, 137, 138, 146, 147, 150, 153, 155, 157], "hypot": 4, "dimens": 4, "prod": 4, "analog": [4, 11, 30, 32, 38, 86, 94, 122, 123], "sum": [4, 11, 17, 41, 68, 106, 112, 153], "product": [4, 11, 28, 86, 121, 122, 131], "combinator": 4, "perm": 4, "comb": 4, "isqrt": 4, "accur": [4, 64, 68, 87, 111], "squar": [4, 18, 45, 68, 137], "root": [4, 18, 45, 84, 86, 114, 147, 154], "convers": [4, 8, 11, 27, 30, 32, 71, 74, 79, 86, 126, 146, 150, 155], "factori": [4, 19, 87, 147], "unraisablehook": 4, "overridden": [4, 66, 70, 128], "how": [4, 11, 21, 30, 31, 42, 48, 61, 62, 63, 64, 68, 70, 71, 74, 79, 81, 82, 94, 98, 106, 119, 122, 123, 126, 129, 132, 137, 147, 148, 150, 152, 153], "unrais": 4, "5th": 5, "2020": [5, 39], "596": 5, "573": 5, "state": [5, 9, 11, 14, 16, 28, 30, 33, 36, 38, 41, 43, 44, 48, 49, 51, 52, 61, 62, 63, 65, 71, 79, 80, 86, 88, 94, 95, 114, 118, 120, 121, 124, 132, 133, 138, 140, 141, 142, 145, 146, 150, 153], "584": 5, "585": 5, "593": 5, "flexibl": [5, 41, 42, 114, 127, 152], "602": 5, "adopt": [5, 158], "annual": 5, "cycl": [5, 16, 37, 54, 58, 83, 86, 98, 118, 151, 158], "aim": [5, 146, 148, 149], "month": [5, 39, 95, 111], "614": 5, "relax": 5, "grammar": 5, "decor": [5, 137, 148, 158], "615": 5, "iana": [5, 107], "zone": 5, "databas": 5, "present": [5, 13, 19, 24, 38, 54, 68, 69, 91, 107, 110, 115, 137, 146, 147], "zoneinfo": 5, "616": 5, "prefix": [5, 7, 27, 48, 108, 112], "suffix": 5, "617": 5, "peg": 5, "__import__": 5, "script": [5, 11, 27, 30, 43, 46, 51, 68, 76, 77, 78, 79, 86, 117, 118, 121, 122, 123, 124, 127, 130, 151, 153], "ex": [5, 83, 121], "python3": [5, 146], "py": [5, 8, 11, 27, 46, 86, 117, 121, 126, 128, 130, 132, 147, 148, 149, 151, 153, 154, 155, 157], "becam": 5, "sometim": [5, 8, 94, 126, 150, 158], "valid": [5, 14, 16, 21, 37, 38, 43, 48, 49, 52, 68, 79, 89, 90, 92, 101, 105, 107, 115, 150, 153, 154], "much": [5, 21, 28, 41, 42, 43, 46, 61, 62, 63, 64, 68, 70, 71, 77, 78, 79, 81, 82, 85, 98, 99, 101, 103, 106, 126, 127, 147, 148, 155, 157], "parallel": [5, 56, 62, 80], "aclos": 5, "asend": 5, "athrow": 5, "ag_run": 5, "reflect": [5, 147, 153], "unexpect": [5, 8, 11, 34, 150, 157], "mask": [5, 9, 11, 43, 48, 49, 52, 79, 87, 88, 105, 141, 142], "typeerror": [5, 6, 9, 11, 17, 42], "indexof": 5, "countof": 5, "lambda": [5, 6, 38, 78, 98, 118, 150, 154], "part": [5, 16, 25, 38, 45, 46, 48, 68, 86, 95, 107, 111, 112, 121, 129, 146, 150, 151, 154, 155], "signific": [5, 30, 40, 96, 112, 137, 146, 150, 154, 155, 158], "concern": [5, 149], "reuse_address": 5, "create_datagram_endpoint": 5, "shutdown_default_executor": 5, "schedul": [5, 11, 27, 35, 46, 64, 79, 105, 111], "executor": 5, "wait": [5, 11, 14, 16, 27, 28, 30, 33, 34, 37, 43, 47, 48, 51, 60, 64, 66, 77, 79, 81, 83, 86, 88, 92, 96, 99, 100, 101, 106, 111, 119, 121, 129, 132, 150, 153, 156, 157], "threadpoolexecutor": 5, "finish": [5, 16, 77, 79, 86, 87, 88, 106, 121, 126, 129, 131, 156, 157], "pidfdchildwatch": 5, "child": [5, 154], "watcher": 5, "poll": [5, 11, 30, 43, 50, 67, 76, 77, 86, 106, 108, 111], "to_thread": 5, "cancel": [5, 11, 14, 16, 39, 77, 84, 121, 150, 157], "wait_for": [5, 11, 14], "typererror": 5, "incompat": [5, 154], "garbag": [5, 11, 27, 106, 131, 148], "resurrect": 5, "collector": [5, 11, 27, 131, 148], "lcm": [5, 83], "least": [5, 21, 33, 40, 43, 68, 77, 88, 96, 105, 106, 111, 112, 126, 146, 148, 154], "nextaft": 5, "after": [5, 6, 14, 16, 20, 23, 25, 30, 33, 34, 37, 42, 43, 44, 46, 51, 61, 62, 63, 64, 66, 68, 70, 75, 77, 78, 79, 81, 82, 84, 86, 87, 88, 92, 98, 99, 103, 108, 111, 117, 121, 124, 126, 127, 128, 131, 135, 136, 138, 139, 141, 146, 147, 150, 151, 152, 153, 156, 157], "toward": [5, 45, 69, 131], "ulp": 5, "pidfd_open": 5, "p_pidfd": 5, "unsetenv": [5, 9], "putenv": [5, 9], "waitstatus_to_exitcod": 5, "randbyt": 5, "platlibdir": 5, "stderr": [5, 11, 110], "buffer": [5, 11, 14, 16, 20, 28, 33, 34, 35, 38, 39, 40, 43, 46, 61, 62, 63, 64, 68, 71, 76, 79, 81, 82, 83, 87, 88, 89, 92, 96, 99, 100, 101, 106, 109, 112, 118, 121, 122, 131, 132, 146, 148], "interact": [5, 11, 106, 108, 148, 149, 150, 153, 156], "micropy_cpython_compat": 5, "sat": [6, 7, 9, 10], "01": [6, 7, 9, 10, 111], "feb": [6, 7, 9, 10], "2025": [6, 7, 9, 10, 116], "08": [6, 7, 9, 10], "46": [6, 7, 9, 10], "optimis": [6, 7, 9, 10, 16, 46, 146, 148, 151, 158], "workaround": [6, 7, 9, 10, 51], "sampl": [6, 7, 9, 10, 31, 32, 35, 40, 53, 77, 87, 88, 89, 96, 98, 118, 126], "print": [6, 7, 9, 10, 11, 16, 17, 19, 22, 33, 34, 38, 39, 40, 46, 48, 49, 50, 52, 64, 67, 68, 78, 81, 83, 86, 87, 88, 90, 92, 95, 96, 98, 110, 111, 112, 113, 118, 119, 126, 129, 137, 146, 147, 148, 150, 153, 154, 156, 157, 158], "cpy": [6, 7, 8, 9, 11], "recent": [6, 7, 9, 30, 157], "last": [6, 7, 9, 16, 30, 33, 34, 40, 43, 79, 86, 88, 92, 96, 99, 111, 121, 126, 151, 157], "stdin": [6, 7, 10, 11, 110, 157], "attributeerror": [6, 8, 9, 11, 17], "bin": [6, 7, 9, 10, 11, 17, 68, 123, 126, 130], "sh": [6, 7, 9, 10, 130], "port": [6, 7, 9, 10, 11, 14, 16, 21, 22, 27, 28, 30, 31, 34, 35, 37, 38, 39, 40, 42, 43, 46, 48, 49, 50, 51, 52, 56, 77, 78, 84, 86, 89, 90, 94, 102, 103, 105, 106, 107, 110, 111, 114, 121, 126, 130, 146, 147, 148, 151, 152, 153, 154, 156, 158], "highli": [6, 7, 12, 27, 28, 30], "optim": [6, 7, 23, 68, 79, 111, 112, 126, 131, 148], "happen": [6, 16, 40, 43, 51, 64, 65, 68, 103, 105, 106, 126, 150, 153], "bodi": [6, 104, 158], "report": [6, 11, 46, 64, 86, 114, 147, 150, 154], "l": [6, 13, 68, 109, 132, 139, 146, 153, 156], "foo": [6, 7, 19, 137, 146, 147, 150, 151, 154, 155, 156, 157, 158], "bar": [6, 7, 11, 19, 68, 79, 122, 137, 146, 150, 151, 158], "indexerror": [6, 11, 13, 17, 19, 26], "rang": [6, 7, 9, 10, 11, 13, 16, 17, 18, 31, 34, 37, 64, 66, 67, 68, 70, 74, 75, 79, 88, 89, 90, 95, 102, 103, 106, 111, 112, 118, 131, 137, 139, 140, 141, 145, 146, 147, 150, 154, 157, 158], "fulli": [6, 12, 16, 28, 68, 121, 131, 146, 158], "b": [6, 7, 9, 10, 13, 16, 19, 28, 33, 34, 36, 40, 48, 61, 62, 63, 64, 68, 70, 71, 79, 81, 82, 88, 90, 92, 96, 102, 103, 106, 109, 112, 118, 132, 135, 137, 139, 141, 146, 153, 156, 157, 158], "x01": [6, 9, 106, 157], "x02": [6, 9, 106], "x00": [6, 157], "strive": 6, "__mod__": 6, "sens": [6, 11, 30, 68, 86, 112, 123, 131], "leav": [6, 33, 68, 88, 121, 128, 153, 157], "you": [6, 9, 16, 21, 27, 29, 30, 33, 34, 37, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 96, 97, 98, 100, 101, 106, 110, 111, 112, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "interest": [6, 30, 61, 62, 63, 64, 68, 70, 74, 75, 81, 82, 108, 127], "don": [6, 8, 9, 11, 28, 34, 40, 42, 51, 68, 84, 87, 94, 98, 105, 106, 111, 117, 121, 128, 129, 130, 131, 132, 153, 155], "7": [6, 8, 10, 11, 16, 34, 43, 64, 66, 68, 77, 88, 89, 92, 95, 98, 99, 112, 118, 140, 145, 153, 154], "abc": [6, 43, 92, 99, 157], "utf8": [6, 68], "veri": [6, 46, 64, 68, 71, 77, 78, 79, 87, 96, 110, 111, 112, 121, 127, 129, 131, 148, 150, 153], "rare": [6, 147, 150, 151], "123": [6, 33, 34, 46, 88, 92, 118, 157], "3": [6, 7, 8, 9, 10, 11, 16, 19, 30, 34, 35, 40, 43, 46, 51, 52, 58, 64, 67, 68, 77, 79, 86, 87, 88, 89, 92, 96, 98, 99, 101, 106, 108, 112, 114, 117, 118, 119, 120, 123, 124, 131, 132, 135, 146, 149, 150, 153, 154, 157], "13": [6, 10, 16, 35, 37, 68, 95, 99, 111], "obj": [6, 17, 29, 105, 112], "operand": [6, 133, 134], "1g": 6, "9": [6, 8, 9, 10, 11, 16, 37, 43, 64, 68, 99, 102, 103, 112, 118, 120, 123, 154, 157], "1e": 6, "unless": [6, 16, 25, 33, 43, 61, 62, 63, 66, 68, 70, 76, 88, 99, 114, 126, 147, 150, 154], "realli": [6, 64, 76, 126, 128], "prefer": [6, 16, 24, 27, 48, 87, 103, 115, 130, 151], "http": [6, 11, 27, 48, 68, 90, 111, 112, 148, 155], "en": [6, 111], "wikipedia": [6, 111, 112], "wiki": [6, 111, 112, 138], "composition_over_inherit": 6, "__add__": [6, 11, 13], "42": [6, 9, 10, 34, 99], "84": [6, 98], "true": [6, 7, 14, 15, 16, 21, 30, 33, 34, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 76, 78, 79, 81, 82, 83, 84, 86, 88, 89, 94, 96, 99, 101, 102, 106, 107, 111, 113, 114, 118, 119, 129, 134, 146, 150, 151, 158], "fals": [6, 9, 14, 16, 21, 33, 38, 39, 41, 43, 46, 47, 48, 49, 50, 52, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 76, 79, 81, 82, 86, 88, 89, 92, 94, 96, 99, 101, 106, 107, 108, 113, 146, 151, 155, 158], "subtl": [6, 150], "fit": [6, 27, 48, 61, 62, 63, 64, 68, 70, 71, 79, 81, 82, 116, 126, 131, 146], "care": [6, 40, 59, 68, 71, 86, 112, 150], "big": [6, 68, 79, 109, 110, 111, 112, 131, 158], "overflowerror": [6, 9], "unsign": [6, 17, 37, 68, 89, 109, 112, 133, 134, 137, 139, 154, 157, 158], "del": [6, 7, 9, 27], "bytesio": [6, 11, 21, 24, 28, 46], "programm": [6, 127, 146, 158], "manual": [6, 7, 11, 16, 23, 41, 50, 68, 71, 74, 79, 111, 121, 137, 138, 148], "ensur": [6, 14, 16, 44, 61, 62, 63, 64, 70, 73, 79, 114, 126, 128, 135, 146, 150, 158], "worst": 6, "scenario": [6, 153], "freed": 6, "free": [6, 41, 46, 47, 64, 68, 71, 78, 81, 83, 84, 96, 105, 116, 121, 131, 146, 150, 153, 155], "bug": [6, 51, 126, 150], "corrupt": [6, 46, 79, 121, 147], "abcdefg": 6, "hijklmnop": 6, "11": [6, 10, 16, 33, 48, 52, 68, 77, 88, 98, 118, 154], "buffererror": 6, "export": [6, 156], "directli": [6, 7, 11, 13, 14, 41, 46, 68, 71, 74, 77, 87, 94, 98, 106, 110, 111, 123, 146, 148, 151, 152, 153, 155], "eg": [6, 30, 46, 84, 87, 118, 156], "easi": [6, 68, 78, 79, 120, 132], "altern": [6, 11, 38, 40, 46, 48, 68, 79, 86, 98, 112, 114, 126, 146, 151, 156, 158], "abcdefghi": 6, "acegi": 6, "aa": 7, "ab": [7, 11, 17, 45], "output": [7, 9, 10, 11, 14, 19, 21, 27, 34, 35, 37, 38, 43, 56, 57, 58, 62, 68, 71, 73, 74, 79, 82, 84, 89, 94, 97, 98, 99, 108, 110, 115, 118, 119, 123, 126, 130, 146, 148, 153, 156, 157, 158], "upi": [7, 8, 11, 138], "aa1": 7, "1ab": 7, "a1": [7, 153], "1a": 7, "balanc": [7, 52, 68, 79], "hello": [7, 118, 129, 132, 147], "world": [7, 68, 118, 120, 129, 132, 147], "microppython": 7, "text": [7, 11, 28, 68, 122, 146, 157], "depth": [7, 46, 68, 81], "hierarchi": [7, 11, 154], "overrid": [7, 11, 88, 96, 147, 155], "keep": [7, 39, 62, 68, 70, 77, 79, 95, 111, 117, 120, 126, 131, 150, 151, 154, 156, 158], "mind": [7, 27], "__str__": [7, 11, 94], "uniqu": [7, 30, 67, 68, 86, 148], "__print_str": 7, "do_print": 7, "example_str": 7, "class_item": 7, "26": [7, 10, 16, 115], "18": [7, 10, 16, 64, 68, 87, 154], "_foo__print_str": 7, "separ": [7, 13, 15, 19, 29, 40, 68, 106, 112, 148], "__new__": 7, "l1": 7, "ok": [7, 105, 157], "l2": 7, "d": [7, 13, 19, 21, 68, 91, 103, 109, 118, 126, 127, 131, 132, 146, 147, 150, 153, 156, 157], "exactli": [7, 14, 38, 41, 43, 45, 71, 90, 95, 101, 112, 118, 124, 150], "ram": [7, 11, 21, 23, 30, 46, 61, 62, 63, 64, 68, 71, 79, 82, 89, 126, 131, 147, 148, 151, 152, 153, 154, 155, 156, 157], "extern": [7, 11, 30, 38, 60, 77, 80, 82, 86, 91, 92, 95, 126, 147, 151], "func_x": 7, "__enter__": 7, "enter": [7, 16, 27, 30, 33, 88, 139, 146, 153, 157], "func": [7, 46, 110, 146, 158], "_": [7, 11, 150, 158], "maintain": [7, 61, 62, 63, 64, 68, 77, 79, 81, 82, 111, 127, 137, 148, 150, 152, 153], "slot": [7, 33, 68, 84, 88, 121, 146], "thu": [7, 28, 42, 68, 106, 110, 111, 134, 135, 137, 143, 144, 146, 148], "val": [7, 9, 13, 31, 32, 67, 69, 87], "expr": [7, 46], "modules3": 7, "beyond": [7, 27, 33, 48, 52, 88, 137, 148, 150], "minim": [7, 21, 110], "inher": [7, 28, 150], "portabl": [7, 41, 42, 106, 111], "github": [7, 128, 148, 153, 155, 156], "workspac": 7, "cpydiff": 7, "simplic": [7, 11, 111], "search": [7, 11, 16, 68, 103, 110, 117, 125, 126, 151, 153, 154, 155], "overhead": [7, 41, 152, 158], "instal": [7, 11, 24, 48, 77, 79, 106, 115, 121, 128, 130, 147, 148, 153, 156], "belong": 7, "compon": [7, 68, 111, 148], "your": [7, 11, 16, 21, 27, 30, 41, 46, 48, 52, 54, 64, 68, 77, 78, 79, 91, 97, 98, 106, 110, 111, 117, 118, 120, 121, 122, 123, 124, 125, 129, 130, 132, 147, 148, 151, 152, 153, 154, 155, 156, 157], "wide": [7, 41, 43, 68, 99, 107, 139, 148, 152], "modules2": 7, "subpkg": 7, "python": [8, 11, 16, 23, 28, 29, 30, 41, 46, 77, 91, 98, 101, 103, 108, 109, 110, 112, 114, 121, 123, 126, 127, 129, 130, 132, 137, 138, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158], "select": [8, 11, 25, 27, 34, 35, 38, 40, 43, 50, 68, 71, 74, 77, 86, 87, 89, 92, 98, 99, 101, 103, 106, 107, 118, 121, 126, 149, 151], "section": [8, 11, 27, 28, 47, 48, 60, 86, 118, 138, 139, 146, 153, 157], "behaviour": [8, 10, 16, 28, 30, 34, 38, 42, 46, 48, 87, 89, 99, 101, 105, 106, 107, 111, 134, 138, 147, 153, 158], "compar": [8, 9, 11, 68, 98, 110, 136, 139, 148], "conflict": [8, 28, 79], "nth": [8, 11], "greater": [8, 9, 11, 33, 68, 79, 87, 88, 102, 139, 157], "mp_small_int": [8, 11], "doesn": [8, 9, 11, 28, 40, 41, 68, 71, 77, 98, 103, 106, 111, 112, 121, 124, 126, 130, 131, 136, 138, 148, 154, 156, 157], "concaten": [8, 11, 13, 60, 85, 146], "adjac": [8, 11, 37], "brace": [8, 11], "pars": [8, 11, 29, 60, 68, 126], "resolv": [8, 11, 14, 16, 106, 151, 154], "unbalanc": [8, 11], "nest": [8, 11, 46, 112, 137, 139, 154], "bracket": [8, 11, 102], "__del__": [8, 11], "mro": [8, 11], "compliant": [8, 11, 158], "mangl": [8, 11], "__init__": [8, 11, 20, 147, 150, 155, 158], "segfault": [8, 11], "micropy_builtin_method_check_self_arg": [8, 11], "getter": [8, 11], "messag": [8, 11, 14, 33, 43, 77, 83, 88, 126, 150, 156], "__exit__": [8, 11], "aren": [8, 11, 28, 68, 126], "eval": [8, 10, 11, 17, 146, 148, 153, 157], "__all__": [8, 11], "unsupport": [8, 11], "__path__": [8, 11], "packag": [8, 11, 24, 27, 115, 121, 123, 130, 148, 149, 151, 153, 156], "singl": [8, 11, 13, 14, 16, 31, 37, 40, 41, 43, 46, 48, 53, 68, 74, 78, 79, 88, 89, 92, 99, 103, 107, 111, 126, 127, 135, 136, 137, 146, 147, 148, 150, 151, 153, 154, 155, 158], "namespac": [8, 11, 106], "across": [8, 11, 39, 41, 68, 111, 118, 126, 148, 152], "memoryview": [8, 11, 16, 17, 33, 39, 68, 77, 88, 148, 158], "save": [9, 11, 16, 28, 30, 41, 52, 55, 66, 68, 70, 71, 79, 117, 121, 126, 137, 139, 144, 146, 150, 157], "mark": [9, 30, 106, 146], "end": [9, 11, 13, 14, 19, 24, 28, 29, 34, 43, 44, 46, 68, 79, 89, 99, 103, 106, 109, 128, 137, 146, 150, 151, 153, 154, 155, 157], "whose": [9, 61, 62, 63, 64, 68, 81, 82, 89, 112, 141, 146], "signatur": [9, 23, 114, 147], "af_inet": [9, 11, 106], "sock_stream": [9, 11, 106, 107], "proto": [9, 106], "fileno": 9, "af": [9, 11, 94, 98, 106], "ipproto_tcp": [9, 11, 106], "follow": [9, 15, 16, 19, 27, 28, 30, 33, 34, 37, 38, 39, 41, 43, 46, 48, 52, 60, 64, 68, 79, 81, 84, 85, 86, 88, 94, 95, 98, 99, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 125, 128, 130, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158], "sock_dgram": [9, 11, 106], "individu": [9, 93, 99, 103, 112, 124, 148, 150], "implicit": [9, 11, 28, 111, 112, 153], "truncat": [9, 16], "257": 9, "sign": [9, 11, 17, 45, 53, 68, 86, 109, 111, 112, 133, 134, 137, 138, 139], "char": [9, 99, 109, 132], "deflt": 9, "256": [9, 21, 35, 61, 62, 63, 64, 68, 70, 81, 82, 88, 96, 98, 147, 157], "z": [9, 18, 19, 21, 68, 69, 86, 134, 136, 139], "dump": [9, 11, 21, 24, 29, 51, 90, 128, 146], "new_vari": 9, "prng": [9, 102], "32bit": 9, "util": [9, 11, 21, 71, 153, 155, 156], "lib": [9, 24, 27, 68, 85, 106, 110, 115, 146, 148, 151, 153, 155], "64": [9, 21, 24, 64, 68, 79, 88, 96, 99, 110, 112, 113], "5659439657125183944": 9, "abl": [9, 16, 21, 27, 43, 77, 79, 121, 123, 126, 128, 131, 148, 155], "cast": [9, 53, 68, 158], "larger": [9, 16, 68, 71, 77, 79, 109, 115, 121, 131, 147, 150], "wordsiz": 9, "340282366920938463463374607431768211455": 9, "bb": [9, 68], "fewer": 10, "len": [10, 11, 13, 16, 17, 19, 40, 43, 46, 61, 68, 71, 89, 91, 99, 101, 106, 121, 124, 137, 147], "15": [10, 16, 21, 46, 64, 68, 81, 87, 90, 98, 115, 157], "19": [10, 16, 64, 68, 154], "21": [10, 16, 21, 27, 39, 68, 115, 154], "22": [10, 16, 68, 90, 110, 154], "23": [10, 16, 68, 111, 118, 137, 154, 157], "24": [10, 16, 48, 53, 56, 62, 64, 80, 137], "25": [10, 16, 68, 98, 118, 123, 146], "27": [10, 16], "28": [10, 16, 64, 88], "29": [10, 16, 33, 68, 88], "31": [10, 86, 110, 111, 115, 137, 140, 141, 145], "33": [10, 137, 146], "34": [10, 68], "35": [10, 68, 88, 115], "36": [10, 39], "37": 10, "38": [10, 88], "39": 10, "41": [10, 118], "43": 10, "44": 10, "45": [10, 97, 118], "47": [10, 115], "48": [10, 118], "49": 10, "50": [10, 37, 55, 68, 77, 86, 118, 131, 147], "51": [10, 157], "52": 10, "53": 10, "54": 10, "55": 10, "56": 10, "57": 10, "58": 10, "59": [10, 111], "60": [10, 55, 56, 61, 62, 63, 64, 68, 82, 97, 118], "61": 10, "62": [10, 77], "63": 10, "67": [10, 37], "rebind": 10, "1and": 10, "1or": 10, "1if": 10, "1els": 10, "latin": 10, "small": [10, 21, 24, 30, 57, 58, 66, 68, 79, 112, 117, 121, 131, 137, 146, 148, 152, 154, 158], "letter": [10, 13, 48, 94, 103, 146], "micro": [11, 16, 72, 79, 86, 110, 121, 146], "__setitem__": [11, 13], "__len__": [11, 13], "__iadd__": [11, 13], "__repr__": [11, 13], "current_task": [11, 14], "sleep": [11, 14, 30, 38, 39, 48, 69, 79, 86, 90, 95, 111, 118, 123, 153, 157], "sleep_m": [11, 14, 30, 67, 78, 111, 118], "wait_for_m": [11, 14], "gather": [11, 14], "is_set": [11, 14], "clear": [11, 14, 16, 27, 33, 48, 49, 61, 62, 63, 68, 79, 88, 98, 118, 121, 131, 134, 139, 141, 142, 150, 153], "threadsafeflag": [11, 150], "lock": [11, 46, 47, 68, 111, 150], "acquir": [11, 14, 47, 146, 150], "tcp": [11, 51, 106, 126, 153], "open_connect": [11, 14], "start_serv": [11, 14], "get_extra_info": [11, 14], "wait_clos": [11, 14], "readexactli": [11, 14], "readlin": [11, 14, 43, 46, 99, 101, 106], "drain": [11, 14, 35, 38, 94, 120], "get_event_loop": [11, 14], "new_event_loop": [11, 14], "run_forev": [11, 14], "run_until_complet": [11, 14], "set_exception_handl": [11, 14], "get_exception_handl": [11, 14], "default_exception_handl": [11, 14], "call_exception_handl": [11, 14], "hexlifi": [11, 15, 25, 52], "unhexlifi": [11, 15], "a2b_base64": [11, 15], "chr": [11, 17, 46, 101], "delattr": [11, 17], "dir": [11, 17, 84, 153, 157], "divmod": [11, 17], "enumer": [11, 17, 52, 68], "exec": [11, 17, 146, 153, 156], "filter": [11, 17, 33, 48, 53, 60, 72, 75, 88, 98, 106, 124, 126], "frozenset": [11, 17], "getattr": [11, 17], "hasattr": [11, 17], "hex": [11, 17, 112, 137, 153], "id": [11, 16, 17, 19, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 48, 49, 51, 59, 65, 67, 68, 76, 77, 78, 79, 86, 88, 93, 94, 97, 98, 101, 108, 117, 121, 122, 129, 130, 153], "from_byt": [11, 17], "to_byt": [11, 17], "isinst": [11, 17], "issubclass": [11, 17], "max": [11, 17, 64, 68, 79, 81, 86, 110], "min": [11, 17, 26, 64, 68, 79, 81, 101], "oct": [11, 17], "open": [11, 14, 17, 21, 24, 28, 38, 41, 51, 52, 68, 70, 94, 102, 112, 114, 120, 121, 122, 127, 130, 146, 147, 148, 153], "ord": [11, 17, 68], "round": [11, 16, 17, 37, 45, 68, 150], "setattr": [11, 17], "sort": [11, 17, 68, 79, 132], "assertionerror": [11, 17], "keyerror": [11, 17], "memoryerror": [11, 17, 46, 77], "notimplementederror": [11, 17], "oserror": [11, 14, 17, 21, 22, 34, 60, 99, 105, 106, 107, 114], "runtimeerror": [11, 17, 46, 150], "systemexit": [11, 17, 110], "zerodivisionerror": [11, 17], "mathemat": [11, 27, 111], "co": [11, 18, 45], "exp": [11, 18, 45], "log": [11, 18, 45, 68], "log10": [11, 18, 45], "polar": [11, 18, 40, 68, 96, 98, 118], "rect": [11, 18, 73, 79], "sin": [11, 18, 45, 89, 119], "sqrt": [11, 18, 45, 68, 136], "pi": [11, 18, 45, 89, 155], "appendleft": [11, 19], "pop": [11, 19, 26, 137, 138], "popleft": [11, 19], "errno": [11, 27, 106, 114], "errorcod": [11, 22], "mem_alloc": [11, 23, 146], "mem_fre": [11, 23, 146], "threshold": [11, 23, 72, 73, 75, 79, 126, 146], "gzip": [11, 21, 27, 115], "gzipfil": [11, 21, 24], "algorithm": [11, 21, 24, 27, 46, 68, 75, 79, 115, 131, 150], "sha256": [11, 25, 153], "sha1": [11, 25], "md5": [11, 25], "digest": [11, 25, 104], "hexdigest": [11, 25], "queue": [11, 14, 19, 27, 46, 150], "heappush": [11, 26], "heappop": [11, 26], "heapifi": [11, 26], "conceptu": 11, "stringio": [11, 28], "getvalu": [11, 21, 28], "aco": [11, 45], "acosh": [11, 45], "asin": [11, 45], "asinh": [11, 45], "atan": [11, 45], "atan2": [11, 45], "atanh": [11, 45], "ceil": [11, 45, 79], "copysign": [11, 45], "cosh": [11, 45], "degre": [11, 45, 61, 62, 63, 64, 68, 69, 70, 79, 81, 82, 87, 97, 118], "erf": [11, 45], "erfc": [11, 45], "expm1": [11, 45], "fab": [11, 45], "floor": [11, 45, 53], "fmod": [11, 45], "frexp": [11, 45], "gamma": [11, 45, 68], "isfinit": [11, 45], "isinf": [11, 45], "isnan": [11, 45], "ldexp": [11, 45], "lgamma": [11, 45], "log2": [11, 45], "modf": [11, 45], "radian": [11, 45, 68, 119], "sinh": [11, 45], "tan": [11, 45], "tanh": [11, 45], "trunc": [11, 45], "basic": [11, 18, 27, 45, 67, 88, 92, 94, 104, 112, 118, 126, 150], "unam": [11, 84], "chdir": [11, 84, 147, 153], "getcwd": [11, 84], "ilistdir": [11, 84], "listdir": [11, 84], "mkdir": [11, 22, 84, 153, 156], "rmdir": [11, 84, 153, 156], "stat": [11, 84, 113, 114], "statvf": [11, 84], "termin": [11, 50, 68, 77, 110, 122, 137, 150, 153, 157], "redirect": 11, "duplic": [11, 24, 48, 112, 115, 148], "dupterm": [11, 84], "mount": [11, 86, 117, 121, 126, 147, 152, 153], "umount": [11, 84, 86, 114, 147, 152, 153], "vfsfat": [11, 84, 114, 147, 152], "vfslfs1": [11, 84, 114, 152], "vfslfs2": [11, 84, 114, 147, 152], "vfsposix": [11, 84, 114, 152], "identifi": [11, 16, 27, 30, 31, 32, 33, 34, 35, 36, 38, 48, 51, 84, 88, 106, 110, 112, 148], "python_compil": [11, 85], "libc_ver": [11, 85], "getrandbit": [11, 102], "randint": [11, 102], "randrang": [11, 102], "uniform": [11, 102], "seed": [11, 102], "choic": [11, 102, 111, 126], "regex": 11, "regist": [11, 16, 30, 33, 34, 43, 60, 64, 65, 67, 69, 77, 78, 79, 80, 83, 86, 88, 90, 94, 98, 101, 105, 106, 110, 112, 133, 137, 138, 139, 141, 142, 144, 148, 151, 158], "unregist": [11, 105], "ipol": [11, 105], "getaddrinfo": [11, 14, 48, 106], "inet_ntop": [11, 106], "inet_pton": [11, 106], "af_inet6": [11, 106], "ipproto_udp": [11, 106], "recv": [11, 33, 48, 88, 92, 96, 99, 100, 101, 106, 107, 118, 150], "sendto": [11, 106], "recvfrom": [11, 106], "settimeout": [11, 106], "setblock": [11, 106], "makefil": [11, 106, 151, 154], "wrap_socket": [11, 107], "load_cert_chain": [11, 107], "load_verify_loc": [11, 107], "set_ciph": [11, 107], "verify_mod": [11, 107], "sslerror": [11, 107], "protocol_tls_cli": [11, 107], "protocol_tls_serv": [11, 107], "cert_non": [11, 107], "cert_opt": [11, 107], "cert_requir": [11, 107], "pack": [11, 27, 68, 77, 112, 132], "primit": [11, 27, 112], "calcsiz": [11, 109], "pack_into": [11, 109], "unpack_from": [11, 109], "atexit": [11, 110], "print_except": [11, 110], "settrac": [11, 110], "argv": [11, 110], "byteord": [11, 17, 110], "maxsiz": [11, 110], "ps1": [11, 110], "ps2": [11, 110], "stdout": [11, 110], "tracebacklimit": [11, 110], "version_info": [11, 110], "gmtime": [11, 111], "localtim": [11, 111], "mktime": [11, 111], "sleep_u": [11, 111, 118], "ticks_m": [11, 111, 118], "ticks_u": [11, 111, 158], "ticks_cpu": [11, 111], "ticks_add": [11, 111], "ticks_diff": [11, 111, 118, 158], "tick": [11, 70, 86, 95, 98, 111, 129, 158], "fp": [11, 68, 79, 111, 126, 129], "avg": [11, 111], "multithread": [11, 27], "bluetooth": [11, 27, 126], "low": [11, 27, 30, 34, 38, 41, 43, 49, 64, 68, 77, 79, 91, 94, 98, 99, 108, 115, 118, 120, 123, 127, 131, 142, 155], "ble": [11, 137, 139], "config": [11, 16, 21, 24, 41, 48, 49, 50, 52, 152, 153], "irq": [11, 14, 16, 30, 35, 38, 39, 42, 43, 46, 50, 86, 98, 101, 108], "broadcast": [11, 48, 52, 82], "role": 11, "advertis": [11, 48], "gap_advertis": [11, 16], "observ": 11, "scanner": 11, "gap_scan": [11, 16], "central": 11, "gap_connect": [11, 16], "peripher": [11, 30, 34, 35, 38, 42, 43, 55, 88, 92, 94, 96, 98, 100, 112, 148, 158], "gap_disconnect": [11, 16], "gatt": 11, "gatts_register_servic": [11, 16], "gatts_read": [11, 16], "gatts_writ": [11, 16], "gatts_notifi": [11, 16], "gatts_ind": [11, 16], "gatts_set_buff": [11, 16], "gattc_discover_servic": [11, 16], "gattc_discover_characterist": [11, 16], "gattc_discover_descriptor": [11, 16], "gattc_read": [11, 16], "gattc_writ": [11, 16], "gattc_exchange_mtu": [11, 16], "l2cap": 11, "orient": [11, 68], "channel": [11, 31, 32, 35, 42, 48, 51, 52, 53, 57, 58, 61, 62, 63, 64, 68, 70, 74, 79, 81, 82, 83, 86, 87, 108, 118, 126, 153], "l2cap_listen": [11, 16], "l2cap_connect": [11, 16], "l2cap_disconnect": [11, 16], "l2cap_send": [11, 16], "l2cap_recvinto": [11, 16], "pair": [11, 14, 19, 28, 38, 53, 88, 106, 118, 148], "bond": 11, "gap_pair": [11, 16], "gap_passkei": [11, 16], "uuid": 11, "cryptolib": [11, 27], "cryptograph": [11, 25, 27], "ae": [11, 20], "encrypt": [11, 16, 20, 51, 107], "decrypt": [11, 20], "deflat": [11, 24, 27, 115], "deflateio": [11, 21, 24, 115], "auto": [11, 21, 79, 115, 126, 147], "machin": [11, 14, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 67, 74, 75, 79, 84, 98, 108, 110, 111, 112, 118, 122, 123, 132, 137, 146, 148, 150, 152, 153, 154, 157, 158], "hardwar": [11, 27, 28, 34, 37, 38, 39, 40, 41, 43, 48, 49, 51, 52, 82, 84, 86, 88, 92, 96, 99, 102, 108, 111, 112, 114, 122, 126, 146, 148, 150], "mem8": [11, 30, 108], "mem16": [11, 30, 108, 158], "mem32": [11, 30, 108, 137], "soft_reset": [11, 30, 39, 153, 157], "reset_caus": [11, 30], "bootload": [11, 30, 86, 117, 153, 157], "disable_irq": [11, 30, 86, 150, 157], "enable_irq": [11, 30, 86, 150, 157], "power": [11, 16, 38, 45, 49, 52, 55, 59, 64, 68, 79, 83, 95, 97, 106, 111, 112, 117, 118, 121, 123, 124, 126, 127, 128, 129, 142, 146, 147, 148, 150], "freq": [11, 30, 34, 37, 42, 54, 67, 77, 87, 88, 89, 98, 118, 150, 157], "idl": [11, 30, 38, 39, 40, 43, 77, 96, 118, 157], "lightsleep": [11, 30], "deepsleep": [11, 30, 38, 39, 157], "unique_id": [11, 30, 86, 157], "time_pulse_u": [11, 30], "bitstream": [11, 30], "pwron_reset": [11, 30], "hard_reset": [11, 30, 86], "wdt_reset": [11, 30], "deepsleep_reset": [11, 30], "wlan_wak": [11, 30], "pin_wak": [11, 30], "rtc_wake": [11, 30], "pin": [11, 14, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 47, 49, 51, 57, 58, 61, 62, 63, 64, 67, 77, 79, 82, 86, 87, 88, 89, 92, 96, 97, 98, 99, 108, 111, 119, 120, 121, 123, 129, 131, 132, 148, 150, 157, 158], "init": [11, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 51, 53, 59, 64, 81, 82, 88, 89, 92, 94, 96, 98, 99, 101, 118, 150], "__call__": [11, 38, 71], "off": [11, 14, 33, 36, 38, 40, 41, 43, 53, 61, 62, 63, 68, 79, 86, 88, 92, 93, 94, 96, 99, 115, 118, 121, 124, 126, 129, 131, 137, 157, 158], "pull": [11, 34, 38, 41, 77, 90, 94, 98, 118, 120], "drive": [11, 38, 43, 54, 56, 61, 62, 63, 80, 89, 94, 99, 117, 122, 126], "toggl": [11, 36, 38, 93, 98, 118, 123, 124, 150, 158], "IN": [11, 38, 49, 94, 116, 118, 120], "open_drain": [11, 38], "alt": [11, 38, 94, 98], "alt_open_drain": [11, 38], "pull_up": [11, 38, 90, 94, 118, 120], "pull_down": [11, 38, 90, 94, 120], "pull_hold": [11, 38], "drive_0": [11, 38], "drive_1": [11, 38], "drive_2": [11, 38], "irq_fal": [11, 38, 90, 98], "irq_ris": [11, 38, 90, 118], "irq_low_level": [11, 38], "irq_high_level": [11, 38], "devic": [11, 16, 27, 30, 34, 35, 40, 43, 44, 47, 48, 62, 77, 86, 91, 92, 99, 101, 107, 108, 117, 118, 121, 123, 130, 146, 148, 150, 151, 153, 155, 157, 158], "led": [11, 14, 30, 41, 77, 86, 98, 121, 122, 123, 126, 127, 150, 158], "boardnam": [11, 36], "adc": [11, 30, 38, 79, 86, 94, 98, 119, 123, 133, 158], "digit": [11, 16, 30, 35, 38, 41, 79, 86, 94, 98, 103, 123, 148], "read_u16": [11, 31, 118], "read_uv": [11, 31, 32], "adcblock": [11, 30, 31], "area": [11, 30, 61, 62, 63, 64, 68, 70, 74, 79, 81, 82, 86, 108, 126], "network": [11, 25, 27, 30, 49, 51, 52, 78, 84, 86, 106, 107, 109, 111, 112, 126, 148, 153, 155], "commun": [11, 30, 34, 40, 41, 60, 77, 83, 86, 92, 132, 158], "bu": [11, 30, 41, 60, 64, 67, 77, 80, 83, 86, 92, 96, 100, 101, 108, 123, 131, 132], "deinit": [11, 33, 35, 37, 39, 40, 42, 43, 57, 58, 61, 62, 63, 64, 81, 82, 83, 88, 89, 92, 96, 98, 99, 118], "restart": [11, 33, 39, 44, 83, 88, 126, 153], "info": [11, 33, 79, 86, 88, 95, 108, 157], "setfilt": [11, 33, 88], "clearfilt": [11, 33, 88], "rxcallback": [11, 33, 88], "normal": [11, 23, 28, 33, 38, 41, 43, 46, 68, 71, 75, 79, 88, 89, 94, 107, 111, 112, 121, 136, 137, 146, 147, 150, 153, 154, 157], "loopback": [11, 33, 88], "silent": [11, 33, 88], "silent_loopback": [11, 33, 88], "error_act": [11, 33, 88], "error_warn": [11, 33, 88], "error_pass": [11, 33, 88], "bus_off": [11, 33, 88], "list32": [11, 33, 88], "dual": [11, 33, 53, 88], "pwm": [11, 30, 41, 54, 56, 97, 98, 124], "puls": [11, 30, 97, 98], "width": [11, 30, 40, 61, 62, 63, 64, 66, 67, 68, 70, 75, 79, 81, 82, 88, 92, 97, 98, 133, 134, 139, 140, 143, 145], "duty_u16": [11, 37, 118], "duty_n": [11, 37, 118], "uart": [11, 16, 30, 50, 68, 86, 122, 123, 146, 148, 150, 155, 158], "duplex": [11, 30, 86], "serial": [11, 30, 35, 48, 77, 86, 101, 121, 122, 123, 132, 148, 153, 156, 157], "sendbreak": [11, 43, 99], "flush": [11, 14, 28, 43, 68, 70, 79, 148], "txdone": [11, 43], "rt": [11, 43, 101, 140, 145], "ct": [11, 43, 101], "irq_rxidl": [11, 43, 50], "irq_rx": [11, 43, 101], "irq_txidl": [11, 43], "irq_break": [11, 43], "spi": [11, 30, 56, 68, 86, 108, 123, 146, 150], "softspi": [11, 40, 118], "write_readinto": [11, 40, 118], "msb": [11, 40, 96, 134, 154], "lsb": [11, 40, 96, 154], "i2c": [11, 30, 60, 64, 67, 68, 81, 86, 94, 96, 123, 146, 150], "wire": [11, 30, 41, 86], "softi2c": [11, 34, 118], "scan": [11, 16, 34, 48, 51, 52, 64, 68, 81, 92, 118, 121, 126, 153], "readfrom": [11, 34, 118], "readfrom_into": [11, 34], "writeto": [11, 34, 118], "writevto": [11, 34], "readfrom_mem": [11, 34], "readfrom_mem_into": [11, 34], "writeto_mem": [11, 34], "i2": [11, 30], "inter": [11, 30, 83], "ic": [11, 30, 98, 121], "sound": [11, 30, 87], "shift": [11, 35, 74, 112], "rx": [11, 16, 33, 35, 43, 49, 68, 77, 88, 99, 118, 132, 148], "tx": [11, 16, 33, 35, 43, 49, 77, 88, 99, 118, 132, 148], "stereo": [11, 35], "mono": [11, 35], "rtc": [11, 30, 86, 107, 111, 153], "real": [11, 18, 30, 41, 68, 86, 106, 111, 114, 120, 150], "alarm": [11, 39], "alarm_left": [11, 39], "alarm0": [11, 39], "timer": [11, 30, 37, 47, 58, 77, 86, 87, 89, 95, 97, 111, 124, 150], "one_shot": [11, 42, 118], "period": [11, 30, 35, 37, 39, 42, 44, 70, 86, 87, 95, 98, 99, 106, 111, 118, 146, 150, 158], "wdt": [11, 30], "watchdog": [11, 30, 34], "feed": [11, 25, 44, 68, 146], "const": [11, 16, 30, 46, 137, 146, 150], "opt_level": [11, 46, 151], "alloc_emergency_exception_buf": [11, 42, 46, 98, 150], "mem_info": [11, 46, 146, 153], "qstr_info": [11, 46, 146], "stack_us": [11, 46], "heap_lock": [11, 46], "heap_unlock": [11, 46], "kbd_intr": [11, 46], "ringio": [11, 46], "adapt": [11, 68, 146, 148, 158], "abstractn": [11, 48, 50, 52], "disconnect": [11, 16, 48, 50, 51, 52, 121, 126, 129, 153], "isconnect": [11, 48, 49, 50, 51, 52, 78, 80, 86, 101], "ipconfig": [11, 48, 49, 50, 52, 153], "ifconfig": [11, 48, 49, 50, 51, 52], "winc": [11, 48], "wifi": [11, 27, 30, 48, 78, 122, 153, 157], "shield": [11, 27, 48, 63, 64, 79, 81, 126], "driver": [11, 16, 28, 40, 48, 49, 50, 52, 68, 79, 86, 90, 96, 98, 114, 121, 126, 130, 132, 147, 148, 150, 151, 153, 158], "start_ap": [11, 51], "connected_sta": [11, 51], "wait_for_sta": [11, 51], "netinfo": [11, 51], "rssi": [11, 16, 48, 51, 52], "fw_version": [11, 51], "fw_dump": [11, 51], "fw_updat": [11, 51], "wpa_psk": [11, 51], "802_1x": [11, 51], "mode_sta": [11, 51], "mode_ap": [11, 51], "mode_p2p": [11, 51], "mode_bsp": [11, 51], "mode_firmwar": [11, 51], "wlan": [11, 48, 51, 77, 78, 153], "pm_perform": [11, 52], "pm_powersav": [11, 52], "pm_none": [11, 52], "lan": [11, 48, 77, 78], "ethernet": [11, 48], "ppp": [11, 48], "sec_non": [11, 50], "sec_pap": [11, 50], "sec_chap": [11, 50], "countri": [11, 48], "hostnam": [11, 48, 52, 107], "phy_mod": [11, 48], "openamp": [11, 27], "asymmetr": [11, 27], "multiprocess": [11, 27], "amp": [11, 27, 89], "new_service_callback": [11, 83], "endpoint": [11, 31, 102], "is_readi": [11, 83, 92], "remoteproc": 11, "uctyp": [11, 27, 137, 146], "layout": [11, 147], "content": [11, 13, 28, 33, 88, 104, 126, 130, 133, 137, 140, 141, 143, 144, 145, 150, 153, 154, 155, 156], "little_endian": [11, 112], "big_endian": [11, 112], "sizeof": [11, 112], "addressof": [11, 112, 137], "bytes_at": [11, 112], "bytearray_at": [11, 112], "uint8": [11, 71, 74, 112], "int8": [11, 71, 74, 112], "uint16": [11, 112], "int16": [11, 71, 112], "uint32": [11, 112], "int32": [11, 112], "uint64": [11, 112], "int64": [11, 112], "float32": [11, 68, 71, 112], "float64": [11, 112], "void": [11, 109, 112], "ptr": [11, 112, 158], "mutex": [11, 27, 77, 150], "ping": [11, 27], "request": [11, 16, 27, 30, 33, 34, 40, 48, 86, 87, 88, 92, 96, 106, 151], "respons": [11, 16, 68, 77, 108, 111, 114, 125, 150], "header": [11, 21, 24, 60, 104, 108, 112, 115, 129], "head": [11, 104, 118, 146], "put": [11, 30, 46, 51, 69, 79, 86, 104, 106, 118, 119, 123, 124, 126, 129, 135, 136, 137, 150, 158], "vf": [11, 27, 84, 86, 91, 152, 153], "mkf": [11, 86, 114, 147], "abstractblockdev": [11, 86, 91, 114, 147], "readblock": [11, 86, 91, 114, 147], "writeblock": [11, 86, 91, 114, 147], "openmv": [11, 33, 54, 55, 57, 63, 64, 65, 68, 69, 71, 77, 78, 79, 80, 86, 91, 92, 101, 116, 117, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 132], "cam": [11, 33, 54, 55, 57, 63, 64, 68, 69, 71, 77, 78, 79, 86, 91, 92, 101, 117, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 132], "pyb": [11, 14, 27, 33, 37, 47, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 118, 119, 120, 122, 124, 132, 147, 150, 156, 157], "board": [11, 14, 16, 21, 25, 27, 30, 33, 34, 35, 36, 41, 42, 48, 49, 50, 53, 63, 69, 76, 84, 91, 94, 98, 110, 111, 123, 124, 126, 127, 128, 131, 147, 148, 150, 153, 155, 156, 157], "delai": [11, 38, 42, 43, 66, 79, 86, 111, 119, 146, 150, 153, 158], "udelai": [11, 86], "milli": [11, 16, 69, 86], "elapsed_milli": [11, 86], "elapsed_micro": [11, 86], "fault_debug": [11, 86], "wfi": [11, 86, 142], "standbi": [11, 86, 87, 95], "have_cdc": [11, 86], "hid": [11, 86], "main": [11, 14, 30, 46, 47, 79, 86, 96, 117, 126, 128, 131, 132, 147, 151, 153, 154, 155, 156], "repl_uart": [11, 86], "rng": [11, 86, 150, 157], "usb_mod": [11, 86, 100], "hid_mous": [11, 86], "hid_keyboard": [11, 86], "read_tim": [11, 87], "adcal": 11, "list16": [11, 88], "mask16": [11, 88], "mask32": [11, 88], "dac": [11, 56, 86, 98, 119, 123], "nois": [11, 53, 68, 79, 89], "triangl": [11, 89], "write_tim": [11, 89], "extint": [11, 86, 118], "reg": [11, 67, 79, 90, 94], "swint": [11, 90], "irq_rising_fal": [11, 90], "flash": [11, 71, 86, 87, 114, 122, 126, 127, 128, 147, 148, 150, 151, 153, 155], "mem_read": [11, 92, 118], "mem_writ": [11, 92, 118], "mapper": [11, 90, 94], "af_list": [11, 94], "gpio": [11, 38, 41, 43, 57, 61, 62, 63, 90, 94, 98, 108, 111, 122, 123, 148, 158], "af_od": [11, 94], "af_pp": [11, 94], "out_od": [11, 94, 120], "out_pp": [11, 94, 118, 120], "pull_non": [11, 90, 94, 118], "pinaf": [11, 86], "wakeup": [11, 86, 95], "calibr": [11, 31, 64, 79, 87, 95, 97], "servo": [11, 86, 98, 123], "hobbi": [11, 86], "angl": [11, 68, 69, 97, 118], "pulse_width": [11, 97, 98], "driven": [11, 38, 40, 49, 86, 98], "send_recv": [11, 96, 118], "callback": [11, 14, 16, 30, 33, 35, 38, 39, 42, 46, 47, 53, 60, 64, 65, 71, 72, 77, 79, 80, 83, 88, 90, 95, 98, 101, 118], "counter": [11, 20, 28, 86, 98, 111, 112, 118, 119, 138, 139, 150], "prescal": [11, 88, 96, 98], "source_freq": [11, 98], "timerchannel": [11, 86], "setup": [11, 51, 61, 62, 63, 64, 66, 68, 70, 77, 78, 79, 81, 82, 86, 111, 122, 126, 127, 129, 153], "pulse_width_perc": [11, 98, 118], "center": [11, 61, 62, 63, 64, 68, 70, 74, 79, 81, 82, 98], "brk_off": [11, 98], "brk_low": [11, 98], "brk_high": [11, 98], "readchar": [11, 99], "writechar": [11, 99], "flow": [11, 16, 43, 68, 101, 157], "transmitt": [11, 148], "usb_hid": [11, 86], "usb": [11, 30, 86, 91, 117, 122, 126, 147, 148, 152, 153, 155, 156, 157], "human": [11, 86, 121], "usb_vcp": [11, 86], "comm": [11, 86], "setinterrupt": [11, 101], "debug_mode_en": [11, 101], "stm": [11, 27, 94, 137, 158], "stm32": [11, 16, 27, 30, 33, 38, 43, 57, 123, 131, 146, 151, 153, 156], "mcu": [11, 27, 30, 34, 42, 43, 86, 87, 88, 91, 112, 128, 148, 158], "gpioa": [11, 30, 108, 158], "gpiob": [11, 108], "gpio_bsrr": [11, 30, 108], "gpio_idr": [11, 30, 108], "gpio_odr": [11, 108, 158], "stm32wbxx": 11, "rfcore_statu": [11, 108], "rfcore_fw_vers": [11, 108], "rfcore_sys_hci": [11, 108], "stm32wlxx": 11, "subghz_c": [11, 108], "subghz_irq": [11, 108], "subghz_is_busi": [11, 108], "sensor": [11, 34, 41, 61, 62, 63, 66, 68, 70, 78, 82, 87, 126, 127, 129, 131, 148, 150], "camera": [11, 27, 61, 62, 63, 64, 66, 68, 69, 70, 78, 81, 82, 98, 118, 121, 124, 126, 127, 129], "snapshot": [11, 61, 62, 63, 64, 66, 68, 70, 78, 79, 81, 82, 126, 129, 131], "skip_fram": [11, 61, 62, 63, 64, 66, 70, 79, 81, 82, 129], "height": [11, 61, 62, 63, 64, 66, 67, 68, 70, 75, 79, 81, 82], "get_fb": [11, 79], "get_id": [11, 79], "alloc_extra_fb": [11, 79, 131], "dealloc_extra_fb": [11, 79], "set_pixformat": [11, 61, 62, 63, 64, 66, 70, 79, 81, 82, 129], "get_pixformat": [11, 79], "set_frames": [11, 61, 62, 63, 64, 66, 70, 79, 81, 82, 129], "get_frames": [11, 79], "set_framer": [11, 79], "get_framer": [11, 79], "set_window": [11, 68, 79], "get_window": [11, 79], "set_gainceil": [11, 79], "set_contrast": [11, 79], "set_bright": [11, 79], "set_satur": [11, 79], "set_qual": [11, 79], "set_colorbar": [11, 79], "set_auto_gain": [11, 79], "get_gain_db": [11, 79], "set_auto_exposur": [11, 79], "get_exposure_u": [11, 79], "set_auto_whiteb": [11, 79], "get_rgb_gain_db": [11, 79], "set_auto_blc": [11, 79], "get_blc_reg": [11, 79], "set_hmirror": [11, 79], "get_hmirror": [11, 79], "set_vflip": [11, 79], "get_vflip": [11, 79], "set_transpos": [11, 79], "get_transpos": [11, 79], "set_auto_rot": [11, 79], "get_auto_rot": [11, 79], "set_framebuff": [11, 79], "get_framebuff": [11, 79], "disable_delai": [11, 79], "disable_full_flush": [11, 79], "set_lens_correct": [11, 79], "set_vsync_callback": [11, 79], "set_frame_callback": [11, 79], "get_frame_avail": [11, 64, 79], "set_color_palett": [11, 79], "get_color_palett": [11, 79], "__write_reg": [11, 69, 79], "__read_reg": [11, 69, 79], "grayscal": [11, 61, 62, 63, 64, 66, 68, 70, 74, 79, 81, 82, 126, 129], "rgb565": [11, 61, 62, 63, 64, 66, 68, 70, 79, 81, 82, 126, 129], "bayer": [11, 68, 79], "yuv422": [11, 68, 79], "jpeg": [11, 68, 70, 76, 77, 78, 79, 126], "ov2640": [11, 78, 79], "ov5640": [11, 78, 79], "ov7690": [11, 79], "ov7725": [11, 68, 79], "ov9650": [11, 79], "mt9v022": [11, 79], "mt9v024": [11, 79], "mt9v032": [11, 79], "mt9v034": [11, 79], "mt9m114": [11, 79], "lepton": [11, 64, 68, 79], "hm01b0": [11, 79], "hm0360": [11, 79], "gc2145": [11, 79], "pag7920": [11, 79], "paj6100": [11, 79], "frogeye2020": [11, 79], "qqcif": [11, 79], "qcif": [11, 79], "cif": [11, 79], "qqsif": [11, 79], "qsif": [11, 79], "sif": [11, 79, 82], "qqqqvga": [11, 79], "qqqvga": [11, 79], "qqvga": [11, 66, 79], "qvga": [11, 56, 64, 70, 79, 81, 129], "vga": [11, 56, 79], "hqqqqvga": [11, 79], "hqqqvga": [11, 79], "hqqvga": [11, 79], "hqvga": [11, 79], "hvga": [11, 79], "b64x32": [11, 79], "b64x64": [11, 68, 79], "b128x64": [11, 79], "b128x128": [11, 79], "b160x160": [11, 79], "b320x320": [11, 79], "lcd": [11, 56, 59, 61, 62, 63, 79, 80, 82], "qqvga2": [11, 79], "wvga": [11, 79], "wvga2": [11, 79], "svga": [11, 56, 79], "xga": [11, 56, 79], "wxga": [11, 79], "sxga": [11, 56, 79], "sxgam": [11, 79], "uxga": [11, 56, 79], "hd": [11, 56, 79], "fhd": [11, 56, 79], "qhd": [11, 79], "qxga": [11, 79], "wqxga": [11, 79], "wqxga2": [11, 79], "ioctl_set_readout_window": [11, 79], "ioctl_get_readout_window": [11, 79], "ioctl_set_triggered_mod": [11, 79], "ioctl_get_triggered_mod": [11, 79], "ioctl_set_fov_wid": [11, 79], "ioctl_get_fov_wid": [11, 79], "ioctl_trigger_auto_focu": [11, 79], "ioctl_pause_auto_focu": [11, 79], "ioctl_reset_auto_focu": [11, 79], "ioctl_wait_on_auto_focu": [11, 79], "ioctl_set_night_mod": [11, 79], "ioctl_get_night_mod": [11, 79], "ioctl_lepton_get_width": [11, 79], "ioctl_lepton_get_height": [11, 79], "ioctl_lepton_get_radiometri": [11, 79], "ioctl_lepton_get_refresh": [11, 79], "ioctl_lepton_get_resolut": [11, 79], "ioctl_lepton_run_command": [11, 79], "ioctl_lepton_set_attribut": [11, 79], "ioctl_lepton_get_attribut": [11, 79], "ioctl_lepton_get_fpa_temp": [11, 79], "ioctl_lepton_get_aux_temp": [11, 79], "ioctl_lepton_set_mod": [11, 79], "ioctl_lepton_get_mod": [11, 79], "ioctl_lepton_set_rang": [11, 79], "ioctl_lepton_get_rang": [11, 79], "ioctl_himax_md_en": [11, 79], "ioctl_himax_md_clear": [11, 79], "ioctl_himax_md_window": [11, 79], "ioctl_himax_md_threshold": [11, 79], "ioctl_himax_osc_en": [11, 79], "ioctl_rgb_stat": [11, 79], "ioctl_genx320_set_bias": [11, 79], "genx320_biases_default": [11, 79], "genx320_biases_low_light": [11, 79], "genx320_biases_active_mark": [11, 79], "genx320_biases_low_nois": [11, 79], "genx320_biases_high_spe": [11, 79], "single_buff": [11, 79], "double_buff": [11, 79], "triple_buff": [11, 63, 79, 82], "video_fifo": [11, 79], "imag": [11, 27, 51, 61, 62, 63, 64, 66, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 118, 121, 126, 127, 128, 129, 131, 148], "vision": [11, 27, 79, 122, 123, 124, 127, 131], "binary_to_grayscal": [11, 68], "binary_to_rgb": [11, 68], "binary_to_lab": [11, 68], "binary_to_yuv": [11, 68], "grayscale_to_binari": [11, 68], "grayscale_to_rgb": [11, 68], "grayscale_to_lab": [11, 68], "grayscale_to_yuv": [11, 68], "rgb_to_binari": [11, 68], "rgb_to_grayscal": [11, 68], "rgb_to_lab": [11, 68], "rgb_to_yuv": [11, 68], "lab_to_binari": [11, 68], "lab_to_grayscal": [11, 68], "lab_to_rgb": [11, 68], "lab_to_yuv": [11, 68], "yuv_to_binari": [11, 68], "yuv_to_grayscal": [11, 68], "yuv_to_rgb": [11, 68], "yuv_to_lab": [11, 68], "load_decriptor": [11, 68], "save_descriptor": [11, 68], "match_descriptor": [11, 68], "haarcascad": 11, "similar": [11, 14, 23, 25, 28, 30, 46, 86, 96, 103, 107, 110, 111, 112, 129, 136, 148, 153, 154, 155, 158], "mean": [11, 16, 21, 23, 28, 29, 39, 41, 46, 48, 53, 64, 68, 71, 74, 79, 84, 86, 87, 89, 98, 102, 106, 108, 111, 112, 117, 118, 126, 128, 131, 132, 134, 137, 139, 142, 146, 148, 150, 152, 153, 157, 158], "stdev": [11, 68, 74], "histogram": [11, 122], "l_bin": [11, 68], "a_bin": [11, 68], "b_bin": [11, 68], "get_percentil": [11, 68], "get_threshold": [11, 68], "get_statist": [11, 68], "percentil": 11, "l_valu": [11, 68], "a_valu": [11, 68], "b_valu": [11, 68], "statist": [11, 79, 153], "median": [11, 68], "lq": [11, 68], "uq": [11, 68], "l_mean": [11, 68], "l_median": [11, 68], "l_mode": [11, 68], "l_stdev": [11, 68], "l_min": [11, 68], "l_max": [11, 68], "l_lq": [11, 68], "l_uq": [11, 68], "a_mean": [11, 68], "a_median": [11, 68], "a_mod": [11, 68], "a_stdev": [11, 68], "a_min": [11, 68], "a_max": [11, 68], "a_lq": [11, 68], "a_uq": [11, 68], "b_mean": [11, 68], "b_median": [11, 68], "b_mode": [11, 68], "b_stdev": [11, 68], "b_min": [11, 68], "b_max": [11, 68], "b_lq": [11, 68], "b_uq": [11, 68], "blob": 11, "corner": [11, 61, 62, 63, 64, 68, 75, 81, 82, 121, 126], "min_corn": [11, 68], "w": [11, 19, 35, 61, 62, 63, 64, 68, 70, 73, 75, 79, 81, 82, 103, 108, 112, 126, 147, 156, 157], "h": [11, 13, 61, 62, 63, 64, 68, 70, 71, 73, 75, 79, 81, 82, 86, 89, 90, 109, 126, 132, 146, 156], "pixel": [11, 61, 62, 63, 64, 65, 66, 68, 70, 79, 81, 82, 126, 129], "cx": [11, 68], "cxf": [11, 68], "cy": [11, 68], "cyf": [11, 68], "rotat": [11, 61, 62, 63, 64, 68, 69, 70, 79, 81, 82, 118], "rotation_deg": [11, 68], "rotation_rad": [11, 68], "perimet": [11, 68], "elong": [11, 68], "densiti": [11, 68], "extent": [11, 68], "compact": [11, 29, 68, 148], "solid": [11, 68, 126], "convex": [11, 68], "x_hist_bin": [11, 68], "y_hist_bin": [11, 68], "major_axis_lin": [11, 68], "minor_axis_lin": [11, 68], "enclosing_circl": [11, 68], "enclosed_ellips": [11, 68], "x1": [11, 68, 79, 94, 158], "y1": [11, 68, 79, 98], "x2": [11, 68, 79, 98], "y2": [11, 68, 79], "magnitud": [11, 68], "theta": [11, 68], "rho": [11, 68], "circl": [11, 18, 45], "rectangl": [11, 61, 62, 63, 64, 70, 81, 82], "qrcode": 11, "payload": [11, 16, 60, 68, 77, 88], "ecc_level": [11, 68], "data_typ": [11, 68], "eci": [11, 68], "is_numer": [11, 68], "is_alphanumer": [11, 68], "is_binari": [11, 68], "is_kanji": [11, 68], "apriltag": [11, 131], "decision_margin": [11, 68], "ham": [11, 68], "good": [11, 46, 57, 68], "x_translat": [11, 68], "y_translat": [11, 68], "z_translat": [11, 68], "x_rotat": [11, 68], "y_rotat": [11, 68], "z_rotat": [11, 68], "datamatrix": 11, "row": [11, 46, 68, 146], "column": [11, 68, 126, 153], "capac": [11, 68, 146, 150], "pad": [11, 68], "barcod": 11, "qualiti": [11, 68, 70, 78, 79, 121, 126], "displac": 11, "scale": [11, 31, 61, 62, 63, 64, 68, 70, 71, 74, 79, 81, 82, 87, 112], "kptmatch": 11, "keypoint": 11, "imageio": [11, 126], "is_clos": [11, 68, 70], "offset": [11, 68, 71, 91, 108, 109, 111, 112, 114, 136, 140, 145, 147], "buffer_s": [11, 68], "seek": [11, 28, 68, 148], "file_stream": [11, 68], "memory_stream": [11, 68], "get_pixel": [11, 68], "set_pixel": [11, 68], "to_ndarrai": [11, 68], "to_bitmap": [11, 68], "to_grayscal": [11, 68], "to_rgb565": [11, 68], "to_rainbow": [11, 68], "to_ironbow": [11, 68], "to_depth": [11, 68], "to_evt_dark": [11, 68], "to_evt_light": [11, 68], "to_jpeg": [11, 68], "to_png": [11, 68], "crop": [11, 61, 62, 63, 64, 68, 70, 74, 79, 81, 82], "draw_lin": [11, 68], "draw_rectangl": [11, 68], "draw_circl": [11, 68], "draw_ellips": [11, 68], "draw_str": [11, 68], "draw_cross": [11, 68], "draw_arrow": [11, 68], "draw_edg": [11, 68], "draw_imag": [11, 68], "draw_keypoint": [11, 68], "flood_fil": [11, 68], "mask_rectang": [11, 68], "mask_circl": [11, 68], "mask_ellips": [11, 68], "invert": [11, 37, 41, 43, 68, 118], "b_and": [11, 68], "b_nand": [11, 68], "b_or": [11, 68], "b_nor": [11, 68], "b_xor": [11, 68], "b_xnor": [11, 68], "awb": [11, 68], "ccm": [11, 68], "gamma_corr": [11, 68], "negat": [11, 68, 103], "differ": [11, 30, 34, 40, 41, 42, 43, 46, 48, 68, 71, 76, 78, 88, 96, 112, 114, 117, 118, 121, 123, 126, 127, 131, 137, 148, 149, 150, 152], "blend": [11, 64, 68, 70, 81], "histeq": [11, 68], "erod": [11, 68], "dilat": [11, 68], "top_hat": [11, 68], "black_hat": [11, 68], "midpoint": [11, 68], "morph": [11, 68], "gaussian": [11, 68, 75], "laplacian": [11, 68], "bilater": [11, 68], "linpolar": [11, 68], "logpolar": [11, 68], "lens_corr": [11, 68], "rotation_corr": [11, 68], "get_similar": [11, 68], "get_histogram": [11, 68], "get_regress": [11, 68], "find_blob": [11, 68, 126], "find_lin": [11, 68], "find_line_seg": [11, 68], "find_circl": [11, 68], "find_rect": [11, 68], "find_qrcod": [11, 68], "find_apriltag": [11, 68, 79], "find_datamatric": [11, 68], "find_barcod": [11, 68], "find_displac": [11, 68, 79], "find_templ": [11, 68], "find_featur": [11, 68], "find_ey": [11, 68], "find_lbp": [11, 68], "find_keypoint": [11, 68], "find_edg": [11, 68], "find_hog": [11, 68], "stero_dispar": [11, 68], "png": [11, 68, 70], "palette_rainbow": [11, 64, 68, 79], "palette_ironbow": [11, 68], "palette_depth": [11, 68, 81], "palette_evt_dark": [11, 68], "palette_evt_light": [11, 68], "bilinear": [11, 61, 62, 63, 64, 68, 70, 74, 81, 82], "bicub": [11, 61, 62, 63, 64, 68, 70, 81, 82], "vflip": [11, 61, 62, 63, 64, 68, 70, 79, 81, 82], "hmirror": [11, 61, 62, 63, 64, 68, 70, 79, 81, 82], "transpos": [11, 61, 62, 63, 64, 68, 70, 79, 81, 82], "extract_rgb_channel_first": [11, 61, 62, 63, 64, 68, 70, 81, 82], "apply_color_palette_first": [11, 61, 62, 63, 64, 68, 70, 81, 82], "scale_aspect_keep": [11, 61, 62, 63, 64, 68, 70, 81, 82], "scale_aspect_expand": [11, 61, 62, 63, 64, 68, 70, 81, 82], "scale_aspect_ignor": [11, 61, 62, 63, 64, 68, 70, 81, 82], "black_background": [11, 68], "rotate_90": [11, 61, 62, 63, 64, 68, 70, 81, 82], "rotate_180": [11, 61, 62, 63, 64, 68, 70, 81, 82], "rotate_270": [11, 61, 62, 63, 64, 68, 70, 81, 82], "jpeg_subsampling_auto": [11, 68], "jpeg_subsampling_444": [11, 68], "jpeg_subsampling_422": [11, 68], "jpeg_subsampling_420": [11, 68], "search_ex": [11, 68], "search_d": [11, 68], "edge_canni": [11, 68], "edge_simpl": [11, 68], "corner_fast": [11, 68], "corner_agast": [11, 68], "tag16h5": [11, 68], "tag25h7": [11, 68], "tag25h9": [11, 68], "tag36h10": [11, 68], "tag36h11": [11, 68], "artoolkit": [11, 68], "ean2": [11, 68], "ean5": [11, 68], "ean8": [11, 68], "upc": [11, 68], "isbn10": [11, 68], "upca": [11, 68], "ean13": [11, 68], "isbn13": [11, 68], "i25": [11, 68], "databar": [11, 68], "databar_exp": [11, 68], "codabar": [11, 68], "code39": [11, 68], "pdf417": [11, 68], "code93": [11, 68], "code128": [11, 68], "ml": [11, 27, 53], "learn": [11, 27, 34, 74, 75, 129], "app": [11, 41, 71, 130, 153, 156], "microspeech": [11, 71], "speech": [11, 71], "recognit": [11, 71], "preprocess": [11, 68, 71, 87], "postprocess": [11, 71], "fomo_postprocess": [11, 71], "fomo": [11, 71], "yolo_v2_postprocess": [11, 71], "yolo": [11, 71], "v2": [11, 71, 109, 114, 147], "yolo_v5_postprocess": [11, 71], "v5": [11, 71], "nm": [11, 71], "soft": [11, 30, 71, 150], "suppress": [11, 71], "add_bounding_box": [11, 75], "get_bounding_box": [11, 75], "model": [11, 38, 42, 53, 54, 69, 72, 73, 74, 75, 94, 96, 123], "predict": [11, 71, 74, 131, 150], "input_shap": [11, 71], "input_dtyp": [11, 71], "input_scal": [11, 71], "input_zero_point": [11, 71], "output_shap": [11, 71], "output_dtyp": [11, 71], "output_scal": [11, 71], "output_zero_point": [11, 71], "label": [11, 68, 71, 72, 75, 121, 126, 134, 137, 147], "gif": [11, 27, 70, 126], "record": [11, 27, 48, 53, 68, 79, 126], "add_fram": [11, 66, 70], "mjpeg": [11, 27, 66, 68, 126], "audio": [11, 27, 35], "start_stream": [11, 53], "stop_stream": [11, 53], "spidisplai": [11, 56], "refresh": [11, 56, 61, 62, 63, 64, 79, 81, 82], "bgr": [11, 63], "byte_swap": [11, 63], "backlight": [11, 56, 61, 62, 63], "bus_writ": [11, 59, 61, 63], "rgbdisplai": [11, 56], "rgb": [11, 30, 56, 61, 63, 64, 68, 70, 74, 79, 81, 82, 117, 118, 124, 126], "dsidisplai": [11, 56, 59], "dsi": [11, 56, 59], "bus_read": [11, 59, 61], "displaydata": [11, 56], "display_id": [11, 60], "send_fram": [11, 60], "receive_fram": [11, 60], "frame_callback": [11, 60], "st7701": [11, 56, 61], "read_id": [11, 59, 67], "dacbacklight": [11, 56, 61, 62, 63], "pwmbacklight": [11, 56, 61, 62, 63], "tqvga": [11, 56], "fhvga": [11, 56], "fhvga2": [11, 56], "thvga": [11, 56], "fwvga": [11, 56, 61, 62], "fwvga2": [11, 56], "tfwvga": [11, 56], "tfwvga2": [11, 56], "wsvga": [11, 56], "sxga2": [11, 56], "fir": [11, 27], "thermal": [11, 27, 65, 68, 80, 81], "far": [11, 21, 27, 66, 70, 131, 157], "infrar": [11, 27], "radiometr": [11, 64, 79], "register_vsync_cb": [11, 64], "register_frame_cb": [11, 64], "trigger_ffc": [11, 64], "read_ta": [11, 64], "read_ir": [11, 64], "draw_ir": [11, 64], "fir_non": [11, 64], "fir_shield": [11, 64], "fir_mlx90621": [11, 64], "fir_mlx90640": [11, 64], "fir_mlx90641": [11, 64], "fir_amg8833": [11, 64], "fir_lepton": [11, 64], "tof": 11, "flight": [11, 27], "read_depth": [11, 81], "draw_depth": [11, 81], "tof_non": [11, 81], "tof_vl53l5cx": [11, 81], "tv": [11, 27], "tv_none": [11, 82], "tv_shield": [11, 82], "cpufreq": [11, 27], "cpu": [11, 27, 30, 84, 94, 108, 111, 112, 158], "frequenc": [11, 27, 30, 34, 35, 37, 40, 42, 53, 54, 58, 77, 87, 88, 89, 92, 96, 98, 118, 150], "set_frequ": [11, 55], "get_current_frequ": [11, 55], "get_supported_frequ": [11, 55], "buzzer": [11, 27, 41], "duti": [11, 16, 37, 54, 58, 98, 118], "resonant_freq": [11, 54], "imu": [11, 79], "acceleration_mg": [11, 69], "angular_rate_mdp": [11, 69], "temperature_c": [11, 69], "roll": [11, 69, 79, 98], "pitch": [11, 69, 124], "rpc": [11, 27], "get_byt": [11, 77], "put_byt": [11, 77], "stream_read": [11, 77], "stream_writ": [11, 77], "rpc_master": 11, "rpc_slave": 11, "register_callback": [11, 77], "schedule_callback": [11, 77], "setup_loop_callback": [11, 77], "rpc_can_mast": 11, "master": [11, 35, 92, 96, 118], "rpc_can_slav": 11, "slave": [11, 92, 118], "rpc_i2c_mast": 11, "rpc_i2c_slav": 11, "rpc_spi_mast": 11, "rpc_spi_slav": 11, "rpc_uart_mast": 11, "rpc_uart_slav": 11, "rpc_usb_vcp_mast": 11, "vcp": [11, 86, 101], "rpc_usb_vcp_slav": 11, "rpc_network_mast": 11, "rpc_network_slav": 11, "rtsp": [11, 27], "rtsp_server": 11, "register_setup_cb": [11, 78], "register_play_cb": [11, 78], "register_pause_cb": [11, 78], "register_teardown_cb": [11, 78], "omv": [11, 27], "version_major": [11, 76], "version_minor": [11, 76], "version_patch": [11, 76], "version_str": [11, 76], "arch": [11, 49, 76, 154], "board_typ": [11, 76], "board_id": [11, 76], "disable_fb": [11, 76], "gt911": [11, 27], "touch": [11, 27, 153, 156], "screen": [11, 27, 57, 58, 59, 61, 62, 63, 82], "_read_reg": [11, 67], "_write_reg": [11, 67], "read_point": [11, 67], "ft5x06": [11, 27], "get_gestur": [11, 65], "get_point": [11, 65], "get_point_flag": [11, 65], "get_point_id": [11, 65], "get_point_x": [11, 65], "get_point_i": [11, 65], "touch_callback": [11, 65, 67], "update_point": [11, 65], "lcd_gesture_move_up": [11, 65], "lcd_gesture_move_left": [11, 65], "lcd_gesture_move_down": [11, 65], "lcd_gesture_move_right": [11, 65], "lcd_gesture_zoom_in": [11, 65], "lcd_gesture_zoom_out": [11, 65], "lcd_gesture_non": [11, 65], "lcd_flag_press": [11, 65], "lcd_flag_releas": [11, 65], "lcd_flag_mov": [11, 65], "tfp410": [11, 27, 62], "dvi": [11, 27], "hdmi": [11, 27, 56, 60, 62], "hotplug_callback": [11, 80], "third": [11, 68, 102, 112, 132, 146, 151, 153, 154, 155, 157], "parti": [11, 68, 151, 153, 155], "ulab": [11, 71], "numpi": [11, 53, 71, 74], "manipul": [11, 68, 158], "pid": [11, 86, 153], "proport": [11, 158], "integr": [11, 45, 108, 126, 150, 153, 158], "bno055": 11, "ssd1306": 11, "ol": 11, "tb6612": 11, "stepper": 11, "motor": [11, 97, 98, 127], "modbu": 11, "mqtt": 11, "vl53l1x": 11, "glossari": [11, 149], "aka": [11, 51, 52, 149], "indent": 11, "past": [11, 68, 126, 146], "remot": [11, 16, 33, 77, 78, 83, 88, 106, 126, 139, 148, 149, 156], "mpremot": [11, 107, 148, 149], "shortcut": [11, 38, 106, 126, 130], "mpy": [11, 110, 146, 148, 149, 151, 152, 155, 157], "qstr": [11, 146], "tip": [11, 126, 138], "emerg": [11, 46], "isr": [11, 47], "overcom": [11, 136, 139], "design": [11, 77, 111, 114, 127, 131, 146, 147, 148], "reentranc": [11, 47], "critic": [11, 30, 46, 47, 86, 158], "maximis": [11, 146, 149], "alloc": [11, 16, 20, 23, 33, 38, 42, 43, 46, 64, 68, 79, 81, 87, 88, 98, 105, 111, 112, 131, 146, 148, 150, 154], "slowest": 11, "declar": [11, 46, 137, 146, 150], "cach": [11, 48, 112], "emitt": 11, "viper": [11, 154], "microcontrol": [11, 30, 72, 77, 79, 108, 117, 123, 127, 131, 148, 149, 152, 158], "fragment": [11, 23, 28, 79, 84, 115, 131, 148, 150, 152, 158], "postscript": 11, "footnot": 11, "manifest": [11, 128, 149, 155], "add_librari": [11, 151], "metadata": [11, 151], "freeze_as_str": [11, 151], "freeze_as_mpi": [11, 151], "freeze_mpi": [11, 151], "mip": [11, 148, 153], "publish": [11, 116], "inlin": [11, 137, 149, 150, 158], "assembl": [11, 136, 139, 143, 149, 150, 158], "thumb2": [11, 149], "architectur": [11, 41, 76, 85, 122, 137, 146, 149, 154], "convent": [11, 96, 146, 153, 156], "instruct": [11, 86, 90, 135, 140, 144, 145, 146, 150, 158], "categori": [11, 158], "logic": [11, 33, 38, 41, 43, 61, 62, 63, 64, 68, 70, 78, 81, 82, 88, 94, 98, 105, 134, 137, 138, 148], "bitwis": [11, 16, 35, 101, 138], "subtract": [11, 68, 71, 95, 111, 134], "divis": 11, "apsr": [11, 136, 139], "branch": [11, 18, 134, 135, 138, 153, 155], "subroutin": 11, "push": [11, 26, 30, 86, 90, 94, 137, 138], "arm": [11, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 148, 150], "fpu": 11, "direct": [11, 15, 16, 21, 30, 46, 51, 61, 62, 63, 64, 67, 68, 69, 81, 82, 87, 89, 91, 108, 111, 137, 138, 139, 158], "pyboard": [11, 14, 30, 35, 37, 45, 87, 88, 91, 94, 95, 99, 110, 117, 130, 131, 132, 136, 137, 146, 149, 150, 157, 158], "esp8266": [11, 30, 39, 43, 44, 48, 156], "esp32": [11, 16, 30, 35, 39, 43, 151, 156], "fat": [11, 114, 121], "littlef": [11, 114], "hybrid": 11, "migrat": [11, 149], "guid": [11, 34, 41, 60, 72, 149, 155, 158], "overview": [11, 122], "readabl": [11, 137], "just": [11, 14, 16, 19, 28, 34, 51, 61, 62, 63, 64, 68, 70, 76, 77, 78, 79, 80, 81, 82, 87, 106, 110, 111, 112, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 148, 150, 151, 153, 156, 158], "chain": [11, 20, 107], "rh": [11, 118], "subscript": [11, 16, 19, 30, 102, 108, 112, 158], "step": [11, 61, 62, 63, 68, 98, 102, 111, 128, 146, 157, 158], "behav": [11, 105, 111, 157], "bit_length": 11, "No": [11, 33, 38, 46, 64, 72, 77, 79, 81, 88, 128, 147], "becom": [11, 14, 23, 30, 33, 35, 38, 46, 50, 51, 61, 62, 63, 64, 68, 70, 81, 82, 88, 99, 105, 126, 146, 153, 156], "invalid": [11, 15, 86, 111, 146, 150], "its": [11, 12, 16, 18, 19, 23, 26, 27, 30, 32, 33, 34, 37, 40, 45, 46, 50, 51, 64, 66, 68, 71, 77, 83, 84, 85, 86, 87, 88, 89, 92, 97, 105, 107, 110, 112, 114, 117, 118, 122, 130, 133, 137, 139, 141, 146, 147, 148, 150, 151, 153, 154, 155, 158], "resiz": [11, 33, 88], "endswith": 11, "subscr": 11, "ljust": 11, "rjust": 11, "rsplit": 11, "yet": [11, 12, 79, 152], "typecod": [11, 13, 89], "overflow": [11, 16, 19, 33, 35, 88, 111, 133, 134, 139], "throw": [11, 60, 90, 131], "serialis": [11, 29, 146], "getenv": 11, "word": [11, 35, 41, 72, 89, 96, 103, 108, 112, 135, 136, 140, 145, 146, 150, 157, 158], "few": [11, 27, 28, 41, 112, 118, 120, 121, 125, 126, 148, 150], "licens": [11, 151], "quick": [11, 106, 123, 138, 146, 148, 158], "openmvcam": 11, "sd": [11, 35, 79, 121, 128, 136, 146, 147], "card": [11, 79, 121, 128, 138, 146], "boot": [11, 46, 86, 121, 126, 128, 130, 147, 153, 156], "softwar": [11, 33, 34, 40, 41, 88, 90, 116, 122, 127, 158], "desktop": [11, 79, 122, 148], "raspberrypi": [11, 122], "menu": [11, 121, 122, 130], "edit": [11, 77, 117, 122, 128, 153], "viewer": [11, 122], "video": [11, 66, 68, 70, 78, 79, 121, 122], "As": [11, 16, 22, 38, 49, 51, 68, 77, 88, 103, 104, 106, 112, 114, 115, 121, 123, 124, 126, 131, 144, 146, 147, 150, 152, 153, 154, 155, 158], "protect": [11, 16, 47, 51, 121, 122], "onewir": 11, "dht": 11, "experiment": 12, "settl": [12, 79], "q": [13, 68, 109, 146], "latter": [13, 111, 115, 136], "grow": [13, 68, 79, 131, 158], "thrown": [13, 33, 77, 88, 150], "place": [13, 20, 21, 26, 27, 28, 33, 40, 44, 46, 68, 88, 99, 111, 133, 146, 150, 154], "represent": [13, 15, 29, 106, 110, 148], "blink": [14, 77, 121], "period_m": 14, "led1": [14, 41], "led2": [14, 41], "700": 14, "400": [14, 30, 55, 89], "10_000": 14, "coro": 14, "associ": [14, 31, 34, 36, 38, 47, 75, 87, 90, 93, 94, 98, 106, 112, 116, 126, 150, 153], "millisecond": [14, 16, 30, 33, 39, 42, 44, 60, 64, 68, 72, 77, 79, 81, 83, 86, 88, 92, 95, 96, 97, 99, 100, 101, 105, 106, 111, 118, 146, 158], "trap": 14, "caller": [14, 21, 114], "cleanup": 14, "return_except": 14, "promot": 14, "inject": [14, 153], "synchronis": [14, 88, 150], "otherwis": [14, 16, 20, 30, 33, 34, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 68, 71, 78, 79, 84, 86, 88, 89, 92, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 114, 116, 117, 121, 126, 134, 138, 151, 154, 156, 157], "safe": [14, 46, 150], "alreadi": [14, 22, 28, 30, 34, 68, 79, 83, 86, 87, 89, 106, 114, 118, 126, 128, 146, 150, 153, 155, 156], "immedi": [14, 33, 35, 38, 47, 72, 77, 88, 99, 101, 105, 107, 126, 133, 134, 140, 143, 145, 150, 153, 157], "outsid": [14, 37, 46, 68, 77, 111, 146, 153], "possibli": [14, 79, 84, 114, 144, 158], "automat": [14, 16, 21, 23, 28, 33, 50, 53, 61, 62, 63, 64, 66, 68, 70, 71, 74, 77, 79, 81, 83, 86, 87, 88, 90, 94, 105, 106, 114, 115, 118, 121, 126, 128, 130, 146, 147, 148, 151, 153, 155], "upon": [14, 30, 42, 86, 110, 151, 157], "coordin": [14, 68, 75], "unlock": [14, 46, 47, 150], "atom": [14, 46, 150], "remain": [14, 34, 38, 48, 68, 90, 91, 99, 107, 114, 146, 157], "host": [14, 83, 86, 101, 106, 113, 114, 147, 148, 153, 155], "transport": [14, 77, 107], "reader": 14, "writer": 14, "Will": [14, 46, 114], "could": [14, 27, 68, 85, 90, 94, 99, 112, 121, 127, 146, 148, 150, 157], "made": [14, 16, 28, 32, 68, 88, 98, 103, 117, 131, 137, 146], "incom": [14, 16, 46, 99, 150, 157], "minimis": [14, 146, 150], "streamread": [14, 35], "streamwrit": [14, 35], "extra": [14, 21, 31, 33, 34, 40, 46, 79, 88, 92, 96, 99, 151], "peernam": 14, "eof": [14, 106], "encount": [14, 29, 77, 130, 150], "buf": [14, 16, 33, 34, 35, 40, 43, 46, 67, 86, 87, 88, 89, 91, 96, 99, 101, 106, 112, 114, 118, 146, 147, 150, 158], "eoferror": 14, "accumul": [14, 19, 53, 68], "sinc": [14, 23, 68, 86, 106, 111, 115, 121, 126, 127, 129, 131, 136], "through": [14, 25, 51, 68, 77, 89, 90, 94, 95, 97, 98, 107, 118, 121, 125, 126, 146, 150, 151, 158], "variou": [15, 19, 31, 48, 55, 72, 90, 104, 111, 112, 114, 150, 151, 153, 158], "hexadecim": 15, "suppli": [15, 38, 41, 68, 87, 94, 158], "invers": [15, 41, 45, 68, 111], "base64": 15, "conform": [15, 110, 112], "2045": 15, "3548": 15, "energi": 16, "intend": [16, 27, 37, 110, 111, 148, 157], "higher": [16, 21, 27, 28, 30, 37, 38, 41, 42, 46, 53, 64, 68, 75, 77, 79, 91, 111, 118, 139, 146, 150], "we": [16, 28, 68, 79, 98, 111, 117, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132], "aiobl": [16, 153], "develop": [16, 28, 41, 111, 126, 128, 148, 151, 152, 153, 155, 156, 158], "subject": [16, 116, 150], "singleton": 16, "radio": [16, 48, 108], "param": [16, 33, 48, 50, 52, 88, 106], "quot": [16, 48, 52], "addr_typ": 16, "addr": [16, 34, 48, 69, 92, 112, 147], "addr_mod": 16, "0x00": [16, 40, 92], "public": 16, "0x01": [16, 92, 134], "0x02": 16, "rpa": 16, "0x03": 16, "nrpa": 16, "gap_nam": 16, "gap": 16, "0x1800": 16, "characterist": [16, 40, 157], "0x2a00": 16, "rxbuf": [16, 43], "entir": [16, 27, 46, 68, 99, 103, 146, 147, 151, 153, 158], "bursti": 16, "abil": [16, 28, 114, 121, 126, 150, 152], "mtu": 16, "att": 16, "exchang": 16, "_irq_mtu_exchang": 16, "discov": [16, 27, 48], "mitm": 16, "capabl": [16, 30, 38, 48, 56, 118, 126, 146, 148, 150, 155], "_io_capability_display_onli": 16, "_io_capability_display_yesno": 16, "_io_capability_keyboard_onli": 16, "_io_capability_no_input_output": 16, "_io_capability_keyboard_displai": 16, "le_secur": 16, "le": [16, 139], "unnecessari": [16, 158], "adv_data": 16, "char_data": 16, "notify_data": 16, "entri": [16, 33, 83, 84, 88, 110, 111, 155], "ringbuff": [16, 46], "invoc": [16, 105], "connected_addr": 16, "matched_uuid": 16, "inspect": [16, 153, 154], "decid": 16, "elsewher": [16, 135, 158], "And": [16, 67, 77, 120, 123, 127, 130, 131, 132], "bt_irq": 16, "_irq_central_connect": 16, "conn_handl": 16, "elif": [16, 111], "_irq_central_disconnect": 16, "_irq_gatts_writ": 16, "written": [16, 20, 24, 28, 34, 35, 39, 43, 46, 89, 99, 101, 105, 106, 112, 114, 126, 150, 157, 158], "attr_handl": 16, "_irq_gatts_read_request": 16, "deni": [16, 150], "_irq_scan_result": 16, "adv_typ": 16, "_irq_scan_don": 16, "_irq_peripheral_connect": 16, "_irq_peripheral_disconnect": 16, "_irq_gattc_service_result": 16, "start_handl": 16, "end_handl": 16, "_irq_gattc_service_don": 16, "onc": [16, 19, 33, 34, 41, 42, 43, 44, 48, 52, 66, 68, 70, 71, 77, 78, 86, 106, 111, 114, 120, 121, 123, 126, 128, 129, 132, 146, 147, 153, 158], "discoveri": 16, "_irq_gattc_characteristic_result": 16, "value_handl": 16, "_irq_gattc_characteristic_don": 16, "_irq_gattc_descriptor_result": 16, "dsc_handl": 16, "_irq_gattc_descriptor_don": 16, "_irq_gattc_read_result": 16, "_irq_gattc_read_don": 16, "_irq_gattc_write_don": 16, "_irq_gattc_notifi": 16, "notifi": 16, "_irq_gattc_ind": 16, "_irq_gatts_indicate_don": 16, "acknowledg": [16, 157], "u": [16, 27, 68, 79, 86, 111, 121, 125, 156, 158], "_irq_l2cap_accept": 16, "reject": 16, "cid": 16, "psm": 16, "our_mtu": 16, "peer_mtu": 16, "_irq_l2cap_connect": 16, "_irq_l2cap_disconnect": 16, "attempt": [16, 30, 46, 52, 86, 111, 146, 147, 150, 158], "_irq_l2cap_recv": 16, "_irq_l2cap_send_readi": 16, "readi": [16, 32, 64, 79, 83, 92, 105, 106, 121, 126, 128, 150, 152, 153, 155, 158], "transmit": [16, 30, 33, 34, 35, 43, 52, 68, 88, 99, 113, 123], "_irq_connection_upd": 16, "conn_interv": 16, "conn_lat": 16, "supervision_timeout": 16, "_irq_encryption_upd": 16, "key_siz": 16, "_irq_get_secret": 16, "th": 16, "sec_typ": 16, "_irq_set_secret": 16, "_irq_passkey_act": 16, "respond": [16, 34, 92, 150, 157], "passkei": 16, "action": [16, 116, 126, 128, 153, 156], "_gatts_no_error": 16, "_gatts_error_read_not_permit": 16, "_gatts_error_write_not_permit": 16, "_gatts_error_insufficient_authent": 16, "0x05": 16, "_gatts_error_insufficient_author": 16, "0x08": [16, 34, 48], "_gatts_error_insufficient_encrypt": 16, "0x0f": [16, 48], "_passkey_action_non": 16, "_passkey_action_input": 16, "_passkey_action_displai": 16, "_passkey_action_numeric_comparison": 16, "firmwar": [16, 21, 24, 27, 30, 51, 68, 71, 79, 83, 91, 108, 110, 115, 117, 121, 126, 128, 130, 137, 146, 147, 148, 151, 152, 155], "interval_u": 16, "resp_data": 16, "interv": [16, 86, 102, 111, 113, 146, 150], "nearest": [16, 61, 62, 63, 64, 68, 70, 81, 82], "625u": 16, "repli": [16, 52], "reus": [16, 33, 88, 146, 148], "resum": [16, 30, 153], "duration_m": 16, "1280000": 16, "window_u": 16, "11250": 16, "indefinit": [16, 30, 72, 86], "background": [16, 35, 50, 68, 70, 79, 148, 153], "itself": [16, 21, 24, 27, 68, 77, 89, 103, 117, 133, 146, 150, 154, 158], "adv_ind": 16, "scannabl": 16, "undirect": 16, "adv_direct_ind": 16, "adv_scan_ind": 16, "adv_nonconn_ind": 16, "0x04": 16, "scan_rsp": 16, "want": [16, 21, 41, 64, 66, 68, 70, 75, 77, 78, 79, 81, 91, 101, 111, 112, 118, 120, 121, 124, 126, 127, 128, 129, 130, 132, 147, 151, 153, 156, 157], "scan_duration_m": 16, "2000": [16, 44, 68, 79, 92, 111, 118, 129, 158], "min_conn_interval_u": 16, "max_conn_interval_u": 16, "outstand": [16, 77], "earli": [16, 23, 111, 146], "chosen": [16, 96, 106], "typic": [16, 21, 24, 27, 30, 35, 37, 47, 48, 53, 54, 57, 58, 59, 68, 71, 77, 79, 83, 91, 107, 110, 111, 134, 139, 147, 148, 150, 151, 155, 158], "30000": [16, 118], "50000": [16, 34], "microsecond": [16, 30, 34, 39, 79, 86, 88, 111, 118, 158], "shorter": [16, 21, 153], "throughput": 16, "expens": [16, 68, 121, 131], "usual": [16, 19, 22, 23, 28, 31, 34, 36, 37, 38, 40, 46, 47, 48, 49, 50, 52, 68, 87, 102, 107, 110, 111, 112, 114, 131, 139, 146, 147, 148, 150, 154, 157, 158], "act": [16, 31, 34, 43, 99, 101, 105, 123, 157], "wasn": 16, "themselv": [16, 121, 126, 146], "These": [16, 28, 34, 38, 40, 46, 48, 52, 68, 91, 108, 126, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 146, 150, 151, 154, 158], "registr": [16, 138], "anyth": [16, 38, 41, 61, 62, 63, 64, 68, 70, 71, 77, 81, 82, 94, 99, 121, 127, 128, 146, 158], "char_handl": 16, "services_definit": 16, "OR": [16, 38, 61, 62, 63, 64, 68, 70, 81, 82, 105, 116], "combin": [16, 28, 34, 72, 105, 106, 108, 147, 153], "privaci": 16, "flatten": 16, "heart": [16, 71], "rate": [16, 34, 35, 40, 43, 61, 62, 63, 64, 68, 69, 77, 79, 81, 87, 88, 92, 95, 96, 98, 99, 113, 118, 150, 156], "nordic": 16, "hr_uuid": 16, "0x180d": 16, "hr_char": 16, "0x2a37": 16, "flag_read": 16, "flag_notifi": 16, "hr_servic": 16, "uart_uuid": 16, "6e400001": 16, "b5a3": 16, "f393": 16, "e0a9": 16, "e50e24dcca9": 16, "uart_tx": 16, "6e400003": 16, "uart_rx": 16, "6e400002": 16, "flag_writ": 16, "uart_servic": 16, "hr": 16, "bt": 16, "_flag_broadcast": 16, "0x0001": 16, "_flag_read": 16, "0x0002": 16, "_flag_write_no_respons": 16, "0x0004": 16, "_flag_writ": 16, "0x0008": 16, "_flag_notifi": 16, "0x0010": 16, "_flag_ind": 16, "0x0020": 16, "_flag_authenticated_signed_writ": 16, "0x0040": 16, "_flag_aux_writ": 16, "0x0100": 16, "_flag_read_encrypt": 16, "0x0200": 16, "_flag_read_authent": 16, "0x0400": 16, "_flag_read_author": 16, "0x0800": 16, "_flag_write_encrypt": 16, "0x1000": [16, 137], "_flag_write_authent": 16, "0x2000": 16, "_flag_write_author": 16, "0x4000": [16, 84], "send_upd": 16, "subscrib": 16, "notif": [16, 121, 125], "regardless": [16, 30, 41, 48, 99, 105, 141, 147, 153, 158], "largest": 16, "At": [16, 33, 34, 35, 40, 43, 83, 88, 92, 96, 98, 99, 101, 146, 147, 157], "someth": [16, 28, 68, 77, 90, 121, 132, 153, 157], "0xffff": [16, 88, 95, 98, 143], "confirm": [16, 108], "bluekitchen": 16, "nimbl": 16, "multiplex": 16, "establish": [16, 78, 107, 158], "credit": 16, "unlik": [16, 41, 68, 77, 103, 106, 110, 112, 124, 136, 148, 157], "share": [16, 37, 40, 41, 48, 62, 66, 68, 70, 77, 79, 83, 98, 126, 137, 150], "independ": [16, 39, 54, 55, 68, 95, 112, 148, 150], "amount": [16, 21, 23, 28, 30, 46, 67, 68, 71, 72, 79, 98, 106, 121, 126, 146, 148, 150, 154, 155, 158], "consum": [16, 46, 146, 157], "chanc": 16, "peer": [16, 107], "unsuccess": 16, "twice": [16, 68, 121, 157, 158], "stall": [16, 99], "grant": [16, 116], "unabl": [16, 150], "those": [16, 31, 34, 38, 46, 47, 48, 68, 92, 103, 124, 126, 137, 149, 150, 158], "volatil": 16, "irk": 16, "prompt": [16, 110, 121, 130, 148, 153, 157], "shown": [16, 137], "0x2908": 16, "cosin": [18, 45], "exponenti": [18, 45, 68], "natur": [18, 37, 45, 68, 112, 134, 150], "logarithm": [18, 21, 45, 115], "cut": [18, 53, 77], "along": [18, 46, 61, 62, 63, 68, 77, 90, 123, 126, 130, 132, 137, 150], "axi": [18, 68], "phi": 18, "sine": [18, 45, 89], "ratio": [18, 37, 45, 61, 62, 63, 64, 68, 70, 77, 79, 81, 82], "circumfer": [18, 45], "diamet": [18, 45], "hold": [19, 28, 45, 46, 68, 79, 110, 111, 136, 148, 150, 154], "maxlen": [19, 101], "doubl": [19, 68, 79, 109, 137, 153], "bound": [19, 42, 46, 51, 68, 75, 83, 106, 126, 150, 158], "discard": [19, 134, 157], "opposit": [19, 68], "right": [19, 35, 65, 68, 69, 75, 103, 111, 112, 116, 121, 123, 126, 127, 128, 141, 150], "room": [19, 33, 79, 88, 111, 126], "effici": [19, 24, 28, 34, 40, 46, 103, 105, 106, 115, 146, 148, 158], "mytupl": 19, "t1": 19, "t2": 19, "rememb": [19, 64, 81, 117, 126], "benefit": [19, 127, 150, 151, 158], "k": [19, 153], "iv": 20, "suitabl": [20, 21, 25, 46, 49, 77, 150], "vice": [20, 37, 38, 46, 64], "versa": [20, 37, 38, 46, 64], "mode_ecb": 20, "electron": 20, "book": 20, "ecb": 20, "mode_cbc": 20, "cbc": 20, "mode_ctr": 20, "ctr": 20, "vector": [20, 34, 68], "in_buf": 20, "out_buf": 20, "newli": [20, 150], "mutabl": [20, 68, 92, 96, 100, 101, 110, 150], "commonli": [21, 38, 40, 50, 52, 115, 148, 150, 157], "archiv": [21, 115], "v1": [21, 27, 99, 109, 114, 115, 147, 154, 157], "micropy_py_defl": 21, "micropy_py_deflate_compress": 21, "own": [21, 68, 94, 97, 103, 105, 148, 151, 153, 158], "wbit": [21, 115], "1024": [21, 88, 115, 147], "inclus": [21, 34, 37, 88, 102, 111, 115], "32k": [21, 115], "kilobyt": [21, 112], "know": [21, 68, 121, 123, 126, 129, 131, 146, 158], "bidirect": [21, 83], "gz": [21, 24, 130], "wb": [21, 24, 106], "etc": [21, 22, 24, 30, 38, 40, 41, 48, 50, 68, 71, 74, 77, 78, 79, 83, 94, 99, 103, 106, 107, 110, 111, 121, 126, 127, 129, 134, 147, 148, 151, 153, 155], "rb": [21, 24, 68, 106], "becaus": [21, 28, 41, 46, 47, 48, 52, 55, 67, 68, 77, 105, 106, 107, 117, 121, 126, 131, 132, 134, 137, 138, 141, 146, 150, 153, 155, 157, 158], "sourc": [21, 24, 30, 31, 32, 36, 38, 39, 43, 46, 60, 64, 68, 70, 81, 83, 90, 95, 98, 111, 112, 115, 118, 121, 123, 124, 126, 128, 138, 146, 148, 150, 151, 153, 154, 155], "turn": [21, 33, 36, 40, 43, 61, 62, 63, 68, 79, 88, 92, 93, 96, 99, 118, 121, 124, 126, 127, 146, 151, 153, 157], "compressed_data": 21, "get_data_z": 21, "decompressed_data": 21, "uncompressed_data": 21, "get_data": 21, "de": [21, 89, 108, 121, 126, 148], "compressor": [21, 115], "slower": [21, 68, 79, 126, 155], "smaller": [21, 41, 68, 79, 89, 106, 110, 115, 146, 148, 158], "mid": 21, "decompressor": 21, "trivial": 21, "uncompress": [21, 66, 68], "unset": 21, "assum": [21, 34, 68, 90, 99, 105, 106, 111, 114, 121, 129, 134, 138, 153], "32kib": 21, "reason": [21, 28, 30, 33, 48, 55, 88, 106, 115, 121, 131, 136, 146, 148, 150], "kib": 21, "arbitrari": [21, 38, 40, 48, 90, 111, 112, 114, 137, 147, 148, 150], "consid": [21, 25, 30, 46, 68, 93, 112, 118, 146, 150, 158], "larg": [21, 68, 70, 71, 77, 79, 112, 121, 126, 131, 146, 154, 155], "enough": [21, 33, 53, 57, 79, 88, 124, 126, 148], "inventori": [22, 25, 106], "eexist": 22, "eagain": 22, "ansi": 22, "posix": [22, 47, 103, 105, 111, 114, 148], "mention": [22, 79, 87, 121, 150], "exc": [22, 110], "my_dir": 22, "trigger": [23, 30, 33, 38, 39, 64, 68, 79, 87, 88, 89, 90, 95, 98, 101, 146, 150, 153, 158], "satisfi": [23, 88], "oom": 23, "intent": 23, "earlier": [23, 27, 68, 99, 111, 112, 153], "hope": 23, "heurist": 23, "measur": [23, 30, 37, 64, 68, 79, 86, 87, 98, 111, 118, 140, 145, 150, 158], "vari": [23, 28, 30, 146, 150], "set_threshold": 23, "semant": [23, 105, 112], "conveni": [24, 34, 112, 115, 153], "frozen": [24, 110, 115, 146, 148, 151], "around": [24, 33, 42, 46, 65, 68, 71, 77, 88, 89, 98, 111, 126, 137, 150], "fileobj": 24, "footer": [24, 115], "checksum": [24, 60, 115], "512": [24, 64, 86, 88, 91, 95, 98, 114, 147], "compresslevel": 24, "mtime": [24, 84, 114], "guidanc": 24, "choos": [24, 48, 77, 83, 102, 117, 130, 131], "exact": [25, 68, 79, 83, 106, 111, 112, 126], "among": [25, 38, 48, 111], "modern": [25, 28, 117, 121, 128, 148], "sha2": 25, "seri": [25, 68, 88, 108, 126, 150, 151, 152, 153], "purpos": [25, 38, 46, 68, 89, 97, 116, 120, 123, 124, 144, 148, 150, 158], "constraint": [25, 27, 42, 111, 148, 150, 158], "internet": [25, 127, 148], "interoper": 25, "offer": [25, 41, 128, 146, 150], "hasher": 25, "fed": [25, 44, 146], "NOT": [25, 103, 106, 107, 116, 118], "achiev": [25, 28, 30, 37, 68, 89, 99, 115, 127, 137, 146, 150, 158], "essenti": [26, 150, 157], "smallest": 26, "onto": [26, 27, 64, 68, 70, 81, 90, 121, 130, 137, 144], "mirror": [27, 61, 62, 63, 64, 68, 70, 79, 81, 82], "resourc": [27, 28, 64, 78, 81, 83, 106, 127, 146, 148], "chapter": [27, 149], "aspir": 27, "project": [27, 68, 131, 148, 151, 152], "embed": [27, 111, 127, 135, 158], "With": [27, 30, 33, 37, 39, 40, 43, 45, 49, 79, 84, 87, 88, 92, 94, 95, 96, 99, 111, 137], "pleas": [27, 34, 68, 77, 78, 118, 121, 123, 125, 126, 129], "unavail": [27, 84, 146], "pertain": 27, "ifi": 27, "philosophi": 27, "drop": [27, 68, 79, 87, 126, 137], "locat": [27, 61, 62, 63, 64, 68, 81, 82, 86, 88, 92, 114, 126, 135, 139, 146, 150, 151, 153, 155, 158], "folder": [27, 126, 128, 130], "appli": [27, 31, 37, 48, 53, 61, 62, 63, 64, 67, 68, 70, 71, 74, 75, 77, 79, 81, 82, 89, 103, 121, 146, 148, 150, 151, 157, 158], "perhap": [27, 42], "wildcard": 27, "forc": [27, 33, 51, 64, 68, 79, 88, 98, 121, 146, 153], "temporarili": [27, 47, 77], "_path": 27, "extra_method": 27, "utim": [27, 118], "umodul": 27, "simplifi": [28, 110, 111, 150], "serv": [28, 43, 142, 148, 158], "foundat": 28, "concret": [28, 37, 48, 114], "adher": 28, "dichotomi": 28, "wise": [28, 68], "classif": 28, "somewhat": [28, 68, 146], "unbuff": [28, 106], "os": [28, 148], "rtose": [28, 148], "bufferbloat": 28, "preciou": 28, "introduc": [28, 146, 150, 152], "later": [28, 34, 46, 64, 68, 79, 92, 112, 126, 149, 150], "But": [28, 41, 68, 111, 112, 126, 127, 131, 132], "ti": [28, 96], "buffered": 28, "incur": [28, 89], "short": [28, 30, 66, 68, 70, 106, 109, 127, 132, 148, 150, 156], "ask": [28, 105, 121, 125, 126], "similarli": [28, 86, 98, 137, 150, 151, 156], "suscept": 28, "guarante": [28, 40, 46, 106, 111, 150], "against": [28, 68, 77, 103, 107], "trait": 28, "concis": 28, "desir": [28, 87, 88, 94, 99], "strongli": 28, "advis": [28, 135], "favour": 28, "govern": 28, "peculiar": [28, 110, 149], "tricki": 28, "never": [28, 46, 64, 79, 87, 114, 126, 153], "arriv": [28, 98, 99, 150], "whatev": [28, 61, 62, 63, 64, 68, 70, 71, 77, 79, 81, 82, 126], "lack": [28, 111, 150, 158], "clearli": 28, "polici": [28, 79, 106], "inde": 28, "op": [28, 46, 71, 89, 106, 114, 147, 158], "convolut": [28, 68], "undefin": [28, 34, 38, 48, 84, 106, 158], "matter": [28, 106], "prevail": 28, "reach": [28, 89, 98], "cours": [28, 112], "alloc_s": 28, "prealloc": [28, 158], "That": [28, 43, 68, 79, 111, 117, 125, 126, 128, 131, 146], "lead": [28, 30, 38, 77, 111, 112, 147, 150, 151, 153, 158], "realloc": [28, 79], "hit": [28, 79], "situat": [28, 46, 112, 114, 117, 131, 146, 147, 150], "item_separ": 29, "key_separ": 29, "deserialis": 29, "unrestrict": 30, "buse": [30, 33, 88, 96], "incorrectli": 30, "malfunct": [30, 112], "lockup": 30, "crash": [30, 44, 112, 126, 150], "extrem": [30, 79, 89, 112, 127], "damag": [30, 116, 117], "physic": [30, 33, 34, 35, 38, 40, 41, 43, 49, 88, 92, 94, 96, 99, 114, 146], "thin": 30, "shim": 30, "top": [30, 41, 61, 62, 63, 64, 68, 75, 79, 81, 82, 121, 126, 127, 131, 143, 154], "notat": [30, 48, 68, 102, 106, 108, 112, 133, 134, 136, 139, 140, 141, 143, 145, 158], "0x48000000": 30, "0x18": 30, "0x10": [30, 48, 118, 134, 146], "pa2": [30, 108], "pa3": [30, 108], "manner": [30, 68, 86, 146], "button": [30, 41, 76, 78, 86, 121, 126, 129, 147], "tri": [30, 68, 79, 85, 106, 138, 146, 150, 157, 158], "retain": [30, 112], "thing": [30, 68, 77, 94, 117, 121, 126, 127, 129, 131, 157], "compromis": 30, "unexpectedli": 30, "opaqu": [30, 61, 62, 63, 64, 68, 70, 79, 81, 82, 106, 111], "restor": [30, 46, 86, 137, 138, 144], "hz": [30, 35, 37, 42, 54, 56, 64, 79, 81, 82, 87, 95, 98, 118], "hertz": [30, 61, 62, 63, 79], "gate": 30, "consumpt": [30, 86, 123, 127, 146], "soon": [30, 38, 46, 65, 80, 99, 106, 150], "paus": [30, 43, 68, 78, 79, 86, 150, 153], "tight": [30, 68, 111], "significantli": [30, 151], "time_m": 30, "Such": [30, 46, 146, 150], "wake": [30, 38, 39, 69, 79, 86, 95], "retent": 30, "subsystem": [30, 87, 146], "hard": [30, 38, 43, 79, 86, 101, 108, 111, 117, 131, 150, 153], "distinguish": [30, 106, 110], "soc": [30, 42, 112], "substr": [30, 85, 103, 146], "pulse_level": 30, "timeout_u": 30, "1000000": [30, 40, 118, 157], "straight": [30, 126, 127, 128], "awai": [30, 41, 68, 79], "bang": [30, 34, 40, 41, 118], "four": [30, 33, 68, 88, 115, 118, 126, 134, 135, 136, 146, 154], "high_time_0": 30, "low_time_0": 30, "high_time_1": 30, "low_time_1": 30, "850": 30, "800": [30, 67], "450": 30, "ws2812": 30, "800khz": 30, "accuraci": [30, 37, 64, 89, 98, 118], "cortex": [30, 68, 83], "m0": 30, "48mhz": 30, "120n": 30, "closer": [30, 68, 152], "30n": 30, "neopixel": 30, "strip": [30, 126, 146], "voltag": [31, 33, 38, 57, 87, 88, 89, 118, 119, 150], "discretis": 31, "65535": [31, 33, 37, 88, 106, 118], "microvolt": 31, "sample_n": 31, "atten": 31, "aspect": [31, 61, 62, 63, 64, 68, 70, 79, 81, 82, 158], "attenu": 31, "taken": [31, 79, 103, 112, 150], "unit": [31, 35, 42, 43, 68, 84, 88, 99, 111, 124, 153], "done": [31, 43, 60, 71, 77, 79, 99, 107, 111, 121, 126, 127, 131, 136, 137, 146, 150, 152, 153, 155, 158], "finer": [32, 37], "togeth": [32, 38, 68, 126], "TO": [33, 116], "FOR": [33, 116], "THE": [33, 116], "rt1062": 33, "AND": [33, 116], "WILL": [33, 106], "BE": [33, 116], "OF": [33, 116], "classic": [33, 46, 79, 88, 137, 150], "transceiv": [33, 88], "124": [33, 88], "fifo": [33, 43, 46, 79, 88], "construct": [33, 34, 35, 37, 38, 40, 42, 43, 83, 88, 89, 92, 96, 98, 99, 114, 118, 137, 147, 148, 150], "initialis": [33, 34, 35, 38, 39, 40, 42, 43, 46, 48, 49, 87, 88, 89, 92, 94, 96, 98, 99, 102, 114, 137, 146, 147], "p3": [33, 51, 63, 64, 77, 82, 96, 118, 123], "p1": [33, 51, 64, 67, 68, 82, 96, 99, 118, 147], "auto_restart": [33, 88], "baudrat": [33, 40, 43, 77, 88, 92, 96, 99, 118, 132, 156], "particip": [33, 88], "go": [33, 34, 61, 62, 63, 68, 77, 88, 90, 94, 99, 119, 120, 123, 127, 129, 131, 158], "tec": [33, 88], "rec": [33, 88], "96": [33, 86, 88], "passiv": [33, 88], "fill": [33, 35, 53, 61, 62, 63, 64, 68, 70, 77, 79, 81, 82, 88, 92, 96, 100, 101, 126, 158], "entert": [33, 88], "pend": [33, 68, 88, 99, 101], "bank": [33, 88], "rtr": [33, 88], "extfram": [33, 88], "boolean": [33, 38, 41, 48, 51, 52, 68, 88, 94, 150, 158], "transmiss": [33, 43, 88, 89, 99], "5000": [33, 37, 44, 77, 79, 88, 92, 96, 100, 101, 113, 118], "five": [33, 52, 84, 88], "fmi": [33, 88], "fifth": [33, 88], "inplac": [33, 40, 88, 92], "subsequ": [33, 46, 88, 99, 106, 134, 135, 137, 146, 153, 155], "lst": [33, 88], "shall": [33, 42, 88, 116], "dlc": [33, 88], "unus": [33, 68, 88, 114, 131, 148], "fun": [33, 79, 88, 94, 98], "lost": [33, 51, 88, 121, 133, 150], "cb0": [33, 88], "scl": [34, 77, 92, 118], "sda": [34, 77, 92, 94, 118], "attach": [34, 38, 43, 60, 64, 79, 81, 82, 92, 104, 108, 117, 121, 126, 128], "primarili": [34, 40, 126], "circuitri": 34, "resistor": [34, 38, 90, 94, 118, 120], "kohm": 34, "vcc": 34, "wrong": [34, 70, 112, 134], "often": [34, 46, 90, 155, 156], "breakout": 34, "rule": [34, 158], "troubl": 34, "excel": 34, "adafruit": [34, 148], "400000": [34, 40, 92, 118], "400khz": [34, 40], "x10": 34, "transact": 34, "stretch": [34, 61, 62, 63, 64, 68, 70, 81, 82], "held": 34, "etimedout": 34, "lower": [34, 37, 40, 48, 61, 62, 63, 64, 68, 70, 75, 79, 81, 82, 92, 95, 106, 121, 139, 150, 154, 158], "0x77": 34, "transit": [34, 98], "nack": 34, "ack": 34, "nbyte": [34, 40, 43, 46, 99, 101, 106, 135], "transfer": [34, 35, 40, 43, 77, 89, 92, 96, 137, 139, 148, 157], "sequenti": [34, 148, 153], "contribut": 34, "memaddr": [34, 92], "addrsiz": 34, "synchron": [35, 40, 77, 97, 108, 118], "sck": [35, 40, 96, 118], "technic": [35, 158], "preview": [35, 110, 152], "feedback": [35, 126], "encourag": 35, "sck_pin": 35, "ws_pin": 35, "sd_pin": 35, "y6": [35, 88], "y5": [35, 88, 94], "y8": 35, "audio_out": 35, "44100": 35, "ibuf": 35, "20000": [35, 92, 118], "audio_in": 35, "22050": 35, "num_written": 35, "num_read": 35, "i2s_callback": 35, "swriter": 35, "sreader": 35, "mck": 35, "dma": [35, 89, 92], "underflow": 35, "deiniti": [35, 57, 58, 64, 81, 82], "littl": [35, 51, 68, 99, 109, 110, 112, 127, 132, 135, 137, 146, 157], "endian": [35, 99, 109, 112, 132, 135, 157], "preced": [35, 154], "volum": [35, 54, 121, 131, 146], "6db": 35, "led_r": 36, "led_green": 36, "led_blu": 36, "pin_nam": [36, 94], "color": [36, 61, 62, 63, 64, 66, 68, 70, 79, 81, 82, 117, 126], "8192": [37, 89], "32768": [37, 95], "reinitialis": [37, 89], "200u": 37, "5u": 37, "3000": 37, "3u": 37, "dest": [37, 83, 153, 156], "entiti": 37, "enhanc": 37, "discret": 37, "divid": [37, 68, 71, 87, 88, 96, 98], "80mhz": 37, "300khz": 37, "80000000": 37, "300000": 37, "266": 37, "267": 37, "299625": 37, "300751": 37, "rp2040": [37, 43, 44, 153], "granular": 37, "averag": [37, 111, 148], "cost": [37, 41, 63, 68, 77, 79, 82, 131, 146, 158], "spectral": 37, "puriti": 37, "interdepend": 37, "lowest": [37, 41, 79], "insignific": 37, "300_000": 37, "unambigu": 38, "certain": [38, 98, 106, 114, 138, 147, 151, 158], "p0": [38, 51, 63, 64, 82, 96, 99, 118, 120, 123], "p2": [38, 51, 63, 64, 67, 68, 82, 96, 99, 118, 147], "reconfigur": [38, 43, 44], "mandatori": 38, "imped": [38, 89], "unchang": [38, 107], "strength": [38, 51, 57, 58, 68], "rest": [38, 68, 88, 128, 151, 154], "omit": [38, 41, 96, 97, 106, 148, 150, 156, 158], "edg": [38, 40, 68, 77, 90, 96, 98, 118], "rise": [38, 90, 98], "ed": [38, 68, 106], "nrf": [38, 43, 156], "rp2": [38, 43, 151], "cc3200": [38, 43], "mimxrt": [38, 43, 49], "samd": [38, 43], "track": [39, 46, 65, 68, 79, 95, 111, 126, 129], "datetimetupl": [39, 95], "year": [39, 95, 111], "dai": [39, 86, 95], "weekdai": [39, 95, 111], "hour": [39, 95, 111, 125], "minut": [39, 86, 95, 111, 125], "subsecond": [39, 95, 111], "tzinfo": 39, "januari": 39, "2015": [39, 157], "time_in_m": 39, "alarm_id": 39, "expir": [39, 42, 44], "persist": [39, 91, 147, 158], "2048": [39, 89], "mosi": [40, 77, 96, 118], "miso": [40, 77, 96, 118], "4th": 40, "chip": [40, 51, 61, 62, 63, 67, 80, 87, 124, 137, 146, 158], "12345678": [40, 118], "deselect": 40, "rxdata": 40, "0x42": [40, 92, 118], "txdata": 40, "simultan": 40, "500000": [40, 118], "firstbit": [40, 96], "sit": [40, 96, 129], "bitbang": 40, "wipi": 40, "write_buf": 40, "read_buf": 40, "deassert": 41, "seem": [41, 111], "major": [41, 51, 68, 76, 110, 148, 152, 154], "goal": [41, 127, 152], "relai": 41, "nice": [41, 126], "suppos": [41, 111, 112], "led1_pin": 41, "led2_pin": 41, "light": [41, 68, 79, 93, 121, 126], "ll": [41, 68, 79, 91, 121, 123, 126, 129, 130, 131, 132, 156, 157], "segment": [41, 68, 88, 118, 124, 131], "reed": 41, "moistur": 41, "flame": 41, "detector": [41, 68], "come": [41, 68, 90, 94, 112, 121, 130, 146, 154, 158], "minor": [41, 51, 68, 76, 110, 154], "doubt": 41, "unexcit": 41, "enjoi": 41, "frustrat": 41, "fact": [41, 79, 137, 146], "simpli": [41, 121, 128, 130, 137, 147], "slightli": 41, "pin_obj": 41, "pin_argu": 41, "univers": [41, 148, 158], "skip": [41, 68, 79, 153], "intermedi": [41, 112], "inact": [41, 48, 49, 98], "deactiv": [41, 48, 51, 52], "deal": [42, 68, 79, 111, 116, 146, 150], "heterogen": 42, "kind": [42, 48, 68, 106, 116], "greatli": [42, 131], "baselin": 42, "mycallback": 42, "1khz": 42, "tim": [42, 87, 98, 118, 150], "1000": [42, 48, 60, 68, 77, 78, 86, 92, 98, 99, 106, 110, 118, 132, 150, 158], "100m": [42, 111], "shot": [42, 105], "fire": [42, 108], "1000m": 42, "upper": [42, 68], "nonetyp": 42, "isn": [42, 68, 121, 127, 131, 151, 158], "deinitialis": [42, 98], "usart": [43, 99], "confus": [43, 99, 150], "9600": [43, 99, 118], "pariti": [43, 99], "odd": [43, 68, 99, 102], "txbuf": 43, "timeout_char": [43, 99, 118, 132], "inv_tx": 43, "inv_rx": 43, "bitmask": [43, 68], "suffici": [43, 99], "fly": 43, "sophist": [43, 155], "pollin": [43, 105, 106], "break": [43, 77, 98, 99, 101, 121, 126, 152, 157], "baud": [43, 77, 88, 118, 156], "renesa": 43, "ra": [43, 157], "tell": [43, 68, 74, 78, 111, 121, 132], "ongo": 43, "goe": [43, 61, 62, 63, 68, 98, 146, 157], "ye": [43, 72, 121, 127, 131, 147], "stm32f4xx": [43, 112], "recover": [44, 158], "8388": 44, "sensibl": [44, 92, 96], "hyperbol": 45, "tangent": 45, "princip": [45, 150], "infin": [45, 68], "complementari": [45, 98, 118], "decompos": 45, "mantissa": 45, "finit": [45, 46], "infinit": [45, 68, 79, 126, 129], "const_x": 46, "const_i": 46, "hand": [46, 87, 103, 121, 126], "begin": [46, 68, 77, 86, 151, 157, 158], "hidden": [46, 48, 52, 126], "recognis": [46, 114], "mainli": [46, 147], "bytecod": [46, 110, 146, 148, 150, 151, 154, 155, 158], "particularli": [46, 68, 150], "ie": [46, 157], "former": 46, "forcefulli": 46, "micropy_py_micropython_heap_lock": 46, "earliest": 46, "preempt": [46, 146, 150], "opcod": [46, 158], "fundament": 46, "region": [46, 48, 57, 58, 61, 62, 63, 64, 68, 70, 74, 75, 79, 81, 82, 114, 146, 148], "gil": 46, "solut": [46, 106, 146, 150], "variant": [46, 48, 114, 139, 148], "account": [46, 125, 128], "pre": [46, 68, 71, 79, 110, 146, 148, 150, 151, 153, 158], "term": [47, 99, 106, 137, 146, 150, 157], "notion": [47, 84, 150], "mutual": [47, 150], "exclus": [47, 150, 153], "pthread_mutex_lock": 47, "pthread_mutex_unlock": 47, "pthread_mutex_trylock": 47, "mechan": [47, 90, 95, 137, 147, 148], "routin": [47, 150, 158], "data_readi": 47, "defer": [47, 107, 150], "man": [47, 107], "page": [47, 88, 126, 138], "semaphor": 47, "geeksforgeek": 47, "stackoverflow": 47, "differencebetween": 47, "rout": [48, 77, 131], "nic": [48, 49, 52], "addr4": [48, 49, 50, 153], "80": [48, 64, 68, 77, 88, 106, 126], "nhost": 48, "impli": [48, 116, 137, 146, 158], "is_act": [48, 51, 52], "service_id": 48, "primari": [48, 91, 98, 147, 152], "accompani": 48, "said": [48, 68, 79, 117, 126, 128, 131], "medium": 48, "predefin": [48, 94, 112], "bssid": [48, 51, 52], "media": 48, "ssid": [48, 51, 52, 78], "link": [48, 49, 50, 52, 85, 106, 126, 137, 138, 139, 144, 153, 154], "technologi": [48, 52, 131], "sta": [48, 51, 52], "ap": [48, 51, 52, 153], "station": [48, 51, 52, 153], "dhcp4": 48, "ipv4": [48, 51, 106], "gatewai": [48, 49, 50, 51, 52], "dn": [48, 49, 50, 51, 52, 135], "dhcp": [48, 51, 52], "has_dhcp4": 48, "gw4": 48, "dhcp6": 48, "stateless": 48, "dhcpv6": 48, "autoconf6": 48, "ipv6": [48, 106], "router": 48, "has_autoconf6": 48, "192": [48, 49, 51, 52, 55], "168": [48, 49, 51, 52, 55, 98], "subnet": [48, 49, 50, 51, 52], "cidr": 48, "addr6": 48, "fe80": 48, "1234": [48, 96, 118], "5678": 48, "preferred_lifetim": 48, "valid_lifetim": 48, "slaac": 48, "lifetim": 48, "tent": 48, "probe": 48, "0x30": 48, "0x40": 48, "dealt": [48, 52], "formal": [48, 52, 158], "my": [48, 52, 68, 127, 151], "iso": 48, "3166": 48, "alpha": [48, 61, 62, 63, 64, 68, 70, 81, 82], "complianc": 48, "xx": [48, 51, 68], "worldwid": 48, "mdn": [48, 52], "domain": [48, 106], "aaaa": 48, "phy": [48, 49], "mode_11b": 48, "802": 48, "11b": 48, "mode_11g": 48, "11g": 48, "mode_11n": 48, "11n": 48, "phy_typ": 49, "board_default": 49, "phy_addr": 49, "ref_clk_mod": 49, "hardwir": 49, "pyh": 49, "seeed": 49, "mix": [49, 68], "phy_lan8720": 49, "config_paramet": [49, 50], "low_pow": 49, "phy_ksz8081": 49, "phy_dp83825": 49, "phy_dp83848": 49, "phy_rtl8211f": 49, "sure": [50, 68, 78, 87, 106, 117, 118, 121, 126, 130, 153, 154], "wheverv": 50, "proce": [50, 150], "cleanli": [50, 150], "rxidl": 50, "necessari": [50, 57, 58, 68, 71, 74, 106, 114, 137, 146, 150, 158], "mode_st": 51, "p6": [51, 63, 118, 119, 123], "p7": [51, 63, 92, 97, 118, 123], "p8": [51, 63, 92, 97, 118, 123], "winc1500": [51, 126], "wep": [51, 52], "fw": 51, "reopen": 51, "sta_if": [51, 52, 78, 153], "upstream": [51, 52], "ap_if": [51, 52], "usocket": 51, "udp": [51, 106, 126], "adress": 51, "forev": [51, 53, 127], "ip_addr": 51, "subnet_addr": 51, "gateway_addr": 51, "dns_addr": 51, "xxx": [51, 146], "versu": [51, 61, 62, 63, 64, 68, 70, 71, 81, 82, 121, 131, 146], "author": [51, 116, 151], "revis": 51, "wpa": [51, 52], "psk": [51, 52], "wpa2": [51, 52], "enterpris": 51, "bsp": 51, "processor": [52, 68, 73, 83, 123, 131, 139, 150], "interface_id": 52, "wireless": [52, 82, 126], "visibl": [52, 146], "status": 52, "stat_idl": 52, "stat_connect": 52, "progress": [52, 146, 152], "stat_wrong_password": 52, "incorrect": [52, 111], "stat_no_ap_found": 52, "stat_connect_fail": 52, "stat_got_ip": 52, "reconnect": [52, 121], "unlimit": 52, "txpower": 52, "dbm": 52, "pm": 52, "microphon": 53, "arduino": [53, 68, 79, 123, 126, 127], "portenta": [53, 68, 79], "nicla": [53, 79], "16000": [53, 98], "gain_db": [53, 79], "highpass": 53, "9883": 53, "mic": 53, "h7": [53, 55, 79, 88, 91, 99, 118, 128], "calucl": 53, "factor": [53, 68], "calcul": [53, 68, 88, 111, 150, 153], "pcmbuf": 53, "pcm": 53, "ndarrai": [53, 68, 71, 74], "infer": [53, 71], "who": [53, 68, 126], "amplitud": 54, "onboard": [54, 81, 117, 120, 126, 146], "percentag": [54, 88, 98], "defint": 54, "highest": [54, 68, 79, 111, 118], "4000": 54, "m4": [55, 68, 83, 118, 120, 121, 128], "supported_frequ": 55, "mhz": [55, 98, 118], "cpu_clk_in_mhz": 55, "hclk_in_mhz": 55, "pclk1_in_mhz": 55, "pclk2_in_mhz": 55, "120": [55, 64, 77, 79, 118], "144": 55, "216": 55, "m7": [55, 68, 92, 99, 118, 120, 121, 128], "240": [55, 67, 68, 82], "200": [55, 58, 68, 79, 89, 111, 118, 134], "480": [55, 67, 68], "rev": 55, "xy": [55, 118], "silicon": 55, "mipi": [56, 59, 61], "320x240": [56, 68, 79, 129], "frames": [56, 61, 62, 79], "240x320": 56, "480x272": 56, "480x128": 56, "640x480": [56, 79], "320x480": 56, "800x480": [56, 61, 62], "800x320": 56, "480x800": 56, "480x480": 56, "800x600": [56, 79], "1024x600": 56, "1024x768": [56, 79], "1280x1024": [56, 79], "1280x400": 56, "1600x1200": [56, 79], "1280x720": [56, 79], "1920x1080": [56, 79], "stm32h7": [56, 83, 131], "1080p": 56, "p5": [57, 64, 87, 92, 99, 118, 123, 132], "linear": [57, 58, 68], "bright": [57, 58, 68, 79], "drastic": [57, 58], "cotnrol": 59, "display_control": 59, "displayport": 60, "cec": 60, "ddc": 60, "ddc_addr": 60, "0x50": 60, "talk": [60, 61, 68, 77, 120, 123, 126], "eeprom": 60, "edid": 60, "dst_addr": 60, "src_addr": 60, "packet": [60, 77, 86, 113], "recept": [60, 157], "anymor": [60, 65, 68, 80, 119, 121, 126], "portrait": [61, 62], "One": [61, 62, 88, 129, 150], "swap": [61, 62, 63, 64, 68, 70, 79, 81, 82], "destruct": [61, 62, 63, 146], "x_scale": [61, 62, 63, 64, 68, 81, 82], "y_scale": [61, 62, 63, 64, 68, 81, 82], "roi": [61, 62, 63, 64, 68, 70, 71, 74, 75, 79, 81, 82, 126], "rgb_channel": [61, 62, 63, 64, 68, 70, 81, 82], "color_palett": [61, 62, 63, 64, 68, 70, 81, 82], "alpha_palett": [61, 62, 63, 64, 68, 70, 81, 82], "disk": [61, 62, 63, 68, 70, 71, 117, 126, 146, 150], "draw": [61, 62, 63, 64, 70, 81], "jpg": [61, 62, 63, 68, 126], "flip": [61, 62, 63, 64, 68, 70, 79, 81, 82], "horizont": [61, 62, 63, 64, 66, 68, 70, 79, 81, 82, 126], "vertic": [61, 62, 63, 64, 66, 68, 70, 79, 81, 82, 126], "extract": [61, 62, 63, 64, 68, 70, 81, 82, 112, 128, 130, 148], "green": [61, 62, 63, 64, 68, 70, 79, 81, 82, 118, 121, 124, 126, 129, 150, 158], "black": [61, 62, 63, 68, 70, 79, 82, 124], "transpar": [61, 62, 63, 64, 68, 70, 81, 82, 114], "perfectli": [61, 62, 63, 68, 82], "palett": [61, 62, 63, 64, 68, 70, 79, 81, 82], "enum": [61, 62, 63, 64, 68, 70, 79, 81, 82], "lookup": [61, 62, 63, 64, 68, 70, 81, 82, 112, 146, 158], "downscal": [61, 62, 63, 64, 68, 70, 81, 82], "neighbor": [61, 62, 63, 64, 68, 70, 81, 82], "drawn": [61, 62, 63, 64, 68, 70, 81, 82], "90": [61, 62, 63, 64, 68, 69, 70, 78, 79, 81, 82, 97, 118], "180": [61, 62, 63, 64, 68, 69, 70, 79, 81, 82], "270": [61, 62, 63, 64, 68, 69, 70, 79, 81, 82], "display_off": [61, 62, 63], "white": [61, 62, 63, 68, 79, 126, 127], "dim": [61, 62, 63, 124], "cmd": [61, 63, 91], "dc": 61, "display_on": 62, "databu": 62, "128x160": [63, 79], "160": [63, 64, 68], "red": [63, 68, 79, 118, 121, 124, 127, 150], "blue": [63, 68, 79, 118, 121, 124], "our": [63, 68, 79, 98, 121, 124, 125, 126, 127, 128, 130, 131], "3x": [63, 82], "sdram": [63, 79], "tripl": [63, 64, 79, 82], "img": [64, 68, 81, 129], "ta": 64, "ir": [64, 118, 124], "to_min": [64, 81], "to_max": [64, 81], "ambient": [64, 87], "temperatur": [64, 69, 79, 87, 118, 146], "2f": [64, 81, 146], "seen": [64, 81, 90, 114, 146], "thermopil": [64, 81], "p4": [64, 92, 99, 118, 123, 132, 158], "16x4": 64, "32x24": 64, "16x12": 64, "8x8": [64, 81], "80x60": [64, 68, 79], "flir": [64, 68, 79], "160x120": [64, 79], "950c": 64, "750c": 64, "600c": 64, "450c": 64, "300c": 64, "80c": 64, "140c": 64, "400c": 64, "125": [64, 88], "kb": [64, 79, 82, 121], "cb": [64, 77, 78, 79, 150], "nomial": 64, "flat": [64, 68], "ffc": 64, "celsiu": [64, 69, 79], "destin": [64, 68, 70, 81, 83, 106, 139, 143, 153, 155], "clip": [64, 66, 68, 70, 81], "seamlessli": [64, 68, 81], "modif": [64, 68, 81, 114, 150], "x_size": [64, 81], "y_size": [64, 81], "pixformat": [64, 68, 79, 81], "copy_to_fb": [64, 68, 81], "mlx90621": 64, "refactor": [65, 80], "i2c_addr": [65, 80], "0x38": 65, "lcd_gesture_": 65, "lcd_flag_": 65, "gestur": 65, "zoom": [65, 68, 79, 126], "press": [65, 126, 146, 147, 153, 157], "playback": 66, "had": [66, 79, 150, 157], "centi": 66, "viewabl": [66, 70], "400_000": [67, 118], "reset_pin": 67, "irq_pin": 67, "touch_point": 67, "0x5d": 67, "reserve_x": 67, "reserve_i": 67, "reverse_axi": 67, "stio": 67, "refresh_r": 67, "accord": [67, 87, 109, 133, 150], "pressur": [67, 146], "correl": [67, 68], "binary_image_valu": 68, "rgb888": [68, 74], "lab": [68, 126], "yuv": [68, 126], "grayscale_valu": 68, "rgb_tupl": 68, "lab_tupl": 68, "yuv_tupl": 68, "descritor0": 68, "descriptor1": 68, "70": 68, "filter_outli": 68, "lbp": 68, "metric": 68, "orb": 68, "ambigu": 68, "tighten": [68, 121], "outlier": 68, "haar": 68, "cascad": 68, "stage": [68, 158], "frontalfac": 68, "frontal": 68, "face": [68, 69, 127], "ey": [68, 121, 126], "googl": 68, "someon": 68, "opencv": [68, 127], "lot": [68, 77, 86, 126, 131], "Then": [68, 88, 111, 124, 146, 151, 157], "contrast": [68, 79], "lighter": 68, "train": [68, 72, 73, 74], "hundr": 68, "pictur": [68, 79, 121, 126, 129], "cat": [68, 153, 156], "deviat": [68, 74], "ssim": 68, "dsim": 68, "cdf": 68, "cross": [68, 146, 148, 151, 154], "distribut": [68, 116, 126, 148], "ruin": 68, "otsu": 68, "halv": 68, "quartil": 68, "get_stat": 68, "l_": 68, "a_": 68, "b_": 68, "127": [68, 89, 106], "necessarili": 68, "lie": [68, 141], "box": [68, 75, 121, 126], "centroid": 68, "pencil": 68, "pen": 68, "shortest": [68, 103], "ellips": 68, "ry": 68, "hough": 68, "transform": 68, "179": 68, "radiu": [68, 79], "url": [68, 104, 106, 148, 155], "qr": 68, "plan": [68, 123, 126], "seriou": [68, 127], "kanji": 68, "yourself": [68, 126, 152], "treat": [68, 89, 103, 106, 111, 117, 133], "241": 68, "2319": 68, "586": 68, "511": [68, 95], "tag": [68, 154, 155], "refin": 68, "unknown": [68, 84], "plai": [68, 77, 79, 126], "eas": 68, "front": [68, 121, 124, 127], "plane": 68, "scanlin": 68, "increment": [68, 150, 157], "estim": 68, "bpp": 68, "meta": 68, "bmp": [68, 126], "pgm": 68, "ppm": [68, 95], "veru": 68, "shape": [68, 71], "blank": [68, 126, 157], "rgbtupl": 68, "debay": 68, "dtype": 68, "bitmap": [68, 79], "deep": [68, 86], "becuas": 68, "quit": [68, 117, 123], "easili": [68, 79, 87, 121, 126, 129, 131, 132, 148], "rainbow": 68, "ironbow": 68, "dark": [68, 124], "encode_for_id": 68, "subsampl": 68, "x0": 68, "y0": 68, "thick": 68, "yc": 68, "x_space": 68, "y_space": 68, "mono_spac": 68, "char_rot": 68, "char_hmirror": 68, "char_vflip": 68, "string_rot": 68, "string_hmirror": 68, "string_vflip": 68, "8x10": 68, "cursor": [68, 126, 157], "decreas": [68, 157], "cahract": 68, "terribl": [68, 126], "arrow": [68, 129], "coner": 68, "x3": [68, 94, 98], "y3": [68, 88], "x4": 68, "y4": [68, 88], "rotation_angle_in_degre": 68, "glyph": 68, "cirl": 68, "seed_threshold": 68, "05": 68, "floating_threshold": 68, "clear_background": 68, "flood": 68, "did": [68, 132], "rectangular": 68, "radius_x": 68, "radius_i": 68, "lo": [68, 77], "hi": [68, 127, 139], "l_lo": 68, "l_hi": 68, "a_lo": 68, "a_hi": 68, "b_lo": 68, "b_hi": 68, "click": [68, 78, 121, 126, 129, 130], "drag": [68, 126, 130], "editor": [68, 126, 146, 153], "gui": 68, "slider": 68, "untouch": [68, 114], "binar": 68, "datatyp": 68, "ANDs": 68, "scalar": [68, 112], "nand": 68, "ORs": 68, "nor": [68, 79, 136, 146], "xor": 68, "xnor": 68, "grai": 68, "funciton": 68, "matric": 68, "rr": 68, "rg": 68, "gr": [68, 79], "gg": 68, "gb": [68, 79], "br": [68, 88], "bg": 68, "ro": 68, "bo": 68, "3x3": 68, "3x4": 68, "weight": [68, 71], "Or": [68, 83, 89, 112, 127, 153], "whole": [68, 70, 88, 101, 121, 126], "quickli": [68, 74, 77, 79, 97, 117, 121, 126, 127, 131, 148, 150, 156], "darker": 68, "brighter": 68, "remap": [68, 75], "diagon": 68, "unmodif": 68, "this_imag": 68, "clip_limit": 68, "qualiz": 68, "convolv": 68, "neighbour": 68, "eros": 68, "blur": 68, "5x5": 68, "sharpest": 68, "smooth": [68, 95], "surfac": 68, "slow": [68, 77, 79, 95, 126, 131, 150, 151], "50th": 68, "75": [68, 77, 88], "great": [68, 98, 131], "artifact": 68, "bia": [68, 79], "neighborhood": 68, "mul": [68, 133], "1d": 68, "2d": [68, 127], "adjust": [68, 79, 87, 95], "noth": [68, 82, 101, 126, 129, 158], "unsharp": 68, "guassian": 68, "sharp": 68, "sharpen": 68, "unthreshold": 68, "color_sigma": 68, "space_sigma": 68, "cartessian": 68, "x_corr": 68, "y_corr": 68, "un": 68, "fishey": 68, "distort": 68, "fov": 68, "perspect": [68, 79], "3d": 68, "spin": [68, 127], "approach": [68, 127, 146, 150, 155, 158], "viewport": 68, "homographi": 68, "image_width": 68, "image_height": 68, "fourth": [68, 110], "let": [68, 79, 111, 121, 123, 126, 129, 132, 158], "bird": 68, "top_tilt": 68, "bottom_tilt": 68, "tilt": 68, "dssim": 68, "similiari": 68, "structual": 68, "disimilar": 68, "invok": [68, 126, 146, 153, 158], "get_hist": 68, "historgram": 68, "motion": [68, 79, 86], "differenc": 68, "x_stride": 68, "y_stride": 68, "area_threshold": 68, "pixels_threshold": 68, "robust": [68, 77, 121, 157], "regress": 68, "theil": 68, "sen": 68, "slope": 68, "blog": 68, "margin": [68, 126], "threshold_cb": 68, "merge_cb": 68, "x_hist_bins_max": 68, "y_hist_bins_max": 68, "intersect": 68, "x_histogram": 68, "y_histogram": 68, "theta_margin": 68, "rho_margin": 68, "bulki": 68, "sobel": 68, "apart": [68, 111], "gradient": 68, "clean": [68, 121, 126, 153], "merge_dist": 68, "max_theta_differ": 68, "segement": 68, "seper": 68, "lsd": 68, "jump": [68, 88, 139], "x_margin": 68, "y_margin": 68, "r_margin": 68, "r_min": 68, "r_max": 68, "r_step": 68, "10000": [68, 118, 146, 158], "quad": [68, 137], "shear": 68, "slide": 68, "scene": 68, "flatter": 68, "undo": [68, 126, 157], "barrel": 68, "narrow": 68, "lens": 68, "fx": 68, "fy": 68, "farther": 68, "wors": 68, "warp": 68, "focal": 68, "printabl": [68, 153], "x11": 68, "984": 68, "656": 68, "mm": [68, 81], "multipli": [68, 71, 88, 153], "952": 68, "effort": [68, 126], "datamatric": 68, "spend": 68, "640": 68, "blurri": 68, "rss": 68, "templat": [68, 114], "template_roi": 68, "optic": 68, "arround": 68, "repsons": [68, 77], "consider": [68, 158], "serach_ex": 68, "poorer": 68, "pupil": 68, "scale_factor": 68, "max_keypoint": 68, "corner_detector": 68, "agast": 68, "FOr": 68, "edge_typ": 68, "canni": 68, "hog": 68, "graidient": 68, "max_dispar": 68, "stero": 68, "dispar": 68, "reprsent": 68, "640x240": 68, "camrea": 68, "useless": 68, "algorith": 68, "nonsens": 68, "simd": 68, "toi": 68, "wheel": 68, "upscal": 68, "visual": [68, 126], "higest": 68, "canva": 68, "afterward": [68, 77, 79, 130, 150], "completlei": 68, "cover": [68, 112, 122, 126, 137, 146, 150, 157, 158], "ORed": [68, 112], "player": [68, 126], "tag1h5": 68, "dof": 69, "lsm6ds3": 69, "acceler": [69, 71, 97], "ly": 69, "bottom": [69, 75, 79, 121, 126, 131, 143], "angular": 69, "stand": [69, 151], "roat": 69, "upsid": 69, "tensorflow": [71, 72], "lite": [71, 72], "4d": 71, "tensor": [71, 74, 75], "leverag": [71, 131, 132], "cmsi": [71, 108], "nn": 71, "helium": 71, "etho": 71, "npu": 71, "rank": 71, "scipi": 71, "moment": [71, 96, 98, 118, 150], "load_to_fb": 71, "dealloc": [71, 79, 131], "rember": 71, "wherea": [71, 106, 137, 146, 153], "reshap": 71, "writeabl": 71, "arena": 71, "recogn": 72, "spoken": 72, "preprocessor": 72, "micro_speech": 72, "65": 72, "confid": [72, 75], "postprocessor": 73, "score": [73, 75], "anchor": [73, 103], "nms_threshold": 73, "nms_sigma": 73, "tflite": 74, "norm": 74, "456": [74, 92], "406": 74, "229": 74, "224": 74, "225": 74, "guess": 74, "answer": [74, 125, 127], "rgb88": 74, "overlap": 75, "window_w": 75, "window_h": 75, "xmin": 75, "ymin": 75, "xmax": 75, "ymax": 75, "label_index": 75, "sigma": 75, "kept": [75, 131], "penalti": [75, 89, 146], "aggress": 75, "meant": [76, 77], "fb": [76, 158], "wish": 76, "procedur": [77, 138, 146], "checkout": [77, 78], "115200": [77, 118, 132, 156], "memory_view_object_result": 77, "remote_function_or_method_nam": 77, "bytes_object_argu": 77, "receiev": 77, "encapsul": 77, "memoryview_object_argu": 77, "bytes_object_result": 77, "reimplement": 77, "buff": 77, "timeout_m": [77, 108], "okai": [77, 121], "call_back": 77, "queue_depth": 77, "read_timeout_m": 77, "repeatedli": [77, 95, 129, 158], "bytes_or_memory_view": 77, "catch": [77, 106], "write_timeout_m": 77, "send_timeout": 77, "recv_timeout": 77, "exeuct": 77, "deivc": 77, "parent": 77, "some_function_or_method_that_takes_a_long_time_to_execut": 77, "stuff": 77, "normal_rpc_call_back": 77, "message_if": 77, "0x7ff": [77, 88], "bit_rat": 77, "250000": 77, "sample_point": [77, 88], "can_bu": 77, "mb": 77, "message_id": 77, "tseg1": 77, "tseg2": 77, "87": 77, "ohm": [77, 94], "Be": [77, 118], "slave_addr": 77, "0x12": [77, 92, 112, 118], "100000": [77, 118, 135, 146], "i2c_bu": 77, "ground": [77, 97], "cs_pin": [77, 118], "10000000": [77, 118], "clk_polar": 77, "clk_phase": 77, "spi_bu": 77, "sclk": [77, 118], "uart_port": 77, "com": [77, 86, 155], "network_if": [77, 78], "0x1dba": 77, "traffic": 77, "vlc": 78, "web": [78, 126, 129], "554": 78, "differenti": 78, "tear": 78, "woken": [79, 87], "grab": 79, "secondari": [79, 131], "temporari": [79, 131, 153], "steal": 79, "framebuff": [79, 158], "stabil": 79, "neither": [79, 146, 154], "300": 79, "gen": 79, "shutter": 79, "lepton1": 79, "pixart": 79, "contig": [79, 131], "instantli": 79, "intens": [79, 93, 124], "bss": 79, "liad": 79, "bufer": 79, "effic": 79, "88x72": 79, "176x144": 79, "352x288": 79, "88x60": 79, "176x120": 79, "352x240": 79, "40x30": 79, "30x20": 79, "60x40": 79, "120x80": 79, "240x160": 79, "480x320": 79, "64x32": 79, "64x64": 79, "128x64": 79, "128x128": 79, "160x160": 79, "320x320": 79, "720x480": 79, "752x480": 79, "1280x768": 79, "1280x960": 79, "2560x1440": 79, "2048x1536": 79, "2560x1600": 79, "2592x1944": 79, "exposur": 79, "140": 79, "200x200": 79, "paren": 79, "gainceil": 79, "constrast": 79, "satur": 79, "gain_db_ceil": 79, "decibel": 79, "exposure_u": 79, "pretti": [79, 87], "conserv": 79, "alot": 79, "rgb_gain_db": 79, "blc": 79, "got": [79, 126, 128, 132], "ever": [79, 131, 132], "reciv": 79, "advent": 79, "latest": [79, 155, 156], "older": [79, 154], "regard": [79, 150], "randomli": 79, "hous": 79, "eras": [79, 114, 121, 147], "ago": [79, 111], "huge": 79, "old": 79, "bulk": [79, 158], "risk": [79, 150], "stale": 79, "radi": 79, "coef": 79, "vsync": 79, "readout": 79, "dramat": 79, "positon": 79, "maximum_camera_sensor_pixel_width": 79, "maximum_camera_sensor_pixel_height": 79, "focu": [79, 121], "fpc": 79, "nightmod": 79, "night": [79, 124], "sdk": 79, "deseri": 79, "fpa": 79, "temp": [79, 87, 146], "aux": 79, "500c": 79, "clamp": 79, "max_temp_in_celsiu": 79, "min_temp_in_celsiu": 79, "arug": 79, "10c": 79, "40c": 79, "pc15": 79, "oscil": 79, "genx320": 79, "bias": 79, "sheet": 79, "fft": 79, "marker": 79, "0x3f": 80, "depth_min": 81, "depth_max": 81, "vl53l5cx": 81, "352": 82, "infrastructur": 83, "vring": 83, "rpmsg": 83, "life": [83, 126], "ept_recv_callback": 83, "src": [83, 151, 153, 156], "ept": 83, "vuart": 83, "rproc": 83, "virtual_uart": 83, "elf": [83, 112], "0x081e0000": 83, "ns_callback": 83, "announc": 83, "endpoint_addr_ani": 83, "destroi": [83, 146], "sysnam": 84, "nodenam": 84, "inod": 84, "0x8000": 84, "Its": [84, 137, 154, 158], "old_path": 84, "new_path": 84, "f_bsize": 84, "f_frsize": 84, "f_block": 84, "f_bfree": 84, "f_bavail": 84, "unprivileg": 84, "f_file": 84, "f_ffree": 84, "f_favail": 84, "f_flag": 84, "f_namemax": 84, "f_avail": 84, "stream_object": 84, "iobas": 84, "fsobj": [84, 114], "mount_point": [84, 114], "readonli": [84, 86, 114], "block_dev": [84, 114], "readsiz": [84, 114], "progsiz": [84, 114], "lookahead": [84, 114], "compos": [85, 99], "sever": [85, 112, 146, 153, 158], "delimit": 85, "dash": 85, "libc": 85, "xtensa": [85, 148, 154], "idfv4": 85, "newlib3": 85, "smallint": 86, "outcom": [86, 146, 150], "elaps": [86, 99, 106, 111], "fault": [86, 117, 150], "fatal": 86, "1000hz": 86, "1m": [86, 146, 147, 158], "500": [86, 88, 111, 118], "ua": 86, "undergo": [86, 89], "pc": [86, 117, 121, 131, 139, 146, 147, 148, 153, 155, 156], "mous": [86, 100, 126], "dump_alloc_t": 86, "mountpoint": 86, "unmount": [86, 114, 117, 153], "blocknum": 86, "slash": 86, "modestr": 86, "vid": [86, 153], "0xf055": 86, "msc": [86, 147, 156], "high_spe": 86, "understood": 86, "mass": [86, 91, 148, 152, 155], "pybd": 86, "cdc": [86, 153], "scsi": 86, "lun": 86, "sdcard": [86, 147], "appropri": [86, 87, 98, 136, 137, 155, 157], "keyboard": [86, 100], "read_channel": 87, "read_core_temp": 87, "read_core_vbat": 87, "vbat": 87, "read_core_vref": 87, "vref": 87, "read_vref": 87, "4095": [87, 89, 118, 119], "10hz": 87, "3v": [87, 89, 118, 119, 120, 123], "die": 87, "centigrad": 87, "although": [87, 136, 155], "forget": 87, "ten": [87, 150], "backup": [87, 111], "batteri": [87, 111], "21v": 87, "nomin": [87, 88], "overload": 87, "backscal": 87, "fine": [87, 111, 127], "met": 87, "proper": [87, 107], "exce": [87, 150], "unscal": 87, "unwant": 87, "0xffffffff": [87, 134, 137, 141, 158], "0x70000": 87, "f4": 88, "f7": [88, 118], "fd": 88, "126": [88, 146], "kbit": 88, "arbitr": 88, "1mbit": 88, "500_000": 88, "brs_baudrat": 88, "1_000_000": 88, "0xfff0": 88, "fdf": 88, "ya": 88, "yb": 88, "pb8": 88, "pb9": 88, "pb12": [88, 96, 118], "pb13": [88, 96, 99, 118], "sjw": 88, "bs1": 88, "bs2": 88, "num_filter_bank": 88, "brs_sjw": 88, "brs_bs1": 88, "brs_bs2": 88, "brs_sample_point": 88, "quanta": 88, "resynchronis": 88, "brs_prescal": 88, "tq": 88, "pclk1": 88, "bittim": 88, "42mhz": 88, "28khz": 88, "680": 88, "stm32f405": 88, "datasheet": [88, 112], "0x111": 88, "bitrat": 88, "x5": 89, "x6": 89, "65v": 89, "wave": [89, 119], "400hz": 89, "2047": [89, 119], "5k\u03c9": 89, "15k\u03c9": 89, "consequ": [89, 114, 139, 150, 158], "5m\u03c9": 89, "pseudo": [89, 102, 143], "ramp": 89, "burst": 89, "dac1": 89, "dac2": 89, "buf1": 89, "buf2": 89, "waveform": 89, "px0": 90, "px1": 90, "caution": 90, "pushbutton": 90, "bounc": 90, "www": [90, 106], "eng": 90, "utah": 90, "edu": 90, "cs5780": 90, "debounc": 90, "pdf": 90, "explan": 90, "techniqu": [90, 146, 150, 158], "evt_ris": 90, "evt_fal": 90, "evt_rising_fal": 90, "irq_xxx": 90, "evt_xxx": 90, "wfe": 90, "exti": 90, "usrsw": 90, "customis": 91, "partit": [91, 147, 152], "0x100": [91, 146, 158], "block_num": [91, 114, 147], "spiflash": 91, "plu": [91, 118, 128, 136, 139], "pullup": [92, 99], "recipi": 92, "buss": [92, 99], "pb10": [92, 99, 118], "pb11": [92, 99, 118], "pd12": [92, 118], "pd13": [92, 118], "gencal": 92, "properli": [92, 107, 121], "addr_siz": 92, "0x7f": 92, "emit": [93, 135, 143, 146, 154, 158], "diod": 93, "x1_pin": 94, "pybv1": [94, 157], "a0": [94, 153], "mymapperdict": 94, "leftmotordir": 94, "c12": 94, "mymapp": 94, "summaris": [94, 150], "ordin": 94, "usabl": [94, 95, 106, 146], "40k": 94, "3v3": 94, "gnd": 94, "11k": 94, "microprocessor": 94, "varieti": [94, 98, 114, 146, 150, 154], "x3_af": 94, "af1_tim2": 94, "af2_tim5": 94, "af3_tim9": [94, 157], "af7_usart2": 94, "tim2_ch3": 94, "tim2": [94, 118], "2014": [95, 111], "mondai": 95, "sundai": 95, "took": 95, "0x10000": 95, "0x20000": 95, "cal": 95, "954": 95, "likewis": 95, "600000": 96, "crc": [96, 137], "0x7": 96, "polynomi": 96, "nss": 96, "pb14": [96, 99, 118], "pb15": [96, 99, 118], "328125": 96, "apb": 96, "texa": 96, "instrument": 96, "oppos": 96, "motorola": 96, "ahb1": 96, "s1": [97, 118], "s2": 97, "servo1": 97, "servo2": 97, "1500m": [97, 118], "1500": [97, 118], "p9": [97, 118, 123], "pulse_min": 97, "pulse_max": 97, "pulse_centr": 97, "pulse_angle_90": 97, "pulse_speed_100": 97, "centr": 97, "simplest": [98, 148, 150, 151, 153, 155], "2hz": 98, "1hz": 98, "99": 98, "199": 98, "div": 98, "deadtim": 98, "brk": 98, "100hz": 98, "83": 98, "999": 98, "psc": 98, "0x3fffffff": 98, "autoreload": 98, "arr": [98, 112], "dead": 98, "complimentari": 98, "1008": 98, "kill": 98, "brk_in": 98, "afn_timx": 98, "pwm_invert": 98, "oc_tim": 98, "oc_act": 98, "oc_inact": 98, "oc_toggl": 98, "oc_forced_act": 98, "oc_forced_inact": 98, "enc_a": 98, "ch1": 98, "enc_b": 98, "ch2": 98, "enc_ab": 98, "oc": 98, "enc": 98, "ch1n": 98, "ch2n": 98, "8000": 98, "ch3": [98, 118], "pin_t8_1": 98, "af3_tim8": [98, 157], "pc6": 98, "tim8_ch1": 98, "pin_t8_1n": 98, "x8": 98, "pa7": 98, "tim8_ch1n": 98, "pin_bkin": 98, "x7": 98, "pa6": 98, "tim8_bkin": 98, "break_callabck": 98, "align": [98, 109, 112, 114, 118, 135, 140, 145], "read_buf_len": 99, "nrt": 99, "nct": 99, "paragraph": [99, 117], "116": 99, "ceas": 99, "emul": [100, 132], "implicitli": [101, 114, 151, 153, 155], "trail": [101, 141], "micropy_py_random_extra_func": 102, "micropy_py_random_seed_init_func": 102, "greedi": 103, "za": 103, "z0": 103, "9_": 103, "backslash": 103, "rn": [103, 133, 134, 136, 138, 140, 141, 143, 145], "cr": 103, "lf": [103, 147], "repetit": [103, 150], "line1": 103, "rline2": 103, "nline3": 103, "line2": 103, "line3": 103, "regex_str": 103, "substitut": [103, 146, 158], "max_split": 103, "auth": 104, "kw": 104, "rrequest": 104, "rlist": 105, "wlist": 105, "xlist": 105, "eventmask": 105, "pollout": 105, "pollhup": 105, "pollerr": 105, "unsolicit": 105, "enoent": 105, "accordingli": [105, 146], "calle": [105, 148], "emploi": [105, 137, 138, 146, 150, 158], "bsd": 106, "sockaddr": 106, "sock": [106, 107], "hack": 106, "ipv4_address": 106, "dot": [106, 112, 157], "ipv6_address": 106, "flowinfo": 106, "scopeid": 106, "colon": [106, 157], "2001": 106, "db8": 106, "canonnam": 106, "gaierror": 106, "bin_addr": 106, "x7f": 106, "txt_addr": 106, "x03": 106, "x04": [106, 157], "sol_": 106, "so_": 106, "ipproto_": 106, "dgram": 106, "unaccept": 106, "refus": 106, "conn": 106, "chunk": 106, "consecut": [106, 135], "bufsiz": 106, "nonneg": 106, "poller": 106, "shorthand": 106, "rwb": 106, "facil": 107, "server_sid": 107, "cert": 107, "cert_req": 107, "cadata": 107, "server_hostnam": 107, "do_handshake_on_connect": 107, "certif": 107, "mbedtl": 107, "ca": 107, "der": 107, "protocol_": 107, "certfil": 107, "keyfil": 107, "cafil": 107, "axtl": 107, "sni": 107, "prone": 107, "middl": [107, 112, 153, 158], "attack": 107, "verif": 107, "cert_": 107, "ntptime": 107, "bsrr": 108, "rf": [108, 153], "fu": 108, "ogf": 108, "ocf": 108, "hci": 108, "subghz": 108, "modem": 108, "truthi": 108, "falsei": 108, "rfbusi": 108, "busi": [108, 132], "fmt": 109, "retval": 110, "underlyingli": 110, "tracefunc": 110, "micropy_py_sys_settrac": 110, "releaselevel": 110, "_machin": 110, "_mpy": [110, 154], "node": 110, "mandat": 110, "bare": [110, 146, 147], "baremet": [110, 111, 112, 148], "referenc": [110, 146, 148, 154, 158], "epoch": 111, "1970": 111, "00": 111, "calendar": 111, "sec": 111, "mdai": 111, "yeardai": 111, "centuri": 111, "mon": 111, "sun": 111, "366": 111, "jan": 111, "ticks_max": 111, "ticks_period": 111, "why": [111, 121, 127, 131], "benchmark": 111, "delta": [111, 118, 158], "modular": 111, "deadlin": 111, "do_a_little_of_someth": 111, "ticks1": 111, "ticks2": 111, "ring": 111, "distant": 111, "complement": [111, 133, 134, 141], "monitor": [111, 146, 153], "notch": 111, "dial": 111, "plate": 111, "mistak": 111, "regularli": [111, 126, 158], "metaphor": 111, "accommod": [111, 152], "500u": 111, "overdu": 111, "snippet": [111, 148, 156], "scheduled_tim": 111, "nap": 111, "oop": [111, 112], "late": [111, 150], "run_fast": 111, "year_2038_problem": 111, "timestamp": [111, 114], "foreign": [112, 148], "idea": [112, 126, 153], "behind": [112, 121, 127], "ctype": 112, "streamlin": 112, "familiar": [112, 126, 138, 146], "uncar": 112, "executable_and_linkable_format": 112, "file_head": 112, "elf_head": 112, "ei_mag": 112, "0x0": 112, "ei_data": 112, "0x5": 112, "e_machin": 112, "x7felf": 112, "pointer": [112, 138, 158], "coord": 112, "struct1": 112, "data1": 112, "data2": 112, "wwdg": 112, "wwdg_layout": 112, "wwdg_cr": 112, "bfuint32": 112, "wdga": 112, "bf_po": 112, "bf_len": 112, "wwdg_cfr": 112, "ewi": 112, "wdgtb": 112, "0x40002c00": 112, "0b10": 112, "field1": 112, "field2": 112, "field_nam": 112, "b0": [112, 141, 145], "b1": [112, 141], "Of": 112, "aggreg": 112, "arr2": 112, "ptr2": 112, "bitfield": 112, "bitf0": 112, "bfuint16": 112, "lsbit": 112, "bitsiz": 112, "typenam": 112, "bf": 112, "rightmost": 112, "abi": 112, "layout_typ": 112, "occupi": [112, 136, 146], "immut": [112, 146], "ffi": [112, 148], "my_struct": 112, "substruct1": 112, "dereferenc": 112, "derefer": 112, "mcu_regist": 112, "peripheral_a": 112, "register1": 112, "reg_a": 112, "register0": 112, "dozen": 112, "anywai": [112, 120, 121, 123, 124, 126, 128, 129, 131, 132], "spread": 112, "artifici": 112, "megabyt": [112, 131], "synthet": 112, "quiet": 113, "subdirectori": [114, 151], "live": [114, 151, 158], "eperm": 114, "einval": 114, "lfs1": 114, "347": [114, 147], "reformat": [114, 121], "lfs2": 114, "295": [114, 147], "piec": [114, 153], "prior": [114, 134, 135, 137, 141, 144, 150], "intercept": [114, 157], "erasur": 114, "onward": 115, "trade": [115, 158], "constrain": [115, 140, 145], "mit": 116, "copyright": 116, "2013": 116, "damien": 116, "georg": 116, "paul": 116, "sokolovski": 116, "llc": 116, "permiss": [116, 130, 133, 141], "herebi": 116, "charg": 116, "person": [116, 126, 157], "sublicens": 116, "sell": 116, "whom": 116, "furnish": 116, "notic": [116, 126], "substanti": [116, 146, 148, 158], "portion": 116, "AS": 116, "warranti": 116, "BUT": 116, "merchant": 116, "noninfring": 116, "NO": 116, "holder": 116, "liabl": 116, "claim": 116, "liabil": 116, "contract": 116, "tort": 116, "aris": [116, 146, 150], "WITH": 116, "cabl": [117, 121], "eject": 117, "think": [117, 126], "complic": 117, "remount": [117, 153], "rescan": 117, "overwrit": 117, "reconmend": 117, "asset": [117, 121], "powerup": 117, "dfu": [117, 121, 126, 130, 153], "immediantli": 117, "reflash": 117, "pinout": [118, 123], "avial": 118, "tim0": 118, "tim1": 118, "gpio0": 118, "gpio2": 118, "illumin": [118, 124], "uart1": 118, "pwm2": 118, "pwm4": 118, "pwm5": 118, "pwm6": 118, "pwm9": 118, "pwm3": 118, "65536": 118, "0v": [118, 119, 120, 123], "irrespect": [118, 135], "200000": 118, "0xff": [118, 143, 146, 154], "12345": 118, "reliabl": [118, 132], "0x3a": 118, "0x76": 118, "2017": 118, "ow": 118, "gpio12": 118, "readbyt": 118, "writebyt": 118, "select_rom": 118, "rom": [118, 151, 155], "ds18s20": 118, "ds18b20": 118, "ds18x20": 118, "convert_temp": 118, "750": 118, "read_temp": 118, "7k": 118, "dht11": 118, "humid": 118, "dht22": 118, "p_out": 118, "p_in": 118, "pa5": 118, "pd14": 118, "5v": [118, 119, 123], "toler": [118, 119, 123, 147], "sink": [118, 123], "ma": [118, 123], "intr": 118, "ext": 118, "tim3": 118, "tim4": [118, 150], "tim7": 118, "tim14": 118, "tim8": 118, "tim12": 118, "tim17": 118, "ch": 118, "ss": 118, "volt": 119, "360": 119, "probabl": [120, 131], "tini": 120, "ve": [120, 121, 126, 128, 130, 131, 132, 157], "cloth": 121, "strand": 121, "microfib": 121, "glass": 121, "isopropyl": 121, "alcohol": 121, "screw": 121, "rub": 121, "wet": 121, "gentli": 121, "dirt": 121, "spot": 121, "microscop": 121, "evapor": 121, "water": 121, "gentl": 121, "rip": 121, "connector": 121, "movement": 121, "hole": 121, "strain": 121, "relief": 121, "browser": [121, 148], "unrespons": [121, 126], "didn": 121, "saw": 121, "ubuntu": 121, "icon": [121, 126], "broken": [121, 127, 157], "loader": [121, 126, 130], "unplug": [121, 126], "plug": 121, "recov": [121, 130, 146], "sai": [121, 126, 146], "hello_world": 121, "webcam": 121, "dig": 121, "bump": 121, "plastic": 121, "unscrew": 121, "eventu": [121, 150], "focus": 121, "manufactur": [121, 131], "accident": 121, "ntf": 121, "journal": 121, "scratch": 121, "wrote": 121, "95": 121, "98": 121, "facto": 121, "importantli": 121, "patent": 121, "safeti": [121, 150], "tb": 121, "fat12": 121, "fat16": 121, "fat32": 121, "sdhc": 121, "sdxc": 121, "feel": 121, "accessori": 122, "topic": [123, 150, 158], "hookup": 123, "worri": [123, 153], "beefi": 123, "auxiliari": 123, "red_l": 124, "green_l": 124, "blue_l": 124, "ir_l": 124, "heavili": 124, "strong": 124, "meter": 124, "onlin": [125, 128], "signup": 125, "email": 125, "twitter": 125, "forum": 125, "question": 125, "qtcreator": 126, "pane": 126, "combo": 126, "backend": 126, "obviou": 126, "explor": 126, "ton": [126, 127], "lastli": 126, "profession": 126, "redo": 126, "font": 126, "enviorn": 126, "hover": 126, "walk": 126, "tooltip": 126, "joi": 126, "gotten": 126, "smart": 126, "pick": [126, 129], "highlight": 126, "knowledg": [126, 158], "unkil": 126, "recours": 126, "xp": 126, "harder": 126, "reocord": 126, "ffmpeg": 126, "transcod": 126, "constantli": [126, 131], "wild": 126, "anywher": 126, "candi": 126, "programmat": [126, 157], "thought": 126, "graph": 126, "easier": [126, 152], "million": 126, "scroll": 126, "ini": 126, "bootup": 126, "comment": [126, 129], "deploi": [126, 153, 156], "dialog": 126, "submenu": 126, "mp4": 126, "activit": 126, "07d": 126, "understand": [126, 146, 150, 157, 158], "printf": 126, "7d": 126, "join": 126, "tab": [126, 157], "folk": 126, "thank": [127, 128, 131], "tuturi": [127, 129, 131], "wall": 127, "accomplish": 127, "happili": 127, "valv": 127, "experi": [127, 150], "solv": 127, "instant": 127, "job": 127, "faq": 127, "ship": 128, "luckili": [128, 131], "cloud": 128, "everyon": 128, "fork": 128, "repo": [128, 151, 153, 155], "openmv2": 128, "openmv3": 128, "openmv4": 128, "openmv4p": 128, "omv_lib_dir": 128, "door": 128, "vulner": 128, "assur": 128, "anyon": 128, "studi": 129, "plenti": 129, "distinct": [129, 146], "bring": [129, 157], "welcom": 129, "download": [130, 152, 155, 156], "dmg": 130, "macport": 130, "homebrew": 130, "sudo": 130, "libusb": 130, "pip": [130, 148, 153, 155], "pyusb": 130, "brew": 130, "chmod": 130, "readm": [130, 146], "txt": [130, 147], "openmvid": 130, "qt": 130, "linker": 130, "tar": 130, "dram": 131, "sdr": 131, "cheapest": 131, "revv": 131, "bandwidth": 131, "2gb": 131, "666mb": 131, "requr": 131, "haven": 131, "sram": 131, "hopefulli": 131, "shrink": 131, "automag": 131, "arbitrarili": [131, 146], "100kb": 131, "breakdown": 132, "abadon": 132, "ustruct": 132, "lhb": 132, "a_32_bit_valu": 132, "a_16_bit_valu": 132, "a_8_bit_valu": 132, "pixi": 132, "pixy_uart_emul": 132, "rd": [133, 134, 136, 138, 141, 142, 143], "rm": [133, 134, 136, 138, 139, 153, 156], "denot": [133, 134, 136, 139, 140, 141, 143, 145], "r0": [133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145], "r7": [133, 134, 138, 140, 141, 144, 145], "immn": [133, 140, 143, 145], "imm8": [133, 134, 143], "imm3": 133, "carri": [133, 134, 139, 150], "rdn": 133, "sbc": 133, "sdiv": 133, "udiv": 133, "bge": [134, 139], "bhi": [134, 139], "bgt": [134, 137, 139], "0x80000000": [134, 137], "borrow": 134, "compliment": 134, "0x7fffffff": 134, "0x8000000": 134, "cmp": [134, 137], "cmn": 134, "tst": 134, "ite": [134, 139], "condition": 134, "r1": [134, 137, 144], "eq": [134, 139], "mov": [134, 137, 143], "itt": 134, "itet": 134, "ittt": 134, "itttt": 134, "itee": 134, "inner1": 135, "facilit": [135, 158], "d0": 135, "d1": 135, "henc": [135, 140, 145, 146, 150], "thumb": [135, 138, 148, 150], "coprocessor": [136, 158], "equip": 136, "s0": [136, 137], "s31": 136, "vmov": 136, "sm": 136, "sn": 136, "r13": [136, 138], "r15": [136, 138, 139, 141, 143], "vadd": 136, "vsub": 136, "vneg": 136, "vmul": [136, 137], "vdiv": 136, "vsqrt": 136, "fpscr": 136, "vmr": 136, "apsr_nzcv": 136, "vldr": [136, 137], "vstr": [136, 137], "vcmp": 136, "vcvt_f32_s32": 136, "vcvt_s32_f32": 136, "asm_thumb": 137, "appreci": [137, 150], "bl": [137, 139, 153], "lr": [137, 139, 144], "r14": [137, 139, 144], "bx": [137, 139], "contriv": 137, "illustr": [137, 150, 158], "outer": [137, 139, 154], "demonstr": [137, 138], "fibonacci": 137, "fib": 137, "dofib": 137, "r2": 137, "fibdon": 137, "uint": [137, 158], "uadd": 137, "0x40000000": 137, "contigu": [137, 146, 158], "indirect": [137, 138], "getindirect": 137, "ldr": [137, 140], "testindirect": 137, "litter": 137, "mydata": 137, "principl": [137, 146, 150], "v7": [137, 138], "0xe92d": 137, "0x0f00": 137, "r8": [137, 138, 144], "r9": 137, "r10": 137, "r11": 137, "quantiti": 137, "gamut": 137, "enable_crc": 137, "rcc": 137, "rcc_ahb1enr": 137, "reset_crc": 137, "crc_cr": 137, "getval": 137, "movwt": [137, 143], "r3": 137, "crc_dr": 137, "getcrc": 137, "assembli": 138, "consult": 138, "r12": [138, 144], "constitut": [138, 150], "imposs": 138, "concept": [138, 148, 154, 155, 158], "pseudocod": 138, "emitinlinethumb": 138, "rm0090": 138, "site": [138, 155], "academ": 138, "bewar": 138, "ne": 139, "cc": 139, "mi": 139, "minu": 139, "pl": 139, "vc": 139, "ge": 139, "lt": 139, "gt": 139, "uncondit": 139, "beq": 139, "bne": 139, "blt": 139, "bc": 139, "bcc": 139, "bmi": 139, "bpl": 139, "bv": 139, "bvc": 139, "beq_w": 139, "inner": 139, "imm5": [140, 145], "imm7": [140, 145], "ldrb": 140, "ldrh": 140, "imm6": [140, 145], "eor": 141, "and_": 141, "orr": 141, "mvn": 141, "bic": 141, "lsl": 141, "lsr": 141, "asr": 141, "ror": 141, "rotate_right": 141, "b31": 141, "b30": 141, "b2": 141, "b3": 141, "unaffect": [141, 150], "clz": 141, "count_leading_zero": 141, "rbit": 141, "bit_revers": 141, "nop": 142, "suspend": 142, "cpsid": 142, "cpsie": 142, "mr": 142, "special_reg": 142, "ipsr": 142, "basepri": 142, "movw": 143, "imm16": 143, "movt": 143, "halfword": 143, "imm32": 143, "immateri": 144, "regset": 144, "strb": 145, "b7": 145, "strh": 145, "b15": 145, "unfamiliar": [146, 158], "nonvolatil": 146, "impract": 146, "inaccess": 146, "incorpor": 146, "mymodul": 146, "tree": 146, "clone": 146, "repositori": [146, 151, 154], "toolchain": 146, "vm": [146, 148, 155], "insuffici": 146, "precompil": [146, 154], "_col": 146, "presenc": [146, 150], "prepend": [146, 151], "assist": [146, 158], "implic": [146, 150], "mystr": 146, "brown": 146, "fox": 146, "resid": [146, 147], "0xdeadbeef0000deadbeef": 146, "needless": 146, "unwittingli": 146, "var": 146, "var1": 146, "var2": 146, "needlessli": 146, "piecem": 146, "fashion": 146, "06d": 146, "xff": 146, "painless": 146, "lstrip": 146, "obvious": 146, "qstrdefsport": 146, "rebuild": [146, 154], "gone": [146, 150], "redund": [146, 158], "reclaim": [146, 148, 158], "discours": 146, "bigger": 146, "despit": [146, 156], "outlin": [146, 150], "perman": 146, "utilis": 146, "10kib": 146, "tail": 146, "0x400": 146, "1kib": 146, "advantag": [146, 147, 155], "firstli": [146, 150, 158], "secondli": [146, 150, 158], "quicker": [146, 158], "provok": [146, 150], "circumst": 146, "starv": 146, "amelior": 146, "surpris": 146, "signifi": 146, "metal": [146, 147], "moutn": 147, "flashbdev": 147, "bdev": 147, "ramblockdev": 147, "block_siz": 147, "num_block": 147, "ramdisk": 147, "2m": 147, "resist": 147, "fuse": 147, "block_count": 147, "4096": 147, "allow_oth": 147, "sdb1": 147, "mnt": 147, "256kib": 147, "frequent": [147, 158], "resili": 147, "csv": 147, "type_data": 147, "fledg": 148, "circuit": 148, "pcb": 148, "invis": 148, "offlin": 148, "circuitpython": 148, "industri": 148, "jython": 148, "ironpython": 148, "pypi": [148, 155], "acronym": 148, "bundl": 148, "electr": 148, "vastli": 148, "almost": [148, 152], "laptop": 148, "phone": 148, "cheaper": 148, "stdlib": 148, "freebsd": 148, "solari": 148, "basi": 148, "x86": [148, 154], "x64": [148, 154], "interchang": 148, "upip": 148, "obsolet": 148, "inspir": 148, "webrepl": [148, 155], "doc": 149, "brief": 150, "introduct": [150, 152], "vagu": 150, "deliber": 150, "deleg": 150, "hazard": [150, 158], "confer": 150, "entrant": 150, "disallow": 150, "set_volum": 150, "0xa5": 150, "0x5a": 150, "bar_ref": 150, "occas": [150, 158], "diagnos": 150, "circumv": 150, "problemat": 150, "parlanc": 150, "unsaf": [150, 153], "dsp": 150, "queu": 150, "compli": 150, "empt": [150, 158], "sustain": 150, "unconstrain": 150, "growth": 150, "propag": 150, "disrupt": 150, "tsf": 150, "cooper": 150, "mere": 150, "beginn": 150, "crucial": 150, "anticip": 150, "inevit": 150, "grasp": 150, "organis": 150, "scheme": 150, "interpos": 150, "reentrant": 150, "assess": 150, "inconsist": 150, "race": 150, "boundsexcept": 150, "arrays": 150, "callback1": 150, "exceed": 150, "irq_stat": 150, "compris": [150, 158], "overwritten": 150, "unpredict": 150, "dataset": 150, "undesir": 150, "overrun": [150, 158], "radic": 150, "challeng": 150, "eight": 150, "alon": 151, "mpy_dir": 151, "mpy_lib_dir": 151, "port_dir": 151, "board_dir": 151, "pybv11": 151, "myboard": 151, "frozen_manifest": 151, "cmake": 151, "mpconfigboard": 151, "mk": 151, "micropy_frozen_manifest": 151, "micropy_board_dir": 151, "opt": 151, "library_path": 151, "package_path": 151, "base_path": 151, "baz": 151, "module_path": 151, "manifest_path": 151, "exclud": 151, "mydriv": 151, "pybd_sf2": 151, "aiorepl": 151, "cd": 151, "myproject": 151, "decad": 152, "unblock": 152, "explain": 152, "micropy_preview_version_2": 152, "deploy": 152, "autom": 153, "pipx": 153, "df": 153, "rfc2217": 153, "ttyacm0": [153, 156], "c0": 153, "com0": 153, "acm": 153, "ftdi": 153, "j": [153, 157], "strictli": 153, "cp": [153, 155, 156], "sha256sum": 153, "scp": 153, "clariti": 153, "successfulli": 153, "reboot": [153, 157], "uf2": 153, "pico": 153, "fresh": 153, "macro": 153, "a2": 153, "a3": 153, "ttyacmn": 153, "u0": 153, "u1": 153, "u2": 153, "u3": 153, "ttyusbn": 153, "c1": 153, "c2": 153, "c3": 153, "comn": 153, "c33": 153, "334d335c3138": 153, "wl_scan": 153, "wl": 153, "nearbi": 153, "wl_ipconfig": 153, "demo": 153, "ttyacm1": 153, "com1": 153, "ttyusb0": 153, "print_state_info": 153, "500m": 153, "workflow": 153, "gitlab": [153, 155], "functool": 153, "machineri": 154, "notabl": 154, "sys_mpi": 154, "armv6": 154, "armv6m": 154, "armv7m": 154, "armv7em": 154, "armv7emsp": 154, "armv7emdp": 154, "xtensawin": 154, "rv32imc": 154, "march": 154, "uppercas": 154, "recompil": 154, "git": 154, "mpy_cross_flag": 154, "commit": 154, "bdbc869f9ea200c0d28b2bc7bfb60acd9d884e1b": 154, "6967ff3c581a66f73e9f3d78975f47528db39980": 154, "d94141e1473aebae0d3c63aeaa8397651ad6fa01": 154, "f2040bfc7ee033e48acef9f289790f3b4e6b74e5": 154, "5716c5cf65e9b2cb46c2906f40302401bdd27517": 154, "9a5f92ea72754c01cc03e5efcdfe94021120531": 154, "ff93fd4f50321c6190e1659b19e64fef3045a484": 154, "dd11af209d226b7d18d5148b239662e30ed60bad": 154, "6a11048af1d01c78bdacddadd1b72dc7ba7c6478": 154, "d8c834c95d506db979ec871417de90b7951edc30": 154, "children": 154, "vuint": 154, "8th": 154, "xd": 154, "myfil": 154, "0x4d": 154, "reloc": 154, "fetch": 155, "pkgname": 155, "easiest": 155, "broadli": 155, "webserv": 155, "alongsid": 155, "mlx90640": 155, "dep": 155, "defaultdict": 155, "otheraddit": 155, "downsid": 155, "standalon": 156, "pyseri": 156, "pipi": 156, "telnet": 156, "login": 156, "usernam": 156, "pyboard_devic": 156, "pyboard_baudr": 156, "ssh": 156, "enter_raw_repl": 156, "ret": 156, "exit_raw_repl": 156, "backspac": 157, "wind": 157, "compound": 157, "af3": 157, "af3_tim": 157, "af3_tim10": 157, "af3_tim11": 157, "6466": 157, "6467": 157, "6468": 157, "mess": 157, "indentationerror": 157, "g6f70283": 157, "dirti": 157, "stm32f405rg": 157, "echo": 157, "friendli": 157, "verbatim": 157, "x05a": 157, "worth": 157, "reamin": 157, "uncaught": 157, "x01print": 157, "nraw": 157, "x80": 157, "x04123": 157, "outset": 158, "devot": 158, "attent": 158, "straightforward": 158, "textbook": 158, "spectacular": 158, "dedic": 158, "paramount": 158, "allevi": 158, "ba": 158, "2k": 158, "mv": 158, "caveat": 158, "aliv": 158, "panacea": 158, "10k": 158, "nonetheless": 158, "indispens": 158, "profil": 158, "judici": 158, "timed_funct": 158, "mynam": 158, "new_func": 158, "3f": 158, "obj_displai": 158, "ba_ref": 158, "adequ": 158, "clutter": 158, "linebuf": 158, "roughli": 158, "pursuit": 158, "modulo": 158, "benefici": 158, "pep0484": 158, "ptr8": 158, "ptr16": 158, "ptr32": 158, "ptrx": 158, "impos": 158, "rapidli": 158, "bit0": 158, "toggle_n": 158, "odr": 158, "kickstart": 158, "mypin": 158, "a14": 158, "bit14": 158}, "objects": {"": [[17, 0, 1, "", "AssertionError"], [17, 0, 1, "", "AttributeError"], [17, 0, 1, "", "Exception"], [17, 0, 1, "", "ImportError"], [17, 0, 1, "", "IndexError"], [17, 0, 1, "", "KeyError"], [17, 0, 1, "", "KeyboardInterrupt"], [17, 0, 1, "", "MemoryError"], [17, 0, 1, "", "NameError"], [17, 0, 1, "", "NotImplementedError"], [17, 0, 1, "", "OSError"], [17, 0, 1, "", "RuntimeError"], [17, 0, 1, "", "StopIteration"], [17, 0, 1, "", "SyntaxError"], [17, 0, 1, "", "SystemExit"], [80, 1, 0, "-", "TFP410"], [17, 0, 1, "", "TypeError"], [17, 0, 1, "", "ValueError"], [17, 0, 1, "", "ZeroDivisionError"], [12, 1, 0, "-", "_thread"], [17, 4, 1, "", "abs"], [151, 4, 1, "", "add_library"], [17, 4, 1, "", "all"], [17, 4, 1, "", "any"], [13, 1, 0, "-", "array"], [14, 1, 0, "-", "asyncio"], [53, 1, 0, "-", "audio"], [17, 4, 1, "", "bin"], [15, 1, 0, "-", "binascii"], [16, 1, 0, "-", "bluetooth"], [27, 1, 0, "-", "bno055"], [17, 3, 1, "", "bool"], [54, 1, 0, "-", "buzzer"], [17, 3, 1, "", "bytearray"], [17, 3, 1, "", "bytes"], [17, 4, 1, "", "callable"], [17, 4, 1, "", "chr"], [17, 4, 1, "", "classmethod"], [18, 1, 0, "-", "cmath"], [19, 1, 0, "-", "collections"], [17, 4, 1, "", "compile"], [17, 3, 1, "", "complex"], [55, 1, 0, "-", "cpufreq"], [20, 1, 0, "-", "cryptolib"], [21, 1, 0, "-", "deflate"], [17, 4, 1, "", "delattr"], [17, 3, 1, "", "dict"], [17, 4, 1, "", "dir"], [56, 1, 0, "-", "display"], [17, 4, 1, "", "divmod"], [17, 4, 1, "", "enumerate"], [22, 1, 0, "-", "errno"], [17, 4, 1, "", "eval"], [17, 4, 1, "", "exec"], [17, 4, 1, "", "filter"], [64, 1, 0, "-", "fir"], [17, 3, 1, "", "float"], [151, 4, 1, "", "freeze"], [151, 4, 1, "", "freeze_as_mpy"], [151, 4, 1, "", "freeze_as_str"], [151, 4, 1, "", "freeze_mpy"], [17, 3, 1, "", "frozenset"], [65, 1, 0, "-", "ft5x06"], [23, 1, 0, "-", "gc"], [17, 4, 1, "", "getattr"], [66, 1, 0, "-", "gif"], [17, 4, 1, "", "globals"], [67, 1, 0, "-", "gt911"], [24, 1, 0, "-", "gzip"], [17, 4, 1, "", "hasattr"], [17, 4, 1, "", "hash"], [25, 1, 0, "-", "hashlib"], [26, 1, 0, "-", "heapq"], [17, 4, 1, "", "hex"], [17, 4, 1, "", "id"], [68, 1, 0, "-", "image"], [69, 1, 0, "-", "imu"], [151, 4, 1, "", "include"], [17, 4, 1, "", "input"], [17, 3, 1, "", "int"], [28, 1, 0, "-", "io"], [17, 4, 1, "", "isinstance"], [17, 4, 1, "", "issubclass"], [17, 4, 1, "", "iter"], [29, 1, 0, "-", "json"], [17, 4, 1, "", "len"], [17, 3, 1, "", "list"], [17, 4, 1, "", "locals"], [30, 1, 0, "-", "machine"], [17, 4, 1, "", "map"], [45, 1, 0, "-", "math"], [17, 4, 1, "", "max"], [17, 3, 1, "", "memoryview"], [151, 4, 1, "", "metadata"], [46, 1, 0, "-", "micropython"], [17, 4, 1, "", "min"], [70, 1, 0, "-", "mjpeg"], [71, 1, 0, "-", "ml"], [27, 1, 0, "-", "modbus"], [151, 4, 1, "", "module"], [27, 1, 0, "-", "mqtt"], [47, 1, 0, "-", "mutex"], [48, 1, 0, "-", "network"], [17, 4, 1, "", "next"], [17, 3, 1, "", "object"], [17, 4, 1, "", "oct"], [76, 1, 0, "-", "omv"], [17, 4, 1, "", "open"], [83, 1, 0, "-", "openamp"], [17, 4, 1, "", "ord"], [84, 1, 0, "-", "os"], [151, 4, 1, "", "package"], [27, 1, 0, "-", "pid"], [85, 1, 0, "-", "platform"], [17, 4, 1, "", "pow"], [17, 4, 1, "", "print"], [17, 4, 1, "", "property"], [86, 1, 0, "-", "pyb"], [102, 1, 0, "-", "random"], [17, 4, 1, "", "range"], [103, 1, 0, "-", "re"], [17, 4, 1, "", "repr"], [104, 1, 0, "-", "requests"], [151, 4, 1, "", "require"], [17, 4, 1, "", "reversed"], [17, 4, 1, "", "round"], [77, 1, 0, "-", "rpc"], [78, 1, 0, "-", "rtsp"], [105, 1, 0, "-", "select"], [79, 1, 0, "-", "sensor"], [17, 3, 1, "", "set"], [17, 4, 1, "", "setattr"], [17, 3, 1, "", "slice"], [106, 1, 0, "-", "socket"], [17, 4, 1, "", "sorted"], [27, 1, 0, "-", "ssd1306"], [107, 1, 0, "-", "ssl"], [17, 4, 1, "", "staticmethod"], [108, 1, 0, "-", "stm"], [17, 3, 1, "", "str"], [109, 1, 0, "-", "struct"], [17, 4, 1, "", "sum"], [17, 4, 1, "", "super"], [110, 1, 0, "-", "sys"], [27, 1, 0, "-", "tb6612"], [111, 1, 0, "-", "time"], [81, 1, 0, "-", "tof"], [17, 3, 1, "", "tuple"], [82, 1, 0, "-", "tv"], [17, 4, 1, "", "type"], [112, 1, 0, "-", "uctypes"], [27, 1, 0, "-", "ulab"], [113, 1, 0, "-", "uping"], [114, 1, 0, "-", "vfs"], [27, 1, 0, "-", "vl53l1x"], [17, 4, 1, "", "zip"], [115, 1, 0, "-", "zlib"]], "TFP410.TFP410": [[80, 2, 1, "", "hotplug_callback"], [80, 2, 1, "", "isconnected"]], "TFP410.tfp410": [[80, 3, 1, "", "TFP410"]], "array": [[13, 3, 1, "", "array"]], "array.array": [[13, 2, 1, "", "__add__"], [13, 2, 1, "", "__getitem__"], [13, 2, 1, "", "__iadd__"], [13, 2, 1, "", "__len__"], [13, 2, 1, "", "__repr__"], [13, 2, 1, "", "__setitem__"], [13, 2, 1, "", "append"], [13, 2, 1, "", "extend"]], "asyncio": [[14, 3, 1, "", "Event"], [14, 3, 1, "", "Lock"], [14, 3, 1, "", "Loop"], [14, 3, 1, "", "Server"], [14, 3, 1, "", "Stream"], [14, 3, 1, "", "Task"], [14, 3, 1, "", "ThreadSafeFlag"], [14, 4, 1, "", "create_task"], [14, 4, 1, "", "current_task"], [14, 4, 1, "", "gather"], [14, 4, 1, "", "get_event_loop"], [14, 4, 1, "", "new_event_loop"], [14, 4, 1, "", "open_connection"], [14, 4, 1, "", "run"], [14, 4, 1, "", "sleep"], [14, 4, 1, "", "sleep_ms"], [14, 4, 1, "", "start_server"], [14, 4, 1, "", "wait_for"], [14, 4, 1, "", "wait_for_ms"]], "asyncio.Event": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "is_set"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "asyncio.Lock": [[14, 2, 1, "", "acquire"], [14, 2, 1, "", "locked"], [14, 2, 1, "", "release"]], "asyncio.Loop": [[14, 2, 1, "", "call_exception_handler"], [14, 2, 1, "", "close"], [14, 2, 1, "", "create_task"], [14, 2, 1, "", "default_exception_handler"], [14, 2, 1, "", "get_exception_handler"], [14, 2, 1, "", "run_forever"], [14, 2, 1, "", "run_until_complete"], [14, 2, 1, "", "set_exception_handler"], [14, 2, 1, "", "stop"]], "asyncio.Server": [[14, 2, 1, "", "close"], [14, 2, 1, "", "wait_closed"]], "asyncio.Stream": [[14, 2, 1, "", "close"], [14, 2, 1, "", "drain"], [14, 2, 1, "", "get_extra_info"], [14, 2, 1, "", "read"], [14, 2, 1, "", "readexactly"], [14, 2, 1, "", "readinto"], [14, 2, 1, "", "readline"], [14, 2, 1, "", "wait_closed"], [14, 2, 1, "", "write"]], "asyncio.Task": [[14, 2, 1, "", "cancel"]], "asyncio.ThreadSafeFlag": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "audio": [[53, 4, 1, "", "init"], [53, 4, 1, "", "start_streaming"], [53, 4, 1, "", "stop_streaming"]], "binascii": [[15, 4, 1, "", "a2b_base64"], [15, 4, 1, "", "b2a_base64"], [15, 4, 1, "", "hexlify"], [15, 4, 1, "", "unhexlify"]], "bluetooth": [[16, 3, 1, "", "BLE"], [16, 3, 1, "", "UUID"]], "bluetooth.BLE": [[16, 2, 1, "", "active"], [16, 2, 1, "", "config"], [16, 2, 1, "", "gap_advertise"], [16, 2, 1, "", "gap_connect"], [16, 2, 1, "", "gap_disconnect"], [16, 2, 1, "", "gap_pair"], [16, 2, 1, "", "gap_passkey"], [16, 2, 1, "", "gap_scan"], [16, 2, 1, "", "gattc_discover_characteristics"], [16, 2, 1, "", "gattc_discover_descriptors"], [16, 2, 1, "", "gattc_discover_services"], [16, 2, 1, "", "gattc_exchange_mtu"], [16, 2, 1, "", "gattc_read"], [16, 2, 1, "", "gattc_write"], [16, 2, 1, "", "gatts_indicate"], [16, 2, 1, "", "gatts_notify"], [16, 2, 1, "", "gatts_read"], [16, 2, 1, "", "gatts_register_services"], [16, 2, 1, "", "gatts_set_buffer"], [16, 2, 1, "", "gatts_write"], [16, 2, 1, "", "irq"], [16, 2, 1, "", "l2cap_connect"], [16, 2, 1, "", "l2cap_disconnect"], [16, 2, 1, "", "l2cap_listen"], [16, 2, 1, "", "l2cap_recvinto"], [16, 2, 1, "", "l2cap_send"]], "buzzer": [[54, 5, 1, "", "RESONANT_FREQ"], [54, 4, 1, "", "duty"], [54, 4, 1, "", "freq"]], "cmath": [[18, 4, 1, "", "cos"], [18, 5, 1, "", "e"], [18, 4, 1, "", "exp"], [18, 4, 1, "", "log"], [18, 4, 1, "", "log10"], [18, 4, 1, "", "phase"], [18, 5, 1, "", "pi"], [18, 4, 1, "", "polar"], [18, 4, 1, "", "rect"], [18, 4, 1, "", "sin"], [18, 4, 1, "", "sqrt"]], "collections": [[19, 3, 1, "", "OrderedDict"], [19, 3, 1, "", "deque"], [19, 4, 1, "", "namedtuple"]], "collections.deque": [[19, 2, 1, "", "append"], [19, 2, 1, "", "appendleft"], [19, 2, 1, "", "extend"], [19, 2, 1, "", "pop"], [19, 2, 1, "", "popleft"]], "cpufreq": [[55, 4, 1, "", "get_current_frequencies"], [55, 4, 1, "", "get_supported_frequencies"], [55, 4, 1, "", "set_frequency"]], "cryptolib": [[20, 3, 1, "", "aes"]], "cryptolib.aes": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "decrypt"], [20, 2, 1, "", "encrypt"]], "deflate": [[21, 3, 1, "", "DeflateIO"]], "deflate.deflate": [[21, 5, 1, "", "AUTO"], [21, 5, 1, "", "GZIP"], [21, 5, 1, "", "RAW"], [21, 5, 1, "", "ZLIB"]], "display.DACBacklight": [[57, 2, 1, "", "backlight"], [57, 2, 1, "", "deinit"]], "display.DSIDisplay": [[61, 2, 1, "", "backlight"], [61, 2, 1, "", "bus_read"], [61, 2, 1, "", "bus_write"], [61, 2, 1, "", "clear"], [61, 2, 1, "", "deinit"], [61, 2, 1, "", "height"], [61, 2, 1, "", "refresh"], [61, 2, 1, "", "width"], [61, 2, 1, "", "write"]], "display.DisplayData": [[60, 2, 1, "", "display_id"], [60, 2, 1, "", "frame_callback"], [60, 2, 1, "", "receive_frame"], [60, 2, 1, "", "send_frame"]], "display": [[56, 5, 1, "", "FHD"], [56, 5, 1, "", "FHVGA"], [56, 5, 1, "", "FHVGA2"], [56, 5, 1, "", "FWVGA"], [56, 5, 1, "", "FWVGA2"], [56, 5, 1, "", "HD"], [56, 5, 1, "", "QVGA"], [63, 3, 1, "", "SPIDisplay"], [56, 5, 1, "", "SVGA"], [56, 5, 1, "", "SXGA"], [56, 5, 1, "", "SXGA2"], [56, 5, 1, "", "TFWVGA"], [56, 5, 1, "", "TFWVGA2"], [56, 5, 1, "", "THVGA"], [56, 5, 1, "", "TQVGA"], [56, 5, 1, "", "UXGA"], [56, 5, 1, "", "VGA"], [56, 5, 1, "", "WSVGA"], [56, 5, 1, "", "XGA"]], "display.PWMBacklight": [[58, 2, 1, "", "backlight"], [58, 2, 1, "", "deinit"]], "display.RGBDisplay": [[62, 2, 1, "", "backlight"], [62, 2, 1, "", "clear"], [62, 2, 1, "", "deinit"], [62, 2, 1, "", "height"], [62, 2, 1, "", "refresh"], [62, 2, 1, "", "width"], [62, 2, 1, "", "write"]], "display.SPIDisplay": [[63, 2, 1, "", "backlight"], [63, 2, 1, "", "bgr"], [63, 2, 1, "", "bus_write"], [63, 2, 1, "", "byte_swap"], [63, 2, 1, "", "clear"], [63, 2, 1, "", "deinit"], [63, 2, 1, "", "height"], [63, 2, 1, "", "refresh"], [63, 2, 1, "", "triple_buffer"], [63, 2, 1, "", "width"], [63, 2, 1, "", "write"]], "display.ST7701": [[59, 2, 1, "", "init"], [59, 2, 1, "", "read_id"]], "display.display": [[57, 3, 1, "", "DACBacklight"], [61, 3, 1, "", "DSIDisplay"], [60, 3, 1, "", "DisplayData"], [58, 3, 1, "", "PWMBacklight"], [62, 3, 1, "", "RGBDisplay"], [59, 3, 1, "", "ST7701"]], "errno": [[22, 5, 1, "", "errorcode"]], "fir": [[64, 5, 1, "", "FIR_AMG8833"], [64, 5, 1, "", "FIR_LEPTON"], [64, 5, 1, "", "FIR_MLX90621"], [64, 5, 1, "", "FIR_MLX90640"], [64, 5, 1, "", "FIR_MLX90641"], [64, 5, 1, "", "FIR_NONE"], [64, 5, 1, "", "FIR_SHIELD"], [64, 4, 1, "", "deinit"], [64, 4, 1, "", "draw_ir"], [64, 4, 1, "", "get_frame_available"], [64, 4, 1, "", "height"], [64, 4, 1, "", "init"], [64, 4, 1, "", "radiometric"], [64, 4, 1, "", "read_ir"], [64, 4, 1, "", "read_ta"], [64, 4, 1, "", "refresh"], [64, 4, 1, "", "register_frame_cb"], [64, 4, 1, "", "register_vsync_cb"], [64, 4, 1, "", "resolution"], [64, 4, 1, "", "snapshot"], [64, 4, 1, "", "trigger_ffc"], [64, 4, 1, "", "type"], [64, 4, 1, "", "width"]], "ft5x06.FT5X06": [[65, 2, 1, "", "get_gesture"], [65, 2, 1, "", "get_point_flag"], [65, 2, 1, "", "get_point_id"], [65, 2, 1, "", "get_point_x"], [65, 2, 1, "", "get_point_y"], [65, 2, 1, "", "get_points"], [65, 2, 1, "", "touch_callback"], [65, 2, 1, "", "update_points"]], "ft5x06": [[65, 5, 1, "", "LCD_FLAG_MOVED"], [65, 5, 1, "", "LCD_FLAG_PRESSED"], [65, 5, 1, "", "LCD_FLAG_RELEASED"], [65, 5, 1, "", "LCD_GESTURE_MOVE_DOWN"], [65, 5, 1, "", "LCD_GESTURE_MOVE_LEFT"], [65, 5, 1, "", "LCD_GESTURE_MOVE_RIGHT"], [65, 5, 1, "", "LCD_GESTURE_MOVE_UP"], [65, 5, 1, "", "LCD_GESTURE_NONE"], [65, 5, 1, "", "LCD_GESTURE_ZOOM_IN"], [65, 5, 1, "", "LCD_GESTURE_ZOOM_OUT"]], "ft5x06.ft5x06": [[65, 3, 1, "", "FT5X06"]], "gc": [[23, 4, 1, "", "collect"], [23, 4, 1, "", "disable"], [23, 4, 1, "", "enable"], [23, 4, 1, "", "mem_alloc"], [23, 4, 1, "", "mem_free"], [23, 4, 1, "", "threshold"]], "gif": [[66, 3, 1, "", "Gif"]], "gif.Gif": [[66, 2, 1, "", "add_frame"], [66, 2, 1, "", "close"], [66, 2, 1, "", "format"], [66, 2, 1, "", "height"], [66, 2, 1, "", "loop"], [66, 2, 1, "", "size"], [66, 2, 1, "", "width"]], "gt911.GT911": [[67, 2, 1, "", "_read_reg"], [67, 2, 1, "", "_write_reg"], [67, 2, 1, "", "read_id"], [67, 2, 1, "", "read_points"], [67, 2, 1, "", "reset"]], "gt911.gt911": [[67, 3, 1, "", "GT911"]], "gzip": [[24, 3, 1, "", "GzipFile"], [24, 4, 1, "", "compress"], [24, 4, 1, "", "decompress"], [24, 4, 1, "", "open"]], "hashlib.hash": [[25, 2, 1, "", "digest"], [25, 2, 1, "", "hexdigest"], [25, 2, 1, "", "update"]], "hashlib.hashlib": [[25, 3, 1, "", "md5"], [25, 3, 1, "", "sha1"], [25, 3, 1, "", "sha256"]], "heapq": [[26, 4, 1, "", "heapify"], [26, 4, 1, "", "heappop"], [26, 4, 1, "", "heappush"]], "image": [[68, 5, 1, "", "APPLY_COLOR_PALETTE_FIRST"], [68, 5, 1, "", "AREA"], [68, 5, 1, "", "ARTOOLKIT"], [68, 5, 1, "", "BAYER"], [68, 5, 1, "", "BICUBIC"], [68, 5, 1, "", "BILINEAR"], [68, 5, 1, "", "BINARY"], [68, 5, 1, "", "BLACK_BACKGROUND"], [68, 5, 1, "", "CENTER"], [68, 5, 1, "", "CODABAR"], [68, 5, 1, "", "CODE128"], [68, 5, 1, "", "CODE39"], [68, 5, 1, "", "CODE93"], [68, 5, 1, "", "CORNER_AGAST"], [68, 5, 1, "", "CORNER_FAST"], [68, 5, 1, "", "DATABAR"], [68, 5, 1, "", "DATABAR_EXP"], [68, 5, 1, "", "EAN13"], [68, 5, 1, "", "EAN2"], [68, 5, 1, "", "EAN5"], [68, 5, 1, "", "EAN8"], [68, 5, 1, "", "EDGE_CANNY"], [68, 5, 1, "", "EDGE_SIMPLE"], [68, 5, 1, "", "EXTRACT_RGB_CHANNEL_FIRST"], [68, 5, 1, "", "GRAYSCALE"], [68, 5, 1, "", "HMIRROR"], [68, 3, 1, "", "HaarCascade"], [68, 5, 1, "", "I25"], [68, 5, 1, "", "ISBN10"], [68, 5, 1, "", "ISBN13"], [68, 3, 1, "", "Image"], [68, 3, 1, "", "ImageIO"], [68, 5, 1, "", "JPEG"], [68, 5, 1, "", "JPEG_SUBSAMPLING_420"], [68, 5, 1, "", "JPEG_SUBSAMPLING_422"], [68, 5, 1, "", "JPEG_SUBSAMPLING_444"], [68, 5, 1, "", "JPEG_SUBSAMPLING_AUTO"], [68, 5, 1, "", "PALETTE_DEPTH"], [68, 5, 1, "", "PALETTE_EVT_DARK"], [68, 5, 1, "", "PALETTE_EVT_LIGHT"], [68, 5, 1, "", "PALETTE_IRONBOW"], [68, 5, 1, "", "PALETTE_RAINBOW"], [68, 5, 1, "", "PDF417"], [68, 5, 1, "", "PNG"], [68, 5, 1, "", "RGB565"], [68, 5, 1, "", "ROTATE_180"], [68, 5, 1, "", "ROTATE_270"], [68, 5, 1, "", "ROTATE_90"], [68, 5, 1, "", "SCALE_ASPECT_EXPAND"], [68, 5, 1, "", "SCALE_ASPECT_IGNORE"], [68, 5, 1, "", "SCALE_ASPECT_KEEP"], [68, 5, 1, "", "SEARCH_DS"], [68, 5, 1, "", "SEARCH_EX"], [68, 3, 1, "", "Similarity"], [68, 5, 1, "", "TAG16H5"], [68, 5, 1, "", "TAG25H7"], [68, 5, 1, "", "TAG25H9"], [68, 5, 1, "", "TAG36H10"], [68, 5, 1, "", "TAG36H11"], [68, 5, 1, "", "TRANSPOSE"], [68, 5, 1, "", "UPCA"], [68, 5, 1, "", "UPCE"], [68, 5, 1, "", "VFLIP"], [68, 5, 1, "", "YUV422"], [68, 3, 1, "", "apriltag"], [68, 3, 1, "", "barcode"], [68, 4, 1, "", "binary_to_grayscale"], [68, 4, 1, "", "binary_to_lab"], [68, 4, 1, "", "binary_to_rgb"], [68, 4, 1, "", "binary_to_yuv"], [68, 3, 1, "", "blob"], [68, 3, 1, "", "circle"], [68, 3, 1, "", "datamatrix"], [68, 3, 1, "", "displacement"], [68, 4, 1, "", "grayscale_to_binary"], [68, 4, 1, "", "grayscale_to_lab"], [68, 4, 1, "", "grayscale_to_rgb"], [68, 4, 1, "", "grayscale_to_yuv"], [68, 3, 1, "", "histogram"], [68, 3, 1, "", "kptmatch"], [68, 4, 1, "", "lab_to_binary"], [68, 4, 1, "", "lab_to_grayscale"], [68, 4, 1, "", "lab_to_rgb"], [68, 4, 1, "", "lab_to_yuv"], [68, 3, 1, "", "line"], [68, 4, 1, "", "load_decriptor"], [68, 4, 1, "", "match_descriptor"], [68, 3, 1, "", "percentile"], [68, 3, 1, "", "qrcode"], [68, 3, 1, "", "rect"], [68, 4, 1, "", "rgb_to_binary"], [68, 4, 1, "", "rgb_to_grayscale"], [68, 4, 1, "", "rgb_to_lab"], [68, 4, 1, "", "rgb_to_yuv"], [68, 4, 1, "", "save_descriptor"], [68, 3, 1, "", "statistics"], [68, 3, 1, "", "threshold"], [68, 4, 1, "", "yuv_to_binary"], [68, 4, 1, "", "yuv_to_grayscale"], [68, 4, 1, "", "yuv_to_lab"], [68, 4, 1, "", "yuv_to_rgb"]], "image.Image": [[68, 2, 1, "", "add"], [68, 2, 1, "", "assign"], [68, 2, 1, "", "awb"], [68, 2, 1, "", "b_and"], [68, 2, 1, "", "b_nand"], [68, 2, 1, "", "b_nor"], [68, 2, 1, "", "b_or"], [68, 2, 1, "", "b_xnor"], [68, 2, 1, "", "b_xor"], [68, 2, 1, "", "bilateral"], [68, 2, 1, "", "binary"], [68, 2, 1, "", "black_hat"], [68, 2, 1, "", "blend"], [68, 2, 1, "", "bytearray"], [68, 2, 1, "", "ccm"], [68, 2, 1, "", "clear"], [68, 2, 1, "", "close"], [68, 2, 1, "", "compress"], [68, 2, 1, "", "copy"], [68, 2, 1, "", "crop"], [68, 2, 1, "", "difference"], [68, 2, 1, "", "dilate"], [68, 2, 1, "", "draw_arrow"], [68, 2, 1, "", "draw_circle"], [68, 2, 1, "", "draw_cross"], [68, 2, 1, "", "draw_edges"], [68, 2, 1, "", "draw_ellipse"], [68, 2, 1, "", "draw_image"], [68, 2, 1, "", "draw_keypoints"], [68, 2, 1, "", "draw_line"], [68, 2, 1, "", "draw_rectangle"], [68, 2, 1, "", "draw_string"], [68, 2, 1, "", "erode"], [68, 2, 1, "", "find_apriltags"], [68, 2, 1, "", "find_barcodes"], [68, 2, 1, "", "find_blobs"], [68, 2, 1, "", "find_circles"], [68, 2, 1, "", "find_datamatrices"], [68, 2, 1, "", "find_displacement"], [68, 2, 1, "", "find_edges"], [68, 2, 1, "", "find_eye"], [68, 2, 1, "", "find_features"], [68, 2, 1, "", "find_hog"], [68, 2, 1, "", "find_keypoints"], [68, 2, 1, "", "find_lbp"], [68, 2, 1, "", "find_line_segments"], [68, 2, 1, "", "find_lines"], [68, 2, 1, "", "find_qrcodes"], [68, 2, 1, "", "find_rects"], [68, 2, 1, "", "find_template"], [68, 2, 1, "", "flood_fill"], [68, 2, 1, "", "flush"], [68, 2, 1, "", "format"], [68, 2, 1, "", "gamma"], [68, 2, 1, "", "gamma_corr"], [68, 2, 1, "", "gaussian"], [68, 2, 1, "", "get_histogram"], [68, 2, 1, "", "get_pixel"], [68, 2, 1, "", "get_regression"], [68, 2, 1, "", "get_similarity"], [68, 2, 1, "", "get_statistics"], [68, 2, 1, "", "height"], [68, 2, 1, "", "histeq"], [68, 2, 1, "", "invert"], [68, 2, 1, "", "laplacian"], [68, 2, 1, "", "lens_corr"], [68, 2, 1, "", "linpolar"], [68, 2, 1, "", "logpolar"], [68, 2, 1, "", "mask_circle"], [68, 2, 1, "", "mask_ellipse"], [68, 2, 1, "", "mask_rectange"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "median"], [68, 2, 1, "", "midpoint"], [68, 2, 1, "", "min"], [68, 2, 1, "", "mode"], [68, 2, 1, "", "morph"], [68, 2, 1, "", "negate"], [68, 2, 1, "", "open"], [68, 2, 1, "", "replace"], [68, 2, 1, "", "rotation_corr"], [68, 2, 1, "", "save"], [68, 2, 1, "", "scale"], [68, 2, 1, "", "set"], [68, 2, 1, "", "set_pixel"], [68, 2, 1, "", "size"], [68, 2, 1, "", "stero_disparity"], [68, 2, 1, "", "sub"], [68, 2, 1, "", "to_bitmap"], [68, 2, 1, "", "to_depth"], [68, 2, 1, "", "to_evt_dark"], [68, 2, 1, "", "to_evt_light"], [68, 2, 1, "", "to_grayscale"], [68, 2, 1, "", "to_ironbow"], [68, 2, 1, "", "to_jpeg"], [68, 2, 1, "", "to_ndarray"], [68, 2, 1, "", "to_png"], [68, 2, 1, "", "to_rainbow"], [68, 2, 1, "", "to_rgb565"], [68, 2, 1, "", "top_hat"], [68, 2, 1, "", "width"]], "image.ImageIO": [[68, 5, 1, "", "FILE_STREAM"], [68, 5, 1, "", "MEMORY_STREAM"], [68, 2, 1, "", "buffer_size"], [68, 2, 1, "", "close"], [68, 2, 1, "", "count"], [68, 2, 1, "", "is_closed"], [68, 2, 1, "", "offset"], [68, 2, 1, "", "read"], [68, 2, 1, "", "seek"], [68, 2, 1, "", "size"], [68, 2, 1, "", "sync"], [68, 2, 1, "", "type"], [68, 2, 1, "", "version"], [68, 2, 1, "", "write"]], "image.Similarity": [[68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "min"], [68, 2, 1, "", "stdev"]], "image.apriltag": [[68, 2, 1, "", "corners"], [68, 2, 1, "", "cx"], [68, 2, 1, "", "cxf"], [68, 2, 1, "", "cy"], [68, 2, 1, "", "cyf"], [68, 2, 1, "", "decision_margin"], [68, 2, 1, "", "family"], [68, 2, 1, "", "goodness"], [68, 2, 1, "", "h"], [68, 2, 1, "", "hamming"], [68, 2, 1, "", "id"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "rotation"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "x_rotation"], [68, 2, 1, "", "x_translation"], [68, 2, 1, "", "y"], [68, 2, 1, "", "y_rotation"], [68, 2, 1, "", "y_translation"], [68, 2, 1, "", "z_rotation"], [68, 2, 1, "", "z_translation"]], "image.barcode": [[68, 2, 1, "", "corners"], [68, 2, 1, "", "h"], [68, 2, 1, "", "payload"], [68, 2, 1, "", "quality"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "rotation"], [68, 2, 1, "", "type"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.blob": [[68, 2, 1, "", "area"], [68, 2, 1, "", "code"], [68, 2, 1, "", "compactness"], [68, 2, 1, "", "convexity"], [68, 2, 1, "", "corners"], [68, 2, 1, "", "count"], [68, 2, 1, "", "cx"], [68, 2, 1, "", "cxf"], [68, 2, 1, "", "cy"], [68, 2, 1, "", "cyf"], [68, 2, 1, "", "density"], [68, 2, 1, "", "elongation"], [68, 2, 1, "", "enclosed_ellipse"], [68, 2, 1, "", "enclosing_circle"], [68, 2, 1, "", "extent"], [68, 2, 1, "", "h"], [68, 2, 1, "", "major_axis_line"], [68, 2, 1, "", "min_corners"], [68, 2, 1, "", "minor_axis_line"], [68, 2, 1, "", "perimeter"], [68, 2, 1, "", "pixels"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "rotation"], [68, 2, 1, "", "rotation_deg"], [68, 2, 1, "", "rotation_rad"], [68, 2, 1, "", "roundness"], [68, 2, 1, "", "solidity"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "x_hist_bins"], [68, 2, 1, "", "y"], [68, 2, 1, "", "y_hist_bins"]], "image.circle": [[68, 2, 1, "", "magnitude"], [68, 2, 1, "", "r"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.datamatrix": [[68, 2, 1, "", "capacity"], [68, 2, 1, "", "columns"], [68, 2, 1, "", "corners"], [68, 2, 1, "", "h"], [68, 2, 1, "", "padding"], [68, 2, 1, "", "payload"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "rotation"], [68, 2, 1, "", "rows"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.displacement": [[68, 2, 1, "", "response"], [68, 2, 1, "", "rotation"], [68, 2, 1, "", "scale"], [68, 2, 1, "", "x_translation"], [68, 2, 1, "", "y_translation"]], "image.histogram": [[68, 2, 1, "", "a_bins"], [68, 2, 1, "", "b_bins"], [68, 2, 1, "", "bins"], [68, 2, 1, "", "get_percentile"], [68, 2, 1, "", "get_statistics"], [68, 2, 1, "", "get_threshold"], [68, 2, 1, "", "l_bins"]], "image.kptmatch": [[68, 2, 1, "", "count"], [68, 2, 1, "", "cx"], [68, 2, 1, "", "cy"], [68, 2, 1, "", "h"], [68, 2, 1, "", "match"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "theta"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.line": [[68, 2, 1, "", "length"], [68, 2, 1, "", "line"], [68, 2, 1, "", "magnitude"], [68, 2, 1, "", "rho"], [68, 2, 1, "", "theta"], [68, 2, 1, "", "x1"], [68, 2, 1, "", "x2"], [68, 2, 1, "", "y1"], [68, 2, 1, "", "y2"]], "image.percentile": [[68, 2, 1, "", "a_value"], [68, 2, 1, "", "b_value"], [68, 2, 1, "", "l_value"], [68, 2, 1, "", "value"]], "image.qrcode": [[68, 2, 1, "", "corners"], [68, 2, 1, "", "data_type"], [68, 2, 1, "", "ecc_level"], [68, 2, 1, "", "eci"], [68, 2, 1, "", "h"], [68, 2, 1, "", "is_alphanumeric"], [68, 2, 1, "", "is_binary"], [68, 2, 1, "", "is_kanji"], [68, 2, 1, "", "is_numeric"], [68, 2, 1, "", "mask"], [68, 2, 1, "", "payload"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "version"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.rect": [[68, 2, 1, "", "corners"], [68, 2, 1, "", "h"], [68, 2, 1, "", "magnitude"], [68, 2, 1, "", "rect"], [68, 2, 1, "", "w"], [68, 2, 1, "", "x"], [68, 2, 1, "", "y"]], "image.statistics": [[68, 2, 1, "", "a_lq"], [68, 2, 1, "", "a_max"], [68, 2, 1, "", "a_mean"], [68, 2, 1, "", "a_median"], [68, 2, 1, "", "a_min"], [68, 2, 1, "", "a_mode"], [68, 2, 1, "", "a_stdev"], [68, 2, 1, "", "a_uq"], [68, 2, 1, "", "b_lq"], [68, 2, 1, "", "b_max"], [68, 2, 1, "", "b_mean"], [68, 2, 1, "", "b_median"], [68, 2, 1, "", "b_min"], [68, 2, 1, "", "b_mode"], [68, 2, 1, "", "b_stdev"], [68, 2, 1, "", "b_uq"], [68, 2, 1, "", "l_lq"], [68, 2, 1, "", "l_max"], [68, 2, 1, "", "l_mean"], [68, 2, 1, "", "l_median"], [68, 2, 1, "", "l_min"], [68, 2, 1, "", "l_mode"], [68, 2, 1, "", "l_stdev"], [68, 2, 1, "", "l_uq"], [68, 2, 1, "", "lq"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "median"], [68, 2, 1, "", "min"], [68, 2, 1, "", "mode"], [68, 2, 1, "", "stdev"], [68, 2, 1, "", "uq"]], "image.threshold": [[68, 2, 1, "", "a_value"], [68, 2, 1, "", "b_value"], [68, 2, 1, "", "l_value"], [68, 2, 1, "", "value"]], "imu": [[69, 4, 1, "", "__read_reg"], [69, 4, 1, "", "__write_reg"], [69, 4, 1, "", "acceleration_mg"], [69, 4, 1, "", "angular_rate_mdps"], [69, 4, 1, "", "pitch"], [69, 4, 1, "", "roll"], [69, 4, 1, "", "sleep"], [69, 4, 1, "", "temperature_c"]], "int": [[17, 2, 1, "", "from_bytes"], [17, 2, 1, "", "to_bytes"]], "io": [[28, 3, 1, "", "BytesIO"], [28, 3, 1, "", "StringIO"], [28, 4, 1, "", "open"]], "io.BytesIO": [[28, 2, 1, "", "getvalue"]], "json": [[29, 4, 1, "", "dump"], [29, 4, 1, "", "dumps"], [29, 4, 1, "", "load"], [29, 4, 1, "", "loads"]], "machine": [[31, 3, 1, "", "ADC"], [32, 3, 1, "", "ADCBlock"], [33, 3, 1, "", "CAN"], [34, 3, 1, "", "I2C"], [35, 3, 1, "", "I2S"], [36, 3, 1, "", "LED"], [37, 3, 1, "", "PWM"], [38, 3, 1, "", "Pin"], [39, 3, 1, "", "RTC"], [40, 3, 1, "", "SPI"], [41, 3, 1, "", "Signal"], [34, 3, 1, "", "SoftI2C"], [40, 3, 1, "", "SoftSPI"], [42, 3, 1, "", "Timer"], [43, 3, 1, "", "UART"], [44, 3, 1, "", "WDT"], [30, 4, 1, "", "bitstream"], [30, 4, 1, "", "bootloader"], [30, 4, 1, "", "deepsleep"], [30, 4, 1, "", "disable_irq"], [30, 4, 1, "", "enable_irq"], [30, 4, 1, "", "freq"], [30, 4, 1, "", "idle"], [30, 4, 1, "", "lightsleep"], [30, 5, 1, "", "mem16"], [30, 5, 1, "", "mem32"], [30, 5, 1, "", "mem8"], [30, 4, 1, "", "reset"], [30, 4, 1, "", "reset_cause"], [30, 4, 1, "", "sleep"], [30, 4, 1, "", "soft_reset"], [30, 4, 1, "", "time_pulse_us"], [30, 4, 1, "", "unique_id"]], "machine.ADC": [[31, 2, 1, "", "block"], [31, 2, 1, "", "init"], [31, 2, 1, "", "read_u16"], [31, 2, 1, "", "read_uv"]], "machine.ADCBlock": [[32, 2, 1, "", "connect"], [32, 2, 1, "", "init"]], "machine.CAN": [[33, 5, 1, "", "BUS_OFF"], [33, 5, 1, "", "DUAL"], [33, 5, 1, "", "ERROR_ACTIVE"], [33, 5, 1, "", "ERROR_PASSIVE"], [33, 5, 1, "", "ERROR_WARNING"], [33, 5, 1, "", "LIST32"], [33, 5, 1, "", "LOOPBACK"], [33, 5, 1, "", "NORMAL"], [33, 5, 1, "", "SILENT"], [33, 5, 1, "", "SILENT_LOOPBACK"], [33, 5, 1, "", "STOPPED"], [33, 2, 1, "", "any"], [33, 2, 1, "", "clearfilter"], [33, 2, 1, "", "deinit"], [33, 2, 1, "", "info"], [33, 2, 1, "", "init"], [33, 2, 1, "", "recv"], [33, 2, 1, "", "restart"], [33, 2, 1, "", "rxcallback"], [33, 2, 1, "", "send"], [33, 2, 1, "", "setfilter"], [33, 2, 1, "", "state"]], "machine.I2C": [[34, 2, 1, "", "init"], [34, 2, 1, "", "readfrom"], [34, 2, 1, "", "readfrom_into"], [34, 2, 1, "", "readfrom_mem"], [34, 2, 1, "", "readfrom_mem_into"], [34, 2, 1, "", "readinto"], [34, 2, 1, "", "scan"], [34, 2, 1, "", "start"], [34, 2, 1, "", "stop"], [34, 2, 1, "", "write"], [34, 2, 1, "", "writeto"], [34, 2, 1, "", "writeto_mem"], [34, 2, 1, "", "writevto"]], "machine.I2S": [[35, 5, 1, "", "MONO"], [35, 5, 1, "", "RX"], [35, 5, 1, "", "STEREO"], [35, 5, 1, "", "TX"], [35, 2, 1, "", "deinit"], [35, 2, 1, "", "init"], [35, 2, 1, "", "irq"], [35, 2, 1, "", "readinto"], [35, 2, 1, "", "shift"], [35, 2, 1, "", "write"]], "machine.LED": [[36, 2, 1, "", "boardname"], [36, 2, 1, "", "on"], [36, 2, 1, "", "toggle"], [36, 2, 1, "", "value"]], "machine.PWM": [[37, 2, 1, "", "deinit"], [37, 2, 1, "", "duty_ns"], [37, 2, 1, "", "duty_u16"], [37, 2, 1, "", "freq"], [37, 2, 1, "", "init"]], "machine.Pin": [[38, 5, 1, "", "ALT"], [38, 5, 1, "", "ALT_OPEN_DRAIN"], [38, 5, 1, "", "ANALOG"], [38, 5, 1, "", "DRIVE_0"], [38, 5, 1, "", "DRIVE_1"], [38, 5, 1, "", "DRIVE_2"], [38, 5, 1, "", "IN"], [38, 5, 1, "", "IRQ_FALLING"], [38, 5, 1, "", "IRQ_HIGH_LEVEL"], [38, 5, 1, "", "IRQ_LOW_LEVEL"], [38, 5, 1, "", "IRQ_RISING"], [38, 5, 1, "", "OPEN_DRAIN"], [38, 5, 1, "", "OUT"], [38, 5, 1, "", "PULL_DOWN"], [38, 5, 1, "", "PULL_HOLD"], [38, 5, 1, "", "PULL_UP"], [38, 2, 1, "", "__call__"], [38, 2, 1, "", "drive"], [38, 2, 1, "", "high"], [38, 2, 1, "", "init"], [38, 2, 1, "", "irq"], [38, 2, 1, "", "low"], [38, 2, 1, "", "mode"], [38, 2, 1, "", "off"], [38, 2, 1, "", "on"], [38, 2, 1, "", "pull"], [38, 2, 1, "", "toggle"], [38, 2, 1, "", "value"]], "machine.RTC": [[39, 5, 1, "", "ALARM0"], [39, 2, 1, "", "alarm"], [39, 2, 1, "", "alarm_left"], [39, 2, 1, "", "cancel"], [39, 2, 1, "", "datetime"], [39, 2, 1, "", "deinit"], [39, 2, 1, "", "init"], [39, 2, 1, "", "irq"], [39, 2, 1, "", "memory"], [39, 2, 1, "", "now"]], "machine.SPI": [[40, 5, 1, "", "CONTROLLER"], [40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"], [40, 2, 1, "", "deinit"], [40, 2, 1, "", "init"], [40, 2, 1, "", "read"], [40, 2, 1, "", "readinto"], [40, 2, 1, "", "write"], [40, 2, 1, "", "write_readinto"]], "machine.Signal": [[41, 2, 1, "", "off"], [41, 2, 1, "", "on"], [41, 2, 1, "", "value"]], "machine.SoftSPI": [[40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"]], "machine.Timer": [[42, 5, 1, "", "ONE_SHOT"], [42, 5, 1, "", "PERIODIC"], [42, 2, 1, "", "deinit"], [42, 2, 1, "", "init"]], "machine.UART": [[43, 5, 1, "", "CTS"], [43, 5, 1, "", "IRQ_BREAK"], [43, 5, 1, "", "IRQ_RX"], [43, 5, 1, "", "IRQ_RXIDLE"], [43, 5, 1, "", "IRQ_TXIDLE"], [43, 5, 1, "", "RTS"], [43, 2, 1, "", "any"], [43, 2, 1, "", "deinit"], [43, 2, 1, "", "flush"], [43, 2, 1, "", "init"], [43, 2, 1, "", "irq"], [43, 2, 1, "", "read"], [43, 2, 1, "", "readinto"], [43, 2, 1, "", "readline"], [43, 2, 1, "", "sendbreak"], [43, 2, 1, "", "txdone"], [43, 2, 1, "", "write"]], "machine.WDT": [[44, 2, 1, "", "feed"]], "machine.machine": [[30, 5, 1, "", "DEEPSLEEP"], [30, 5, 1, "", "DEEPSLEEP_RESET"], [30, 5, 1, "", "HARD_RESET"], [30, 5, 1, "", "IDLE"], [30, 5, 1, "", "PIN_WAKE"], [30, 5, 1, "", "PWRON_RESET"], [30, 5, 1, "", "RTC_WAKE"], [30, 5, 1, "", "SLEEP"], [30, 5, 1, "", "SOFT_RESET"], [30, 5, 1, "", "WDT_RESET"], [30, 5, 1, "", "WLAN_WAKE"]], "math": [[45, 4, 1, "", "acos"], [45, 4, 1, "", "acosh"], [45, 4, 1, "", "asin"], [45, 4, 1, "", "asinh"], [45, 4, 1, "", "atan"], [45, 4, 1, "", "atan2"], [45, 4, 1, "", "atanh"], [45, 4, 1, "", "ceil"], [45, 4, 1, "", "copysign"], [45, 4, 1, "", "cos"], [45, 4, 1, "", "cosh"], [45, 4, 1, "", "degrees"], [45, 5, 1, "", "e"], [45, 4, 1, "", "erf"], [45, 4, 1, "", "erfc"], [45, 4, 1, "", "exp"], [45, 4, 1, "", "expm1"], [45, 4, 1, "", "fabs"], [45, 4, 1, "", "floor"], [45, 4, 1, "", "fmod"], [45, 4, 1, "", "frexp"], [45, 4, 1, "", "gamma"], [45, 4, 1, "", "isfinite"], [45, 4, 1, "", "isinf"], [45, 4, 1, "", "isnan"], [45, 4, 1, "", "ldexp"], [45, 4, 1, "", "lgamma"], [45, 4, 1, "", "log"], [45, 4, 1, "", "log10"], [45, 4, 1, "", "log2"], [45, 4, 1, "", "modf"], [45, 5, 1, "", "pi"], [45, 4, 1, "", "pow"], [45, 4, 1, "", "radians"], [45, 4, 1, "", "sin"], [45, 4, 1, "", "sinh"], [45, 4, 1, "", "sqrt"], [45, 4, 1, "", "tan"], [45, 4, 1, "", "tanh"], [45, 4, 1, "", "trunc"]], "micropython": [[46, 3, 1, "", "RingIO"], [46, 4, 1, "", "alloc_emergency_exception_buf"], [46, 4, 1, "", "const"], [46, 4, 1, "", "heap_lock"], [46, 4, 1, "", "heap_locked"], [46, 4, 1, "", "heap_unlock"], [46, 4, 1, "", "kbd_intr"], [46, 4, 1, "", "mem_info"], [46, 4, 1, "", "opt_level"], [46, 4, 1, "", "qstr_info"], [46, 4, 1, "", "schedule"], [46, 4, 1, "", "stack_use"]], "micropython.RingIO": [[46, 2, 1, "", "any"], [46, 2, 1, "", "close"], [46, 2, 1, "", "read"], [46, 2, 1, "", "readinto"], [46, 2, 1, "", "readline"], [46, 2, 1, "", "write"]], "mjpeg": [[70, 3, 1, "", "Mjpeg"]], "mjpeg.Mjpeg": [[70, 2, 1, "", "add_frame"], [70, 2, 1, "", "close"], [70, 2, 1, "", "count"], [70, 2, 1, "", "height"], [70, 2, 1, "", "is_closed"], [70, 2, 1, "", "size"], [70, 2, 1, "", "sync"], [70, 2, 1, "", "width"], [70, 2, 1, "", "write"]], "ml": [[71, 3, 1, "", "Model"], [72, 1, 0, "-", "apps"], [73, 1, 0, "-", "postprocessing"], [74, 1, 0, "-", "preprocessing"], [75, 1, 0, "-", "utils"]], "ml.Model": [[71, 6, 1, "", "input_dtype"], [71, 6, 1, "", "input_scale"], [71, 6, 1, "", "input_shape"], [71, 6, 1, "", "input_zero_point"], [71, 6, 1, "", "labels"], [71, 6, 1, "", "len"], [71, 6, 1, "", "output_dtype"], [71, 6, 1, "", "output_scale"], [71, 6, 1, "", "output_shape"], [71, 6, 1, "", "output_zero_point"], [71, 2, 1, "", "predict"], [71, 6, 1, "", "ram"]], "ml.apps": [[72, 3, 1, "", "MicroSpeech"]], "ml.apps.MicroSpeech": [[72, 2, 1, "", "listen"]], "ml.postprocessing": [[73, 3, 1, "", "fomo_postprocess"], [73, 3, 1, "", "yolo_v2_postprocess"], [73, 3, 1, "", "yolo_v5_postprocess"]], "ml.preprocessing": [[74, 3, 1, "", "Normalization"]], "ml.utils": [[75, 3, 1, "", "NMS"]], "ml.utils.NMS": [[75, 2, 1, "", "add_bounding_boxes"], [75, 2, 1, "", "get_bounding_boxes"]], "mutex": [[47, 3, 1, "", "Mutex"]], "mutex.Mutex": [[47, 2, 1, "", "release"], [47, 2, 1, "", "test"]], "network": [[48, 3, 1, "", "AbstractNIC"], [49, 3, 1, "", "LAN"], [50, 3, 1, "", "PPP"], [51, 3, 1, "", "WINC"], [52, 3, 1, "", "WLAN"], [48, 4, 1, "", "country"], [48, 4, 1, "", "hostname"], [48, 4, 1, "", "ipconfig"], [48, 4, 1, "", "phy_mode"]], "network.AbstractNIC": [[48, 2, 1, "", "active"], [48, 2, 1, "", "config"], [48, 2, 1, "", "connect"], [48, 2, 1, "", "disconnect"], [48, 2, 1, "", "ifconfig"], [48, 2, 1, "", "ipconfig"], [48, 2, 1, "", "isconnected"], [48, 2, 1, "", "scan"], [48, 2, 1, "", "status"]], "network.LAN": [[49, 2, 1, "", "active"], [49, 2, 1, "", "config"], [49, 2, 1, "", "ifconfig"], [49, 2, 1, "", "isconnected"], [49, 2, 1, "", "status"]], "network.PPP": [[50, 5, 1, "", "SEC_CHAP"], [50, 5, 1, "", "SEC_NONE"], [50, 5, 1, "", "SEC_PAP"], [50, 2, 1, "", "config"], [50, 2, 1, "", "connect"], [50, 2, 1, "", "disconnect"], [50, 2, 1, "", "ifconfig"], [50, 2, 1, "", "ipconfig"], [50, 2, 1, "", "isconnected"], [50, 2, 1, "", "poll"], [50, 2, 1, "", "status"]], "network.WINC": [[51, 5, 1, "", "802_1X"], [51, 5, 1, "", "MODE_AP"], [51, 5, 1, "", "MODE_BSP"], [51, 5, 1, "", "MODE_FIRMWARE"], [51, 5, 1, "", "MODE_P2P"], [51, 5, 1, "", "MODE_STA"], [51, 5, 1, "", "OPEN"], [51, 5, 1, "", "WPA_PSK"], [51, 2, 1, "", "active"], [51, 2, 1, "", "connect"], [51, 2, 1, "", "connected_sta"], [51, 2, 1, "", "disconnect"], [51, 2, 1, "", "fw_dump"], [51, 2, 1, "", "fw_update"], [51, 2, 1, "", "fw_version"], [51, 2, 1, "", "ifconfig"], [51, 2, 1, "", "isconnected"], [51, 2, 1, "", "netinfo"], [51, 2, 1, "", "rssi"], [51, 2, 1, "", "scan"], [51, 2, 1, "", "start_ap"], [51, 2, 1, "", "wait_for_sta"]], "network.WLAN": [[52, 5, 1, "", "PM_NONE"], [52, 5, 1, "", "PM_PERFORMANCE"], [52, 5, 1, "", "PM_POWERSAVE"], [52, 2, 1, "", "active"], [52, 2, 1, "", "config"], [52, 2, 1, "", "connect"], [52, 2, 1, "", "disconnect"], [52, 2, 1, "", "ifconfig"], [52, 2, 1, "", "isconnected"], [52, 2, 1, "", "scan"], [52, 2, 1, "", "status"]], "omv": [[76, 4, 1, "", "arch"], [76, 4, 1, "", "board_id"], [76, 4, 1, "", "board_type"], [76, 4, 1, "", "disable_fb"], [76, 4, 1, "", "version_major"], [76, 4, 1, "", "version_minor"], [76, 4, 1, "", "version_patch"], [76, 4, 1, "", "version_string"]], "openamp": [[83, 3, 1, "", "Endpoint"], [83, 3, 1, "", "RemoteProc"], [83, 4, 1, "", "new_service_callback"]], "openamp.Endpoint": [[83, 2, 1, "", "deinit"], [83, 2, 1, "", "is_ready"], [83, 2, 1, "", "send"]], "openamp.RemoteProc": [[83, 2, 1, "", "shutdown"], [83, 2, 1, "", "start"], [83, 2, 1, "", "stop"]], "os": [[84, 3, 1, "", "VfsFat"], [84, 3, 1, "", "VfsLfs1"], [84, 3, 1, "", "VfsLfs2"], [84, 3, 1, "", "VfsPosix"], [84, 4, 1, "", "chdir"], [84, 4, 1, "", "dupterm"], [84, 4, 1, "", "getcwd"], [84, 4, 1, "", "ilistdir"], [84, 4, 1, "", "listdir"], [84, 4, 1, "", "mkdir"], [84, 4, 1, "", "mount"], [84, 4, 1, "", "remove"], [84, 4, 1, "", "rename"], [84, 4, 1, "", "rmdir"], [84, 4, 1, "", "stat"], [84, 4, 1, "", "statvfs"], [84, 4, 1, "", "sync"], [84, 4, 1, "", "umount"], [84, 4, 1, "", "uname"], [84, 4, 1, "", "urandom"]], "platform": [[85, 4, 1, "", "libc_ver"], [85, 4, 1, "", "platform"], [85, 4, 1, "", "python_compiler"]], "pyb": [[87, 3, 1, "", "ADC"], [88, 3, 1, "", "CAN"], [89, 3, 1, "", "DAC"], [90, 3, 1, "", "ExtInt"], [91, 3, 1, "", "Flash"], [92, 3, 1, "", "I2C"], [93, 3, 1, "", "LED"], [94, 3, 1, "", "Pin"], [95, 3, 1, "", "RTC"], [96, 3, 1, "", "SPI"], [97, 3, 1, "", "Servo"], [98, 3, 1, "", "Timer"], [99, 3, 1, "", "UART"], [100, 3, 1, "", "USB_HID"], [101, 3, 1, "", "USB_VCP"], [86, 4, 1, "", "bootloader"], [86, 4, 1, "", "delay"], [86, 4, 1, "", "disable_irq"], [86, 4, 1, "", "elapsed_micros"], [86, 4, 1, "", "elapsed_millis"], [86, 4, 1, "", "enable_irq"], [86, 4, 1, "", "fault_debug"], [86, 4, 1, "", "hard_reset"], [86, 4, 1, "", "have_cdc"], [86, 4, 1, "", "hid"], [86, 4, 1, "", "info"], [86, 4, 1, "", "main"], [86, 4, 1, "", "micros"], [86, 4, 1, "", "millis"], [86, 4, 1, "", "mount"], [86, 4, 1, "", "repl_uart"], [86, 4, 1, "", "rng"], [86, 4, 1, "", "standby"], [86, 4, 1, "", "stop"], [86, 4, 1, "", "sync"], [86, 4, 1, "", "udelay"], [86, 4, 1, "", "unique_id"], [86, 4, 1, "", "usb_mode"], [86, 4, 1, "", "wfi"]], "pyb.ADC": [[87, 2, 1, "", "read"], [87, 2, 1, "", "read_timed"]], "pyb.CAN": [[88, 5, 1, "", "BUS_OFF"], [88, 5, 1, "", "DUAL"], [88, 5, 1, "", "ERROR_ACTIVE"], [88, 5, 1, "", "ERROR_PASSIVE"], [88, 5, 1, "", "ERROR_WARNING"], [88, 5, 1, "", "LIST16"], [88, 5, 1, "", "LIST32"], [88, 5, 1, "", "LOOPBACK"], [88, 5, 1, "", "MASK"], [88, 5, 1, "", "MASK16"], [88, 5, 1, "", "MASK32"], [88, 5, 1, "", "NORMAL"], [88, 5, 1, "", "RANGE"], [88, 5, 1, "", "SILENT"], [88, 5, 1, "", "SILENT_LOOPBACK"], [88, 5, 1, "", "STOPPED"], [88, 2, 1, "", "any"], [88, 2, 1, "", "clearfilter"], [88, 2, 1, "", "deinit"], [88, 2, 1, "", "info"], [88, 2, 1, "", "recv"], [88, 2, 1, "", "restart"], [88, 2, 1, "", "rxcallback"], [88, 2, 1, "", "send"], [88, 2, 1, "", "setfilter"], [88, 2, 1, "", "state"]], "pyb.DAC": [[89, 5, 1, "", "CIRCULAR"], [89, 5, 1, "", "NORMAL"], [89, 2, 1, "", "deinit"], [89, 2, 1, "", "init"], [89, 2, 1, "", "noise"], [89, 2, 1, "", "triangle"], [89, 2, 1, "", "write"], [89, 2, 1, "", "write_timed"]], "pyb.ExtInt": [[90, 5, 1, "", "IRQ_FALLING"], [90, 5, 1, "", "IRQ_RISING"], [90, 5, 1, "", "IRQ_RISING_FALLING"], [90, 2, 1, "", "disable"], [90, 2, 1, "", "enable"], [90, 2, 1, "", "line"], [90, 2, 1, "", "regs"], [90, 2, 1, "", "swint"]], "pyb.Flash": [[91, 2, 1, "", "ioctl"], [91, 2, 1, "", "readblocks"], [91, 2, 1, "", "writeblocks"]], "pyb.I2C": [[92, 5, 1, "", "CONTROLLER"], [92, 5, 1, "", "PERIPHERAL"], [92, 2, 1, "", "deinit"], [92, 2, 1, "", "init"], [92, 2, 1, "", "is_ready"], [92, 2, 1, "", "mem_read"], [92, 2, 1, "", "mem_write"], [92, 2, 1, "", "recv"], [92, 2, 1, "", "scan"], [92, 2, 1, "", "send"]], "pyb.LED": [[93, 2, 1, "", "intensity"], [93, 2, 1, "", "off"], [93, 2, 1, "", "on"], [93, 2, 1, "", "toggle"]], "pyb.Pin": [[94, 5, 1, "", "AF_OD"], [94, 5, 1, "", "AF_PP"], [94, 5, 1, "", "ALT"], [94, 5, 1, "", "ANALOG"], [94, 5, 1, "", "IN"], [94, 5, 1, "", "OUT_OD"], [94, 5, 1, "", "OUT_PP"], [94, 5, 1, "", "PULL_DOWN"], [94, 5, 1, "", "PULL_NONE"], [94, 5, 1, "", "PULL_UP"], [94, 2, 1, "", "__str__"], [94, 2, 1, "", "af"], [94, 2, 1, "", "af_list"], [94, 2, 1, "", "debug"], [94, 2, 1, "", "dict"], [94, 2, 1, "", "gpio"], [94, 2, 1, "", "init"], [94, 2, 1, "", "mapper"], [94, 2, 1, "", "mode"], [94, 2, 1, "", "name"], [94, 2, 1, "", "names"], [94, 2, 1, "", "pin"], [94, 2, 1, "", "port"], [94, 2, 1, "", "pull"], [94, 2, 1, "", "value"]], "pyb.RTC": [[95, 2, 1, "", "calibration"], [95, 2, 1, "", "datetime"], [95, 2, 1, "", "info"], [95, 2, 1, "", "wakeup"]], "pyb.SPI": [[96, 5, 1, "", "CONTROLLER"], [96, 5, 1, "", "LSB"], [96, 5, 1, "", "MSB"], [96, 5, 1, "", "PERIPHERAL"], [96, 2, 1, "", "deinit"], [96, 2, 1, "", "init"], [96, 2, 1, "", "recv"], [96, 2, 1, "", "send"], [96, 2, 1, "", "send_recv"]], "pyb.Servo": [[97, 2, 1, "", "angle"], [97, 2, 1, "", "calibration"], [97, 2, 1, "", "pulse_width"], [97, 2, 1, "", "speed"]], "pyb.Timer": [[98, 5, 1, "", "BRK_HIGH"], [98, 5, 1, "", "BRK_LOW"], [98, 5, 1, "", "BRK_OFF"], [98, 5, 1, "", "CENTER"], [98, 5, 1, "", "DOWN"], [98, 5, 1, "", "UP"], [98, 2, 1, "", "callback"], [98, 2, 1, "", "channel"], [98, 2, 1, "", "counter"], [98, 2, 1, "", "deinit"], [98, 2, 1, "", "freq"], [98, 2, 1, "", "init"], [98, 2, 1, "", "period"], [98, 2, 1, "", "prescaler"], [98, 2, 1, "", "source_freq"]], "pyb.UART": [[99, 5, 1, "", "CTS"], [99, 5, 1, "", "RTS"], [99, 2, 1, "", "any"], [99, 2, 1, "", "deinit"], [99, 2, 1, "", "init"], [99, 2, 1, "", "read"], [99, 2, 1, "", "readchar"], [99, 2, 1, "", "readinto"], [99, 2, 1, "", "readline"], [99, 2, 1, "", "sendbreak"], [99, 2, 1, "", "write"], [99, 2, 1, "", "writechar"]], "pyb.USB_HID": [[100, 2, 1, "", "recv"], [100, 2, 1, "", "send"]], "pyb.USB_VCP": [[101, 5, 1, "", "CTS"], [101, 5, 1, "", "IRQ_RX"], [101, 5, 1, "", "RTS"], [101, 2, 1, "", "any"], [101, 2, 1, "", "close"], [101, 2, 1, "", "debug_mode_enabled"], [101, 2, 1, "", "init"], [101, 2, 1, "", "irq"], [101, 2, 1, "", "isconnected"], [101, 2, 1, "", "read"], [101, 2, 1, "", "readinto"], [101, 2, 1, "", "readline"], [101, 2, 1, "", "readlines"], [101, 2, 1, "", "recv"], [101, 2, 1, "", "send"], [101, 2, 1, "", "setinterrupt"], [101, 2, 1, "", "write"]], "pyb.pinaf": [[94, 2, 1, "", "__str__"], [94, 2, 1, "", "index"], [94, 2, 1, "", "name"], [94, 2, 1, "", "reg"]], "pyb.pyb": [[86, 5, 1, "", "hid_keyboard"], [86, 5, 1, "", "hid_mouse"]], "pyb.timerchannel": [[98, 2, 1, "", "callback"], [98, 2, 1, "", "capture"], [98, 2, 1, "", "compare"], [98, 2, 1, "", "pulse_width"], [98, 2, 1, "", "pulse_width_percent"]], "random": [[102, 4, 1, "", "choice"], [102, 4, 1, "", "getrandbits"], [102, 4, 1, "", "randint"], [102, 4, 1, "", "random"], [102, 4, 1, "", "randrange"], [102, 4, 1, "", "seed"], [102, 4, 1, "", "uniform"]], "re": [[103, 5, 1, "", "DEBUG"], [103, 4, 1, "", "compile"], [103, 4, 1, "", "match"], [103, 4, 1, "", "search"], [103, 4, 1, "", "sub"]], "re.match": [[103, 2, 1, "", "end"], [103, 2, 1, "", "group"], [103, 2, 1, "", "groups"], [103, 2, 1, "", "span"], [103, 2, 1, "", "start"]], "re.regex": [[103, 2, 1, "", "match"], [103, 2, 1, "", "search"], [103, 2, 1, "", "split"], [103, 2, 1, "", "sub"]], "requests": [[104, 3, 1, "", "Response"], [104, 4, 1, "", "delete"], [104, 4, 1, "", "get"], [104, 4, 1, "", "head"], [104, 4, 1, "", "patch"], [104, 4, 1, "", "post"], [104, 4, 1, "", "put"], [104, 4, 1, "", "request"]], "requests.Response": [[104, 4, 1, "", "content"], [104, 4, 1, "", "headers"], [104, 2, 1, "", "json"]], "rpc": [[77, 3, 1, "", "rpc"], [77, 3, 1, "", "rpc_can_master"], [77, 3, 1, "", "rpc_can_slave"], [77, 3, 1, "", "rpc_i2c_master"], [77, 3, 1, "", "rpc_i2c_slave"], [77, 3, 1, "", "rpc_master"], [77, 3, 1, "", "rpc_network_master"], [77, 3, 1, "", "rpc_network_slave"], [77, 3, 1, "", "rpc_slave"], [77, 3, 1, "", "rpc_spi_master"], [77, 3, 1, "", "rpc_spi_slave"], [77, 3, 1, "", "rpc_uart_master"], [77, 3, 1, "", "rpc_uart_slave"], [77, 3, 1, "", "rpc_usb_vcp_master"], [77, 3, 1, "", "rpc_usb_vcp_slave"]], "rpc.rpc": [[77, 2, 1, "", "get_bytes"], [77, 2, 1, "", "put_bytes"], [77, 2, 1, "", "stream_reader"], [77, 2, 1, "", "stream_writer"]], "rpc.rpc_master": [[77, 2, 1, "", "call"]], "rpc.rpc_slave": [[77, 2, 1, "", "loop"], [77, 2, 1, "", "register_callback"], [77, 2, 1, "", "schedule_callback"], [77, 2, 1, "", "setup_loop_callback"]], "rtsp": [[78, 3, 1, "", "rtsp_server"]], "rtsp.rtsp_server": [[78, 2, 1, "", "register_pause_cb"], [78, 2, 1, "", "register_play_cb"], [78, 2, 1, "", "register_setup_cb"], [78, 2, 1, "", "register_teardown_cb"], [78, 2, 1, "", "stream"]], "select": [[105, 4, 1, "", "poll"], [105, 4, 1, "", "select"]], "select.poll": [[105, 2, 1, "", "ipoll"], [105, 2, 1, "", "modify"], [105, 2, 1, "", "poll"], [105, 2, 1, "", "register"], [105, 2, 1, "", "unregister"]], "sensor": [[79, 5, 1, "", "B128X128"], [79, 5, 1, "", "B128X64"], [79, 5, 1, "", "B160X160"], [79, 5, 1, "", "B320X320"], [79, 5, 1, "", "B64X32"], [79, 5, 1, "", "B64X64"], [79, 5, 1, "", "BAYER"], [79, 5, 1, "", "BINARY"], [79, 5, 1, "", "CIF"], [79, 5, 1, "", "DOUBLE_BUFFER"], [79, 5, 1, "", "FHD"], [79, 5, 1, "", "FROGEYE2020"], [79, 5, 1, "", "GC2145"], [79, 5, 1, "", "GENX320_BIASES_ACTIVE_MARKER"], [79, 5, 1, "", "GENX320_BIASES_DEFAULT"], [79, 5, 1, "", "GENX320_BIASES_HIGH_SPEED"], [79, 5, 1, "", "GENX320_BIASES_LOW_LIGHT"], [79, 5, 1, "", "GENX320_BIASES_LOW_NOISE"], [79, 5, 1, "", "GRAYSCALE"], [79, 5, 1, "", "HD"], [79, 5, 1, "", "HM01B0"], [79, 5, 1, "", "HM0360"], [79, 5, 1, "", "HQQQQVGA"], [79, 5, 1, "", "HQQQVGA"], [79, 5, 1, "", "HQQVGA"], [79, 5, 1, "", "HQVGA"], [79, 5, 1, "", "HVGA"], [79, 5, 1, "", "IOCTL_GENX320_SET_BIASES"], [79, 5, 1, "", "IOCTL_GET_FOV_WIDE"], [79, 5, 1, "", "IOCTL_GET_NIGHT_MODE"], [79, 5, 1, "", "IOCTL_GET_READOUT_WINDOW"], [79, 5, 1, "", "IOCTL_GET_TRIGGERED_MODE"], [79, 5, 1, "", "IOCTL_HIMAX_MD_CLEAR"], [79, 5, 1, "", "IOCTL_HIMAX_MD_ENABLE"], [79, 5, 1, "", "IOCTL_HIMAX_MD_THRESHOLD"], [79, 5, 1, "", "IOCTL_HIMAX_MD_WINDOW"], [79, 5, 1, "", "IOCTL_HIMAX_OSC_ENABLE"], [79, 5, 1, "", "IOCTL_LEPTON_GET_ATTRIBUTE"], [79, 5, 1, "", "IOCTL_LEPTON_GET_AUX_TEMP"], [79, 5, 1, "", "IOCTL_LEPTON_GET_FPA_TEMP"], [79, 5, 1, "", "IOCTL_LEPTON_GET_HEIGHT"], [79, 5, 1, "", "IOCTL_LEPTON_GET_MODE"], [79, 5, 1, "", "IOCTL_LEPTON_GET_RADIOMETRY"], [79, 5, 1, "", "IOCTL_LEPTON_GET_RANGE"], [79, 5, 1, "", "IOCTL_LEPTON_GET_REFRESH"], [79, 5, 1, "", "IOCTL_LEPTON_GET_RESOLUTION"], [79, 5, 1, "", "IOCTL_LEPTON_GET_WIDTH"], [79, 5, 1, "", "IOCTL_LEPTON_RUN_COMMAND"], [79, 5, 1, "", "IOCTL_LEPTON_SET_ATTRIBUTE"], [79, 5, 1, "", "IOCTL_LEPTON_SET_MODE"], [79, 5, 1, "", "IOCTL_LEPTON_SET_RANGE"], [79, 5, 1, "", "IOCTL_PAUSE_AUTO_FOCUS"], [79, 5, 1, "", "IOCTL_RESET_AUTO_FOCUS"], [79, 5, 1, "", "IOCTL_RGB_STATS"], [79, 5, 1, "", "IOCTL_SET_FOV_WIDE"], [79, 5, 1, "", "IOCTL_SET_NIGHT_MODE"], [79, 5, 1, "", "IOCTL_SET_READOUT_WINDOW"], [79, 5, 1, "", "IOCTL_SET_TRIGGERED_MODE"], [79, 5, 1, "", "IOCTL_TRIGGER_AUTO_FOCUS"], [79, 5, 1, "", "IOCTL_WAIT_ON_AUTO_FOCUS"], [79, 5, 1, "", "JPEG"], [79, 5, 1, "", "LCD"], [79, 5, 1, "", "LEPTON"], [79, 5, 1, "", "MT9M114"], [79, 5, 1, "", "MT9V022"], [79, 5, 1, "", "MT9V024"], [79, 5, 1, "", "MT9V032"], [79, 5, 1, "", "MT9V034"], [79, 5, 1, "", "OV2640"], [79, 5, 1, "", "OV5640"], [79, 5, 1, "", "OV7690"], [79, 5, 1, "", "OV7725"], [79, 5, 1, "", "OV9650"], [79, 5, 1, "", "PAG7920"], [79, 5, 1, "", "PAJ6100"], [79, 5, 1, "", "QCIF"], [79, 5, 1, "", "QHD"], [79, 5, 1, "", "QQCIF"], [79, 5, 1, "", "QQQQVGA"], [79, 5, 1, "", "QQQVGA"], [79, 5, 1, "", "QQSIF"], [79, 5, 1, "", "QQVGA"], [79, 5, 1, "", "QQVGA2"], [79, 5, 1, "", "QSIF"], [79, 5, 1, "", "QVGA"], [79, 5, 1, "", "QXGA"], [79, 5, 1, "", "RGB565"], [79, 5, 1, "", "SIF"], [79, 5, 1, "", "SINGLE_BUFFER"], [79, 5, 1, "", "SVGA"], [79, 5, 1, "", "SXGA"], [79, 5, 1, "", "SXGAM"], [79, 5, 1, "", "TRIPLE_BUFFER"], [79, 5, 1, "", "UXGA"], [79, 5, 1, "", "VGA"], [79, 5, 1, "", "VIDEO_FIFO"], [79, 5, 1, "", "WQXGA"], [79, 5, 1, "", "WQXGA2"], [79, 5, 1, "", "WVGA"], [79, 5, 1, "", "WVGA2"], [79, 5, 1, "", "WXGA"], [79, 5, 1, "", "XGA"], [79, 5, 1, "", "YUV422"], [79, 4, 1, "", "__read_reg"], [79, 4, 1, "", "__write_reg"], [79, 4, 1, "", "alloc_extra_fb"], [79, 4, 1, "", "dealloc_extra_fb"], [79, 4, 1, "", "disable_delays"], [79, 4, 1, "", "disable_full_flush"], [79, 4, 1, "", "flush"], [79, 4, 1, "", "get_auto_rotation"], [79, 4, 1, "", "get_blc_regs"], [79, 4, 1, "", "get_color_palette"], [79, 4, 1, "", "get_exposure_us"], [79, 4, 1, "", "get_fb"], [79, 4, 1, "", "get_frame_available"], [79, 4, 1, "", "get_framebuffers"], [79, 4, 1, "", "get_framerate"], [79, 4, 1, "", "get_framesize"], [79, 4, 1, "", "get_gain_db"], [79, 4, 1, "", "get_hmirror"], [79, 4, 1, "", "get_id"], [79, 4, 1, "", "get_pixformat"], [79, 4, 1, "", "get_rgb_gain_db"], [79, 4, 1, "", "get_transpose"], [79, 4, 1, "", "get_vflip"], [79, 4, 1, "", "get_windowing"], [79, 4, 1, "", "height"], [79, 4, 1, "", "ioctl"], [79, 4, 1, "", "reset"], [79, 4, 1, "", "set_auto_blc"], [79, 4, 1, "", "set_auto_exposure"], [79, 4, 1, "", "set_auto_gain"], [79, 4, 1, "", "set_auto_rotation"], [79, 4, 1, "", "set_auto_whitebal"], [79, 4, 1, "", "set_brightness"], [79, 4, 1, "", "set_color_palette"], [79, 4, 1, "", "set_colorbar"], [79, 4, 1, "", "set_contrast"], [79, 4, 1, "", "set_frame_callback"], [79, 4, 1, "", "set_framebuffers"], [79, 4, 1, "", "set_framerate"], [79, 4, 1, "", "set_framesize"], [79, 4, 1, "", "set_gainceiling"], [79, 4, 1, "", "set_hmirror"], [79, 4, 1, "", "set_lens_correction"], [79, 4, 1, "", "set_pixformat"], [79, 4, 1, "", "set_quality"], [79, 4, 1, "", "set_saturation"], [79, 4, 1, "", "set_transpose"], [79, 4, 1, "", "set_vflip"], [79, 4, 1, "", "set_vsync_callback"], [79, 4, 1, "", "set_windowing"], [79, 4, 1, "", "shutdown"], [79, 4, 1, "", "skip_frames"], [79, 4, 1, "", "sleep"], [79, 4, 1, "", "snapshot"], [79, 4, 1, "", "width"]], "socket": [[106, 5, 1, "", "AF_INET"], [106, 5, 1, "", "AF_INET6"], [106, 5, 1, "", "IPPROTO_SEC"], [106, 5, 1, "", "IPPROTO_TCP"], [106, 5, 1, "", "IPPROTO_UDP"], [106, 5, 1, "", "SOCK_DGRAM"], [106, 5, 1, "", "SOCK_STREAM"], [106, 4, 1, "", "getaddrinfo"], [106, 4, 1, "", "inet_ntop"], [106, 4, 1, "", "inet_pton"], [106, 3, 1, "", "socket"]], "socket.socket": [[106, 2, 1, "", "accept"], [106, 2, 1, "", "bind"], [106, 2, 1, "", "close"], [106, 2, 1, "", "connect"], [106, 0, 1, "", "error"], [106, 2, 1, "", "listen"], [106, 2, 1, "", "makefile"], [106, 2, 1, "", "read"], [106, 2, 1, "", "readinto"], [106, 2, 1, "", "readline"], [106, 2, 1, "", "recv"], [106, 2, 1, "", "recvfrom"], [106, 2, 1, "", "send"], [106, 2, 1, "", "sendall"], [106, 2, 1, "", "sendto"], [106, 2, 1, "", "setblocking"], [106, 2, 1, "", "setsockopt"], [106, 2, 1, "", "settimeout"], [106, 2, 1, "", "write"]], "ssl": [[107, 3, 1, "", "SSLContext"]], "ssl.SSLContext": [[107, 2, 1, "", "get_ciphers"], [107, 2, 1, "", "load_cert_chain"], [107, 2, 1, "", "load_verify_locations"], [107, 2, 1, "", "set_ciphers"], [107, 6, 1, "", "verify_mode"], [107, 2, 1, "", "wrap_socket"]], "ssl.ssl": [[107, 5, 1, "", "CERT_NONE"], [107, 5, 1, "", "CERT_OPTIONAL"], [107, 5, 1, "", "CERT_REQUIRED"], [107, 5, 1, "", "PROTOCOL_TLS_CLIENT"], [107, 5, 1, "", "PROTOCOL_TLS_SERVER"], [107, 5, 1, "", "SSLError"], [107, 4, 1, "", "wrap_socket"]], "stm": [[108, 5, 1, "", "GPIOA"], [108, 5, 1, "", "GPIOB"], [108, 5, 1, "", "GPIO_BSRR"], [108, 5, 1, "", "GPIO_IDR"], [108, 5, 1, "", "GPIO_ODR"], [108, 5, 1, "", "mem16"], [108, 5, 1, "", "mem32"], [108, 5, 1, "", "mem8"], [108, 4, 1, "", "rfcore_fw_version"], [108, 4, 1, "", "rfcore_status"], [108, 4, 1, "", "rfcore_sys_hci"], [108, 4, 1, "", "subghz_cs"], [108, 4, 1, "", "subghz_irq"], [108, 4, 1, "", "subghz_is_busy"]], "struct": [[109, 4, 1, "", "calcsize"], [109, 4, 1, "", "pack"], [109, 4, 1, "", "pack_into"], [109, 4, 1, "", "unpack"], [109, 4, 1, "", "unpack_from"]], "sys": [[110, 5, 1, "", "argv"], [110, 4, 1, "", "atexit"], [110, 5, 1, "", "byteorder"], [110, 4, 1, "", "exit"], [110, 5, 1, "", "implementation"], [110, 5, 1, "", "maxsize"], [110, 5, 1, "", "modules"], [110, 5, 1, "", "path"], [110, 5, 1, "", "platform"], [110, 4, 1, "", "print_exception"], [110, 5, 1, "", "ps1"], [110, 5, 1, "", "ps2"], [110, 4, 1, "", "settrace"], [110, 5, 1, "", "stderr"], [110, 5, 1, "", "stdin"], [110, 5, 1, "", "stdout"], [110, 5, 1, "", "tracebacklimit"], [110, 5, 1, "", "version"], [110, 5, 1, "", "version_info"]], "time": [[111, 3, 1, "", "clock"], [111, 4, 1, "", "gmtime"], [111, 4, 1, "", "localtime"], [111, 4, 1, "", "mktime"], [111, 4, 1, "", "sleep"], [111, 4, 1, "", "sleep_ms"], [111, 4, 1, "", "sleep_us"], [111, 4, 1, "", "ticks_add"], [111, 4, 1, "", "ticks_cpu"], [111, 4, 1, "", "ticks_diff"], [111, 4, 1, "", "ticks_ms"], [111, 4, 1, "", "ticks_us"], [111, 4, 1, "", "time"], [111, 4, 1, "", "time_ns"]], "time.clock": [[111, 2, 1, "", "avg"], [111, 2, 1, "", "fps"], [111, 2, 1, "", "reset"], [111, 2, 1, "", "tick"]], "tof": [[81, 5, 1, "", "TOF_NONE"], [81, 5, 1, "", "TOF_VL53L5CX"], [81, 4, 1, "", "deinit"], [81, 4, 1, "", "draw_depth"], [81, 4, 1, "", "height"], [81, 4, 1, "", "init"], [81, 4, 1, "", "read_depth"], [81, 4, 1, "", "refresh"], [81, 4, 1, "", "reset"], [81, 4, 1, "", "snapshot"], [81, 4, 1, "", "type"], [81, 4, 1, "", "width"]], "tv": [[82, 5, 1, "", "TV_NONE"], [82, 5, 1, "", "TV_SHIELD"], [82, 4, 1, "", "channel"], [82, 4, 1, "", "deinit"], [82, 4, 1, "", "display"], [82, 4, 1, "", "height"], [82, 4, 1, "", "init"], [82, 4, 1, "", "refresh"], [82, 4, 1, "", "triple_buffer"], [82, 4, 1, "", "type"], [82, 4, 1, "", "width"]], "uctypes": [[112, 5, 1, "", "ARRAY"], [112, 5, 1, "", "BIG_ENDIAN"], [112, 5, 1, "", "FLOAT32"], [112, 5, 1, "", "FLOAT64"], [112, 5, 1, "", "INT16"], [112, 5, 1, "", "INT32"], [112, 5, 1, "", "INT64"], [112, 5, 1, "", "INT8"], [112, 5, 1, "", "LITTLE_ENDIAN"], [112, 5, 1, "", "NATIVE"], [112, 5, 1, "", "PTR"], [112, 5, 1, "", "UINT16"], [112, 5, 1, "", "UINT32"], [112, 5, 1, "", "UINT64"], [112, 5, 1, "", "UINT8"], [112, 5, 1, "", "VOID"], [112, 4, 1, "", "addressof"], [112, 4, 1, "", "bytearray_at"], [112, 4, 1, "", "bytes_at"], [112, 4, 1, "", "sizeof"], [112, 3, 1, "", "struct"]], "uping": [[113, 4, 1, "", "ping"]], "vfs": [[114, 3, 1, "", "AbstractBlockDev"], [114, 3, 1, "", "VfsFat"], [114, 3, 1, "", "VfsLfs1"], [114, 3, 1, "", "VfsLfs2"], [114, 3, 1, "", "VfsPosix"], [114, 4, 1, "", "mount"], [114, 4, 1, "", "umount"]], "vfs.AbstractBlockDev": [[114, 2, 1, "", "ioctl"], [114, 2, 1, "", "readblocks"], [114, 2, 1, "", "writeblocks"]], "vfs.VfsFat": [[114, 2, 1, "", "mkfs"]], "vfs.VfsLfs1": [[114, 2, 1, "", "mkfs"]], "vfs.VfsLfs2": [[114, 2, 1, "", "mkfs"]], "zlib": [[115, 4, 1, "", "compress"], [115, 4, 1, "", "decompress"]]}, "objtypes": {"0": "py:exception", "1": "py:module", "2": "py:method", "3": "py:class", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "module", "Python module"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"python": [0, 1, 2, 3, 4, 5, 27, 150], "3": [0, 1, 2, 3, 4, 5, 97], "10": 0, "5": 1, "6": 2, "7": 3, "8": 4, "9": 5, "builtin": [6, 9, 17], "type": [6, 7, 17, 19, 109, 137], "except": [6, 9, 17, 107, 150], "all": 6, "have": [6, 7], "readabl": 6, "valu": [6, 7, 9, 146], "errno": [6, 22], "attribut": [6, 7, 9, 71], "just": 6, "stopiter": 6, "oserror": 6, "chain": 6, "implement": [6, 7, 9, 10, 37, 48, 49, 149], "user": [6, 7], "defin": [6, 7, 112, 135], "ar": [6, 7, 10], "support": [6, 7, 9, 12, 83], "while": 6, "loop": [6, 14], "condit": [6, 134], "mai": [6, 7], "unexpect": [6, 7], "line": [6, 68], "number": [6, 10, 18, 102], "__init__": [6, 7], "method": [6, 7, 9, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 75, 77, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 111, 137, 150], "doe": [6, 7, 9, 10], "exist": 6, "bytearrai": 6, "arrai": [6, 9, 13, 27, 158], "slice": 6, "assign": [6, 10], "unsupport": [6, 7, 137], "rh": 6, "byte": 6, "object": [6, 7, 9, 47, 68, 87, 93, 103, 112, 150, 158], "format": [6, 9, 106], "keyword": [6, 10], "subscript": [6, 9], "step": [6, 9], "1": [6, 9], "dict": 6, "dictionari": 6, "kei": 6, "view": 6, "behav": 6, "set": [6, 105], "float": [6, 102, 136, 150, 158], "upi": [6, 9, 10], "allow": [6, 10], "implicit": 6, "convers": [6, 7, 15, 31, 68, 87, 89, 118], "math": [6, 45, 68], "oper": [6, 10, 34, 84, 144, 146], "cpython": [6, 7, 8, 9, 10, 23, 28, 105, 106, 107, 109, 110, 111, 152], "output": [6, 28, 120], "differ": [6, 7, 8, 9, 23, 28, 105, 106, 107, 109, 110, 111], "int": 6, "bit_length": 6, "doesn": [6, 7, 10], "t": [6, 7, 10], "No": 6, "deriv": [6, 27], "avail": [6, 43], "to_byt": 6, "sign": 6, "paramet": [6, 9], "list": [6, 7], "delet": [6, 9], "store": [6, 145], "non": [6, 75, 137], "iter": 6, "i": [6, 7, 9, 10, 14, 38, 41, 90, 94, 123], "memoryview": 6, "can": [6, 9, 33, 77, 88], "becom": 6, "invalid": 6, "its": 6, "target": [6, 99], "resiz": 6, "str": 6, "start": 6, "end": 6, "indic": 6, "endswith": 6, "": [6, 85, 99, 106, 137], "subscr": 6, "ljust": 6, "rjust": 6, "none": 6, "first": 6, "argument": [6, 7, 9, 10, 137], "rsplit": 6, "n": [6, 10], "yet": [6, 9], "tupl": 6, "load": [6, 140], "core": [7, 14, 136], "languag": [7, 149], "f": 7, "string": [7, 146], "don": 7, "concaten": 7, "adjac": 7, "liter": [7, 10], "contain": [7, 19, 71], "brace": 7, "cannot": 7, "express": [7, 103], "requir": [7, 10], "pars": 7, "resolv": 7, "unbalanc": 7, "nest": 7, "bracket": 7, "class": [7, 13, 14, 16, 19, 20, 21, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 137], "special": [7, 141, 157], "__del__": 7, "resolut": 7, "order": 7, "mro": 7, "compliant": 7, "privat": 7, "member": 7, "name": [7, 10, 137], "mangl": 7, "when": [7, 9], "inherit": 7, "nativ": [7, 9, 158], "call": 7, "self": 7, "befor": 7, "super": 7, "rais": [7, 10], "an": [7, 9, 10, 49, 120, 150], "attributeerror": 7, "segfault": 7, "micropy_builtin_method_check_self_arg": 7, "enabl": 7, "from": [7, 8, 27, 140], "multipl": [7, 133, 137], "onli": [7, 9], "one": 7, "getter": 7, "properti": 7, "subclass": 7, "return": [7, 9, 137, 146], "function": [7, 14, 15, 17, 18, 23, 24, 26, 28, 29, 30, 45, 46, 48, 53, 54, 55, 64, 68, 69, 76, 79, 81, 82, 83, 84, 85, 86, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 139, 151], "error": [7, 9, 22, 117], "messag": 7, "displai": [7, 56, 59, 60, 61, 62, 63, 126], "count": 7, "do": 7, "__module__": 7, "gener": [7, 34, 84, 102, 117, 118, 150], "context": 7, "manag": [7, 155], "__exit__": 7, "which": 7, "run": [7, 126, 156, 157], "complet": [7, 157], "runtim": 7, "local": [7, 117], "variabl": [7, 10, 157], "aren": 7, "includ": 7, "result": 7, "code": [7, 22, 128, 137, 154, 158], "eval": 7, "access": [7, 30, 46, 84, 85, 91, 108, 112, 156, 158], "import": 7, "__all__": 7, "py": [7, 156], "micropython": [7, 8, 10, 11, 27, 46, 116, 137, 146, 149, 150, 151, 152, 153, 154, 157, 158], "__path__": 7, "packag": [7, 155], "ha": 7, "singl": 7, "instead": [7, 9], "namespac": 7, "split": 7, "across": 7, "filesystem": [7, 84, 114, 117, 147, 152, 156], "modul": [9, 37, 47, 49, 53, 71, 106, 107, 112, 118, 123], "posit": 9, "exampl": [9, 21, 24, 126, 138, 151, 153], "comparison": [9, 134, 136], "between": [9, 10, 136, 150], "typecod": 9, "overflow": 9, "check": 9, "look": 9, "integ": [9, 102, 136, 137], "second": 9, "next": 9, "json": [9, 29], "throw": 9, "serialis": 9, "o": [9, 14, 38, 41, 84, 90, 94, 123, 152], "environ": 9, "getenv": 9, "actual": 9, "cach": [9, 158], "random": [9, 102], "getrandbit": 9, "maximum": [9, 75], "32": 9, "bit": [9, 10, 134], "time": [9, 39, 81, 86, 95, 111, 118], "randint": 9, "most": 9, "word": 9, "size": [9, 21], "struct": [9, 109], "pack": [9, 109], "too": 9, "few": 9, "arg": 9, "mani": 9, "whitespac": 9, "ignor": 9, "sy": [9, 110], "overrid": 9, "stdin": 9, "stdout": 9, "stderr": 9, "possibl": 9, "syntax": 10, "unpack": [10, 109], "work": [10, 147], "being": 10, "nth": 10, "greater": 10, "where": 10, "mp_small_int": 10, "us": [10, 77, 78, 137, 150, 155, 156], "comprehens": 10, "syntaxerror": 10, "space": 10, "cpy": 10, "unicod": 10, "escap": 10, "document": [11, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145], "refer": [11, 118, 138, 158], "_thread": 12, "multithread": 12, "numer": 13, "data": [13, 60, 85, 109, 112, 135, 136, 137], "asyncio": [14, 150], "asynchron": 14, "schedul": [14, 150], "addit": [14, 133], "task": 14, "event": [14, 16, 90, 105], "threadsafeflag": 14, "lock": 14, "tcp": 14, "stream": [14, 28, 105], "connect": [14, 16, 50, 126, 153], "binascii": 15, "binari": [15, 68, 112, 154], "ascii": 15, "bluetooth": 16, "low": [16, 151], "level": [16, 151], "ble": 16, "constructor": [16, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 111], "configur": [16, 48, 90], "handl": 16, "broadcast": 16, "role": 16, "advertis": 16, "observ": 16, "scanner": 16, "central": 16, "peripher": [16, 32, 40, 108, 152], "gatt": 16, "server": 16, "client": [16, 104], "l2cap": 16, "orient": 16, "channel": [16, 98], "pair": 16, "bond": 16, "uuid": 16, "cmath": 18, "mathemat": [18, 45], "complex": 18, "constant": [18, 21, 22, 30, 33, 35, 38, 39, 40, 42, 43, 45, 50, 51, 52, 54, 56, 64, 65, 68, 79, 81, 82, 86, 88, 89, 90, 92, 94, 96, 98, 99, 101, 106, 107, 108, 110, 137, 154], "collect": [19, 146, 158], "cryptolib": 20, "cryptograph": 20, "cipher": 20, "deflat": 21, "compress": [21, 24, 115], "decompress": [21, 24, 115], "window": [21, 130], "system": [22, 84, 110, 131], "gc": [23, 146], "control": [23, 27, 32, 33, 36, 38, 40, 41, 42, 46, 49, 52, 55, 59, 80, 88, 94, 96, 98, 99, 114, 118, 120, 124, 132, 146, 153, 158], "garbag": [23, 146, 158], "collector": 23, "gzip": 24, "hashlib": 25, "hash": 25, "algorithm": [25, 26, 158], "heapq": 26, "heap": [26, 146], "queue": 26, "librari": [27, 77, 78, 156], "standard": [27, 34, 83], "micro": 27, "specif": [27, 37, 48, 49, 108, 110], "openmv": [27, 76, 99, 118, 122, 126, 128, 147], "cam": [27, 76, 99, 118, 122, 126, 128, 147], "third": 27, "parti": 27, "ulab": 27, "numpi": 27, "like": 27, "manipul": 27, "pid": 27, "proport": 27, "integr": 27, "bno055": 27, "imu": [27, 69], "driver": [27, 51, 54, 56, 61, 62, 63, 64, 65, 67, 81, 82, 97, 118], "ssd1306": 27, "ol": 27, "tb6612": 27, "stepper": 27, "motor": 27, "modbu": 27, "protocol": [27, 34, 35, 40, 92, 96], "mqtt": 27, "vl53l1x": 27, "tof": [27, 81], "distanc": 27, "sensor": [27, 64, 69, 79, 81], "extend": [27, 114], "built": [27, 52, 91, 147], "io": [28, 119], "input": [28, 120], "conceptu": 28, "hierarchi": 28, "encod": [29, 154], "decod": 29, "machin": [30, 68, 71, 126], "relat": [30, 86, 104, 111], "hardwar": [30, 42, 91, 118, 121, 152, 158], "memori": [30, 34, 108, 131, 136, 140, 145, 146], "reset": [30, 86, 153, 157], "interrupt": [30, 86, 90, 118, 150, 157], "power": [30, 86], "miscellan": [30, 86, 142], "adc": [31, 32, 87, 118], "analog": [31, 87, 89, 118, 119], "digit": [31, 87, 89, 118], "adcblock": 32, "area": [33, 88], "network": [33, 48, 50, 77, 88], "commun": [33, 43, 88, 99, 150], "bu": [33, 34, 35, 40, 43, 88, 99, 118], "i2c": [34, 77, 92, 118], "two": [34, 92], "wire": [34, 92, 97], "serial": [34, 40, 43, 50, 92, 96, 99, 118, 126], "primit": [34, 109], "i2": 35, "inter": 35, "ic": 35, "sound": 35, "led": [36, 93, 117, 118, 124], "pwm": [37, 58, 118], "puls": [37, 118], "width": [37, 118], "limit": [37, 112, 150], "pin": [38, 90, 94, 118], "rtc": [39, 95, 118], "real": [39, 95, 118], "clock": [39, 95, 118], "spi": [40, 63, 77, 96, 118], "interfac": [40, 48, 52, 77, 100, 114, 150], "side": 40, "signal": 41, "sens": 41, "extern": [41, 90, 118], "devic": [41, 100, 114, 147, 156], "timer": [42, 44, 98, 118], "uart": [43, 77, 99, 118, 132], "duplex": [43, 99], "trigger": 43, "wdt": 44, "watchdog": 44, "intern": [46, 98], "mutex": 47, "common": 48, "adapt": 48, "lan": 49, "ethernet": 49, "ppp": 50, "creat": 50, "over": 50, "winc": 51, "wifi": [51, 52, 126], "shield": [51, 82], "wlan": 52, "audio": 53, "buzzer": 54, "cpufreq": 55, "cpu": 55, "frequenc": 55, "dacbacklight": 57, "dac": [57, 89, 118], "backlight": [57, 58], "pwmbacklight": 58, "st7701": 59, "displaydata": 60, "dsidisplai": 61, "dsi": 61, "rgbdisplai": 62, "rgb": 62, "spidisplai": 63, "fir": 64, "thermal": 64, "far": 64, "infrar": 64, "ft5x06": 65, "touch": [65, 67], "screen": [65, 67], "gif": 66, "record": [66, 70], "gt911": 67, "imag": [68, 74], "vision": [68, 126], "haarcascad": 68, "featur": 68, "descriptor": [68, 112], "similar": 68, "histogram": [68, 126], "percentil": 68, "threshold": 68, "statist": 68, "blob": 68, "circl": 68, "rect": 68, "rectangl": 68, "qrcode": 68, "apriltag": 68, "datamatrix": 68, "barcod": 68, "displac": 68, "kptmatch": 68, "keypoint": 68, "imageio": 68, "basic": [68, 84], "draw": 68, "mask": 68, "isp": 68, "filter": 68, "geometr": 68, "get": 68, "detect": 68, "mjpeg": 70, "ml": [71, 72, 73, 74, 75], "learn": 71, "sub": 71, "model": 71, "app": 72, "microspeech": 72, "speech": 72, "recognit": 72, "postprocess": 73, "fomo_postprocess": 73, "fomo": 73, "yolo_v2_postprocess": 73, "yolo": 73, "v2": 73, "yolo_v5_postprocess": 73, "v5": 73, "preprocess": 74, "normal": 74, "util": 75, "nm": 75, "soft": [75, 153, 157], "suppress": 75, "omv": 76, "inform": [76, 116, 117, 125], "rpc": 77, "how": [77, 78, 128], "virtual": [77, 101, 114, 118], "rpc_master": 77, "rpc_slave": 77, "rpc_can_mast": 77, "master": 77, "rpc_can_slav": 77, "slave": 77, "rpc_i2c_mast": 77, "rpc_i2c_slav": 77, "rpc_spi_mast": 77, "rpc_spi_slav": 77, "rpc_uart_mast": 77, "rpc_uart_slav": 77, "rpc_usb_vcp_mast": 77, "usb": [77, 100, 101, 121], "vcp": 77, "rpc_usb_vcp_slav": 77, "rpc_network_mast": 77, "rpc_network_slav": 77, "rtsp": 78, "rtsp_server": 78, "camera": 79, "tfp410": 80, "dvi": 80, "hdmi": 80, "flight": 81, "tv": 82, "openamp": 83, "provid": 83, "asymmetr": 83, "multiprocess": 83, "amp": 83, "endpoint": 83, "remoteproc": 83, "servic": 84, "termin": [84, 126], "redirect": 84, "duplic": 84, "mount": [84, 114], "platform": 85, "underli": 85, "identifi": [85, 158], "pyb": [86, 123], "board": [86, 118, 151], "The": [87, 123, 134, 146, 150, 154, 156, 157, 158], "adcal": 87, "extint": 90, "flash": [91, 117, 121, 146], "storag": 91, "note": [91, 121], "pinaf": 94, "altern": 94, "driven": 96, "servo": [97, 118], "hobbi": 97, "timerchannel": 98, "setup": [98, 121, 130], "flow": 99, "ct": 99, "transmitt": 99, "rt": 99, "usb_hid": 100, "human": 100, "hid": 100, "usb_vcp": 101, "comm": 101, "port": [101, 155], "other": 102, "re": 103, "simpl": [103, 114], "regular": 103, "regex": 103, "match": 103, "request": 104, "http": 104, "respons": 104, "select": 105, "wait": 105, "poll": 105, "socket": 106, "address": 106, "ssl": 107, "tl": 107, "sslcontext": 107, "stm": 108, "stm32": [108, 118, 147], "mcu": 108, "regist": [108, 134, 136, 140, 143, 145], "stm32wbxx": 108, "stm32wlxx": 108, "uctyp": 112, "structur": [112, 129], "wai": 112, "layout": 112, "content": [112, 117, 147, 158], "instanti": 112, "up": 113, "ping": 113, "anoth": 113, "comput": 113, "vf": [114, 147], "block": [114, 147], "zlib": 115, "licens": 116, "about": 117, "openmvcam": [117, 118], "sd": 117, "card": 117, "boot": 117, "mode": [117, 157], "quick": 118, "delai": 118, "gpio": [118, 120], "softwar": [118, 130], "onewir": 118, "dht": 118, "base": 118, "As": 120, "drive": 121, "tutori": [122, 123], "more": 125, "id": 126, "overview": [126, 127, 152], "file": [126, 151, 154], "menu": 126, "text": 126, "edit": 126, "your": [126, 128], "script": [126, 128, 129, 156], "frame": 126, "buffer": [126, 150, 158], "viewer": 126, "statu": [126, 134], "bar": 126, "tool": [126, 156], "debug": 126, "open": 126, "video": 126, "option": 126, "releas": 128, "product": 128, "freez": [128, 155], "protect": 128, "mac": 130, "linux": 130, "desktop": 130, "raspberrypi": 130, "architectur": [131, 138], "arithmet": [133, 136], "instruct": [133, 134, 136, 137, 138, 139, 141, 142, 143], "convent": [133, 134, 136, 138, 139, 140, 141, 143, 144, 145], "subtract": 133, "negat": 133, "divis": 133, "applic": 134, "program": [134, 150, 157], "apsr": 134, "execut": [134, 146], "assembl": [135, 137, 138], "direct": 135, "label": [135, 139], "inlin": [135, 138], "point": [136, 158], "move": [136, 143], "arm": 136, "fpu": 136, "convert": 136, "hint": 137, "tip": [137, 150], "branch": [137, 139], "subroutin": [137, 139], "pass": 137, "overcom": [137, 150], "restrict": 137, "thumb2": 138, "categori": 138, "usag": 138, "long": 139, "logic": 141, "bitwis": 141, "shift": 141, "rotat": 141, "stack": 144, "push": 144, "pop": 144, "microcontrol": 146, "ram": [146, 158], "compil": 146, "phase": 146, "fragment": 146, "report": 146, "postscript": 146, "footnot": 146, "pyboard": [147, 156], "esp8266": 147, "esp32": 147, "custom": [147, 151], "fat": 147, "littlef": 147, "hybrid": 147, "glossari": 148, "write": [150, 151, 155], "handler": 150, "recommend": 150, "practic": 150, "issu": 150, "emerg": 150, "simplic": 150, "isr": 150, "main": 150, "callback": 150, "creation": 150, "design": [150, 158], "reentranc": 150, "critic": 150, "section": [150, 158], "repl": [150, 157], "manifest": 151, "summari": 151, "build": 151, "ad": 151, "definit": 151, "high": 151, "2": 152, "0": 152, "migrat": 152, "guid": 152, "chang": 152, "compat": [152, 154], "remot": 153, "mpremot": [153, 155], "command": [153, 156], "auto": [153, 157], "shortcut": 153, "mpy": 154, "version": 154, "header": 154, "global": 154, "qstr": 154, "tabl": 154, "raw": [154, 157], "element": 154, "instal": 155, "mip": 155, "unix": 155, "manual": 155, "publish": 155, "interact": 157, "interpret": 157, "aka": 157, "indent": 157, "past": 157, "_": 157, "underscor": 157, "maximis": 158, "speed": 158, "alloc": 158, "slowest": 158, "improv": 158, "const": 158, "declar": 158, "emitt": 158, "viper": 158, "directli": 158}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Python 3.10": [[0, "python-3-10"]], "Python 3.5": [[1, "python-3-5"]], "Python 3.6": [[2, "python-3-6"]], "Python 3.7": [[3, "python-3-7"]], "Python 3.8": [[4, "python-3-8"]], "Python 3.9": [[5, "python-3-9"]], "Builtin types": [[6, "builtin-types"]], "Exception": [[6, "exception"]], "All exceptions have readable value and errno attributes, not just StopIteration and OSError.": [[6, "all-exceptions-have-readable-value-and-errno-attributes-not-just-stopiteration-and-oserror"]], "Exception chaining not implemented": [[6, "exception-chaining-not-implemented"]], "User-defined attributes for builtin exceptions are not supported": [[6, "user-defined-attributes-for-builtin-exceptions-are-not-supported"]], "Exception in while loop condition may have unexpected line number": [[6, "exception-in-while-loop-condition-may-have-unexpected-line-number"]], "Exception.__init__ method does not exist.": [[6, "exception-init-method-does-not-exist"]], "bytearray": [[6, "bytearray"]], "Array slice assignment with unsupported RHS": [[6, "array-slice-assignment-with-unsupported-rhs"]], "bytes": [[6, "bytes"]], "bytes objects support .format() method": [[6, "bytes-objects-support-format-method"]], "bytes() with keywords not implemented": [[6, "bytes-with-keywords-not-implemented"]], "Bytes subscription with step != 1 not implemented": [[6, "bytes-subscription-with-step-1-not-implemented"]], "dict": [[6, "dict"]], "Dictionary keys view does not behave as a set.": [[6, "dictionary-keys-view-does-not-behave-as-a-set"]], "float": [[6, "float"]], "uPy allows implicit conversion of objects in maths operations while CPython does not.": [[6, "upy-allows-implicit-conversion-of-objects-in-maths-operations-while-cpython-does-not"]], "uPy and CPython outputs formats may differ": [[6, "upy-and-cpython-outputs-formats-may-differ"]], "int": [[6, "int"]], "bit_length method doesn\u2019t exist.": [[6, "bit-length-method-doesn-t-exist"]], "No int conversion for int-derived types available": [[6, "no-int-conversion-for-int-derived-types-available"]], "to_bytes method doesn\u2019t implement signed parameter.": [[6, "to-bytes-method-doesn-t-implement-signed-parameter"]], "list": [[6, "list"]], "List delete with step != 1 not implemented": [[6, "list-delete-with-step-1-not-implemented"]], "List slice-store with non-iterable on RHS is not implemented": [[6, "list-slice-store-with-non-iterable-on-rhs-is-not-implemented"]], "List store with step != 1 not implemented": [[6, "list-store-with-step-1-not-implemented"]], "memoryview": [[6, "memoryview"]], "memoryview can become invalid if its target is resized": [[6, "memoryview-can-become-invalid-if-its-target-is-resized"]], "str": [[6, "str"]], "Start/end indices such as str.endswith(s, start) not implemented": [[6, "start-end-indices-such-as-str-endswith-s-start-not-implemented"]], "Attributes/subscr not implemented": [[6, "attributes-subscr-not-implemented"]], "str(\u2026) with keywords not implemented": [[6, "str-with-keywords-not-implemented"]], "str.ljust() and str.rjust() not implemented": [[6, "str-ljust-and-str-rjust-not-implemented"]], "None as first argument for rsplit such as str.rsplit(None, n) not implemented": [[6, "none-as-first-argument-for-rsplit-such-as-str-rsplit-none-n-not-implemented"]], "Subscript with step != 1 is not yet implemented": [[6, "subscript-with-step-1-is-not-yet-implemented"], [9, "subscript-with-step-1-is-not-yet-implemented"]], "tuple": [[6, "tuple"]], "Tuple load with step != 1 not implemented": [[6, "tuple-load-with-step-1-not-implemented"]], "Core language": [[7, "core-language"]], "f-strings don\u2019t support concatenation with adjacent literals if the adjacent literals contain braces": [[7, "f-strings-don-t-support-concatenation-with-adjacent-literals-if-the-adjacent-literals-contain-braces"]], "f-strings cannot support expressions that require parsing to resolve unbalanced nested braces and brackets": [[7, "f-strings-cannot-support-expressions-that-require-parsing-to-resolve-unbalanced-nested-braces-and-brackets"]], "f-strings don\u2019t support !a conversions": [[7, "f-strings-don-t-support-a-conversions"]], "Classes": [[7, "classes"], [13, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [24, "classes"], [28, "classes"], [30, "classes"], [46, "classes"], [56, "classes"], [86, "classes"]], "Special method __del__ not implemented for user-defined classes": [[7, "special-method-del-not-implemented-for-user-defined-classes"]], "Method Resolution Order (MRO) is not compliant with CPython": [[7, "method-resolution-order-mro-is-not-compliant-with-cpython"]], "Private Class Members name mangling is not implemented": [[7, "private-class-members-name-mangling-is-not-implemented"]], "When inheriting native types, calling a method in __init__(self, ...) before super().__init__() raises an AttributeError (or segfaults if MICROPY_BUILTIN_METHOD_CHECK_SELF_ARG is not enabled).": [[7, "when-inheriting-native-types-calling-a-method-in-init-self-before-super-init-raises-an-attributeerror-or-segfaults-if-micropy-builtin-method-check-self-arg-is-not-enabled"]], "When inheriting from multiple classes super() only calls one class": [[7, "when-inheriting-from-multiple-classes-super-only-calls-one-class"]], "Calling super() getter property in subclass will return a property object, not the value": [[7, "calling-super-getter-property-in-subclass-will-return-a-property-object-not-the-value"]], "Functions": [[7, "functions"], [15, "functions"], [18, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [45, "functions"], [46, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [64, "functions"], [68, "functions"], [69, "functions"], [76, "functions"], [79, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [85, "functions"], [103, "functions"], [104, "functions"], [105, "functions"], [106, "functions"], [107, "functions"], [109, "functions"], [110, "functions"], [111, "functions"], [115, "functions"]], "Error messages for methods may display unexpected argument counts": [[7, "error-messages-for-methods-may-display-unexpected-argument-counts"]], "Function objects do not have the __module__ attribute": [[7, "function-objects-do-not-have-the-module-attribute"]], "User-defined attributes for functions are not supported": [[7, "user-defined-attributes-for-functions-are-not-supported"]], "Generator": [[7, "generator"]], "Context manager __exit__() not called in a generator which does not run to completion": [[7, "context-manager-exit-not-called-in-a-generator-which-does-not-run-to-completion"]], "Runtime": [[7, "runtime"]], "Local variables aren\u2019t included in locals() result": [[7, "local-variables-aren-t-included-in-locals-result"]], "Code running in eval() function doesn\u2019t have access to local variables": [[7, "code-running-in-eval-function-doesn-t-have-access-to-local-variables"]], "import": [[7, "import"]], "__all__ is unsupported in __init__.py in MicroPython.": [[7, "all-is-unsupported-in-init-py-in-micropython"]], "__path__ attribute of a package has a different type (single string instead of list of strings) in MicroPython": [[7, "path-attribute-of-a-package-has-a-different-type-single-string-instead-of-list-of-strings-in-micropython"]], "MicroPython doesn\u2019t support namespace packages split across filesystem.": [[7, "micropython-doesn-t-support-namespace-packages-split-across-filesystem"]], "MicroPython differences from CPython": [[8, "micropython-differences-from-cpython"]], "Modules": [[9, "modules"]], "Positional-only Parameters": [[9, "positional-only-parameters"]], "Example": [[9, "example"]], "array": [[9, "array"]], "Comparison between different typecodes not supported": [[9, "comparison-between-different-typecodes-not-supported"]], "Overflow checking is not implemented": [[9, "overflow-checking-is-not-implemented"]], "Looking for integer not implemented": [[9, "looking-for-integer-not-implemented"]], "Array deletion not implemented": [[9, "array-deletion-not-implemented"]], "builtins": [[9, "builtins"]], "Second argument to next() is not implemented": [[9, "second-argument-to-next-is-not-implemented"]], "json": [[9, "json"]], "JSON module does not throw exception when object is not serialisable": [[9, "json-module-does-not-throw-exception-when-object-is-not-serialisable"]], "os": [[9, "os"]], "environ attribute is not implemented": [[9, "environ-attribute-is-not-implemented"]], "getenv returns actual value instead of cached value": [[9, "getenv-returns-actual-value-instead-of-cached-value"]], "random": [[9, "random"]], "getrandbits method can only return a maximum of 32 bits at a time.": [[9, "getrandbits-method-can-only-return-a-maximum-of-32-bits-at-a-time"]], "randint method can only return an integer that is at most the native word size.": [[9, "randint-method-can-only-return-an-integer-that-is-at-most-the-native-word-size"]], "struct": [[9, "struct"]], "Struct pack with too few args, not checked by uPy": [[9, "struct-pack-with-too-few-args-not-checked-by-upy"]], "Struct pack with too many args, not checked by uPy": [[9, "struct-pack-with-too-many-args-not-checked-by-upy"]], "Struct pack with whitespace in format, whitespace ignored by CPython, error on uPy": [[9, "struct-pack-with-whitespace-in-format-whitespace-ignored-by-cpython-error-on-upy"]], "sys": [[9, "sys"]], "Overriding sys.stdin, sys.stdout and sys.stderr not possible": [[9, "overriding-sys-stdin-sys-stdout-and-sys-stderr-not-possible"]], "Syntax": [[10, "syntax"]], "Argument unpacking does not work if the argument being unpacked is the nth or greater argument where n is the number of bits in an MP_SMALL_INT.": [[10, "argument-unpacking-does-not-work-if-the-argument-being-unpacked-is-the-nth-or-greater-argument-where-n-is-the-number-of-bits-in-an-mp-small-int"]], "Operators": [[10, "operators"]], "MicroPython allows using := to assign to the variable of a comprehension, CPython raises a SyntaxError.": [[10, "micropython-allows-using-to-assign-to-the-variable-of-a-comprehension-cpython-raises-a-syntaxerror"]], "Spaces": [[10, "spaces"]], "uPy requires spaces between literal numbers and keywords, CPy doesn\u2019t": [[10, "upy-requires-spaces-between-literal-numbers-and-keywords-cpy-doesn-t"]], "Unicode": [[10, "unicode"]], "Unicode name escapes are not implemented": [[10, "unicode-name-escapes-are-not-implemented"]], "MicroPython documentation and references": [[11, "micropython-documentation-and-references"]], "_thread \u2013 multithreading support": [[12, "module-_thread"]], "array \u2013 arrays of numeric data": [[13, "module-array"]], "asyncio \u2014 asynchronous I/O scheduler": [[14, "module-asyncio"]], "Core functions": [[14, "core-functions"]], "Additional functions": [[14, "additional-functions"]], "class Task": [[14, "class-task"]], "class Event": [[14, "class-event"]], "class ThreadSafeFlag": [[14, "class-threadsafeflag"]], "class Lock": [[14, "class-lock"]], "TCP stream connections": [[14, "tcp-stream-connections"]], "Event Loop": [[14, "event-loop"]], "binascii \u2013 binary/ASCII conversions": [[15, "module-binascii"]], "bluetooth \u2014 low-level Bluetooth": [[16, "module-bluetooth"]], "class BLE": [[16, "class-ble"]], "Constructor": [[16, "constructor"], [16, "id1"], [35, "constructor"]], "Configuration": [[16, "configuration"]], "Event Handling": [[16, "event-handling"]], "Broadcaster Role (Advertiser)": [[16, "broadcaster-role-advertiser"]], "Observer Role (Scanner)": [[16, "observer-role-scanner"]], "Central Role": [[16, "central-role"]], "Peripheral Role": [[16, "peripheral-role"]], "Central & Peripheral Roles": [[16, "central-peripheral-roles"]], "GATT Server": [[16, "gatt-server"]], "GATT Client": [[16, "gatt-client"]], "L2CAP connection-oriented-channels": [[16, "l2cap-connection-oriented-channels"]], "Pairing and bonding": [[16, "pairing-and-bonding"]], "class UUID": [[16, "class-uuid"]], "builtins \u2013 builtin functions and exceptions": [[17, "builtins-builtin-functions-and-exceptions"]], "Functions and types": [[17, "functions-and-types"]], "Exceptions": [[17, "exceptions"], [107, "exceptions"], [150, "exceptions"]], "cmath \u2013 mathematical functions for complex numbers": [[18, "module-cmath"]], "Constants": [[18, "constants"], [21, "constants"], [22, "constants"], [30, "constants"], [33, "constants"], [35, "constants"], [38, "constants"], [39, "constants"], [40, "constants"], [42, "constants"], [43, "constants"], [45, "constants"], [50, "constants"], [51, "constants"], [52, "constants"], [54, "constants"], [56, "constants"], [64, "constants"], [65, "constants"], [68, "constants"], [79, "constants"], [81, "constants"], [82, "constants"], [86, "constants"], [88, "constants"], [89, "constants"], [90, "constants"], [92, "constants"], [94, "constants"], [96, "constants"], [98, "constants"], [99, "constants"], [101, "constants"], [106, "constants"], [107, "constants"], [110, "constants"]], "collections \u2013 collection and container types": [[19, "module-collections"]], "cryptolib \u2013 cryptographic ciphers": [[20, "module-cryptolib"]], "deflate \u2013 deflate compression & decompression": [[21, "module-deflate"]], "Examples": [[21, "examples"], [24, "examples"], [151, "examples"], [153, "examples"]], "Deflate window size": [[21, "deflate-window-size"]], "Decompression": [[21, "decompression"]], "Compression": [[21, "compression"]], "errno \u2013 system error codes": [[22, "module-errno"]], "gc \u2013 control the garbage collector": [[23, "module-gc"]], "Difference to CPython": [[23, null], [23, null], [23, null], [28, null], [28, null], [105, null], [105, null], [106, null], [106, null], [106, null], [106, null], [106, null], [106, null], [107, null], [109, null], [110, null], [110, null], [110, null], [110, null], [110, null], [111, null]], "gzip \u2013 gzip compression & decompression": [[24, "module-gzip"]], "hashlib \u2013 hashing algorithms": [[25, "module-hashlib"]], "Constructors": [[25, "constructors"], [31, "constructors"], [32, "constructors"], [33, "constructors"], [34, "constructors"], [36, "constructors"], [37, "constructors"], [38, "constructors"], [39, "constructors"], [40, "constructors"], [41, "constructors"], [42, "constructors"], [43, "constructors"], [44, "constructors"], [47, "constructors"], [49, "constructors"], [50, "constructors"], [51, "constructors"], [52, "constructors"], [57, "constructors"], [58, "constructors"], [59, "constructors"], [60, "constructors"], [61, "constructors"], [62, "constructors"], [63, "constructors"], [65, "constructors"], [66, "constructors"], [67, "constructors"], [70, "constructors"], [71, "constructors"], [72, "constructors"], [73, "constructors"], [73, "id1"], [73, "id2"], [74, "constructors"], [75, "constructors"], [77, "constructors"], [77, "id1"], [77, "id3"], [77, "id5"], [77, "id6"], [77, "id7"], [77, "id8"], [77, "id9"], [78, "constructors"], [80, "constructors"], [87, "constructors"], [88, "constructors"], [89, "constructors"], [90, "constructors"], [91, "constructors"], [92, "constructors"], [93, "constructors"], [94, "constructors"], [95, "constructors"], [96, "constructors"], [97, "constructors"], [98, "constructors"], [99, "constructors"], [100, "constructors"], [101, "constructors"], [111, "constructors"]], "Methods": [[25, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [47, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [75, "methods"], [77, "methods"], [77, "id2"], [77, "id4"], [78, "methods"], [80, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [92, "methods"], [93, "methods"], [94, "methods"], [94, "id1"], [95, "methods"], [96, "methods"], [97, "methods"], [98, "methods"], [98, "id1"], [99, "methods"], [100, "methods"], [101, "methods"], [104, "methods"], [105, "methods"], [106, "methods"], [111, "methods"]], "heapq \u2013 heap queue algorithm": [[26, "module-heapq"]], "MicroPython libraries": [[27, "micropython-libraries"]], "Python standard libraries and micro-libraries": [[27, "python-standard-libraries-and-micro-libraries"]], "MicroPython-specific libraries": [[27, "micropython-specific-libraries"]], "Libraries specific to the OpenMV Cam": [[27, "libraries-specific-to-the-openmv-cam"]], "Third-party libraries on the OpenMV Cam": [[27, "third-party-libraries-on-the-openmv-cam"]], "ulab \u2014 numpy-like array manipulation library": [[27, "module-ulab"]], "pid \u2014 Proportional/Integral/Derivative Control": [[27, "module-pid"]], "bno055 \u2014 IMU Driver": [[27, "module-bno055"]], "ssd1306 \u2014 OLED Driver": [[27, "module-ssd1306"]], "tb6612 \u2014 Stepper Motor Driver": [[27, "module-tb6612"]], "modbus \u2014 modbus protocol library": [[27, "module-modbus"]], "mqtt \u2014 mqtt protocol library": [[27, "module-mqtt"]], "vl53l1x \u2014 ToF Distance Sensor Driver": [[27, "module-vl53l1x"]], "Extending built-in libraries from Python": [[27, "extending-built-in-libraries-from-python"]], "io \u2013 input/output streams": [[28, "module-io"]], "Conceptual hierarchy": [[28, "conceptual-hierarchy"]], "json \u2013 JSON encoding and decoding": [[29, "module-json"]], "machine \u2014 functions related to the hardware": [[30, "module-machine"]], "Memory access": [[30, "memory-access"], [108, "memory-access"]], "Reset related functions": [[30, "reset-related-functions"], [86, "reset-related-functions"]], "Interrupt related functions": [[30, "interrupt-related-functions"], [86, "interrupt-related-functions"]], "Power related functions": [[30, "power-related-functions"], [86, "power-related-functions"]], "Miscellaneous functions": [[30, "miscellaneous-functions"], [86, "miscellaneous-functions"]], "class ADC \u2013 analog to digital conversion": [[31, "class-adc-analog-to-digital-conversion"], [87, "class-adc-analog-to-digital-conversion"]], "class ADCBlock \u2013 control ADC peripherals": [[32, "class-adcblock-control-adc-peripherals"]], "class CAN \u2013 controller area network communication bus": [[33, "class-can-controller-area-network-communication-bus"], [88, "class-can-controller-area-network-communication-bus"]], "class I2C \u2013 a two-wire serial protocol": [[34, "class-i2c-a-two-wire-serial-protocol"], [92, "class-i2c-a-two-wire-serial-protocol"]], "General Methods": [[34, "general-methods"]], "Primitive I2C operations": [[34, "primitive-i2c-operations"]], "Standard bus operations": [[34, "standard-bus-operations"]], "Memory operations": [[34, "memory-operations"]], "class I2S \u2013 Inter-IC Sound bus protocol": [[35, "class-i2s-inter-ic-sound-bus-protocol"]], "class LED \u2013 LED Control": [[36, "class-led-led-control"]], "class PWM \u2013 pulse width modulation": [[37, "class-pwm-pulse-width-modulation"]], "Specific PWM class implementations": [[37, "specific-pwm-class-implementations"]], "Limitations of PWM": [[37, "limitations-of-pwm"]], "class Pin \u2013 control I/O pins": [[38, "class-pin-control-i-o-pins"], [94, "class-pin-control-i-o-pins"]], "class RTC \u2013 real time clock": [[39, "class-rtc-real-time-clock"], [95, "class-rtc-real-time-clock"]], "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)": [[40, "class-spi-a-serial-peripheral-interface-bus-protocol-controller-side"]], "class Signal \u2013 control and sense external I/O devices": [[41, "class-signal-control-and-sense-external-i-o-devices"]], "class Timer \u2013 control hardware timers": [[42, "class-timer-control-hardware-timers"]], "class UART \u2013 duplex serial communication bus": [[43, "class-uart-duplex-serial-communication-bus"], [99, "class-uart-duplex-serial-communication-bus"]], "Availability of triggers": [[43, "id1"]], "class WDT \u2013 watchdog timer": [[44, "class-wdt-watchdog-timer"]], "math \u2013 mathematical functions": [[45, "module-math"]], "micropython \u2013 access and control MicroPython internals": [[46, "module-micropython"]], "mutex \u2014 mutex module": [[47, "module-mutex"]], "class Mutex \u2013 mutex object": [[47, "class-mutex-mutex-object"]], "network \u2014 network configuration": [[48, "module-network"]], "Common network adapter interface": [[48, "common-network-adapter-interface"]], "Specific network class implementations": [[48, "specific-network-class-implementations"]], "Network functions": [[48, "network-functions"]], "class LAN \u2013 control an Ethernet module": [[49, "class-lan-control-an-ethernet-module"]], "Specific LAN class implementations": [[49, "specific-lan-class-implementations"]], "class PPP \u2013 create network connections over serial PPP": [[50, "class-ppp-create-network-connections-over-serial-ppp"]], "class WINC \u2013 wifi shield driver": [[51, "class-winc-wifi-shield-driver"]], "class WLAN \u2013 control built-in WiFi interfaces": [[52, "class-wlan-control-built-in-wifi-interfaces"]], "audio \u2014 Audio Module": [[53, "module-audio"]], "buzzer \u2014 buzzer driver": [[54, "module-buzzer"]], "cpufreq \u2014 CPU Frequency Control": [[55, "module-cpufreq"]], "display \u2014 display driver": [[56, "module-display"]], "class DACBacklight \u2013 DAC Backlight": [[57, "class-dacbacklight-dac-backlight"]], "class PWMBacklight \u2013 PWM Backlight": [[58, "class-pwmbacklight-pwm-backlight"]], "class ST7701 \u2013 Display Controller": [[59, "class-st7701-display-controller"]], "class DisplayData \u2013 Display Data": [[60, "class-displaydata-display-data"]], "class DSIDisplay \u2013 DSI Display Driver": [[61, "class-dsidisplay-dsi-display-driver"]], "class RGBDisplay \u2013 RGB Display Driver": [[62, "class-rgbdisplay-rgb-display-driver"]], "class SPIDisplay \u2013 SPI Display Driver": [[63, "class-spidisplay-spi-display-driver"]], "fir \u2014 thermal sensor driver (fir == far infrared)": [[64, "module-fir"]], "ft5x06 \u2014 Touch Screen Driver": [[65, "module-ft5x06"]], "gif \u2014 gif recording": [[66, "module-gif"]], "class Gif \u2013 Gif recorder": [[66, "class-gif-gif-recorder"]], "gt911 \u2014 Touch Screen Driver": [[67, "module-gt911"]], "image \u2014 machine vision": [[68, "module-image"]], "class HaarCascade \u2013 Feature Descriptor": [[68, "class-haarcascade-feature-descriptor"]], "class Similarity \u2013 Similarity Object": [[68, "class-similarity-similarity-object"]], "class Histogram \u2013 Histogram Object": [[68, "class-histogram-histogram-object"]], "class Percentile \u2013 Percentile Object": [[68, "class-percentile-percentile-object"]], "class Threshold \u2013 Threshold Object": [[68, "class-threshold-threshold-object"]], "class Statistics \u2013 Statistics Object": [[68, "class-statistics-statistics-object"]], "class Blob \u2013 Blob object": [[68, "class-blob-blob-object"]], "class Line \u2013 Line object": [[68, "class-line-line-object"]], "class Circle \u2013 Circle object": [[68, "class-circle-circle-object"]], "class Rect \u2013 Rectangle Object": [[68, "class-rect-rectangle-object"]], "class QRCode \u2013 QRCode object": [[68, "class-qrcode-qrcode-object"]], "class AprilTag \u2013 AprilTag object": [[68, "class-apriltag-apriltag-object"]], "class DataMatrix \u2013 DataMatrix object": [[68, "class-datamatrix-datamatrix-object"]], "class BarCode \u2013 BarCode object": [[68, "class-barcode-barcode-object"]], "class Displacement \u2013 Displacement object": [[68, "class-displacement-displacement-object"]], "class kptmatch \u2013 Keypoint Object": [[68, "class-kptmatch-keypoint-object"]], "class ImageIO  \u2013 ImageIO Object": [[68, "class-imageio-imageio-object"]], "class Image \u2013 Image object": [[68, "class-image-image-object"]], "Basic Methods": [[68, "basic-methods"]], "Conversion Methods": [[68, "conversion-methods"]], "Drawing Methods": [[68, "drawing-methods"]], "Masking Methods": [[68, "masking-methods"]], "Binary Methods": [[68, "binary-methods"]], "ISP Methods": [[68, "isp-methods"]], "Math Methods": [[68, "math-methods"]], "Filtering Methods": [[68, "filtering-methods"]], "Geometric Methods": [[68, "geometric-methods"]], "Get Methods": [[68, "get-methods"]], "Detection Methods": [[68, "detection-methods"]], "imu \u2014 imu sensor": [[69, "module-imu"]], "mjpeg \u2014 mjpeg recording": [[70, "module-mjpeg"]], "class Mjpeg \u2013 Mjpeg recorder": [[70, "class-mjpeg-mjpeg-recorder"]], "ml \u2014 Machine Learning": [[71, "module-ml"]], "Sub Modules": [[71, "sub-modules"]], "class model \u2013 Model Container": [[71, "class-model-model-container"]], "Attributes": [[71, "attributes"]], "ml.apps \u2014 ML Apps": [[72, "module-ml.apps"]], "class MicroSpeech \u2013 Speech Recognition": [[72, "class-microspeech-speech-recognition"]], "ml.postprocessing \u2014 ML Postprocessing": [[73, "module-ml.postprocessing"]], "class fomo_postprocess \u2013 FOMO": [[73, "class-fomo-postprocess-fomo"]], "class yolo_v2_postprocess \u2013 YOLO V2": [[73, "class-yolo-v2-postprocess-yolo-v2"]], "class yolo_v5_postprocess \u2013 YOLO V5": [[73, "class-yolo-v5-postprocess-yolo-v5"]], "ml.preprocessing \u2014 ML Preprocessing": [[74, "module-ml.preprocessing"]], "class Normalization \u2013 Image Normalization": [[74, "class-normalization-image-normalization"]], "ml.utils \u2014 ML Utils": [[75, "module-ml.utils"]], "class NMS - Soft-Non-Maximum Suppression": [[75, "class-nms-soft-non-maximum-suppression"]], "omv \u2014 OpenMV Cam Information": [[76, "module-omv"]], "rpc \u2014 rpc library": [[77, "module-rpc"]], "How to use the Library": [[77, "how-to-use-the-library"], [78, "how-to-use-the-library"]], "class rpc - rpc virtual class": [[77, "class-rpc-rpc-virtual-class"]], "class rpc_master - rpc_master virtual class": [[77, "class-rpc-master-rpc-master-virtual-class"]], "class rpc_slave - rpc_slave virtual class": [[77, "class-rpc-slave-rpc-slave-virtual-class"]], "class rpc_can_master - CAN Master Interface": [[77, "class-rpc-can-master-can-master-interface"]], "class rpc_can_slave - CAN Slave Interface": [[77, "class-rpc-can-slave-can-slave-interface"]], "class rpc_i2c_master - I2C Master Interface": [[77, "class-rpc-i2c-master-i2c-master-interface"]], "class rpc_i2c_slave - I2C Slave Interface": [[77, "class-rpc-i2c-slave-i2c-slave-interface"]], "class rpc_spi_master - SPI Master Interface": [[77, "class-rpc-spi-master-spi-master-interface"]], "class rpc_spi_slave - SPI Slave Interface": [[77, "class-rpc-spi-slave-spi-slave-interface"]], "class rpc_uart_master - UART Master Interface": [[77, "class-rpc-uart-master-uart-master-interface"]], "class rpc_uart_slave - UART Slave Interface": [[77, "class-rpc-uart-slave-uart-slave-interface"]], "class rpc_usb_vcp_master - USB VCP Master Interface": [[77, "class-rpc-usb-vcp-master-usb-vcp-master-interface"]], "class rpc_usb_vcp_slave - USB VCP Slave Interface": [[77, "class-rpc-usb-vcp-slave-usb-vcp-slave-interface"]], "class rpc_network_master - Network Master Interface": [[77, "class-rpc-network-master-network-master-interface"]], "class rpc_network_slave - Network Slave Interface": [[77, "class-rpc-network-slave-network-slave-interface"]], "rtsp \u2014 rtsp library": [[78, "module-rtsp"]], "class rtsp_server - rtsp_server class": [[78, "class-rtsp-server-rtsp-server-class"]], "sensor \u2014 camera sensor": [[79, "module-sensor"]], "tfp410 \u2014 DVI/HDMI Controller": [[80, "module-TFP410"]], "tof \u2014 time-of-flight sensor driver": [[81, "module-tof"]], "tv \u2014 tv shield driver": [[82, "module-tv"]], "openamp \u2013 provides standard Asymmetric Multiprocessing (AMP) support": [[83, "module-openamp"]], "Endpoint class": [[83, "endpoint-class"]], "RemoteProc class": [[83, "remoteproc-class"]], "os \u2013 basic \u201coperating system\u201d services": [[84, "module-os"]], "General functions": [[84, "general-functions"]], "Filesystem access": [[84, "filesystem-access"], [156, "filesystem-access"]], "Terminal redirection and duplication": [[84, "terminal-redirection-and-duplication"]], "Filesystem mounting": [[84, "filesystem-mounting"], [114, "filesystem-mounting"]], "platform \u2013 access to underlying platform\u2019s identifying data": [[85, "module-platform"]], "pyb \u2014 functions related to the board": [[86, "module-pyb"]], "Time related functions": [[86, "time-related-functions"]], "The ADCAll Object": [[87, "the-adcall-object"]], "class DAC \u2013 digital to analog conversion": [[89, "class-dac-digital-to-analog-conversion"]], "class ExtInt \u2013 configure I/O pins to interrupt on external events": [[90, "class-extint-configure-i-o-pins-to-interrupt-on-external-events"]], "Class methods": [[90, "class-methods"], [94, "class-methods"]], "class Flash \u2013 access to built-in flash storage": [[91, "class-flash-access-to-built-in-flash-storage"]], "Hardware Note": [[91, "hardware-note"]], "class LED \u2013 LED object": [[93, "class-led-led-object"]], "class PinAF \u2013 Pin Alternate Functions": [[94, "class-pinaf-pin-alternate-functions"]], "class SPI \u2013 a controller-driven serial protocol": [[96, "class-spi-a-controller-driven-serial-protocol"]], "class Servo \u2013 3-wire hobby servo driver": [[97, "class-servo-3-wire-hobby-servo-driver"]], "class Timer \u2013 control internal timers": [[98, "class-timer-control-internal-timers"]], "class TimerChannel \u2014 setup a channel for a timer": [[98, "class-timerchannel-setup-a-channel-for-a-timer"]], "Flow Control": [[99, "flow-control"]], "CTS: target controls OpenMV Cam transmitter": [[99, "cts-target-controls-openmv-cam-transmitter"]], "RTS: OpenMV Cam controls target\u2019s transmitter": [[99, "rts-openmv-cam-controls-target-s-transmitter"]], "class USB_HID \u2013 USB Human Interface Device (HID)": [[100, "class-usb-hid-usb-human-interface-device-hid"]], "class USB_VCP \u2013 USB virtual comm port": [[101, "class-usb-vcp-usb-virtual-comm-port"]], "random \u2013 generate random numbers": [[102, "module-random"]], "Functions for integers": [[102, "functions-for-integers"]], "Functions for floats": [[102, "functions-for-floats"]], "Other Functions": [[102, "other-functions"]], "re \u2013 simple regular expressions": [[103, "module-re"]], "Regex objects": [[103, "regex-objects"]], "Match objects": [[103, "match-objects"]], "requests \u2014 Related functions of HTTP client": [[104, "module-requests"]], "Response class": [[104, "response-class"]], "select \u2013 wait for events on a set of streams": [[105, "module-select"]], "class Poll": [[105, "class-poll"]], "socket \u2013 socket module": [[106, "module-socket"]], "Socket address format(s)": [[106, "socket-address-format-s"]], "class socket": [[106, "class-socket"]], "ssl \u2013 SSL/TLS module": [[107, "module-ssl"]], "class SSLContext": [[107, "class-sslcontext"]], "stm \u2014 functionality specific to STM32 MCUs": [[108, "module-stm"]], "Peripheral register constants": [[108, "peripheral-register-constants"]], "Functions specific to STM32WBxx MCUs": [[108, "functions-specific-to-stm32wbxx-mcus"]], "Functions specific to STM32WLxx MCUs": [[108, "functions-specific-to-stm32wlxx-mcus"]], "struct \u2013 pack and unpack primitive data types": [[109, "module-struct"]], "sys \u2013 system specific functions": [[110, "module-sys"]], "time \u2013 time related functions": [[111, "module-time"]], "uctypes \u2013 access binary data in a structured way": [[112, "module-uctypes"]], "Defining structure layout": [[112, "defining-structure-layout"]], "Module contents": [[112, "module-contents"]], "Structure descriptors and instantiating structure objects": [[112, "structure-descriptors-and-instantiating-structure-objects"]], "Structure objects": [[112, "structure-objects"]], "Limitations": [[112, "limitations"]], "uping \u2014 Ping another computer": [[113, "module-uping"]], "vfs \u2013 virtual filesystem control": [[114, "module-vfs"]], "Block devices": [[114, "block-devices"], [147, "block-devices"]], "Simple and extended interface": [[114, "simple-and-extended-interface"]], "zlib \u2013 zlib compression & decompression": [[115, "module-zlib"]], "MicroPython license information": [[116, "micropython-license-information"]], "General information about the openmvcam": [[117, "general-information-about-the-openmvcam"]], "Contents": [[117, "contents"], [147, "contents"], [158, "contents"]], "Local filesystem and SD card": [[117, "local-filesystem-and-sd-card"]], "Boot modes": [[117, "boot-modes"]], "Flashing LED Errors": [[117, "flashing-led-errors"]], "Quick reference for the openmvcam": [[118, "quick-reference-for-the-openmvcam"]], "General OpenMV Cams Board Control": [[118, "general-openmv-cams-board-control"]], "Delay and timing": [[118, "delay-and-timing"], [118, "id1"]], "Virtual Timers": [[118, "virtual-timers"]], "Pins and GPIO": [[118, "pins-and-gpio"], [118, "id2"]], "UART (serial bus)": [[118, "uart-serial-bus"], [118, "id5"]], "PWM (pulse width modulation)": [[118, "pwm-pulse-width-modulation"], [118, "id3"]], "ADC (analog to digital conversion)": [[118, "adc-analog-to-digital-conversion"], [118, "id4"]], "Software SPI bus": [[118, "software-spi-bus"]], "Hardware SPI bus": [[118, "hardware-spi-bus"]], "Software I2C bus": [[118, "software-i2c-bus"]], "Hardware I2C bus": [[118, "hardware-i2c-bus"]], "Real time clock (RTC)": [[118, "real-time-clock-rtc"]], "OneWire driver": [[118, "onewire-driver"]], "DHT driver": [[118, "dht-driver"]], "STM32 Based OpenMV Cams General Board Control": [[118, "stm32-based-openmv-cams-general-board-control"]], "LEDs": [[118, "leds"]], "Servo control": [[118, "servo-control"]], "External interrupts": [[118, "external-interrupts"]], "Timers": [[118, "timers"]], "DAC (digital to analog conversion)": [[118, "dac-digital-to-analog-conversion"]], "SPI bus": [[118, "spi-bus"]], "I2C bus": [[118, "i2c-bus"]], "Analog IO": [[119, "analog-io"]], "GPIO Control": [[120, "gpio-control"]], "As an Input": [[120, "as-an-input"]], "As an Output": [[120, "as-an-output"]], "Hardware Setup": [[121, "hardware-setup"]], "USB Flash Drive Notes": [[121, "usb-flash-drive-notes"]], "OpenMV Cam Tutorial": [[122, "openmv-cam-tutorial"]], "I/O Tutorial": [[123, "i-o-tutorial"]], "The PYB Module": [[123, "the-pyb-module"]], "LED Control": [[124, "led-control"]], "More Information": [[125, "more-information"]], "OpenMV IDE Overview": [[126, "openmv-ide-overview"]], "File Menu and Examples": [[126, "file-menu-and-examples"]], "Text Editing": [[126, "text-editing"]], "Connecting to your OpenMV Cam": [[126, "connecting-to-your-openmv-cam"]], "Running scripts": [[126, "running-scripts"]], "Frame Buffer Viewer": [[126, "frame-buffer-viewer"]], "Histogram Display": [[126, "histogram-display"]], "Serial Terminal": [[126, "serial-terminal"]], "Status Bar": [[126, "status-bar"]], "Tools": [[126, "tools"]], "WiFi Debug": [[126, "wifi-debug"]], "Open Terminal": [[126, "open-terminal"]], "Machine Vision": [[126, "machine-vision"]], "Video Tools": [[126, "video-tools"]], "Options": [[126, "options"]], "Overview": [[127, "overview"], [152, "overview"], [152, "id1"], [152, "id3"]], "Releasing your OpenMV Cam Scripts for Production": [[128, "releasing-your-openmv-cam-scripts-for-production"]], "How to freeze your scripts": [[128, "how-to-freeze-your-scripts"]], "How to protect your code": [[128, "how-to-protect-your-code"]], "Script Structure": [[129, "script-structure"]], "Software Setup": [[130, "software-setup"]], "Windows": [[130, "windows"]], "Mac": [[130, "mac"]], "Linux-Desktop": [[130, "linux-desktop"]], "Linux-RaspberryPi": [[130, "linux-raspberrypi"]], "System Architecture": [[131, "system-architecture"]], "Memory Architecture": [[131, "memory-architecture"]], "UART Control": [[132, "uart-control"]], "Arithmetic instructions": [[133, "arithmetic-instructions"]], "Document conventions": [[133, "document-conventions"], [134, "document-conventions"], [136, "document-conventions"], [138, "document-conventions"], [139, "document-conventions"], [140, "document-conventions"], [141, "document-conventions"], [143, "document-conventions"], [144, "document-conventions"], [145, "document-conventions"]], "Addition": [[133, "addition"]], "Subtraction": [[133, "subtraction"]], "Negation": [[133, "negation"]], "Multiplication and division": [[133, "multiplication-and-division"]], "Comparison instructions": [[134, "comparison-instructions"], [134, "id1"]], "The Application Program Status Register (APSR)": [[134, "the-application-program-status-register-apsr"]], "APSR Bits": [[134, "apsr-bits"]], "Conditional execution": [[134, "conditional-execution"]], "Assembler directives": [[135, "assembler-directives"]], "Labels": [[135, "labels"]], "Defining inline data": [[135, "defining-inline-data"]], "Floating point instructions": [[136, "floating-point-instructions"]], "Arithmetic": [[136, "arithmetic"]], "Move between ARM core and FPU registers": [[136, "move-between-arm-core-and-fpu-registers"]], "Move between FPU register and memory": [[136, "move-between-fpu-register-and-memory"]], "Data comparison": [[136, "data-comparison"]], "Convert between integer and float": [[136, "convert-between-integer-and-float"]], "Hints and tips": [[137, "hints-and-tips"]], "Code branches and subroutines": [[137, "code-branches-and-subroutines"]], "Argument passing and return": [[137, "argument-passing-and-return"]], "Multiple arguments": [[137, "multiple-arguments"]], "Non-integer data types": [[137, "non-integer-data-types"]], "Named constants": [[137, "named-constants"]], "Assembler code as class methods": [[137, "assembler-code-as-class-methods"]], "Use of unsupported instructions": [[137, "use-of-unsupported-instructions"]], "Overcoming MicroPython\u2019s integer restriction": [[137, "overcoming-micropython-s-integer-restriction"]], "Inline assembler for Thumb2 architectures": [[138, "inline-assembler-for-thumb2-architectures"]], "Instruction categories": [[138, "instruction-categories"]], "Usage examples": [[138, "usage-examples"]], "References": [[138, "references"]], "Branch instructions": [[139, "branch-instructions"]], "Branch to label": [[139, "branch-to-label"]], "Long branches": [[139, "long-branches"]], "Subroutines (functions)": [[139, "subroutines-functions"]], "Load register from memory": [[140, "load-register-from-memory"]], "Register Load": [[140, "register-load"]], "Logical & bitwise instructions": [[141, "logical-bitwise-instructions"]], "Logical instructions": [[141, "logical-instructions"]], "Shift and rotation instructions": [[141, "shift-and-rotation-instructions"]], "Special instructions": [[141, "special-instructions"]], "Miscellaneous instructions": [[142, "miscellaneous-instructions"]], "Register move instructions": [[143, "register-move-instructions"]], "Register moves": [[143, "register-moves"]], "Stack push and pop": [[144, "stack-push-and-pop"]], "Stack operations": [[144, "stack-operations"]], "Store register to memory": [[145, "store-register-to-memory"]], "Register Store": [[145, "register-store"]], "MicroPython on microcontrollers": [[146, "micropython-on-microcontrollers"]], "Flash memory": [[146, "flash-memory"]], "RAM": [[146, "ram"]], "Compilation phase": [[146, "compilation-phase"]], "Execution phase": [[146, "execution-phase"]], "The heap": [[146, "the-heap"]], "Fragmentation": [[146, "fragmentation"]], "Reporting": [[146, "reporting"]], "Control of garbage collection": [[146, "control-of-garbage-collection"]], "String operations": [[146, "string-operations"]], "Postscript": [[146, "postscript"]], "Footnote: gc.collect() return value": [[146, "footnote-gc-collect-return-value"]], "Working with filesystems": [[147, "working-with-filesystems"]], "VFS": [[147, "vfs"]], "Built-in block devices": [[147, "built-in-block-devices"]], "STM32 / Pyboard / OpenMV Cam": [[147, "stm32-pyboard-openmv-cam"]], "ESP8266": [[147, "esp8266"]], "ESP32": [[147, "esp32"]], "Custom block devices": [[147, "custom-block-devices"]], "Filesystems": [[147, "filesystems"]], "FAT": [[147, "fat"]], "Littlefs": [[147, "littlefs"]], "Hybrid (STM32)": [[147, "hybrid-stm32"]], "Hybrid (ESP32)": [[147, "hybrid-esp32"]], "Glossary": [[148, "glossary"]], "MicroPython language and implementation": [[149, "micropython-language-and-implementation"]], "Writing interrupt handlers": [[150, "writing-interrupt-handlers"]], "Tips and recommended practices": [[150, "tips-and-recommended-practices"]], "MicroPython issues": [[150, "micropython-issues"]], "The emergency exception buffer": [[150, "the-emergency-exception-buffer"]], "Simplicity": [[150, "simplicity"]], "Communication between an ISR and the main program": [[150, "communication-between-an-isr-and-the-main-program"]], "The use of object methods as callbacks": [[150, "the-use-of-object-methods-as-callbacks"]], "Creation of Python objects": [[150, "creation-of-python-objects"]], "Use of Python objects": [[150, "use-of-python-objects"]], "Overcoming the float limitation": [[150, "overcoming-the-float-limitation"]], "Using micropython.schedule": [[150, "using-micropython-schedule"]], "Interfacing to asyncio": [[150, "interfacing-to-asyncio"]], "General issues": [[150, "general-issues"]], "Interrupt handler design": [[150, "interrupt-handler-design"]], "Reentrancy": [[150, "reentrancy"]], "Critical sections": [[150, "critical-sections"]], "Interrupts and the REPL": [[150, "interrupts-and-the-repl"]], "MicroPython manifest files": [[151, "micropython-manifest-files"]], "Summary": [[151, "summary"]], "Writing manifest files": [[151, "writing-manifest-files"]], "Building with a custom manifest": [[151, "building-with-a-custom-manifest"]], "Adding a manifest to a board definition": [[151, "adding-a-manifest-to-a-board-definition"]], "High-level functions": [[151, "high-level-functions"]], "Low-level functions": [[151, "low-level-functions"]], "MicroPython 2.0 Migration Guide": [[152, "micropython-2-0-migration-guide"]], "Hardware and peripherals": [[152, "hardware-and-peripherals"]], "Changes": [[152, "changes"], [152, "id2"], [152, "id4"]], "OS & filesystem": [[152, "os-filesystem"]], "CPython compatibility": [[152, "cpython-compatibility"]], "MicroPython remote control: mpremote": [[153, "micropython-remote-control-mpremote"]], "Commands": [[153, "commands"]], "Auto connection and soft-reset": [[153, "auto-connection-and-soft-reset"]], "Shortcuts": [[153, "shortcuts"]], "MicroPython .mpy files": [[154, "micropython-mpy-files"]], "Versioning and compatibility of .mpy files": [[154, "versioning-and-compatibility-of-mpy-files"]], "Binary encoding of .mpy files": [[154, "binary-encoding-of-mpy-files"]], "The header": [[154, "the-header"]], "The global qstr and constant tables": [[154, "the-global-qstr-and-constant-tables"]], "Raw code elements": [[154, "raw-code-elements"]], "Package management": [[155, "package-management"]], "Installing packages with mip": [[155, "installing-packages-with-mip"]], "Using mip on the Unix port": [[155, "using-mip-on-the-unix-port"]], "Installing packages with mpremote": [[155, "installing-packages-with-mpremote"]], "Installing packages manually": [[155, "installing-packages-manually"]], "Writing & publishing packages": [[155, "writing-publishing-packages"]], "Freezing packages": [[155, "freezing-packages"]], "The pyboard.py tool": [[156, "the-pyboard-py-tool"]], "Running a command on the device": [[156, "running-a-command-on-the-device"]], "Running a script on the device": [[156, "running-a-script-on-the-device"]], "Using the pyboard library": [[156, "using-the-pyboard-library"]], "The MicroPython Interactive Interpreter Mode (aka REPL)": [[157, "the-micropython-interactive-interpreter-mode-aka-repl"]], "Auto-indent": [[157, "auto-indent"]], "Auto-completion": [[157, "auto-completion"]], "Interrupting a running program": [[157, "interrupting-a-running-program"]], "Paste mode": [[157, "paste-mode"]], "Soft reset": [[157, "soft-reset"]], "The special variable _ (underscore)": [[157, "the-special-variable-underscore"]], "Raw mode and raw-paste mode": [[157, "raw-mode-and-raw-paste-mode"]], "Maximising MicroPython speed": [[158, "maximising-micropython-speed"]], "Designing for speed": [[158, "designing-for-speed"]], "Algorithms": [[158, "algorithms"]], "RAM allocation": [[158, "ram-allocation"]], "Buffers": [[158, "buffers"]], "Floating point": [[158, "floating-point"]], "Arrays": [[158, "arrays"]], "Identifying the slowest section of code": [[158, "identifying-the-slowest-section-of-code"]], "MicroPython code improvements": [[158, "micropython-code-improvements"]], "The const() declaration": [[158, "the-const-declaration"]], "Caching object references": [[158, "caching-object-references"]], "Controlling garbage collection": [[158, "controlling-garbage-collection"]], "The Native code emitter": [[158, "the-native-code-emitter"]], "The Viper code emitter": [[158, "the-viper-code-emitter"]], "Accessing hardware directly": [[158, "accessing-hardware-directly"]]}, "indexentries": {"pep 526": [[0, "index-1"]], "pep 618": [[0, "index-0"]], "python enhancement proposals": [[0, "index-0"], [0, "index-1"]], "_thread": [[12, "module-_thread"]], "module": [[12, "module-_thread"], [13, "module-array"], [14, "module-asyncio"], [15, "module-binascii"], [16, "module-bluetooth"], [18, "module-cmath"], [19, "module-collections"], [20, "module-cryptolib"], [21, "module-deflate"], [22, "module-errno"], [23, "module-gc"], [24, "module-gzip"], [25, "module-hashlib"], [26, "module-heapq"], [27, "module-bno055"], [27, "module-modbus"], [27, "module-mqtt"], [27, "module-pid"], [27, "module-ssd1306"], [27, "module-tb6612"], [27, "module-ulab"], [27, "module-vl53l1x"], [28, "module-io"], [29, "module-json"], [30, "module-machine"], [45, "module-math"], [46, "module-micropython"], [47, "module-mutex"], [48, "module-network"], [53, "module-audio"], [54, "module-buzzer"], [55, "module-cpufreq"], [56, "module-display"], [64, "module-fir"], [65, "module-ft5x06"], [66, "module-gif"], [67, "module-gt911"], [68, "module-image"], [69, "module-imu"], [70, "module-mjpeg"], [71, "module-ml"], [72, "module-ml.apps"], [73, "module-ml.postprocessing"], [74, "module-ml.preprocessing"], [75, "module-ml.utils"], [76, "module-omv"], [77, "module-rpc"], [78, "module-rtsp"], [79, "module-sensor"], [80, "module-TFP410"], [81, "module-tof"], [82, "module-tv"], [83, "module-openamp"], [84, "module-os"], [85, "module-platform"], [86, "module-pyb"], [102, "module-random"], [103, "module-re"], [104, "module-requests"], [105, "module-select"], [106, "module-socket"], [107, "module-ssl"], [108, "module-stm"], [109, "module-struct"], [110, "module-sys"], [111, "module-time"], [112, "module-uctypes"], [113, "module-uping"], [114, "module-vfs"], [115, "module-zlib"]], "__add__() (array.array method)": [[13, "array.array.__add__"]], "__getitem__() (array.array method)": [[13, "array.array.__getitem__"]], "__iadd__() (array.array method)": [[13, "array.array.__iadd__"]], "__len__() (array.array method)": [[13, "array.array.__len__"]], "__repr__() (array.array method)": [[13, "array.array.__repr__"]], "__setitem__() (array.array method)": [[13, "array.array.__setitem__"]], "append() (array.array method)": [[13, "array.array.append"]], "array": [[13, "module-array"]], "array (class in array)": [[13, "array.array"]], "extend() (array.array method)": [[13, "array.array.extend"]], "event (class in asyncio)": [[14, "asyncio.Event"]], "lock (class in asyncio)": [[14, "asyncio.Lock"]], "loop (class in asyncio)": [[14, "asyncio.Loop"]], "server (class in asyncio)": [[14, "asyncio.Server"]], "stream (class in asyncio)": [[14, "asyncio.Stream"]], "task (class in asyncio)": [[14, "asyncio.Task"]], "threadsafeflag (class in asyncio)": [[14, "asyncio.ThreadSafeFlag"]], "acquire() (asyncio.lock method)": [[14, "asyncio.Lock.acquire"]], "asyncio": [[14, "module-asyncio"]], "call_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.call_exception_handler"]], "cancel() (asyncio.task method)": [[14, "asyncio.Task.cancel"]], "clear() (asyncio.event method)": [[14, "asyncio.Event.clear"]], "clear() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.clear"]], "close() (asyncio.loop method)": [[14, "asyncio.Loop.close"]], "close() (asyncio.server method)": [[14, "asyncio.Server.close"]], "close() (asyncio.stream method)": [[14, "asyncio.Stream.close"]], "create_task() (asyncio.loop method)": [[14, "asyncio.Loop.create_task"]], "create_task() (in module asyncio)": [[14, "asyncio.create_task"]], "current_task() (in module asyncio)": [[14, "asyncio.current_task"]], "default_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.default_exception_handler"]], "drain() (asyncio.stream method)": [[14, "asyncio.Stream.drain"]], "gather() (in module asyncio)": [[14, "asyncio.gather"]], "get_event_loop() (in module asyncio)": [[14, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.get_exception_handler"]], "get_extra_info() (asyncio.stream method)": [[14, "asyncio.Stream.get_extra_info"]], "is_set() (asyncio.event method)": [[14, "asyncio.Event.is_set"]], "locked() (asyncio.lock method)": [[14, "asyncio.Lock.locked"]], "new_event_loop() (in module asyncio)": [[14, "asyncio.new_event_loop"]], "open_connection() (in module asyncio)": [[14, "asyncio.open_connection"]], "read() (asyncio.stream method)": [[14, "asyncio.Stream.read"]], "readexactly() (asyncio.stream method)": [[14, "asyncio.Stream.readexactly"]], "readinto() (asyncio.stream method)": [[14, "asyncio.Stream.readinto"]], "readline() (asyncio.stream method)": [[14, "asyncio.Stream.readline"]], "release() (asyncio.lock method)": [[14, "asyncio.Lock.release"]], "run() (in module asyncio)": [[14, "asyncio.run"]], "run_forever() (asyncio.loop method)": [[14, "asyncio.Loop.run_forever"]], "run_until_complete() (asyncio.loop method)": [[14, "asyncio.Loop.run_until_complete"]], "set() (asyncio.event method)": [[14, "asyncio.Event.set"]], "set() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.set"]], "set_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.set_exception_handler"]], "sleep() (in module asyncio)": [[14, "asyncio.sleep"]], "sleep_ms() (in module asyncio)": [[14, "asyncio.sleep_ms"]], "start_server() (in module asyncio)": [[14, "asyncio.start_server"]], "stop() (asyncio.loop method)": [[14, "asyncio.Loop.stop"]], "wait() (asyncio.event method)": [[14, "asyncio.Event.wait"]], "wait() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.wait"]], "wait_closed() (asyncio.server method)": [[14, "asyncio.Server.wait_closed"]], "wait_closed() (asyncio.stream method)": [[14, "asyncio.Stream.wait_closed"]], "wait_for() (in module asyncio)": [[14, "asyncio.wait_for"]], "wait_for_ms() (in module asyncio)": [[14, "asyncio.wait_for_ms"]], "write() (asyncio.stream method)": [[14, "asyncio.Stream.write"]], "a2b_base64() (in module binascii)": [[15, "binascii.a2b_base64"]], "b2a_base64() (in module binascii)": [[15, "binascii.b2a_base64"]], "binascii": [[15, "module-binascii"]], "hexlify() (in module binascii)": [[15, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[15, "binascii.unhexlify"]], "ble (class in bluetooth)": [[16, "bluetooth.BLE"]], "uuid (class in bluetooth)": [[16, "bluetooth.UUID"]], "active() (bluetooth.ble method)": [[16, "bluetooth.BLE.active"]], "bluetooth": [[16, "module-bluetooth"]], "config() (bluetooth.ble method)": [[16, "bluetooth.BLE.config"]], "gap_advertise() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_advertise"]], "gap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_connect"]], "gap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_disconnect"]], "gap_pair() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_pair"]], "gap_passkey() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_passkey"]], "gap_scan() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_scan"]], "gattc_discover_characteristics() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_characteristics"]], "gattc_discover_descriptors() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_descriptors"]], "gattc_discover_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_services"]], "gattc_exchange_mtu() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_exchange_mtu"]], "gattc_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_read"]], "gattc_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_write"]], "gatts_indicate() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_indicate"]], "gatts_notify() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_notify"]], "gatts_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_read"]], "gatts_register_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_register_services"]], "gatts_set_buffer() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_set_buffer"]], "gatts_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_write"]], "irq() (bluetooth.ble method)": [[16, "bluetooth.BLE.irq"]], "l2cap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_connect"]], "l2cap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_disconnect"]], "l2cap_listen() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_listen"]], "l2cap_recvinto() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_recvinto"]], "l2cap_send() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_send"]], "assertionerror": [[17, "AssertionError"]], "attributeerror": [[17, "AttributeError"]], "exception": [[17, "Exception"]], "importerror": [[17, "ImportError"]], "indexerror": [[17, "IndexError"]], "keyerror": [[17, "KeyError"]], "keyboardinterrupt": [[17, "KeyboardInterrupt"]], "memoryerror": [[17, "MemoryError"]], "nameerror": [[17, "NameError"]], "notimplementederror": [[17, "NotImplementedError"]], "oserror": [[17, "OSError"]], "runtimeerror": [[17, "RuntimeError"]], "stopiteration": [[17, "StopIteration"]], "syntaxerror": [[17, "SyntaxError"]], "systemexit": [[17, "SystemExit"]], "typeerror": [[17, "TypeError"]], "valueerror": [[17, "ValueError"]], "zerodivisionerror": [[17, "ZeroDivisionError"]], "abs()": [[17, "abs"]], "all()": [[17, "all"]], "any()": [[17, "any"]], "bin()": [[17, "bin"]], "bool (built-in class)": [[17, "bool"]], "built-in function": [[17, "abs"], [17, "all"], [17, "any"], [17, "bin"], [17, "callable"], [17, "chr"], [17, "classmethod"], [17, "compile"], [17, "delattr"], [17, "dir"], [17, "divmod"], [17, "enumerate"], [17, "eval"], [17, "exec"], [17, "filter"], [17, "getattr"], [17, "globals"], [17, "hasattr"], [17, "hash"], [17, "hex"], [17, "id"], [17, "input"], [17, "isinstance"], [17, "issubclass"], [17, "iter"], [17, "len"], [17, "locals"], [17, "map"], [17, "max"], [17, "min"], [17, "next"], [17, "oct"], [17, "open"], [17, "ord"], [17, "pow"], [17, "print"], [17, "property"], [17, "range"], [17, "repr"], [17, "reversed"], [17, "round"], [17, "setattr"], [17, "sorted"], [17, "staticmethod"], [17, "sum"], [17, "super"], [17, "type"], [17, "zip"], [151, "add_library"], [151, "freeze"], [151, "freeze_as_mpy"], [151, "freeze_as_str"], [151, "freeze_mpy"], [151, "include"], [151, "metadata"], [151, "module"], [151, "package"], [151, "require"]], "bytearray (built-in class)": [[17, "bytearray"]], "bytes (built-in class)": [[17, "bytes"]], "callable()": [[17, "callable"]], "chr()": [[17, "chr"]], "classmethod()": [[17, "classmethod"]], "compile()": [[17, "compile"]], "complex (built-in class)": [[17, "complex"]], "delattr()": [[17, "delattr"]], "dict (built-in class)": [[17, "dict"]], "dir()": [[17, "dir"]], "divmod()": [[17, "divmod"]], "enumerate()": [[17, "enumerate"]], "eval()": [[17, "eval"]], "exec()": [[17, "exec"]], "filter()": [[17, "filter"]], "float (built-in class)": [[17, "float"]], "from_bytes() (int class method)": [[17, "int.from_bytes"]], "frozenset (built-in class)": [[17, "frozenset"]], "getattr()": [[17, "getattr"]], "globals()": [[17, "globals"]], "hasattr()": [[17, "hasattr"]], "hash()": [[17, "hash"]], "hex()": [[17, "hex"]], "id()": [[17, "id"]], "input()": [[17, "input"]], "int (built-in class)": [[17, "int"]], "isinstance()": [[17, "isinstance"]], "issubclass()": [[17, "issubclass"]], "iter()": [[17, "iter"]], "len()": [[17, "len"]], "list (built-in class)": [[17, "list"]], "locals()": [[17, "locals"]], "map()": [[17, "map"]], "max()": [[17, "max"]], "memoryview (built-in class)": [[17, "memoryview"]], "min()": [[17, "min"]], "next()": [[17, "next"]], "object (built-in class)": [[17, "object"]], "oct()": [[17, "oct"]], "open()": [[17, "open"]], "ord()": [[17, "ord"]], "pow()": [[17, "pow"]], "print()": [[17, "print"]], "property()": [[17, "property"]], "range()": [[17, "range"]], "repr()": [[17, "repr"]], "reversed()": [[17, "reversed"]], "round()": [[17, "round"]], "set (built-in class)": [[17, "set"]], "setattr()": [[17, "setattr"]], "slice (built-in class)": [[17, "slice"]], "sorted()": [[17, "sorted"]], "staticmethod()": [[17, "staticmethod"]], "str (built-in class)": [[17, "str"]], "sum()": [[17, "sum"]], "super()": [[17, "super"]], "to_bytes() (int method)": [[17, "int.to_bytes"]], "tuple (built-in class)": [[17, "tuple"]], "type()": [[17, "type"]], "zip()": [[17, "zip"]], "cmath": [[18, "module-cmath"]], "cos() (in module cmath)": [[18, "cmath.cos"]], "e (in module cmath)": [[18, "cmath.e"]], "exp() (in module cmath)": [[18, "cmath.exp"]], "log() (in module cmath)": [[18, "cmath.log"]], "log10() (in module cmath)": [[18, "cmath.log10"]], "phase() (in module cmath)": [[18, "cmath.phase"]], "pi (in module cmath)": [[18, "cmath.pi"]], "polar() (in module cmath)": [[18, "cmath.polar"]], "rect() (in module cmath)": [[18, "cmath.rect"]], "sin() (in module cmath)": [[18, "cmath.sin"]], "sqrt() (in module cmath)": [[18, "cmath.sqrt"]], "ordereddict (class in collections)": [[19, "collections.OrderedDict"]], "append() (collections.deque method)": [[19, "collections.deque.append"]], "appendleft() (collections.deque method)": [[19, "collections.deque.appendleft"]], "collections": [[19, "module-collections"]], "deque (class in collections)": [[19, "collections.deque"]], "extend() (collections.deque method)": [[19, "collections.deque.extend"]], "namedtuple() (in module collections)": [[19, "collections.namedtuple"]], "pop() (collections.deque method)": [[19, "collections.deque.pop"]], "popleft() (collections.deque method)": [[19, "collections.deque.popleft"]], "__init__() (cryptolib.aes class method)": [[20, "cryptolib.aes.__init__"]], "aes (class in cryptolib)": [[20, "cryptolib.aes"]], "cryptolib": [[20, "module-cryptolib"]], "decrypt() (cryptolib.aes method)": [[20, "cryptolib.aes.decrypt"]], "encrypt() (cryptolib.aes method)": [[20, "cryptolib.aes.encrypt"]], "deflateio (class in deflate)": [[21, "deflate.DeflateIO"]], "deflate": [[21, "module-deflate"]], "deflate.auto (in module deflate)": [[21, "deflate.deflate.AUTO"]], "deflate.gzip (in module deflate)": [[21, "deflate.deflate.GZIP"]], "deflate.raw (in module deflate)": [[21, "deflate.deflate.RAW"]], "deflate.zlib (in module deflate)": [[21, "deflate.deflate.ZLIB"]], "errno": [[22, "module-errno"]], "errorcode (in module errno)": [[22, "errno.errorcode"]], "collect() (in module gc)": [[23, "gc.collect"]], "disable() (in module gc)": [[23, "gc.disable"]], "enable() (in module gc)": [[23, "gc.enable"]], "gc": [[23, "module-gc"]], "mem_alloc() (in module gc)": [[23, "gc.mem_alloc"]], "mem_free() (in module gc)": [[23, "gc.mem_free"]], "threshold() (in module gc)": [[23, "gc.threshold"]], "gzipfile (class in gzip)": [[24, "gzip.GzipFile"]], "compress() (in module gzip)": [[24, "gzip.compress"]], "decompress() (in module gzip)": [[24, "gzip.decompress"]], "gzip": [[24, "module-gzip"]], "open() (in module gzip)": [[24, "gzip.open"]], "digest() (hashlib.hash method)": [[25, "hashlib.hash.digest"]], "hashlib": [[25, "module-hashlib"]], "hashlib.md5 (class in hashlib)": [[25, "hashlib.hashlib.md5"]], "hashlib.sha1 (class in hashlib)": [[25, "hashlib.hashlib.sha1"]], "hashlib.sha256 (class in hashlib)": [[25, "hashlib.hashlib.sha256"]], "hexdigest() (hashlib.hash method)": [[25, "hashlib.hash.hexdigest"]], "update() (hashlib.hash method)": [[25, "hashlib.hash.update"]], "heapify() (in module heapq)": [[26, "heapq.heapify"]], "heappop() (in module heapq)": [[26, "heapq.heappop"]], "heappush() (in module heapq)": [[26, "heapq.heappush"]], "heapq": [[26, "module-heapq"]], "bno055": [[27, "module-bno055"]], "modbus": [[27, "module-modbus"]], "mqtt": [[27, "module-mqtt"]], "pid": [[27, "module-pid"]], "ssd1306": [[27, "module-ssd1306"]], "tb6612": [[27, "module-tb6612"]], "ulab": [[27, "module-ulab"]], "vl53l1x": [[27, "module-vl53l1x"]], "bytesio (class in io)": [[28, "io.BytesIO"]], "stringio (class in io)": [[28, "io.StringIO"]], "getvalue() (io.bytesio method)": [[28, "io.BytesIO.getvalue"]], "io": [[28, "module-io"]], "open() (in module io)": [[28, "io.open"]], "dump() (in module json)": [[29, "json.dump"]], "dumps() (in module json)": [[29, "json.dumps"]], "json": [[29, "module-json"]], "load() (in module json)": [[29, "json.load"]], "loads() (in module json)": [[29, "json.loads"]], "bitstream() (in module machine)": [[30, "machine.bitstream"]], "bootloader() (in module machine)": [[30, "machine.bootloader"]], "deepsleep() (in module machine)": [[30, "machine.deepsleep"]], "disable_irq() (in module machine)": [[30, "machine.disable_irq"]], "enable_irq() (in module machine)": [[30, "machine.enable_irq"]], "freq() (in module machine)": [[30, "machine.freq"]], "idle() (in module machine)": [[30, "machine.idle"]], "lightsleep() (in module machine)": [[30, "machine.lightsleep"]], "machine": [[30, "module-machine"]], "machine.deepsleep (in module machine)": [[30, "machine.machine.DEEPSLEEP"]], "machine.deepsleep_reset (in module machine)": [[30, "machine.machine.DEEPSLEEP_RESET"]], "machine.hard_reset (in module machine)": [[30, "machine.machine.HARD_RESET"]], "machine.idle (in module machine)": [[30, "machine.machine.IDLE"]], "machine.pin_wake (in module machine)": [[30, "machine.machine.PIN_WAKE"]], "machine.pwron_reset (in module machine)": [[30, "machine.machine.PWRON_RESET"]], "machine.rtc_wake (in module machine)": [[30, "machine.machine.RTC_WAKE"]], "machine.sleep (in module machine)": [[30, "machine.machine.SLEEP"]], "machine.soft_reset (in module machine)": [[30, "machine.machine.SOFT_RESET"]], "machine.wdt_reset (in module machine)": [[30, "machine.machine.WDT_RESET"]], "machine.wlan_wake (in module machine)": [[30, "machine.machine.WLAN_WAKE"]], "mem16 (in module machine)": [[30, "machine.mem16"]], "mem32 (in module machine)": [[30, "machine.mem32"]], "mem8 (in module machine)": [[30, "machine.mem8"]], "reset() (in module machine)": [[30, "machine.reset"]], "reset_cause() (in module machine)": [[30, "machine.reset_cause"]], "sleep() (in module machine)": [[30, "machine.sleep"]], "soft_reset() (in module machine)": [[30, "machine.soft_reset"]], "time_pulse_us() (in module machine)": [[30, "machine.time_pulse_us"]], "unique_id() (in module machine)": [[30, "machine.unique_id"]], "adc (class in machine)": [[31, "machine.ADC"]], "block() (machine.adc method)": [[31, "machine.ADC.block"]], "init() (machine.adc method)": [[31, "machine.ADC.init"]], "read_u16() (machine.adc method)": [[31, "machine.ADC.read_u16"]], "read_uv() (machine.adc method)": [[31, "machine.ADC.read_uv"]], "adcblock (class in machine)": [[32, "machine.ADCBlock"]], "connect() (machine.adcblock method)": [[32, "machine.ADCBlock.connect"]], "init() (machine.adcblock method)": [[32, "machine.ADCBlock.init"]], "can (class in machine)": [[33, "machine.CAN"]], "can.bus_off (in module machine)": [[33, "machine.CAN.BUS_OFF"]], "can.dual (in module machine)": [[33, "machine.CAN.DUAL"]], "can.error_active (in module machine)": [[33, "machine.CAN.ERROR_ACTIVE"]], "can.error_passive (in module machine)": [[33, "machine.CAN.ERROR_PASSIVE"]], "can.error_warning (in module machine)": [[33, "machine.CAN.ERROR_WARNING"]], "can.list32 (in module machine)": [[33, "machine.CAN.LIST32"]], "can.loopback (in module machine)": [[33, "machine.CAN.LOOPBACK"]], "can.normal (in module machine)": [[33, "machine.CAN.NORMAL"]], "can.silent (in module machine)": [[33, "machine.CAN.SILENT"]], "can.silent_loopback (in module machine)": [[33, "machine.CAN.SILENT_LOOPBACK"]], "can.stopped (in module machine)": [[33, "machine.CAN.STOPPED"]], "any() (machine.can method)": [[33, "machine.CAN.any"]], "clearfilter() (machine.can method)": [[33, "machine.CAN.clearfilter"]], "deinit() (machine.can method)": [[33, "machine.CAN.deinit"]], "info() (machine.can method)": [[33, "machine.CAN.info"]], "init() (machine.can method)": [[33, "machine.CAN.init"]], "recv() (machine.can method)": [[33, "machine.CAN.recv"]], "restart() (machine.can method)": [[33, "machine.CAN.restart"]], "rxcallback() (machine.can method)": [[33, "machine.CAN.rxcallback"]], "send() (machine.can method)": [[33, "machine.CAN.send"]], "setfilter() (machine.can method)": [[33, "machine.CAN.setfilter"]], "state() (machine.can method)": [[33, "machine.CAN.state"]], "i2c (class in machine)": [[34, "machine.I2C"]], "softi2c (class in machine)": [[34, "machine.SoftI2C"]], "init() (machine.i2c method)": [[34, "machine.I2C.init"]], "readfrom() (machine.i2c method)": [[34, "machine.I2C.readfrom"]], "readfrom_into() (machine.i2c method)": [[34, "machine.I2C.readfrom_into"]], "readfrom_mem() (machine.i2c method)": [[34, "machine.I2C.readfrom_mem"]], "readfrom_mem_into() (machine.i2c method)": [[34, "machine.I2C.readfrom_mem_into"]], "readinto() (machine.i2c method)": [[34, "machine.I2C.readinto"]], "scan() (machine.i2c method)": [[34, "machine.I2C.scan"]], "start() (machine.i2c method)": [[34, "machine.I2C.start"]], "stop() (machine.i2c method)": [[34, "machine.I2C.stop"]], "write() (machine.i2c method)": [[34, "machine.I2C.write"]], "writeto() (machine.i2c method)": [[34, "machine.I2C.writeto"]], "writeto_mem() (machine.i2c method)": [[34, "machine.I2C.writeto_mem"]], "writevto() (machine.i2c method)": [[34, "machine.I2C.writevto"]], "i2s (class in machine)": [[35, "machine.I2S"]], "i2s.mono (in module machine)": [[35, "machine.I2S.MONO"]], "i2s.rx (in module machine)": [[35, "machine.I2S.RX"]], "i2s.stereo (in module machine)": [[35, "machine.I2S.STEREO"]], "i2s.tx (in module machine)": [[35, "machine.I2S.TX"]], "deinit() (machine.i2s method)": [[35, "machine.I2S.deinit"]], "init() (machine.i2s method)": [[35, "machine.I2S.init"]], "irq() (machine.i2s method)": [[35, "machine.I2S.irq"]], "readinto() (machine.i2s method)": [[35, "machine.I2S.readinto"]], "shift() (machine.i2s static method)": [[35, "machine.I2S.shift"]], "write() (machine.i2s method)": [[35, "machine.I2S.write"]], "led (class in machine)": [[36, "machine.LED"]], "boardname() (machine.led method)": [[36, "machine.LED.boardname"]], "on() (machine.led method)": [[36, "machine.LED.on"]], "toggle() (machine.led method)": [[36, "machine.LED.toggle"]], "value() (machine.led method)": [[36, "machine.LED.value"]], "pwm (class in machine)": [[37, "machine.PWM"]], "deinit() (machine.pwm method)": [[37, "machine.PWM.deinit"]], "duty_ns() (machine.pwm method)": [[37, "machine.PWM.duty_ns"]], "duty_u16() (machine.pwm method)": [[37, "machine.PWM.duty_u16"]], "freq() (machine.pwm method)": [[37, "machine.PWM.freq"]], "init() (machine.pwm method)": [[37, "machine.PWM.init"]], "pin (class in machine)": [[38, "machine.Pin"]], "pin.alt (in module machine)": [[38, "machine.Pin.ALT"]], "pin.alt_open_drain (in module machine)": [[38, "machine.Pin.ALT_OPEN_DRAIN"]], "pin.analog (in module machine)": [[38, "machine.Pin.ANALOG"]], "pin.drive_0 (in module machine)": [[38, "machine.Pin.DRIVE_0"]], "pin.drive_1 (in module machine)": [[38, "machine.Pin.DRIVE_1"]], "pin.drive_2 (in module machine)": [[38, "machine.Pin.DRIVE_2"]], "pin.in (in module machine)": [[38, "machine.Pin.IN"]], "pin.irq_falling (in module machine)": [[38, "machine.Pin.IRQ_FALLING"]], "pin.irq_high_level (in module machine)": [[38, "machine.Pin.IRQ_HIGH_LEVEL"]], "pin.irq_low_level (in module machine)": [[38, "machine.Pin.IRQ_LOW_LEVEL"]], "pin.irq_rising (in module machine)": [[38, "machine.Pin.IRQ_RISING"]], "pin.open_drain (in module machine)": [[38, "machine.Pin.OPEN_DRAIN"]], "pin.out (in module machine)": [[38, "machine.Pin.OUT"]], "pin.pull_down (in module machine)": [[38, "machine.Pin.PULL_DOWN"]], "pin.pull_hold (in module machine)": [[38, "machine.Pin.PULL_HOLD"]], "pin.pull_up (in module machine)": [[38, "machine.Pin.PULL_UP"]], "__call__() (machine.pin method)": [[38, "machine.Pin.__call__"]], "drive() (machine.pin method)": [[38, "machine.Pin.drive"]], "high() (machine.pin method)": [[38, "machine.Pin.high"]], "init() (machine.pin method)": [[38, "machine.Pin.init"]], "irq() (machine.pin method)": [[38, "machine.Pin.irq"]], "low() (machine.pin method)": [[38, "machine.Pin.low"]], "mode() (machine.pin method)": [[38, "machine.Pin.mode"]], "off() (machine.pin method)": [[38, "machine.Pin.off"]], "on() (machine.pin method)": [[38, "machine.Pin.on"]], "pull() (machine.pin method)": [[38, "machine.Pin.pull"]], "toggle() (machine.pin method)": [[38, "machine.Pin.toggle"]], "value() (machine.pin method)": [[38, "machine.Pin.value"]], "rtc (class in machine)": [[39, "machine.RTC"]], "rtc.alarm0 (in module machine)": [[39, "machine.RTC.ALARM0"]], "alarm() (machine.rtc method)": [[39, "machine.RTC.alarm"]], "alarm_left() (machine.rtc method)": [[39, "machine.RTC.alarm_left"]], "cancel() (machine.rtc method)": [[39, "machine.RTC.cancel"]], "datetime() (machine.rtc method)": [[39, "machine.RTC.datetime"]], "deinit() (machine.rtc method)": [[39, "machine.RTC.deinit"]], "init() (machine.rtc method)": [[39, "machine.RTC.init"]], "irq() (machine.rtc method)": [[39, "machine.RTC.irq"]], "memory() (machine.rtc method)": [[39, "machine.RTC.memory"]], "now() (machine.rtc method)": [[39, "machine.RTC.now"]], "spi (class in machine)": [[40, "machine.SPI"]], "spi.controller (in module machine)": [[40, "machine.SPI.CONTROLLER"]], "spi.lsb (in module machine)": [[40, "machine.SPI.LSB"]], "spi.msb (in module machine)": [[40, "machine.SPI.MSB"]], "softspi (class in machine)": [[40, "machine.SoftSPI"]], "softspi.lsb (in module machine)": [[40, "machine.SoftSPI.LSB"]], "softspi.msb (in module machine)": [[40, "machine.SoftSPI.MSB"]], "deinit() (machine.spi method)": [[40, "machine.SPI.deinit"]], "init() (machine.spi method)": [[40, "machine.SPI.init"]], "read() (machine.spi method)": [[40, "machine.SPI.read"]], "readinto() (machine.spi method)": [[40, "machine.SPI.readinto"]], "write() (machine.spi method)": [[40, "machine.SPI.write"]], "write_readinto() (machine.spi method)": [[40, "machine.SPI.write_readinto"]], "signal (class in machine)": [[41, "machine.Signal"]], "off() (machine.signal method)": [[41, "machine.Signal.off"]], "on() (machine.signal method)": [[41, "machine.Signal.on"]], "value() (machine.signal method)": [[41, "machine.Signal.value"]], "timer (class in machine)": [[42, "machine.Timer"]], "timer.one_shot (in module machine)": [[42, "machine.Timer.ONE_SHOT"]], "timer.periodic (in module machine)": [[42, "machine.Timer.PERIODIC"]], "deinit() (machine.timer method)": [[42, "machine.Timer.deinit"]], "init() (machine.timer method)": [[42, "machine.Timer.init"]], "uart (class in machine)": [[43, "machine.UART"]], "uart.cts (in module machine)": [[43, "machine.UART.CTS"]], "uart.irq_break (in module machine)": [[43, "machine.UART.IRQ_BREAK"]], "uart.irq_rx (in module machine)": [[43, "machine.UART.IRQ_RX"]], "uart.irq_rxidle (in module machine)": [[43, "machine.UART.IRQ_RXIDLE"]], "uart.irq_txidle (in module machine)": [[43, "machine.UART.IRQ_TXIDLE"]], "uart.rts (in module machine)": [[43, "machine.UART.RTS"]], "any() (machine.uart method)": [[43, "machine.UART.any"]], "deinit() (machine.uart method)": [[43, "machine.UART.deinit"]], "flush() (machine.uart method)": [[43, "machine.UART.flush"]], "init() (machine.uart method)": [[43, "machine.UART.init"]], "irq() (machine.uart method)": [[43, "machine.UART.irq"]], "read() (machine.uart method)": [[43, "machine.UART.read"]], "readinto() (machine.uart method)": [[43, "machine.UART.readinto"]], "readline() (machine.uart method)": [[43, "machine.UART.readline"]], "sendbreak() (machine.uart method)": [[43, "machine.UART.sendbreak"]], "txdone() (machine.uart method)": [[43, "machine.UART.txdone"]], "write() (machine.uart method)": [[43, "machine.UART.write"]], "wdt (class in machine)": [[44, "machine.WDT"]], "feed() (machine.wdt method)": [[44, "machine.WDT.feed"]], "acos() (in module math)": [[45, "math.acos"]], "acosh() (in module math)": [[45, "math.acosh"]], "asin() (in module math)": [[45, "math.asin"]], "asinh() (in module math)": [[45, "math.asinh"]], "atan() (in module math)": [[45, "math.atan"]], "atan2() (in module math)": [[45, "math.atan2"]], "atanh() (in module math)": [[45, "math.atanh"]], "ceil() (in module math)": [[45, "math.ceil"]], "copysign() (in module math)": [[45, "math.copysign"]], "cos() (in module math)": [[45, "math.cos"]], "cosh() (in module math)": [[45, "math.cosh"]], "degrees() (in module math)": [[45, "math.degrees"]], "e (in module math)": [[45, "math.e"]], "erf() (in module math)": [[45, "math.erf"]], "erfc() (in module math)": [[45, "math.erfc"]], "exp() (in module math)": [[45, "math.exp"]], "expm1() (in module math)": [[45, "math.expm1"]], "fabs() (in module math)": [[45, "math.fabs"]], "floor() (in module math)": [[45, "math.floor"]], "fmod() (in module math)": [[45, "math.fmod"]], "frexp() (in module math)": [[45, "math.frexp"]], "gamma() (in module math)": [[45, "math.gamma"]], "isfinite() (in module math)": [[45, "math.isfinite"]], "isinf() (in module math)": [[45, "math.isinf"]], "isnan() (in module math)": [[45, "math.isnan"]], "ldexp() (in module math)": [[45, "math.ldexp"]], "lgamma() (in module math)": [[45, "math.lgamma"]], "log() (in module math)": [[45, "math.log"]], "log10() (in module math)": [[45, "math.log10"]], "log2() (in module math)": [[45, "math.log2"]], "math": [[45, "module-math"]], "modf() (in module math)": [[45, "math.modf"]], "pi (in module math)": [[45, "math.pi"]], "pow() (in module math)": [[45, "math.pow"]], "radians() (in module math)": [[45, "math.radians"]], "sin() (in module math)": [[45, "math.sin"]], "sinh() (in module math)": [[45, "math.sinh"]], "sqrt() (in module math)": [[45, "math.sqrt"]], "tan() (in module math)": [[45, "math.tan"]], "tanh() (in module math)": [[45, "math.tanh"]], "trunc() (in module math)": [[45, "math.trunc"]], "ringio (class in micropython)": [[46, "micropython.RingIO"]], "alloc_emergency_exception_buf() (in module micropython)": [[46, "micropython.alloc_emergency_exception_buf"]], "any() (micropython.ringio method)": [[46, "micropython.RingIO.any"]], "close() (micropython.ringio method)": [[46, "micropython.RingIO.close"]], "const() (in module micropython)": [[46, "micropython.const"]], "heap_lock() (in module micropython)": [[46, "micropython.heap_lock"]], "heap_locked() (in module micropython)": [[46, "micropython.heap_locked"]], "heap_unlock() (in module micropython)": [[46, "micropython.heap_unlock"]], "kbd_intr() (in module micropython)": [[46, "micropython.kbd_intr"]], "mem_info() (in module micropython)": [[46, "micropython.mem_info"]], "micropython": [[46, "module-micropython"]], "opt_level() (in module micropython)": [[46, "micropython.opt_level"]], "qstr_info() (in module micropython)": [[46, "micropython.qstr_info"]], "read() (micropython.ringio method)": [[46, "micropython.RingIO.read"]], "readinto() (micropython.ringio method)": [[46, "micropython.RingIO.readinto"]], "readline() (micropython.ringio method)": [[46, "micropython.RingIO.readline"]], "schedule() (in module micropython)": [[46, "micropython.schedule"]], "stack_use() (in module micropython)": [[46, "micropython.stack_use"]], "write() (micropython.ringio method)": [[46, "micropython.RingIO.write"]], "mutex (class in mutex)": [[47, "mutex.Mutex"]], "mutex": [[47, "module-mutex"]], "release() (mutex.mutex method)": [[47, "mutex.Mutex.release"]], "test() (mutex.mutex method)": [[47, "mutex.Mutex.test"]], "abstractnic (class in network)": [[48, "network.AbstractNIC"]], "active() (network.abstractnic method)": [[48, "network.AbstractNIC.active"]], "config() (network.abstractnic method)": [[48, "network.AbstractNIC.config"]], "connect() (network.abstractnic method)": [[48, "network.AbstractNIC.connect"]], "country() (in module network)": [[48, "network.country"]], "disconnect() (network.abstractnic method)": [[48, "network.AbstractNIC.disconnect"]], "hostname() (in module network)": [[48, "network.hostname"]], "ifconfig() (network.abstractnic method)": [[48, "network.AbstractNIC.ifconfig"]], "ipconfig() (in module network)": [[48, "network.ipconfig"]], "ipconfig() (network.abstractnic method)": [[48, "network.AbstractNIC.ipconfig"]], "isconnected() (network.abstractnic method)": [[48, "network.AbstractNIC.isconnected"]], "network": [[48, "module-network"]], "phy_mode() (in module network)": [[48, "network.phy_mode"]], "scan() (network.abstractnic method)": [[48, "network.AbstractNIC.scan"]], "status() (network.abstractnic method)": [[48, "network.AbstractNIC.status"]], "lan (class in network)": [[49, "network.LAN"]], "active() (network.lan method)": [[49, "network.LAN.active"]], "config() (network.lan method)": [[49, "network.LAN.config"]], "ifconfig() (network.lan method)": [[49, "network.LAN.ifconfig"]], "isconnected() (network.lan method)": [[49, "network.LAN.isconnected"]], "status() (network.lan method)": [[49, "network.LAN.status"]], "ppp (class in network)": [[50, "network.PPP"]], "ppp.sec_chap (in module network)": [[50, "network.PPP.SEC_CHAP"]], "ppp.sec_none (in module network)": [[50, "network.PPP.SEC_NONE"]], "ppp.sec_pap (in module network)": [[50, "network.PPP.SEC_PAP"]], "config() (network.ppp method)": [[50, "network.PPP.config"]], "connect() (network.ppp method)": [[50, "network.PPP.connect"]], "disconnect() (network.ppp method)": [[50, "network.PPP.disconnect"]], "ifconfig() (network.ppp method)": [[50, "network.PPP.ifconfig"]], "ipconfig() (network.ppp method)": [[50, "network.PPP.ipconfig"]], "isconnected() (network.ppp method)": [[50, "network.PPP.isconnected"]], "poll() (network.ppp method)": [[50, "network.PPP.poll"]], "status() (network.ppp method)": [[50, "network.PPP.status"]], "winc (class in network)": [[51, "network.WINC"]], "winc.802_1x (in module network)": [[51, "network.WINC.802_1X"]], "winc.mode_ap (in module network)": [[51, "network.WINC.MODE_AP"]], "winc.mode_bsp (in module network)": [[51, "network.WINC.MODE_BSP"]], "winc.mode_firmware (in module network)": [[51, "network.WINC.MODE_FIRMWARE"]], "winc.mode_p2p (in module network)": [[51, "network.WINC.MODE_P2P"]], "winc.mode_sta (in module network)": [[51, "network.WINC.MODE_STA"]], "winc.open (in module network)": [[51, "network.WINC.OPEN"]], "winc.wpa_psk (in module network)": [[51, "network.WINC.WPA_PSK"]], "active() (network.winc method)": [[51, "network.WINC.active"]], "connect() (network.winc method)": [[51, "network.WINC.connect"]], "connected_sta() (network.winc method)": [[51, "network.WINC.connected_sta"]], "disconnect() (network.winc method)": [[51, "network.WINC.disconnect"]], "fw_dump() (network.winc method)": [[51, "network.WINC.fw_dump"]], "fw_update() (network.winc method)": [[51, "network.WINC.fw_update"]], "fw_version() (network.winc method)": [[51, "network.WINC.fw_version"]], "ifconfig() (network.winc method)": [[51, "network.WINC.ifconfig"]], "isconnected() (network.winc method)": [[51, "network.WINC.isconnected"]], "netinfo() (network.winc method)": [[51, "network.WINC.netinfo"]], "rssi() (network.winc method)": [[51, "network.WINC.rssi"]], "scan() (network.winc method)": [[51, "network.WINC.scan"]], "start_ap() (network.winc method)": [[51, "network.WINC.start_ap"]], "wait_for_sta() (network.winc method)": [[51, "network.WINC.wait_for_sta"]], "wlan (class in network)": [[52, "network.WLAN"]], "wlan.pm_none (in module network)": [[52, "network.WLAN.PM_NONE"]], "wlan.pm_performance (in module network)": [[52, "network.WLAN.PM_PERFORMANCE"]], "wlan.pm_powersave (in module network)": [[52, "network.WLAN.PM_POWERSAVE"]], "active() (network.wlan method)": [[52, "network.WLAN.active"]], "config() (network.wlan method)": [[52, "network.WLAN.config"]], "connect() (network.wlan method)": [[52, "network.WLAN.connect"]], "disconnect() (network.wlan method)": [[52, "network.WLAN.disconnect"]], "ifconfig() (network.wlan method)": [[52, "network.WLAN.ifconfig"]], "isconnected() (network.wlan method)": [[52, "network.WLAN.isconnected"]], "scan() (network.wlan method)": [[52, "network.WLAN.scan"]], "status() (network.wlan method)": [[52, "network.WLAN.status"]], "audio": [[53, "module-audio"]], "init() (in module audio)": [[53, "audio.init"]], "start_streaming() (in module audio)": [[53, "audio.start_streaming"]], "stop_streaming() (in module audio)": [[53, "audio.stop_streaming"]], "resonant_freq (in module buzzer)": [[54, "buzzer.RESONANT_FREQ"]], "buzzer": [[54, "module-buzzer"]], "duty() (in module buzzer)": [[54, "buzzer.duty"]], "freq() (in module buzzer)": [[54, "buzzer.freq"]], "cpufreq": [[55, "module-cpufreq"]], "get_current_frequencies() (in module cpufreq)": [[55, "cpufreq.get_current_frequencies"]], "get_supported_frequencies() (in module cpufreq)": [[55, "cpufreq.get_supported_frequencies"]], "set_frequency() (in module cpufreq)": [[55, "cpufreq.set_frequency"]], "fhd (in module display)": [[56, "display.FHD"]], "fhvga (in module display)": [[56, "display.FHVGA"]], "fhvga2 (in module display)": [[56, "display.FHVGA2"]], "fwvga (in module display)": [[56, "display.FWVGA"]], "fwvga2 (in module display)": [[56, "display.FWVGA2"]], "hd (in module display)": [[56, "display.HD"]], "qvga (in module display)": [[56, "display.QVGA"]], "svga (in module display)": [[56, "display.SVGA"]], "sxga (in module display)": [[56, "display.SXGA"]], "sxga2 (in module display)": [[56, "display.SXGA2"]], "tfwvga (in module display)": [[56, "display.TFWVGA"]], "tfwvga2 (in module display)": [[56, "display.TFWVGA2"]], "thvga (in module display)": [[56, "display.THVGA"]], "tqvga (in module display)": [[56, "display.TQVGA"]], "uxga (in module display)": [[56, "display.UXGA"]], "vga (in module display)": [[56, "display.VGA"]], "wsvga (in module display)": [[56, "display.WSVGA"]], "xga (in module display)": [[56, "display.XGA"]], "display": [[56, "module-display"]], "backlight() (display.dacbacklight method)": [[57, "display.DACBacklight.backlight"]], "deinit() (display.dacbacklight method)": [[57, "display.DACBacklight.deinit"]], "display.dacbacklight (class in display)": [[57, "display.display.DACBacklight"]], "backlight() (display.pwmbacklight method)": [[58, "display.PWMBacklight.backlight"]], "deinit() (display.pwmbacklight method)": [[58, "display.PWMBacklight.deinit"]], "display.pwmbacklight (class in display)": [[58, "display.display.PWMBacklight"]], "display.st7701 (class in display)": [[59, "display.display.ST7701"]], "init() (display.st7701 method)": [[59, "display.ST7701.init"]], "read_id() (display.st7701 method)": [[59, "display.ST7701.read_id"]], "display.displaydata (class in display)": [[60, "display.display.DisplayData"]], "display_id() (display.displaydata method)": [[60, "display.DisplayData.display_id"]], "frame_callback() (display.displaydata method)": [[60, "display.DisplayData.frame_callback"]], "receive_frame() (display.displaydata method)": [[60, "display.DisplayData.receive_frame"]], "send_frame() (display.displaydata method)": [[60, "display.DisplayData.send_frame"]], "backlight() (display.dsidisplay method)": [[61, "display.DSIDisplay.backlight"]], "bus_read() (display.dsidisplay method)": [[61, "display.DSIDisplay.bus_read"]], "bus_write() (display.dsidisplay method)": [[61, "display.DSIDisplay.bus_write"]], "clear() (display.dsidisplay method)": [[61, "display.DSIDisplay.clear"]], "deinit() (display.dsidisplay method)": [[61, "display.DSIDisplay.deinit"]], "display.dsidisplay (class in display)": [[61, "display.display.DSIDisplay"]], "height() (display.dsidisplay method)": [[61, "display.DSIDisplay.height"]], "refresh() (display.dsidisplay method)": [[61, "display.DSIDisplay.refresh"]], "width() (display.dsidisplay method)": [[61, "display.DSIDisplay.width"]], "write() (display.dsidisplay method)": [[61, "display.DSIDisplay.write"]], "backlight() (display.rgbdisplay method)": [[62, "display.RGBDisplay.backlight"]], "clear() (display.rgbdisplay method)": [[62, "display.RGBDisplay.clear"]], "deinit() (display.rgbdisplay method)": [[62, "display.RGBDisplay.deinit"]], "display.rgbdisplay (class in display)": [[62, "display.display.RGBDisplay"]], "height() (display.rgbdisplay method)": [[62, "display.RGBDisplay.height"]], "refresh() (display.rgbdisplay method)": [[62, "display.RGBDisplay.refresh"]], "width() (display.rgbdisplay method)": [[62, "display.RGBDisplay.width"]], "write() (display.rgbdisplay method)": [[62, "display.RGBDisplay.write"]], "spidisplay (class in display)": [[63, "display.SPIDisplay"]], "backlight() (display.spidisplay method)": [[63, "display.SPIDisplay.backlight"]], "bgr() (display.spidisplay method)": [[63, "display.SPIDisplay.bgr"]], "bus_write() (display.spidisplay method)": [[63, "display.SPIDisplay.bus_write"]], "byte_swap() (display.spidisplay method)": [[63, "display.SPIDisplay.byte_swap"]], "clear() (display.spidisplay method)": [[63, "display.SPIDisplay.clear"]], "deinit() (display.spidisplay method)": [[63, "display.SPIDisplay.deinit"]], "height() (display.spidisplay method)": [[63, "display.SPIDisplay.height"]], "refresh() (display.spidisplay method)": [[63, "display.SPIDisplay.refresh"]], "triple_buffer() (display.spidisplay method)": [[63, "display.SPIDisplay.triple_buffer"]], "width() (display.spidisplay method)": [[63, "display.SPIDisplay.width"]], "write() (display.spidisplay method)": [[63, "display.SPIDisplay.write"]], "fir_amg8833 (in module fir)": [[64, "fir.FIR_AMG8833"]], "fir_lepton (in module fir)": [[64, "fir.FIR_LEPTON"]], "fir_mlx90621 (in module fir)": [[64, "fir.FIR_MLX90621"]], "fir_mlx90640 (in module fir)": [[64, "fir.FIR_MLX90640"]], "fir_mlx90641 (in module fir)": [[64, "fir.FIR_MLX90641"]], "fir_none (in module fir)": [[64, "fir.FIR_NONE"]], "fir_shield (in module fir)": [[64, "fir.FIR_SHIELD"]], "deinit() (in module fir)": [[64, "fir.deinit"]], "draw_ir() (in module fir)": [[64, "fir.draw_ir"]], "fir": [[64, "module-fir"]], "get_frame_available() (in module fir)": [[64, "fir.get_frame_available"]], "height() (in module fir)": [[64, "fir.height"]], "init() (in module fir)": [[64, "fir.init"]], "radiometric() (in module fir)": [[64, "fir.radiometric"]], "read_ir() (in module fir)": [[64, "fir.read_ir"]], "read_ta() (in module fir)": [[64, "fir.read_ta"]], "refresh() (in module fir)": [[64, "fir.refresh"]], "register_frame_cb() (in module fir)": [[64, "fir.register_frame_cb"]], "register_vsync_cb() (in module fir)": [[64, "fir.register_vsync_cb"]], "resolution() (in module fir)": [[64, "fir.resolution"]], "snapshot() (in module fir)": [[64, "fir.snapshot"]], "trigger_ffc() (in module fir)": [[64, "fir.trigger_ffc"]], "type() (in module fir)": [[64, "fir.type"]], "width() (in module fir)": [[64, "fir.width"]], "lcd_flag_moved (in module ft5x06)": [[65, "ft5x06.LCD_FLAG_MOVED"]], "lcd_flag_pressed (in module ft5x06)": [[65, "ft5x06.LCD_FLAG_PRESSED"]], "lcd_flag_released (in module ft5x06)": [[65, "ft5x06.LCD_FLAG_RELEASED"]], "lcd_gesture_move_down (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_MOVE_DOWN"]], "lcd_gesture_move_left (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_MOVE_LEFT"]], "lcd_gesture_move_right (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_MOVE_RIGHT"]], "lcd_gesture_move_up (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_MOVE_UP"]], "lcd_gesture_none (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_NONE"]], "lcd_gesture_zoom_in (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_ZOOM_IN"]], "lcd_gesture_zoom_out (in module ft5x06)": [[65, "ft5x06.LCD_GESTURE_ZOOM_OUT"]], "ft5x06": [[65, "module-ft5x06"]], "ft5x06.ft5x06 (class in ft5x06)": [[65, "ft5x06.ft5x06.FT5X06"]], "get_gesture() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_gesture"]], "get_point_flag() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_point_flag"]], "get_point_id() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_point_id"]], "get_point_x() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_point_x"]], "get_point_y() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_point_y"]], "get_points() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.get_points"]], "touch_callback() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.touch_callback"]], "update_points() (ft5x06.ft5x06 method)": [[65, "ft5x06.FT5X06.update_points"]], "gif (class in gif)": [[66, "gif.Gif"]], "add_frame() (gif.gif method)": [[66, "gif.Gif.add_frame"]], "close() (gif.gif method)": [[66, "gif.Gif.close"]], "format() (gif.gif method)": [[66, "gif.Gif.format"]], "gif": [[66, "module-gif"]], "height() (gif.gif method)": [[66, "gif.Gif.height"]], "loop() (gif.gif method)": [[66, "gif.Gif.loop"]], "size() (gif.gif method)": [[66, "gif.Gif.size"]], "width() (gif.gif method)": [[66, "gif.Gif.width"]], "_read_reg() (gt911.gt911 method)": [[67, "gt911.GT911._read_reg"]], "_write_reg() (gt911.gt911 method)": [[67, "gt911.GT911._write_reg"]], "gt911": [[67, "module-gt911"]], "gt911.gt911 (class in gt911)": [[67, "gt911.gt911.GT911"]], "read_id() (gt911.gt911 method)": [[67, "gt911.GT911.read_id"]], "read_points() (gt911.gt911 method)": [[67, "gt911.GT911.read_points"]], "reset() (gt911.gt911 method)": [[67, "gt911.GT911.reset"]], "apply_color_palette_first (in module image)": [[68, "image.APPLY_COLOR_PALETTE_FIRST"]], "area (in module image)": [[68, "image.AREA"]], "artoolkit (in module image)": [[68, "image.ARTOOLKIT"]], "bayer (in module image)": [[68, "image.BAYER"]], "bicubic (in module image)": [[68, "image.BICUBIC"]], "bilinear (in module image)": [[68, "image.BILINEAR"]], "binary (in module image)": [[68, "image.BINARY"]], "black_background (in module image)": [[68, "image.BLACK_BACKGROUND"]], "center (in module image)": [[68, "image.CENTER"]], "codabar (in module image)": [[68, "image.CODABAR"]], "code128 (in module image)": [[68, "image.CODE128"]], "code39 (in module image)": [[68, "image.CODE39"]], "code93 (in module image)": [[68, "image.CODE93"]], "corner_agast (in module image)": [[68, "image.CORNER_AGAST"]], "corner_fast (in module image)": [[68, "image.CORNER_FAST"]], "databar (in module image)": [[68, "image.DATABAR"]], "databar_exp (in module image)": [[68, "image.DATABAR_EXP"]], "ean13 (in module image)": [[68, "image.EAN13"]], "ean2 (in module image)": [[68, "image.EAN2"]], "ean5 (in module image)": [[68, "image.EAN5"]], "ean8 (in module image)": [[68, "image.EAN8"]], "edge_canny (in module image)": [[68, "image.EDGE_CANNY"]], "edge_simple (in module image)": [[68, "image.EDGE_SIMPLE"]], "extract_rgb_channel_first (in module image)": [[68, "image.EXTRACT_RGB_CHANNEL_FIRST"]], "grayscale (in module image)": [[68, "image.GRAYSCALE"]], "hmirror (in module image)": [[68, "image.HMIRROR"]], "haarcascade (class in image)": [[68, "image.HaarCascade"]], "i25 (in module image)": [[68, "image.I25"]], "isbn10 (in module image)": [[68, "image.ISBN10"]], "isbn13 (in module image)": [[68, "image.ISBN13"]], "image (class in image)": [[68, "image.Image"]], "imageio (class in image)": [[68, "image.ImageIO"]], "imageio.file_stream (in module image)": [[68, "image.ImageIO.FILE_STREAM"]], "imageio.memory_stream (in module image)": [[68, "image.ImageIO.MEMORY_STREAM"]], "jpeg (in module image)": [[68, "image.JPEG"]], "jpeg_subsampling_420 (in module image)": [[68, "image.JPEG_SUBSAMPLING_420"]], "jpeg_subsampling_422 (in module image)": [[68, "image.JPEG_SUBSAMPLING_422"]], "jpeg_subsampling_444 (in module image)": [[68, "image.JPEG_SUBSAMPLING_444"]], "jpeg_subsampling_auto (in module image)": [[68, "image.JPEG_SUBSAMPLING_AUTO"]], "palette_depth (in module image)": [[68, "image.PALETTE_DEPTH"]], "palette_evt_dark (in module image)": [[68, "image.PALETTE_EVT_DARK"]], "palette_evt_light (in module image)": [[68, "image.PALETTE_EVT_LIGHT"]], "palette_ironbow (in module image)": [[68, "image.PALETTE_IRONBOW"]], "palette_rainbow (in module image)": [[68, "image.PALETTE_RAINBOW"]], "pdf417 (in module image)": [[68, "image.PDF417"]], "png (in module image)": [[68, "image.PNG"]], "rgb565 (in module image)": [[68, "image.RGB565"]], "rotate_180 (in module image)": [[68, "image.ROTATE_180"]], "rotate_270 (in module image)": [[68, "image.ROTATE_270"]], "rotate_90 (in module image)": [[68, "image.ROTATE_90"]], "scale_aspect_expand (in module image)": [[68, "image.SCALE_ASPECT_EXPAND"]], "scale_aspect_ignore (in module image)": [[68, "image.SCALE_ASPECT_IGNORE"]], "scale_aspect_keep (in module image)": [[68, "image.SCALE_ASPECT_KEEP"]], "search_ds (in module image)": [[68, "image.SEARCH_DS"]], "search_ex (in module image)": [[68, "image.SEARCH_EX"]], "similarity (class in image)": [[68, "image.Similarity"]], "tag16h5 (in module image)": [[68, "image.TAG16H5"]], "tag25h7 (in module image)": [[68, "image.TAG25H7"]], "tag25h9 (in module image)": [[68, "image.TAG25H9"]], "tag36h10 (in module image)": [[68, "image.TAG36H10"]], "tag36h11 (in module image)": [[68, "image.TAG36H11"]], "transpose (in module image)": [[68, "image.TRANSPOSE"]], "upca (in module image)": [[68, "image.UPCA"]], "upce (in module image)": [[68, "image.UPCE"]], "vflip (in module image)": [[68, "image.VFLIP"]], "yuv422 (in module image)": [[68, "image.YUV422"]], "a_bins() (image.histogram method)": [[68, "image.histogram.a_bins"]], "a_lq() (image.statistics method)": [[68, "image.statistics.a_lq"]], "a_max() (image.statistics method)": [[68, "image.statistics.a_max"]], "a_mean() (image.statistics method)": [[68, "image.statistics.a_mean"]], "a_median() (image.statistics method)": [[68, "image.statistics.a_median"]], "a_min() (image.statistics method)": [[68, "image.statistics.a_min"]], "a_mode() (image.statistics method)": [[68, "image.statistics.a_mode"]], "a_stdev() (image.statistics method)": [[68, "image.statistics.a_stdev"]], "a_uq() (image.statistics method)": [[68, "image.statistics.a_uq"]], "a_value() (image.percentile method)": [[68, "image.percentile.a_value"]], "a_value() (image.threshold method)": [[68, "image.threshold.a_value"]], "add() (image.image method)": [[68, "image.Image.add"]], "apriltag (class in image)": [[68, "image.apriltag"]], "area() (image.blob method)": [[68, "image.blob.area"]], "assign() (image.image method)": [[68, "image.Image.assign"]], "awb() (image.image method)": [[68, "image.Image.awb"]], "b_and() (image.image method)": [[68, "image.Image.b_and"]], "b_bins() (image.histogram method)": [[68, "image.histogram.b_bins"]], "b_lq() (image.statistics method)": [[68, "image.statistics.b_lq"]], "b_max() (image.statistics method)": [[68, "image.statistics.b_max"]], "b_mean() (image.statistics method)": [[68, "image.statistics.b_mean"]], "b_median() (image.statistics method)": [[68, "image.statistics.b_median"]], "b_min() (image.statistics method)": [[68, "image.statistics.b_min"]], "b_mode() (image.statistics method)": [[68, "image.statistics.b_mode"]], "b_nand() (image.image method)": [[68, "image.Image.b_nand"]], "b_nor() (image.image method)": [[68, "image.Image.b_nor"]], "b_or() (image.image method)": [[68, "image.Image.b_or"]], "b_stdev() (image.statistics method)": [[68, "image.statistics.b_stdev"]], "b_uq() (image.statistics method)": [[68, "image.statistics.b_uq"]], "b_value() (image.percentile method)": [[68, "image.percentile.b_value"]], "b_value() (image.threshold method)": [[68, "image.threshold.b_value"]], "b_xnor() (image.image method)": [[68, "image.Image.b_xnor"]], "b_xor() (image.image method)": [[68, "image.Image.b_xor"]], "barcode (class in image)": [[68, "image.barcode"]], "bilateral() (image.image method)": [[68, "image.Image.bilateral"]], "binary() (image.image method)": [[68, "image.Image.binary"]], "binary_to_grayscale() (in module image)": [[68, "image.binary_to_grayscale"]], "binary_to_lab() (in module image)": [[68, "image.binary_to_lab"]], "binary_to_rgb() (in module image)": [[68, "image.binary_to_rgb"]], "binary_to_yuv() (in module image)": [[68, "image.binary_to_yuv"]], "bins() (image.histogram method)": [[68, "image.histogram.bins"]], "black_hat() (image.image method)": [[68, "image.Image.black_hat"]], "blend() (image.image method)": [[68, "image.Image.blend"]], "blob (class in image)": [[68, "image.blob"]], "buffer_size() (image.imageio method)": [[68, "image.ImageIO.buffer_size"]], "bytearray() (image.image method)": [[68, "image.Image.bytearray"]], "capacity() (image.datamatrix method)": [[68, "image.datamatrix.capacity"]], "ccm() (image.image method)": [[68, "image.Image.ccm"]], "circle (class in image)": [[68, "image.circle"]], "clear() (image.image method)": [[68, "image.Image.clear"]], "close() (image.image method)": [[68, "image.Image.close"]], "close() (image.imageio method)": [[68, "image.ImageIO.close"]], "code() (image.blob method)": [[68, "image.blob.code"]], "columns() (image.datamatrix method)": [[68, "image.datamatrix.columns"]], "compactness() (image.blob method)": [[68, "image.blob.compactness"]], "compress() (image.image method)": [[68, "image.Image.compress"]], "convexity() (image.blob method)": [[68, "image.blob.convexity"]], "copy() (image.image method)": [[68, "image.Image.copy"]], "corners() (image.apriltag method)": [[68, "image.apriltag.corners"]], "corners() (image.barcode method)": [[68, "image.barcode.corners"]], "corners() (image.blob method)": [[68, "image.blob.corners"]], "corners() (image.datamatrix method)": [[68, "image.datamatrix.corners"]], "corners() (image.qrcode method)": [[68, "image.qrcode.corners"]], "corners() (image.rect method)": [[68, "image.rect.corners"]], "count() (image.imageio method)": [[68, "image.ImageIO.count"]], "count() (image.blob method)": [[68, "image.blob.count"]], "count() (image.kptmatch method)": [[68, "image.kptmatch.count"]], "crop() (image.image method)": [[68, "image.Image.crop"]], "cx() (image.apriltag method)": [[68, "image.apriltag.cx"]], "cx() (image.blob method)": [[68, "image.blob.cx"]], "cx() (image.kptmatch method)": [[68, "image.kptmatch.cx"]], "cxf() (image.apriltag method)": [[68, "image.apriltag.cxf"]], "cxf() (image.blob method)": [[68, "image.blob.cxf"]], "cy() (image.apriltag method)": [[68, "image.apriltag.cy"]], "cy() (image.blob method)": [[68, "image.blob.cy"]], "cy() (image.kptmatch method)": [[68, "image.kptmatch.cy"]], "cyf() (image.apriltag method)": [[68, "image.apriltag.cyf"]], "cyf() (image.blob method)": [[68, "image.blob.cyf"]], "data_type() (image.qrcode method)": [[68, "image.qrcode.data_type"]], "datamatrix (class in image)": [[68, "image.datamatrix"]], "decision_margin() (image.apriltag method)": [[68, "image.apriltag.decision_margin"]], "density() (image.blob method)": [[68, "image.blob.density"]], "difference() (image.image method)": [[68, "image.Image.difference"]], "dilate() (image.image method)": [[68, "image.Image.dilate"]], "displacement (class in image)": [[68, "image.displacement"]], "draw_arrow() (image.image method)": [[68, "image.Image.draw_arrow"]], "draw_circle() (image.image method)": [[68, "image.Image.draw_circle"]], "draw_cross() (image.image method)": [[68, "image.Image.draw_cross"]], "draw_edges() (image.image method)": [[68, "image.Image.draw_edges"]], "draw_ellipse() (image.image method)": [[68, "image.Image.draw_ellipse"]], "draw_image() (image.image method)": [[68, "image.Image.draw_image"]], "draw_keypoints() (image.image method)": [[68, "image.Image.draw_keypoints"]], "draw_line() (image.image method)": [[68, "image.Image.draw_line"]], "draw_rectangle() (image.image method)": [[68, "image.Image.draw_rectangle"]], "draw_string() (image.image method)": [[68, "image.Image.draw_string"]], "ecc_level() (image.qrcode method)": [[68, "image.qrcode.ecc_level"]], "eci() (image.qrcode method)": [[68, "image.qrcode.eci"]], "elongation() (image.blob method)": [[68, "image.blob.elongation"]], "enclosed_ellipse() (image.blob method)": [[68, "image.blob.enclosed_ellipse"]], "enclosing_circle() (image.blob method)": [[68, "image.blob.enclosing_circle"]], "erode() (image.image method)": [[68, "image.Image.erode"]], "extent() (image.blob method)": [[68, "image.blob.extent"]], "family() (image.apriltag method)": [[68, "image.apriltag.family"]], "find_apriltags() (image.image method)": [[68, "image.Image.find_apriltags"]], "find_barcodes() (image.image method)": [[68, "image.Image.find_barcodes"]], "find_blobs() (image.image method)": [[68, "image.Image.find_blobs"]], "find_circles() (image.image method)": [[68, "image.Image.find_circles"]], "find_datamatrices() (image.image method)": [[68, "image.Image.find_datamatrices"]], "find_displacement() (image.image method)": [[68, "image.Image.find_displacement"]], "find_edges() (image.image method)": [[68, "image.Image.find_edges"]], "find_eye() (image.image method)": [[68, "image.Image.find_eye"]], "find_features() (image.image method)": [[68, "image.Image.find_features"]], "find_hog() (image.image method)": [[68, "image.Image.find_hog"]], "find_keypoints() (image.image method)": [[68, "image.Image.find_keypoints"]], "find_lbp() (image.image method)": [[68, "image.Image.find_lbp"]], "find_line_segments() (image.image method)": [[68, "image.Image.find_line_segments"]], "find_lines() (image.image method)": [[68, "image.Image.find_lines"]], "find_qrcodes() (image.image method)": [[68, "image.Image.find_qrcodes"]], "find_rects() (image.image method)": [[68, "image.Image.find_rects"]], "find_template() (image.image method)": [[68, "image.Image.find_template"]], "flood_fill() (image.image method)": [[68, "image.Image.flood_fill"]], "flush() (image.image method)": [[68, "image.Image.flush"]], "format() (image.image method)": [[68, "image.Image.format"]], "gamma() (image.image method)": [[68, "image.Image.gamma"]], "gamma_corr() (image.image method)": [[68, "image.Image.gamma_corr"]], "gaussian() (image.image method)": [[68, "image.Image.gaussian"]], "get_histogram() (image.image method)": [[68, "image.Image.get_histogram"]], "get_percentile() (image.histogram method)": [[68, "image.histogram.get_percentile"]], "get_pixel() (image.image method)": [[68, "image.Image.get_pixel"]], "get_regression() (image.image method)": [[68, "image.Image.get_regression"]], "get_similarity() (image.image method)": [[68, "image.Image.get_similarity"]], "get_statistics() (image.image method)": [[68, "image.Image.get_statistics"]], "get_statistics() (image.histogram method)": [[68, "image.histogram.get_statistics"]], "get_threshold() (image.histogram method)": [[68, "image.histogram.get_threshold"]], "goodness() (image.apriltag method)": [[68, "image.apriltag.goodness"]], "grayscale_to_binary() (in module image)": [[68, "image.grayscale_to_binary"]], "grayscale_to_lab() (in module image)": [[68, "image.grayscale_to_lab"]], "grayscale_to_rgb() (in module image)": [[68, "image.grayscale_to_rgb"]], "grayscale_to_yuv() (in module image)": [[68, "image.grayscale_to_yuv"]], "h() (image.apriltag method)": [[68, "image.apriltag.h"]], "h() (image.barcode method)": [[68, "image.barcode.h"]], "h() (image.blob method)": [[68, "image.blob.h"]], "h() (image.datamatrix method)": [[68, "image.datamatrix.h"]], "h() (image.kptmatch method)": [[68, "image.kptmatch.h"]], "h() (image.qrcode method)": [[68, "image.qrcode.h"]], "h() (image.rect method)": [[68, "image.rect.h"]], "hamming() (image.apriltag method)": [[68, "image.apriltag.hamming"]], "height() (image.image method)": [[68, "image.Image.height"]], "histeq() (image.image method)": [[68, "image.Image.histeq"]], "histogram (class in image)": [[68, "image.histogram"]], "id() (image.apriltag method)": [[68, "image.apriltag.id"]], "image": [[68, "module-image"]], "invert() (image.image method)": [[68, "image.Image.invert"]], "is_alphanumeric() (image.qrcode method)": [[68, "image.qrcode.is_alphanumeric"]], "is_binary() (image.qrcode method)": [[68, "image.qrcode.is_binary"]], "is_closed() (image.imageio method)": [[68, "image.ImageIO.is_closed"]], "is_kanji() (image.qrcode method)": [[68, "image.qrcode.is_kanji"]], "is_numeric() (image.qrcode method)": [[68, "image.qrcode.is_numeric"]], "kptmatch (class in image)": [[68, "image.kptmatch"]], "l_bins() (image.histogram method)": [[68, "image.histogram.l_bins"]], "l_lq() (image.statistics method)": [[68, "image.statistics.l_lq"]], "l_max() (image.statistics method)": [[68, "image.statistics.l_max"]], "l_mean() (image.statistics method)": [[68, "image.statistics.l_mean"]], "l_median() (image.statistics method)": [[68, "image.statistics.l_median"]], "l_min() (image.statistics method)": [[68, "image.statistics.l_min"]], "l_mode() (image.statistics method)": [[68, "image.statistics.l_mode"]], "l_stdev() (image.statistics method)": [[68, "image.statistics.l_stdev"]], "l_uq() (image.statistics method)": [[68, "image.statistics.l_uq"]], "l_value() (image.percentile method)": [[68, "image.percentile.l_value"]], "l_value() (image.threshold method)": [[68, "image.threshold.l_value"]], "lab_to_binary() (in module image)": [[68, "image.lab_to_binary"]], "lab_to_grayscale() (in module image)": [[68, "image.lab_to_grayscale"]], "lab_to_rgb() (in module image)": [[68, "image.lab_to_rgb"]], "lab_to_yuv() (in module image)": [[68, "image.lab_to_yuv"]], "laplacian() (image.image method)": [[68, "image.Image.laplacian"]], "length() (image.line method)": [[68, "image.line.length"]], "lens_corr() (image.image method)": [[68, "image.Image.lens_corr"]], "line (class in image)": [[68, "image.line"]], "line() (image.line method)": [[68, "image.line.line"]], "linpolar() (image.image method)": [[68, "image.Image.linpolar"]], "load_decriptor() (in module image)": [[68, "image.load_decriptor"]], "logpolar() (image.image method)": [[68, "image.Image.logpolar"]], "lq() (image.statistics method)": [[68, "image.statistics.lq"]], "magnitude() (image.circle method)": [[68, "image.circle.magnitude"]], "magnitude() (image.line method)": [[68, "image.line.magnitude"]], "magnitude() (image.rect method)": [[68, "image.rect.magnitude"]], "major_axis_line() (image.blob method)": [[68, "image.blob.major_axis_line"]], "mask() (image.qrcode method)": [[68, "image.qrcode.mask"]], "mask_circle() (image.image method)": [[68, "image.Image.mask_circle"]], "mask_ellipse() (image.image method)": [[68, "image.Image.mask_ellipse"]], "mask_rectange() (image.image method)": [[68, "image.Image.mask_rectange"]], "match() (image.kptmatch method)": [[68, "image.kptmatch.match"]], "match_descriptor() (in module image)": [[68, "image.match_descriptor"]], "max() (image.image method)": [[68, "image.Image.max"]], "max() (image.similarity method)": [[68, "image.Similarity.max"]], "max() (image.statistics method)": [[68, "image.statistics.max"]], "mean() (image.image method)": [[68, "image.Image.mean"]], "mean() (image.similarity method)": [[68, "image.Similarity.mean"]], "mean() (image.statistics method)": [[68, "image.statistics.mean"]], "median() (image.image method)": [[68, "image.Image.median"]], "median() (image.statistics method)": [[68, "image.statistics.median"]], "midpoint() (image.image method)": [[68, "image.Image.midpoint"]], "min() (image.image method)": [[68, "image.Image.min"]], "min() (image.similarity method)": [[68, "image.Similarity.min"]], "min() (image.statistics method)": [[68, "image.statistics.min"]], "min_corners() (image.blob method)": [[68, "image.blob.min_corners"]], "minor_axis_line() (image.blob method)": [[68, "image.blob.minor_axis_line"]], "mode() (image.image method)": [[68, "image.Image.mode"]], "mode() (image.statistics method)": [[68, "image.statistics.mode"]], "morph() (image.image method)": [[68, "image.Image.morph"]], "negate() (image.image method)": [[68, "image.Image.negate"]], "offset() (image.imageio method)": [[68, "image.ImageIO.offset"]], "open() (image.image method)": [[68, "image.Image.open"]], "padding() (image.datamatrix method)": [[68, "image.datamatrix.padding"]], "payload() (image.barcode method)": [[68, "image.barcode.payload"]], "payload() (image.datamatrix method)": [[68, "image.datamatrix.payload"]], "payload() (image.qrcode method)": [[68, "image.qrcode.payload"]], "percentile (class in image)": [[68, "image.percentile"]], "perimeter() (image.blob method)": [[68, "image.blob.perimeter"]], "pixels() (image.blob method)": [[68, "image.blob.pixels"]], "qrcode (class in image)": [[68, "image.qrcode"]], "quality() (image.barcode method)": [[68, "image.barcode.quality"]], "r() (image.circle method)": [[68, "image.circle.r"]], "read() (image.imageio method)": [[68, "image.ImageIO.read"]], "rect (class in image)": [[68, "image.rect"]], "rect() (image.apriltag method)": [[68, "image.apriltag.rect"]], "rect() (image.barcode method)": [[68, "image.barcode.rect"]], "rect() (image.blob method)": [[68, "image.blob.rect"]], "rect() (image.datamatrix method)": [[68, "image.datamatrix.rect"]], "rect() (image.kptmatch method)": [[68, "image.kptmatch.rect"]], "rect() (image.qrcode method)": [[68, "image.qrcode.rect"]], "rect() (image.rect method)": [[68, "image.rect.rect"]], "replace() (image.image method)": [[68, "image.Image.replace"]], "response() (image.displacement method)": [[68, "image.displacement.response"]], "rgb_to_binary() (in module image)": [[68, "image.rgb_to_binary"]], "rgb_to_grayscale() (in module image)": [[68, "image.rgb_to_grayscale"]], "rgb_to_lab() (in module image)": [[68, "image.rgb_to_lab"]], "rgb_to_yuv() (in module image)": [[68, "image.rgb_to_yuv"]], "rho() (image.line method)": [[68, "image.line.rho"]], "rotation() (image.apriltag method)": [[68, "image.apriltag.rotation"]], "rotation() (image.barcode method)": [[68, "image.barcode.rotation"]], "rotation() (image.blob method)": [[68, "image.blob.rotation"]], "rotation() (image.datamatrix method)": [[68, "image.datamatrix.rotation"]], "rotation() (image.displacement method)": [[68, "image.displacement.rotation"]], "rotation_corr() (image.image method)": [[68, "image.Image.rotation_corr"]], "rotation_deg() (image.blob method)": [[68, "image.blob.rotation_deg"]], "rotation_rad() (image.blob method)": [[68, "image.blob.rotation_rad"]], "roundness() (image.blob method)": [[68, "image.blob.roundness"]], "rows() (image.datamatrix method)": [[68, "image.datamatrix.rows"]], "save() (image.image method)": [[68, "image.Image.save"]], "save_descriptor() (in module image)": [[68, "image.save_descriptor"]], "scale() (image.image method)": [[68, "image.Image.scale"]], "scale() (image.displacement method)": [[68, "image.displacement.scale"]], "seek() (image.imageio method)": [[68, "image.ImageIO.seek"]], "set() (image.image method)": [[68, "image.Image.set"]], "set_pixel() (image.image method)": [[68, "image.Image.set_pixel"]], "size() (image.image method)": [[68, "image.Image.size"]], "size() (image.imageio method)": [[68, "image.ImageIO.size"]], "solidity() (image.blob method)": [[68, "image.blob.solidity"]], "statistics (class in image)": [[68, "image.statistics"]], "stdev() (image.similarity method)": [[68, "image.Similarity.stdev"]], "stdev() (image.statistics method)": [[68, "image.statistics.stdev"]], "stero_disparity() (image.image method)": [[68, "image.Image.stero_disparity"]], "sub() (image.image method)": [[68, "image.Image.sub"]], "sync() (image.imageio method)": [[68, "image.ImageIO.sync"]], "theta() (image.kptmatch method)": [[68, "image.kptmatch.theta"]], "theta() (image.line method)": [[68, "image.line.theta"]], "threshold (class in image)": [[68, "image.threshold"]], "to_bitmap() (image.image method)": [[68, "image.Image.to_bitmap"]], "to_depth() (image.image method)": [[68, "image.Image.to_depth"]], "to_evt_dark() (image.image method)": [[68, "image.Image.to_evt_dark"]], "to_evt_light() (image.image method)": [[68, "image.Image.to_evt_light"]], "to_grayscale() (image.image method)": [[68, "image.Image.to_grayscale"]], "to_ironbow() (image.image method)": [[68, "image.Image.to_ironbow"]], "to_jpeg() (image.image method)": [[68, "image.Image.to_jpeg"]], "to_ndarray() (image.image method)": [[68, "image.Image.to_ndarray"]], "to_png() (image.image method)": [[68, "image.Image.to_png"]], "to_rainbow() (image.image method)": [[68, "image.Image.to_rainbow"]], "to_rgb565() (image.image method)": [[68, "image.Image.to_rgb565"]], "top_hat() (image.image method)": [[68, "image.Image.top_hat"]], "type() (image.imageio method)": [[68, "image.ImageIO.type"]], "type() (image.barcode method)": [[68, "image.barcode.type"]], "uq() (image.statistics method)": [[68, "image.statistics.uq"]], "value() (image.percentile method)": [[68, "image.percentile.value"]], "value() (image.threshold method)": [[68, "image.threshold.value"]], "version() (image.imageio method)": [[68, "image.ImageIO.version"]], "version() (image.qrcode method)": [[68, "image.qrcode.version"]], "w() (image.apriltag method)": [[68, "image.apriltag.w"]], "w() (image.barcode method)": [[68, "image.barcode.w"]], "w() (image.blob method)": [[68, "image.blob.w"]], "w() (image.datamatrix method)": [[68, "image.datamatrix.w"]], "w() (image.kptmatch method)": [[68, "image.kptmatch.w"]], "w() (image.qrcode method)": [[68, "image.qrcode.w"]], "w() (image.rect method)": [[68, "image.rect.w"]], "width() (image.image method)": [[68, "image.Image.width"]], "write() (image.imageio method)": [[68, "image.ImageIO.write"]], "x() (image.apriltag method)": [[68, "image.apriltag.x"]], "x() (image.barcode method)": [[68, "image.barcode.x"]], "x() (image.blob method)": [[68, "image.blob.x"]], "x() (image.circle method)": [[68, "image.circle.x"]], "x() (image.datamatrix method)": [[68, "image.datamatrix.x"]], "x() (image.kptmatch method)": [[68, "image.kptmatch.x"]], "x() (image.qrcode method)": [[68, "image.qrcode.x"]], "x() (image.rect method)": [[68, "image.rect.x"]], "x1() (image.line method)": [[68, "image.line.x1"]], "x2() (image.line method)": [[68, "image.line.x2"]], "x_hist_bins() (image.blob method)": [[68, "image.blob.x_hist_bins"]], "x_rotation() (image.apriltag method)": [[68, "image.apriltag.x_rotation"]], "x_translation() (image.apriltag method)": [[68, "image.apriltag.x_translation"]], "x_translation() (image.displacement method)": [[68, "image.displacement.x_translation"]], "y() (image.apriltag method)": [[68, "image.apriltag.y"]], "y() (image.barcode method)": [[68, "image.barcode.y"]], "y() (image.blob method)": [[68, "image.blob.y"]], "y() (image.circle method)": [[68, "image.circle.y"]], "y() (image.datamatrix method)": [[68, "image.datamatrix.y"]], "y() (image.kptmatch method)": [[68, "image.kptmatch.y"]], "y() (image.qrcode method)": [[68, "image.qrcode.y"]], "y() (image.rect method)": [[68, "image.rect.y"]], "y1() (image.line method)": [[68, "image.line.y1"]], "y2() (image.line method)": [[68, "image.line.y2"]], "y_hist_bins() (image.blob method)": [[68, "image.blob.y_hist_bins"]], "y_rotation() (image.apriltag method)": [[68, "image.apriltag.y_rotation"]], "y_translation() (image.apriltag method)": [[68, "image.apriltag.y_translation"]], "y_translation() (image.displacement method)": [[68, "image.displacement.y_translation"]], "yuv_to_binary() (in module image)": [[68, "image.yuv_to_binary"]], "yuv_to_grayscale() (in module image)": [[68, "image.yuv_to_grayscale"]], "yuv_to_lab() (in module image)": [[68, "image.yuv_to_lab"]], "yuv_to_rgb() (in module image)": [[68, "image.yuv_to_rgb"]], "z_rotation() (image.apriltag method)": [[68, "image.apriltag.z_rotation"]], "z_translation() (image.apriltag method)": [[68, "image.apriltag.z_translation"]], "__read_reg() (in module imu)": [[69, "imu.__read_reg"]], "__write_reg() (in module imu)": [[69, "imu.__write_reg"]], "acceleration_mg() (in module imu)": [[69, "imu.acceleration_mg"]], "angular_rate_mdps() (in module imu)": [[69, "imu.angular_rate_mdps"]], "imu": [[69, "module-imu"]], "pitch() (in module imu)": [[69, "imu.pitch"]], "roll() (in module imu)": [[69, "imu.roll"]], "sleep() (in module imu)": [[69, "imu.sleep"]], "temperature_c() (in module imu)": [[69, "imu.temperature_c"]], "mjpeg (class in mjpeg)": [[70, "mjpeg.Mjpeg"]], "add_frame() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.add_frame"]], "close() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.close"]], "count() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.count"]], "height() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.height"]], "is_closed() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.is_closed"]], "mjpeg": [[70, "module-mjpeg"]], "size() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.size"]], "sync() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.sync"]], "width() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.width"]], "write() (mjpeg.mjpeg method)": [[70, "mjpeg.Mjpeg.write"]], "model (class in ml)": [[71, "ml.Model"]], "input_dtype (ml.model attribute)": [[71, "ml.Model.input_dtype"]], "input_scale (ml.model attribute)": [[71, "ml.Model.input_scale"]], "input_shape (ml.model attribute)": [[71, "ml.Model.input_shape"]], "input_zero_point (ml.model attribute)": [[71, "ml.Model.input_zero_point"]], "labels (ml.model attribute)": [[71, "ml.Model.labels"]], "len (ml.model attribute)": [[71, "ml.Model.len"]], "ml": [[71, "module-ml"]], "output_dtype (ml.model attribute)": [[71, "ml.Model.output_dtype"]], "output_scale (ml.model attribute)": [[71, "ml.Model.output_scale"]], "output_shape (ml.model attribute)": [[71, "ml.Model.output_shape"]], "output_zero_point (ml.model attribute)": [[71, "ml.Model.output_zero_point"]], "predict() (ml.model method)": [[71, "ml.Model.predict"]], "ram (ml.model attribute)": [[71, "ml.Model.ram"]], "microspeech (class in ml.apps)": [[72, "ml.apps.MicroSpeech"]], "listen() (ml.apps.microspeech method)": [[72, "ml.apps.MicroSpeech.listen"]], "ml.apps": [[72, "module-ml.apps"]], "fomo_postprocess (class in ml.postprocessing)": [[73, "ml.postprocessing.fomo_postprocess"]], "ml.postprocessing": [[73, "module-ml.postprocessing"]], "yolo_v2_postprocess (class in ml.postprocessing)": [[73, "ml.postprocessing.yolo_v2_postprocess"]], "yolo_v5_postprocess (class in ml.postprocessing)": [[73, "ml.postprocessing.yolo_v5_postprocess"]], "normalization (class in ml.preprocessing)": [[74, "ml.preprocessing.Normalization"]], "ml.preprocessing": [[74, "module-ml.preprocessing"]], "nms (class in ml.utils)": [[75, "ml.utils.NMS"]], "add_bounding_boxes() (ml.utils.nms method)": [[75, "ml.utils.NMS.add_bounding_boxes"]], "get_bounding_boxes() (ml.utils.nms method)": [[75, "ml.utils.NMS.get_bounding_boxes"]], "ml.utils": [[75, "module-ml.utils"]], "arch() (in module omv)": [[76, "omv.arch"]], "board_id() (in module omv)": [[76, "omv.board_id"]], "board_type() (in module omv)": [[76, "omv.board_type"]], "disable_fb() (in module omv)": [[76, "omv.disable_fb"]], "omv": [[76, "module-omv"]], "version_major() (in module omv)": [[76, "omv.version_major"]], "version_minor() (in module omv)": [[76, "omv.version_minor"]], "version_patch() (in module omv)": [[76, "omv.version_patch"]], "version_string() (in module omv)": [[76, "omv.version_string"]], "call() (rpc.rpc_master method)": [[77, "rpc.rpc_master.call"]], "get_bytes() (rpc.rpc method)": [[77, "rpc.rpc.get_bytes"]], "loop() (rpc.rpc_slave method)": [[77, "rpc.rpc_slave.loop"]], "put_bytes() (rpc.rpc method)": [[77, "rpc.rpc.put_bytes"]], "register_callback() (rpc.rpc_slave method)": [[77, "rpc.rpc_slave.register_callback"]], "rpc": [[77, "module-rpc"]], "rpc (class in rpc)": [[77, "rpc.rpc"]], "rpc_can_master (class in rpc)": [[77, "rpc.rpc_can_master"]], "rpc_can_slave (class in rpc)": [[77, "rpc.rpc_can_slave"]], "rpc_i2c_master (class in rpc)": [[77, "rpc.rpc_i2c_master"]], "rpc_i2c_slave (class in rpc)": [[77, "rpc.rpc_i2c_slave"]], "rpc_master (class in rpc)": [[77, "rpc.rpc_master"]], "rpc_network_master (class in rpc)": [[77, "rpc.rpc_network_master"]], "rpc_network_slave (class in rpc)": [[77, "rpc.rpc_network_slave"]], "rpc_slave (class in rpc)": [[77, "rpc.rpc_slave"]], "rpc_spi_master (class in rpc)": [[77, "rpc.rpc_spi_master"]], "rpc_spi_slave (class in rpc)": [[77, "rpc.rpc_spi_slave"]], "rpc_uart_master (class in rpc)": [[77, "rpc.rpc_uart_master"]], "rpc_uart_slave (class in rpc)": [[77, "rpc.rpc_uart_slave"]], "rpc_usb_vcp_master (class in rpc)": [[77, "rpc.rpc_usb_vcp_master"]], "rpc_usb_vcp_slave (class in rpc)": [[77, "rpc.rpc_usb_vcp_slave"]], "schedule_callback() (rpc.rpc_slave method)": [[77, "rpc.rpc_slave.schedule_callback"]], "setup_loop_callback() (rpc.rpc_slave method)": [[77, "rpc.rpc_slave.setup_loop_callback"]], "stream_reader() (rpc.rpc method)": [[77, "rpc.rpc.stream_reader"]], "stream_writer() (rpc.rpc method)": [[77, "rpc.rpc.stream_writer"]], "register_pause_cb() (rtsp.rtsp_server method)": [[78, "rtsp.rtsp_server.register_pause_cb"]], "register_play_cb() (rtsp.rtsp_server method)": [[78, "rtsp.rtsp_server.register_play_cb"]], "register_setup_cb() (rtsp.rtsp_server method)": [[78, "rtsp.rtsp_server.register_setup_cb"]], "register_teardown_cb() (rtsp.rtsp_server method)": [[78, "rtsp.rtsp_server.register_teardown_cb"]], "rtsp": [[78, "module-rtsp"]], "rtsp_server (class in rtsp)": [[78, "rtsp.rtsp_server"]], "stream() (rtsp.rtsp_server method)": [[78, "rtsp.rtsp_server.stream"]], "b128x128 (in module sensor)": [[79, "sensor.B128X128"]], "b128x64 (in module sensor)": [[79, "sensor.B128X64"]], "b160x160 (in module sensor)": [[79, "sensor.B160X160"]], "b320x320 (in module sensor)": [[79, "sensor.B320X320"]], "b64x32 (in module sensor)": [[79, "sensor.B64X32"]], "b64x64 (in module sensor)": [[79, "sensor.B64X64"]], "bayer (in module sensor)": [[79, "sensor.BAYER"]], "binary (in module sensor)": [[79, "sensor.BINARY"]], "cif (in module sensor)": [[79, "sensor.CIF"]], "double_buffer (in module sensor)": [[79, "sensor.DOUBLE_BUFFER"]], "fhd (in module sensor)": [[79, "sensor.FHD"]], "frogeye2020 (in module sensor)": [[79, "sensor.FROGEYE2020"]], "gc2145 (in module sensor)": [[79, "sensor.GC2145"]], "genx320_biases_active_marker (in module sensor)": [[79, "sensor.GENX320_BIASES_ACTIVE_MARKER"]], "genx320_biases_default (in module sensor)": [[79, "sensor.GENX320_BIASES_DEFAULT"]], "genx320_biases_high_speed (in module sensor)": [[79, "sensor.GENX320_BIASES_HIGH_SPEED"]], "genx320_biases_low_light (in module sensor)": [[79, "sensor.GENX320_BIASES_LOW_LIGHT"]], "genx320_biases_low_noise (in module sensor)": [[79, "sensor.GENX320_BIASES_LOW_NOISE"]], "grayscale (in module sensor)": [[79, "sensor.GRAYSCALE"]], "hd (in module sensor)": [[79, "sensor.HD"]], "hm01b0 (in module sensor)": [[79, "sensor.HM01B0"]], "hm0360 (in module sensor)": [[79, "sensor.HM0360"]], "hqqqqvga (in module sensor)": [[79, "sensor.HQQQQVGA"]], "hqqqvga (in module sensor)": [[79, "sensor.HQQQVGA"]], "hqqvga (in module sensor)": [[79, "sensor.HQQVGA"]], "hqvga (in module sensor)": [[79, "sensor.HQVGA"]], "hvga (in module sensor)": [[79, "sensor.HVGA"]], "ioctl_genx320_set_biases (in module sensor)": [[79, "sensor.IOCTL_GENX320_SET_BIASES"]], "ioctl_get_fov_wide (in module sensor)": [[79, "sensor.IOCTL_GET_FOV_WIDE"]], "ioctl_get_night_mode (in module sensor)": [[79, "sensor.IOCTL_GET_NIGHT_MODE"]], "ioctl_get_readout_window (in module sensor)": [[79, "sensor.IOCTL_GET_READOUT_WINDOW"]], "ioctl_get_triggered_mode (in module sensor)": [[79, "sensor.IOCTL_GET_TRIGGERED_MODE"]], "ioctl_himax_md_clear (in module sensor)": [[79, "sensor.IOCTL_HIMAX_MD_CLEAR"]], "ioctl_himax_md_enable (in module sensor)": [[79, "sensor.IOCTL_HIMAX_MD_ENABLE"]], "ioctl_himax_md_threshold (in module sensor)": [[79, "sensor.IOCTL_HIMAX_MD_THRESHOLD"]], "ioctl_himax_md_window (in module sensor)": [[79, "sensor.IOCTL_HIMAX_MD_WINDOW"]], "ioctl_himax_osc_enable (in module sensor)": [[79, "sensor.IOCTL_HIMAX_OSC_ENABLE"]], "ioctl_lepton_get_attribute (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_ATTRIBUTE"]], "ioctl_lepton_get_aux_temp (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_AUX_TEMP"]], "ioctl_lepton_get_fpa_temp (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_FPA_TEMP"]], "ioctl_lepton_get_height (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_HEIGHT"]], "ioctl_lepton_get_mode (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_MODE"]], "ioctl_lepton_get_radiometry (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_RADIOMETRY"]], "ioctl_lepton_get_range (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_RANGE"]], "ioctl_lepton_get_refresh (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_REFRESH"]], "ioctl_lepton_get_resolution (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_RESOLUTION"]], "ioctl_lepton_get_width (in module sensor)": [[79, "sensor.IOCTL_LEPTON_GET_WIDTH"]], "ioctl_lepton_run_command (in module sensor)": [[79, "sensor.IOCTL_LEPTON_RUN_COMMAND"]], "ioctl_lepton_set_attribute (in module sensor)": [[79, "sensor.IOCTL_LEPTON_SET_ATTRIBUTE"]], "ioctl_lepton_set_mode (in module sensor)": [[79, "sensor.IOCTL_LEPTON_SET_MODE"]], "ioctl_lepton_set_range (in module sensor)": [[79, "sensor.IOCTL_LEPTON_SET_RANGE"]], "ioctl_pause_auto_focus (in module sensor)": [[79, "sensor.IOCTL_PAUSE_AUTO_FOCUS"]], "ioctl_reset_auto_focus (in module sensor)": [[79, "sensor.IOCTL_RESET_AUTO_FOCUS"]], "ioctl_rgb_stats (in module sensor)": [[79, "sensor.IOCTL_RGB_STATS"]], "ioctl_set_fov_wide (in module sensor)": [[79, "sensor.IOCTL_SET_FOV_WIDE"]], "ioctl_set_night_mode (in module sensor)": [[79, "sensor.IOCTL_SET_NIGHT_MODE"]], "ioctl_set_readout_window (in module sensor)": [[79, "sensor.IOCTL_SET_READOUT_WINDOW"]], "ioctl_set_triggered_mode (in module sensor)": [[79, "sensor.IOCTL_SET_TRIGGERED_MODE"]], "ioctl_trigger_auto_focus (in module sensor)": [[79, "sensor.IOCTL_TRIGGER_AUTO_FOCUS"]], "ioctl_wait_on_auto_focus (in module sensor)": [[79, "sensor.IOCTL_WAIT_ON_AUTO_FOCUS"]], "jpeg (in module sensor)": [[79, "sensor.JPEG"]], "lcd (in module sensor)": [[79, "sensor.LCD"]], "lepton (in module sensor)": [[79, "sensor.LEPTON"]], "mt9m114 (in module sensor)": [[79, "sensor.MT9M114"]], "mt9v022 (in module sensor)": [[79, "sensor.MT9V022"]], "mt9v024 (in module sensor)": [[79, "sensor.MT9V024"]], "mt9v032 (in module sensor)": [[79, "sensor.MT9V032"]], "mt9v034 (in module sensor)": [[79, "sensor.MT9V034"]], "ov2640 (in module sensor)": [[79, "sensor.OV2640"]], "ov5640 (in module sensor)": [[79, "sensor.OV5640"]], "ov7690 (in module sensor)": [[79, "sensor.OV7690"]], "ov7725 (in module sensor)": [[79, "sensor.OV7725"]], "ov9650 (in module sensor)": [[79, "sensor.OV9650"]], "pag7920 (in module sensor)": [[79, "sensor.PAG7920"]], "paj6100 (in module sensor)": [[79, "sensor.PAJ6100"]], "qcif (in module sensor)": [[79, "sensor.QCIF"]], "qhd (in module sensor)": [[79, "sensor.QHD"]], "qqcif (in module sensor)": [[79, "sensor.QQCIF"]], "qqqqvga (in module sensor)": [[79, "sensor.QQQQVGA"]], "qqqvga (in module sensor)": [[79, "sensor.QQQVGA"]], "qqsif (in module sensor)": [[79, "sensor.QQSIF"]], "qqvga (in module sensor)": [[79, "sensor.QQVGA"]], "qqvga2 (in module sensor)": [[79, "sensor.QQVGA2"]], "qsif (in module sensor)": [[79, "sensor.QSIF"]], "qvga (in module sensor)": [[79, "sensor.QVGA"]], "qxga (in module sensor)": [[79, "sensor.QXGA"]], "rgb565 (in module sensor)": [[79, "sensor.RGB565"]], "sif (in module sensor)": [[79, "sensor.SIF"]], "single_buffer (in module sensor)": [[79, "sensor.SINGLE_BUFFER"]], "svga (in module sensor)": [[79, "sensor.SVGA"]], "sxga (in module sensor)": [[79, "sensor.SXGA"]], "sxgam (in module sensor)": [[79, "sensor.SXGAM"]], "triple_buffer (in module sensor)": [[79, "sensor.TRIPLE_BUFFER"]], "uxga (in module sensor)": [[79, "sensor.UXGA"]], "vga (in module sensor)": [[79, "sensor.VGA"]], "video_fifo (in module sensor)": [[79, "sensor.VIDEO_FIFO"]], "wqxga (in module sensor)": [[79, "sensor.WQXGA"]], "wqxga2 (in module sensor)": [[79, "sensor.WQXGA2"]], "wvga (in module sensor)": [[79, "sensor.WVGA"]], "wvga2 (in module sensor)": [[79, "sensor.WVGA2"]], "wxga (in module sensor)": [[79, "sensor.WXGA"]], "xga (in module sensor)": [[79, "sensor.XGA"]], "yuv422 (in module sensor)": [[79, "sensor.YUV422"]], "__read_reg() (in module sensor)": [[79, "sensor.__read_reg"]], "__write_reg() (in module sensor)": [[79, "sensor.__write_reg"]], "alloc_extra_fb() (in module sensor)": [[79, "sensor.alloc_extra_fb"]], "dealloc_extra_fb() (in module sensor)": [[79, "sensor.dealloc_extra_fb"]], "disable_delays() (in module sensor)": [[79, "sensor.disable_delays"]], "disable_full_flush() (in module sensor)": [[79, "sensor.disable_full_flush"]], "flush() (in module sensor)": [[79, "sensor.flush"]], "get_auto_rotation() (in module sensor)": [[79, "sensor.get_auto_rotation"]], "get_blc_regs() (in module sensor)": [[79, "sensor.get_blc_regs"]], "get_color_palette() (in module sensor)": [[79, "sensor.get_color_palette"]], "get_exposure_us() (in module sensor)": [[79, "sensor.get_exposure_us"]], "get_fb() (in module sensor)": [[79, "sensor.get_fb"]], "get_frame_available() (in module sensor)": [[79, "sensor.get_frame_available"]], "get_framebuffers() (in module sensor)": [[79, "sensor.get_framebuffers"]], "get_framerate() (in module sensor)": [[79, "sensor.get_framerate"]], "get_framesize() (in module sensor)": [[79, "sensor.get_framesize"]], "get_gain_db() (in module sensor)": [[79, "sensor.get_gain_db"]], "get_hmirror() (in module sensor)": [[79, "sensor.get_hmirror"]], "get_id() (in module sensor)": [[79, "sensor.get_id"]], "get_pixformat() (in module sensor)": [[79, "sensor.get_pixformat"]], "get_rgb_gain_db() (in module sensor)": [[79, "sensor.get_rgb_gain_db"]], "get_transpose() (in module sensor)": [[79, "sensor.get_transpose"]], "get_vflip() (in module sensor)": [[79, "sensor.get_vflip"]], "get_windowing() (in module sensor)": [[79, "sensor.get_windowing"]], "height() (in module sensor)": [[79, "sensor.height"]], "ioctl() (in module sensor)": [[79, "sensor.ioctl"]], "reset() (in module sensor)": [[79, "sensor.reset"]], "sensor": [[79, "module-sensor"]], "set_auto_blc() (in module sensor)": [[79, "sensor.set_auto_blc"]], "set_auto_exposure() (in module sensor)": [[79, "sensor.set_auto_exposure"]], "set_auto_gain() (in module sensor)": [[79, "sensor.set_auto_gain"]], "set_auto_rotation() (in module sensor)": [[79, "sensor.set_auto_rotation"]], "set_auto_whitebal() (in module sensor)": [[79, "sensor.set_auto_whitebal"]], "set_brightness() (in module sensor)": [[79, "sensor.set_brightness"]], "set_color_palette() (in module sensor)": [[79, "sensor.set_color_palette"]], "set_colorbar() (in module sensor)": [[79, "sensor.set_colorbar"]], "set_contrast() (in module sensor)": [[79, "sensor.set_contrast"]], "set_frame_callback() (in module sensor)": [[79, "sensor.set_frame_callback"]], "set_framebuffers() (in module sensor)": [[79, "sensor.set_framebuffers"]], "set_framerate() (in module sensor)": [[79, "sensor.set_framerate"]], "set_framesize() (in module sensor)": [[79, "sensor.set_framesize"]], "set_gainceiling() (in module sensor)": [[79, "sensor.set_gainceiling"]], "set_hmirror() (in module sensor)": [[79, "sensor.set_hmirror"]], "set_lens_correction() (in module sensor)": [[79, "sensor.set_lens_correction"]], "set_pixformat() (in module sensor)": [[79, "sensor.set_pixformat"]], "set_quality() (in module sensor)": [[79, "sensor.set_quality"]], "set_saturation() (in module sensor)": [[79, "sensor.set_saturation"]], "set_transpose() (in module sensor)": [[79, "sensor.set_transpose"]], "set_vflip() (in module sensor)": [[79, "sensor.set_vflip"]], "set_vsync_callback() (in module sensor)": [[79, "sensor.set_vsync_callback"]], "set_windowing() (in module sensor)": [[79, "sensor.set_windowing"]], "shutdown() (in module sensor)": [[79, "sensor.shutdown"]], "skip_frames() (in module sensor)": [[79, "sensor.skip_frames"]], "sleep() (in module sensor)": [[79, "sensor.sleep"]], "snapshot() (in module sensor)": [[79, "sensor.snapshot"]], "width() (in module sensor)": [[79, "sensor.width"]], "tfp410": [[80, "module-TFP410"]], "hotplug_callback() (tfp410.tfp410 method)": [[80, "TFP410.TFP410.hotplug_callback"]], "isconnected() (tfp410.tfp410 method)": [[80, "TFP410.TFP410.isconnected"]], "tfp410.tfp410 (class in tfp410)": [[80, "TFP410.tfp410.TFP410"]], "tof_none (in module tof)": [[81, "tof.TOF_NONE"]], "tof_vl53l5cx (in module tof)": [[81, "tof.TOF_VL53L5CX"]], "deinit() (in module tof)": [[81, "tof.deinit"]], "draw_depth() (in module tof)": [[81, "tof.draw_depth"]], "height() (in module tof)": [[81, "tof.height"]], "init() (in module tof)": [[81, "tof.init"]], "read_depth() (in module tof)": [[81, "tof.read_depth"]], "refresh() (in module tof)": [[81, "tof.refresh"]], "reset() (in module tof)": [[81, "tof.reset"]], "snapshot() (in module tof)": [[81, "tof.snapshot"]], "tof": [[81, "module-tof"]], "type() (in module tof)": [[81, "tof.type"]], "width() (in module tof)": [[81, "tof.width"]], "tv_none (in module tv)": [[82, "tv.TV_NONE"]], "tv_shield (in module tv)": [[82, "tv.TV_SHIELD"]], "channel() (in module tv)": [[82, "tv.channel"]], "deinit() (in module tv)": [[82, "tv.deinit"]], "display() (in module tv)": [[82, "tv.display"]], "height() (in module tv)": [[82, "tv.height"]], "init() (in module tv)": [[82, "tv.init"]], "refresh() (in module tv)": [[82, "tv.refresh"]], "triple_buffer() (in module tv)": [[82, "tv.triple_buffer"]], "tv": [[82, "module-tv"]], "type() (in module tv)": [[82, "tv.type"]], "width() (in module tv)": [[82, "tv.width"]], "endpoint (class in openamp)": [[83, "openamp.Endpoint"]], "remoteproc (class in openamp)": [[83, "openamp.RemoteProc"]], "deinit() (openamp.endpoint method)": [[83, "openamp.Endpoint.deinit"]], "is_ready() (openamp.endpoint method)": [[83, "openamp.Endpoint.is_ready"]], "new_service_callback() (in module openamp)": [[83, "openamp.new_service_callback"]], "openamp": [[83, "module-openamp"]], "send() (openamp.endpoint method)": [[83, "openamp.Endpoint.send"]], "shutdown() (openamp.remoteproc method)": [[83, "openamp.RemoteProc.shutdown"]], "start() (openamp.remoteproc method)": [[83, "openamp.RemoteProc.start"]], "stop() (openamp.remoteproc method)": [[83, "openamp.RemoteProc.stop"]], "vfsfat (class in os)": [[84, "os.VfsFat"]], "vfslfs1 (class in os)": [[84, "os.VfsLfs1"]], "vfslfs2 (class in os)": [[84, "os.VfsLfs2"]], "vfsposix (class in os)": [[84, "os.VfsPosix"]], "chdir() (in module os)": [[84, "os.chdir"]], "dupterm() (in module os)": [[84, "os.dupterm"]], "getcwd() (in module os)": [[84, "os.getcwd"]], "ilistdir() (in module os)": [[84, "os.ilistdir"]], "listdir() (in module os)": [[84, "os.listdir"]], "mkdir() (in module os)": [[84, "os.mkdir"]], "mount() (in module os)": [[84, "os.mount"]], "os": [[84, "module-os"]], "remove() (in module os)": [[84, "os.remove"]], "rename() (in module os)": [[84, "os.rename"]], "rmdir() (in module os)": [[84, "os.rmdir"]], "stat() (in module os)": [[84, "os.stat"]], "statvfs() (in module os)": [[84, "os.statvfs"]], "sync() (in module os)": [[84, "os.sync"]], "umount() (in module os)": [[84, "os.umount"]], "uname() (in module os)": [[84, "os.uname"]], "urandom() (in module os)": [[84, "os.urandom"]], "libc_ver() (in module platform)": [[85, "platform.libc_ver"]], "platform": [[85, "module-platform"]], "platform() (in module platform)": [[85, "platform.platform"]], "python_compiler() (in module platform)": [[85, "platform.python_compiler"]], "bootloader() (in module pyb)": [[86, "pyb.bootloader"]], "delay() (in module pyb)": [[86, "pyb.delay"]], "disable_irq() (in module pyb)": [[86, "pyb.disable_irq"]], "elapsed_micros() (in module pyb)": [[86, "pyb.elapsed_micros"]], "elapsed_millis() (in module pyb)": [[86, "pyb.elapsed_millis"]], "enable_irq() (in module pyb)": [[86, "pyb.enable_irq"]], "fault_debug() (in module pyb)": [[86, "pyb.fault_debug"]], "hard_reset() (in module pyb)": [[86, "pyb.hard_reset"]], "have_cdc() (in module pyb)": [[86, "pyb.have_cdc"]], "hid() (in module pyb)": [[86, "pyb.hid"]], "info() (in module pyb)": [[86, "pyb.info"]], "main() (in module pyb)": [[86, "pyb.main"]], "micros() (in module pyb)": [[86, "pyb.micros"]], "millis() (in module pyb)": [[86, "pyb.millis"]], "mount() (in module pyb)": [[86, "pyb.mount"]], "pyb": [[86, "module-pyb"]], "pyb.hid_keyboard (in module pyb)": [[86, "pyb.pyb.hid_keyboard"]], "pyb.hid_mouse (in module pyb)": [[86, "pyb.pyb.hid_mouse"]], "repl_uart() (in module pyb)": [[86, "pyb.repl_uart"]], "rng() (in module pyb)": [[86, "pyb.rng"]], "standby() (in module pyb)": [[86, "pyb.standby"]], "stop() (in module pyb)": [[86, "pyb.stop"]], "sync() (in module pyb)": [[86, "pyb.sync"]], "udelay() (in module pyb)": [[86, "pyb.udelay"]], "unique_id() (in module pyb)": [[86, "pyb.unique_id"]], "usb_mode() (in module pyb)": [[86, "pyb.usb_mode"]], "wfi() (in module pyb)": [[86, "pyb.wfi"]], "adc (class in pyb)": [[87, "pyb.ADC"]], "read() (pyb.adc method)": [[87, "pyb.ADC.read"]], "read_timed() (pyb.adc method)": [[87, "pyb.ADC.read_timed"]], "can (class in pyb)": [[88, "pyb.CAN"]], "can.bus_off (in module pyb)": [[88, "pyb.CAN.BUS_OFF"]], "can.dual (in module pyb)": [[88, "pyb.CAN.DUAL"]], "can.error_active (in module pyb)": [[88, "pyb.CAN.ERROR_ACTIVE"]], "can.error_passive (in module pyb)": [[88, "pyb.CAN.ERROR_PASSIVE"]], "can.error_warning (in module pyb)": [[88, "pyb.CAN.ERROR_WARNING"]], "can.list16 (in module pyb)": [[88, "pyb.CAN.LIST16"]], "can.list32 (in module pyb)": [[88, "pyb.CAN.LIST32"]], "can.loopback (in module pyb)": [[88, "pyb.CAN.LOOPBACK"]], "can.mask (in module pyb)": [[88, "pyb.CAN.MASK"]], "can.mask16 (in module pyb)": [[88, "pyb.CAN.MASK16"]], "can.mask32 (in module pyb)": [[88, "pyb.CAN.MASK32"]], "can.normal (in module pyb)": [[88, "pyb.CAN.NORMAL"]], "can.range (in module pyb)": [[88, "pyb.CAN.RANGE"]], "can.silent (in module pyb)": [[88, "pyb.CAN.SILENT"]], "can.silent_loopback (in module pyb)": [[88, "pyb.CAN.SILENT_LOOPBACK"]], "can.stopped (in module pyb)": [[88, "pyb.CAN.STOPPED"]], "any() (pyb.can method)": [[88, "pyb.CAN.any"]], "clearfilter() (pyb.can method)": [[88, "pyb.CAN.clearfilter"]], "deinit() (pyb.can method)": [[88, "pyb.CAN.deinit"]], "info() (pyb.can method)": [[88, "pyb.CAN.info"]], "recv() (pyb.can method)": [[88, "pyb.CAN.recv"]], "restart() (pyb.can method)": [[88, "pyb.CAN.restart"]], "rxcallback() (pyb.can method)": [[88, "pyb.CAN.rxcallback"]], "send() (pyb.can method)": [[88, "pyb.CAN.send"]], "setfilter() (pyb.can method)": [[88, "pyb.CAN.setfilter"]], "state() (pyb.can method)": [[88, "pyb.CAN.state"]], "dac (class in pyb)": [[89, "pyb.DAC"]], "dac.circular (in module pyb)": [[89, "pyb.DAC.CIRCULAR"]], "dac.normal (in module pyb)": [[89, "pyb.DAC.NORMAL"]], "deinit() (pyb.dac method)": [[89, "pyb.DAC.deinit"]], "init() (pyb.dac method)": [[89, "pyb.DAC.init"]], "noise() (pyb.dac method)": [[89, "pyb.DAC.noise"]], "triangle() (pyb.dac method)": [[89, "pyb.DAC.triangle"]], "write() (pyb.dac method)": [[89, "pyb.DAC.write"]], "write_timed() (pyb.dac method)": [[89, "pyb.DAC.write_timed"]], "extint (class in pyb)": [[90, "pyb.ExtInt"]], "extint.irq_falling (in module pyb)": [[90, "pyb.ExtInt.IRQ_FALLING"]], "extint.irq_rising (in module pyb)": [[90, "pyb.ExtInt.IRQ_RISING"]], "extint.irq_rising_falling (in module pyb)": [[90, "pyb.ExtInt.IRQ_RISING_FALLING"]], "disable() (pyb.extint method)": [[90, "pyb.ExtInt.disable"]], "enable() (pyb.extint method)": [[90, "pyb.ExtInt.enable"]], "line() (pyb.extint method)": [[90, "pyb.ExtInt.line"]], "regs() (pyb.extint class method)": [[90, "pyb.ExtInt.regs"]], "swint() (pyb.extint method)": [[90, "pyb.ExtInt.swint"]], "flash (class in pyb)": [[91, "pyb.Flash"]], "ioctl() (pyb.flash method)": [[91, "pyb.Flash.ioctl"]], "readblocks() (pyb.flash method)": [[91, "pyb.Flash.readblocks"]], "writeblocks() (pyb.flash method)": [[91, "pyb.Flash.writeblocks"]], "i2c (class in pyb)": [[92, "pyb.I2C"]], "i2c.controller (in module pyb)": [[92, "pyb.I2C.CONTROLLER"]], "i2c.peripheral (in module pyb)": [[92, "pyb.I2C.PERIPHERAL"]], "deinit() (pyb.i2c method)": [[92, "pyb.I2C.deinit"]], "init() (pyb.i2c method)": [[92, "pyb.I2C.init"]], "is_ready() (pyb.i2c method)": [[92, "pyb.I2C.is_ready"]], "mem_read() (pyb.i2c method)": [[92, "pyb.I2C.mem_read"]], "mem_write() (pyb.i2c method)": [[92, "pyb.I2C.mem_write"]], "recv() (pyb.i2c method)": [[92, "pyb.I2C.recv"]], "scan() (pyb.i2c method)": [[92, "pyb.I2C.scan"]], "send() (pyb.i2c method)": [[92, "pyb.I2C.send"]], "led (class in pyb)": [[93, "pyb.LED"]], "off() (pyb.led method)": [[93, "pyb.LED.off"]], "on() (pyb.led method)": [[93, "pyb.LED.on"]], "toggle() (pyb.led method)": [[93, "pyb.LED.toggle"]], "pin (class in pyb)": [[94, "pyb.Pin"]], "pin.af_od (in module pyb)": [[94, "pyb.Pin.AF_OD"]], "pin.af_pp (in module pyb)": [[94, "pyb.Pin.AF_PP"]], "pin.alt (in module pyb)": [[94, "pyb.Pin.ALT"]], "pin.analog (in module pyb)": [[94, "pyb.Pin.ANALOG"]], "pin.in (in module pyb)": [[94, "pyb.Pin.IN"]], "pin.out_od (in module pyb)": [[94, "pyb.Pin.OUT_OD"]], "pin.out_pp (in module pyb)": [[94, "pyb.Pin.OUT_PP"]], "pin.pull_down (in module pyb)": [[94, "pyb.Pin.PULL_DOWN"]], "pin.pull_none (in module pyb)": [[94, "pyb.Pin.PULL_NONE"]], "pin.pull_up (in module pyb)": [[94, "pyb.Pin.PULL_UP"]], "__str__() (pyb.pin method)": [[94, "pyb.Pin.__str__"]], "__str__() (pyb.pinaf method)": [[94, "pyb.pinaf.__str__"]], "af() (pyb.pin method)": [[94, "pyb.Pin.af"]], "af_list() (pyb.pin method)": [[94, "pyb.Pin.af_list"]], "debug() (pyb.pin class method)": [[94, "pyb.Pin.debug"]], "dict() (pyb.pin class method)": [[94, "pyb.Pin.dict"]], "gpio() (pyb.pin method)": [[94, "pyb.Pin.gpio"]], "index() (pyb.pinaf method)": [[94, "pyb.pinaf.index"]], "init() (pyb.pin method)": [[94, "pyb.Pin.init"]], "mapper() (pyb.pin class method)": [[94, "pyb.Pin.mapper"]], "mode() (pyb.pin method)": [[94, "pyb.Pin.mode"]], "name() (pyb.pin method)": [[94, "pyb.Pin.name"]], "name() (pyb.pinaf method)": [[94, "pyb.pinaf.name"]], "names() (pyb.pin method)": [[94, "pyb.Pin.names"]], "pin() (pyb.pin method)": [[94, "pyb.Pin.pin"]], "port() (pyb.pin method)": [[94, "pyb.Pin.port"]], "pull() (pyb.pin method)": [[94, "pyb.Pin.pull"]], "reg() (pyb.pinaf method)": [[94, "pyb.pinaf.reg"]], "value() (pyb.pin method)": [[94, "pyb.Pin.value"]], "rtc (class in pyb)": [[95, "pyb.RTC"]], "calibration() (pyb.rtc method)": [[95, "pyb.RTC.calibration"]], "datetime() (pyb.rtc method)": [[95, "pyb.RTC.datetime"]], "info() (pyb.rtc method)": [[95, "pyb.RTC.info"]], "wakeup() (pyb.rtc method)": [[95, "pyb.RTC.wakeup"]], "spi (class in pyb)": [[96, "pyb.SPI"]], "spi.controller (in module pyb)": [[96, "pyb.SPI.CONTROLLER"]], "spi.lsb (in module pyb)": [[96, "pyb.SPI.LSB"]], "spi.msb (in module pyb)": [[96, "pyb.SPI.MSB"]], "spi.peripheral (in module pyb)": [[96, "pyb.SPI.PERIPHERAL"]], "deinit() (pyb.spi method)": [[96, "pyb.SPI.deinit"]], "init() (pyb.spi method)": [[96, "pyb.SPI.init"]], "recv() (pyb.spi method)": [[96, "pyb.SPI.recv"]], "send() (pyb.spi method)": [[96, "pyb.SPI.send"]], "send_recv() (pyb.spi method)": [[96, "pyb.SPI.send_recv"]], "servo (class in pyb)": [[97, "pyb.Servo"]], "angle() (pyb.servo method)": [[97, "pyb.Servo.angle"]], "calibration() (pyb.servo method)": [[97, "pyb.Servo.calibration"]], "pulse_width() (pyb.servo method)": [[97, "pyb.Servo.pulse_width"]], "speed() (pyb.servo method)": [[97, "pyb.Servo.speed"]], "timer (class in pyb)": [[98, "pyb.Timer"]], "timer.brk_high (in module pyb)": [[98, "pyb.Timer.BRK_HIGH"]], "timer.brk_low (in module pyb)": [[98, "pyb.Timer.BRK_LOW"]], "timer.brk_off (in module pyb)": [[98, "pyb.Timer.BRK_OFF"]], "timer.center (in module pyb)": [[98, "pyb.Timer.CENTER"]], "timer.down (in module pyb)": [[98, "pyb.Timer.DOWN"]], "timer.up (in module pyb)": [[98, "pyb.Timer.UP"]], "callback() (pyb.timer method)": [[98, "pyb.Timer.callback"]], "callback() (pyb.timerchannel method)": [[98, "pyb.timerchannel.callback"]], "capture() (pyb.timerchannel method)": [[98, "pyb.timerchannel.capture"]], "channel() (pyb.timer method)": [[98, "pyb.Timer.channel"]], "compare() (pyb.timerchannel method)": [[98, "pyb.timerchannel.compare"]], "counter() (pyb.timer method)": [[98, "pyb.Timer.counter"]], "deinit() (pyb.timer method)": [[98, "pyb.Timer.deinit"]], "freq() (pyb.timer method)": [[98, "pyb.Timer.freq"]], "init() (pyb.timer method)": [[98, "pyb.Timer.init"]], "period() (pyb.timer method)": [[98, "pyb.Timer.period"]], "prescaler() (pyb.timer method)": [[98, "pyb.Timer.prescaler"]], "pulse_width() (pyb.timerchannel method)": [[98, "pyb.timerchannel.pulse_width"]], "pulse_width_percent() (pyb.timerchannel method)": [[98, "pyb.timerchannel.pulse_width_percent"]], "source_freq() (pyb.timer method)": [[98, "pyb.Timer.source_freq"]], "uart (class in pyb)": [[99, "pyb.UART"]], "uart.cts (in module pyb)": [[99, "pyb.UART.CTS"]], "uart.rts (in module pyb)": [[99, "pyb.UART.RTS"]], "any() (pyb.uart method)": [[99, "pyb.UART.any"]], "deinit() (pyb.uart method)": [[99, "pyb.UART.deinit"]], "init() (pyb.uart method)": [[99, "pyb.UART.init"]], "read() (pyb.uart method)": [[99, "pyb.UART.read"]], "readchar() (pyb.uart method)": [[99, "pyb.UART.readchar"]], "readinto() (pyb.uart method)": [[99, "pyb.UART.readinto"]], "readline() (pyb.uart method)": [[99, "pyb.UART.readline"]], "sendbreak() (pyb.uart method)": [[99, "pyb.UART.sendbreak"]], "write() (pyb.uart method)": [[99, "pyb.UART.write"]], "writechar() (pyb.uart method)": [[99, "pyb.UART.writechar"]], "usb_hid (class in pyb)": [[100, "pyb.USB_HID"]], "recv() (pyb.usb_hid method)": [[100, "pyb.USB_HID.recv"]], "send() (pyb.usb_hid method)": [[100, "pyb.USB_HID.send"]], "usb_vcp (class in pyb)": [[101, "pyb.USB_VCP"]], "usb_vcp.cts (in module pyb)": [[101, "pyb.USB_VCP.CTS"]], "usb_vcp.irq_rx (in module pyb)": [[101, "pyb.USB_VCP.IRQ_RX"]], "usb_vcp.rts (in module pyb)": [[101, "pyb.USB_VCP.RTS"]], "any() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.any"]], "close() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.close"]], "debug_mode_enabled() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.debug_mode_enabled"]], "init() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.init"]], "irq() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.irq"]], "isconnected() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.isconnected"]], "read() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.read"]], "readinto() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.readinto"]], "readline() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.readline"]], "readlines() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.readlines"]], "recv() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.recv"]], "send() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.send"]], "setinterrupt() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.setinterrupt"]], "write() (pyb.usb_vcp method)": [[101, "pyb.USB_VCP.write"]], "choice() (in module random)": [[102, "random.choice"]], "getrandbits() (in module random)": [[102, "random.getrandbits"]], "randint() (in module random)": [[102, "random.randint"]], "random": [[102, "module-random"]], "random() (in module random)": [[102, "random.random"]], "randrange() (in module random)": [[102, "random.randrange"]], "seed() (in module random)": [[102, "random.seed"]], "uniform() (in module random)": [[102, "random.uniform"]], "debug (in module re)": [[103, "re.DEBUG"]], "compile() (in module re)": [[103, "re.compile"]], "end() (re.match method)": [[103, "re.match.end"]], "group() (re.match method)": [[103, "re.match.group"]], "groups() (re.match method)": [[103, "re.match.groups"]], "match() (in module re)": [[103, "re.match"]], "match() (re.regex method)": [[103, "re.regex.match"]], "re": [[103, "module-re"]], "search() (in module re)": [[103, "re.search"]], "search() (re.regex method)": [[103, "re.regex.search"]], "span() (re.match method)": [[103, "re.match.span"]], "split() (re.regex method)": [[103, "re.regex.split"]], "start() (re.match method)": [[103, "re.match.start"]], "sub() (in module re)": [[103, "re.sub"]], "sub() (re.regex method)": [[103, "re.regex.sub"]], "response (class in requests)": [[104, "requests.Response"]], "response.content() (in module requests)": [[104, "requests.Response.content"]], "response.headers() (in module requests)": [[104, "requests.Response.headers"]], "delete() (in module requests)": [[104, "requests.delete"]], "get() (in module requests)": [[104, "requests.get"]], "head() (in module requests)": [[104, "requests.head"]], "json() (requests.response method)": [[104, "requests.Response.json"]], "patch() (in module requests)": [[104, "requests.patch"]], "post() (in module requests)": [[104, "requests.post"]], "put() (in module requests)": [[104, "requests.put"]], "request() (in module requests)": [[104, "requests.request"]], "requests": [[104, "module-requests"]], "ipoll() (select.poll method)": [[105, "select.poll.ipoll"]], "modify() (select.poll method)": [[105, "select.poll.modify"]], "poll() (in module select)": [[105, "select.poll"]], "poll() (select.poll method)": [[105, "select.poll.poll"]], "register() (select.poll method)": [[105, "select.poll.register"]], "select": [[105, "module-select"]], "select() (in module select)": [[105, "select.select"]], "unregister() (select.poll method)": [[105, "select.poll.unregister"]], "af_inet (in module socket)": [[106, "socket.AF_INET"]], "af_inet6 (in module socket)": [[106, "socket.AF_INET6"]], "ipproto_tcp (in module socket)": [[106, "socket.IPPROTO_TCP"]], "ipproto_udp (in module socket)": [[106, "socket.IPPROTO_UDP"]], "sock_dgram (in module socket)": [[106, "socket.SOCK_DGRAM"]], "sock_stream (in module socket)": [[106, "socket.SOCK_STREAM"]], "accept() (socket.socket method)": [[106, "socket.socket.accept"]], "bind() (socket.socket method)": [[106, "socket.socket.bind"]], "close() (socket.socket method)": [[106, "socket.socket.close"]], "connect() (socket.socket method)": [[106, "socket.socket.connect"]], "getaddrinfo() (in module socket)": [[106, "socket.getaddrinfo"]], "inet_ntop() (in module socket)": [[106, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[106, "socket.inet_pton"]], "listen() (socket.socket method)": [[106, "socket.socket.listen"]], "makefile() (socket.socket method)": [[106, "socket.socket.makefile"]], "read() (socket.socket method)": [[106, "socket.socket.read"]], "readinto() (socket.socket method)": [[106, "socket.socket.readinto"]], "readline() (socket.socket method)": [[106, "socket.socket.readline"]], "recv() (socket.socket method)": [[106, "socket.socket.recv"]], "recvfrom() (socket.socket method)": [[106, "socket.socket.recvfrom"]], "send() (socket.socket method)": [[106, "socket.socket.send"]], "sendall() (socket.socket method)": [[106, "socket.socket.sendall"]], "sendto() (socket.socket method)": [[106, "socket.socket.sendto"]], "setblocking() (socket.socket method)": [[106, "socket.socket.setblocking"]], "setsockopt() (socket.socket method)": [[106, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[106, "socket.socket.settimeout"]], "socket": [[106, "module-socket"]], "socket (class in socket)": [[106, "socket.socket"]], "socket.error": [[106, "socket.socket.error"]], "write() (socket.socket method)": [[106, "socket.socket.write"]], "sslcontext (class in ssl)": [[107, "ssl.SSLContext"]], "get_ciphers() (ssl.sslcontext method)": [[107, "ssl.SSLContext.get_ciphers"]], "load_cert_chain() (ssl.sslcontext method)": [[107, "ssl.SSLContext.load_cert_chain"]], "load_verify_locations() (ssl.sslcontext method)": [[107, "ssl.SSLContext.load_verify_locations"]], "set_ciphers() (ssl.sslcontext method)": [[107, "ssl.SSLContext.set_ciphers"]], "ssl": [[107, "module-ssl"]], "ssl.cert_none (in module ssl)": [[107, "ssl.ssl.CERT_NONE"]], "ssl.cert_optional (in module ssl)": [[107, "ssl.ssl.CERT_OPTIONAL"]], "ssl.cert_required (in module ssl)": [[107, "ssl.ssl.CERT_REQUIRED"]], "ssl.protocol_tls_client (in module ssl)": [[107, "ssl.ssl.PROTOCOL_TLS_CLIENT"]], "ssl.protocol_tls_server (in module ssl)": [[107, "ssl.ssl.PROTOCOL_TLS_SERVER"]], "ssl.sslerror (in module ssl)": [[107, "ssl.ssl.SSLError"]], "ssl.wrap_socket() (in module ssl)": [[107, "ssl.ssl.wrap_socket"]], "verify_mode (ssl.sslcontext attribute)": [[107, "ssl.SSLContext.verify_mode"]], "wrap_socket() (ssl.sslcontext method)": [[107, "ssl.SSLContext.wrap_socket"]], "gpioa (in module stm)": [[108, "stm.GPIOA"]], "gpiob (in module stm)": [[108, "stm.GPIOB"]], "gpio_bsrr (in module stm)": [[108, "stm.GPIO_BSRR"]], "gpio_idr (in module stm)": [[108, "stm.GPIO_IDR"]], "gpio_odr (in module stm)": [[108, "stm.GPIO_ODR"]], "mem16 (in module stm)": [[108, "stm.mem16"]], "mem32 (in module stm)": [[108, "stm.mem32"]], "mem8 (in module stm)": [[108, "stm.mem8"]], "rfcore_fw_version() (in module stm)": [[108, "stm.rfcore_fw_version"]], "rfcore_status() (in module stm)": [[108, "stm.rfcore_status"]], "rfcore_sys_hci() (in module stm)": [[108, "stm.rfcore_sys_hci"]], "stm": [[108, "module-stm"]], "subghz_cs() (in module stm)": [[108, "stm.subghz_cs"]], "subghz_irq() (in module stm)": [[108, "stm.subghz_irq"]], "subghz_is_busy() (in module stm)": [[108, "stm.subghz_is_busy"]], "calcsize() (in module struct)": [[109, "struct.calcsize"]], "pack() (in module struct)": [[109, "struct.pack"]], "pack_into() (in module struct)": [[109, "struct.pack_into"]], "struct": [[109, "module-struct"]], "unpack() (in module struct)": [[109, "struct.unpack"]], "unpack_from() (in module struct)": [[109, "struct.unpack_from"]], "argv (in module sys)": [[110, "sys.argv"]], "atexit() (in module sys)": [[110, "sys.atexit"]], "byteorder (in module sys)": [[110, "sys.byteorder"]], "exit() (in module sys)": [[110, "sys.exit"]], "implementation (in module sys)": [[110, "sys.implementation"]], "maxsize (in module sys)": [[110, "sys.maxsize"]], "modules (in module sys)": [[110, "sys.modules"]], "path (in module sys)": [[110, "sys.path"]], "platform (in module sys)": [[110, "sys.platform"]], "print_exception() (in module sys)": [[110, "sys.print_exception"]], "ps1 (in module sys)": [[110, "sys.ps1"]], "ps2 (in module sys)": [[110, "sys.ps2"]], "settrace() (in module sys)": [[110, "sys.settrace"]], "stderr (in module sys)": [[110, "sys.stderr"]], "stdin (in module sys)": [[110, "sys.stdin"]], "stdout (in module sys)": [[110, "sys.stdout"]], "sys": [[110, "module-sys"]], "tracebacklimit (in module sys)": [[110, "sys.tracebacklimit"]], "version (in module sys)": [[110, "sys.version"]], "version_info (in module sys)": [[110, "sys.version_info"]], "avg() (time.clock method)": [[111, "time.clock.avg"]], "clock (class in time)": [[111, "time.clock"]], "fps() (time.clock method)": [[111, "time.clock.fps"]], "gmtime() (in module time)": [[111, "time.gmtime"]], "localtime() (in module time)": [[111, "time.localtime"]], "mktime() (in module time)": [[111, "time.mktime"]], "reset() (time.clock method)": [[111, "time.clock.reset"]], "sleep() (in module time)": [[111, "time.sleep"]], "sleep_ms() (in module time)": [[111, "time.sleep_ms"]], "sleep_us() (in module time)": [[111, "time.sleep_us"]], "tick() (time.clock method)": [[111, "time.clock.tick"]], "ticks_add() (in module time)": [[111, "time.ticks_add"]], "ticks_cpu() (in module time)": [[111, "time.ticks_cpu"]], "ticks_diff() (in module time)": [[111, "time.ticks_diff"]], "ticks_ms() (in module time)": [[111, "time.ticks_ms"]], "ticks_us() (in module time)": [[111, "time.ticks_us"]], "time": [[111, "module-time"]], "time() (in module time)": [[111, "time.time"]], "time_ns() (in module time)": [[111, "time.time_ns"]], "array (in module uctypes)": [[112, "uctypes.ARRAY"]], "big_endian (in module uctypes)": [[112, "uctypes.BIG_ENDIAN"]], "float32 (in module uctypes)": [[112, "uctypes.FLOAT32"]], "float64 (in module uctypes)": [[112, "uctypes.FLOAT64"]], "int16 (in module uctypes)": [[112, "uctypes.INT16"]], "int32 (in module uctypes)": [[112, "uctypes.INT32"]], "int64 (in module uctypes)": [[112, "uctypes.INT64"]], "int8 (in module uctypes)": [[112, "uctypes.INT8"]], "little_endian (in module uctypes)": [[112, "uctypes.LITTLE_ENDIAN"]], "native (in module uctypes)": [[112, "uctypes.NATIVE"]], "ptr (in module uctypes)": [[112, "uctypes.PTR"]], "uint16 (in module uctypes)": [[112, "uctypes.UINT16"]], "uint32 (in module uctypes)": [[112, "uctypes.UINT32"]], "uint64 (in module uctypes)": [[112, "uctypes.UINT64"]], "uint8 (in module uctypes)": [[112, "uctypes.UINT8"]], "void (in module uctypes)": [[112, "uctypes.VOID"]], "addressof() (in module uctypes)": [[112, "uctypes.addressof"]], "bytearray_at() (in module uctypes)": [[112, "uctypes.bytearray_at"]], "bytes_at() (in module uctypes)": [[112, "uctypes.bytes_at"]], "sizeof() (in module uctypes)": [[112, "uctypes.sizeof"]], "struct (class in uctypes)": [[112, "uctypes.struct"]], "uctypes": [[112, "module-uctypes"]], "ping() (in module uping)": [[113, "uping.ping"]], "uping": [[113, "module-uping"]], "abstractblockdev (class in vfs)": [[114, "vfs.AbstractBlockDev"]], "vfsfat (class in vfs)": [[114, "vfs.VfsFat"]], "vfslfs1 (class in vfs)": [[114, "vfs.VfsLfs1"]], "vfslfs2 (class in vfs)": [[114, "vfs.VfsLfs2"]], "vfsposix (class in vfs)": [[114, "vfs.VfsPosix"]], "ioctl() (vfs.abstractblockdev method)": [[114, "vfs.AbstractBlockDev.ioctl"]], "mkfs() (vfs.vfsfat static method)": [[114, "vfs.VfsFat.mkfs"]], "mkfs() (vfs.vfslfs1 static method)": [[114, "vfs.VfsLfs1.mkfs"]], "mkfs() (vfs.vfslfs2 static method)": [[114, "vfs.VfsLfs2.mkfs"]], "mount() (in module vfs)": [[114, "vfs.mount"]], "readblocks() (vfs.abstractblockdev method)": [[114, "vfs.AbstractBlockDev.readblocks"]], "umount() (in module vfs)": [[114, "vfs.umount"]], "vfs": [[114, "module-vfs"]], "writeblocks() (vfs.abstractblockdev method)": [[114, "vfs.AbstractBlockDev.writeblocks"]], "compress() (in module zlib)": [[115, "zlib.compress"]], "decompress() (in module zlib)": [[115, "zlib.decompress"]], "zlib": [[115, "module-zlib"]], ".mpy file": [[148, "term-.mpy-file"]], ".py file": [[148, "term-.py-file"]], "cpython": [[148, "term-CPython"]], "circuitpython": [[148, "term-CircuitPython"]], "ffi": [[148, "term-FFI"]], "gpio": [[148, "term-GPIO"]], "gpio port": [[148, "term-GPIO-port"]], "garbage collector": [[148, "term-Garbage-Collector"]], "mcu": [[148, "term-MCU"]], "micropython unix port": [[148, "term-MicroPython-Unix-port"]], "micropython port": [[148, "term-MicroPython-port"]], "repl": [[148, "term-REPL"]], "uart": [[148, "term-UART"]], "baremetal": [[148, "term-baremetal"]], "board": [[148, "term-board"]], "buffer protocol": [[148, "term-buffer-protocol"]], "bytecode": [[148, "term-bytecode"]], "callee-owned tuple": [[148, "term-callee-owned-tuple"]], "cross-compiler": [[148, "term-cross-compiler"]], "driver": [[148, "term-driver"]], "filesystem": [[148, "term-filesystem"]], "frozen module": [[148, "term-frozen-module"]], "heap": [[148, "term-heap"]], "interned string": [[148, "term-interned-string"]], "micropython-lib": [[148, "term-micropython-lib"]], "mip": [[148, "term-mip"]], "mpremote": [[148, "term-mpremote"]], "native": [[148, "term-native"]], "port": [[148, "term-port"]], "stream": [[148, "term-stream"]], "upip": [[148, "term-upip"]], "webrepl": [[148, "term-webrepl"]], "add_library()": [[151, "add_library"]], "freeze()": [[151, "freeze"]], "freeze_as_mpy()": [[151, "freeze_as_mpy"]], "freeze_as_str()": [[151, "freeze_as_str"]], "freeze_mpy()": [[151, "freeze_mpy"]], "include()": [[151, "include"]], "metadata()": [[151, "metadata"]], "module()": [[151, "module"]], "package()": [[151, "package"]], "require()": [[151, "require"]]}})