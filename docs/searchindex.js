Search.setIndex({"docnames": ["differences/python_310", "differences/python_35", "differences/python_36", "differences/python_37", "differences/python_38", "differences/python_39", "genrst/builtin_types", "genrst/core_language", "genrst/index", "genrst/modules", "genrst/syntax", "index", "library/_thread", "library/array", "library/asyncio", "library/binascii", "library/bluetooth", "library/btree", "library/builtins", "library/cmath", "library/collections", "library/cryptolib", "library/deflate", "library/errno", "library/gc", "library/gzip", "library/hashlib", "library/heapq", "library/index", "library/io", "library/json", "library/machine", "library/machine.ADC", "library/machine.ADCBlock", "library/machine.CAN", "library/machine.I2C", "library/machine.I2S", "library/machine.PWM", "library/machine.Pin", "library/machine.RTC", "library/machine.SPI", "library/machine.Signal", "library/machine.Timer", "library/machine.UART", "library/machine.WDT", "library/math", "library/micropython", "library/mutex", "library/network", "library/network.LAN", "library/network.WINC", "library/network.WLAN", "library/omv.audio", "library/omv.buzzer", "library/omv.cpufreq", "library/omv.display", "library/omv.display.DACBacklight", "library/omv.display.PWMBacklight", "library/omv.display.ST7701", "library/omv.display.displaydata", "library/omv.display.dsidisplay", "library/omv.display.rgbdisplay", "library/omv.display.spidisplay", "library/omv.fir", "library/omv.ft5x06", "library/omv.gif", "library/omv.gt911", "library/omv.image", "library/omv.imu", "library/omv.mjpeg", "library/omv.ml", "library/omv.ml.apps", "library/omv.ml.preprocessing", "library/omv.ml.utils", "library/omv.omv", "library/omv.rpc", "library/omv.rtsp", "library/omv.sensor", "library/omv.tfp410", "library/omv.tv", "library/openamp", "library/os", "library/platform", "library/pyb", "library/pyb.ADC", "library/pyb.CAN", "library/pyb.DAC", "library/pyb.ExtInt", "library/pyb.Flash", "library/pyb.I2C", "library/pyb.LED", "library/pyb.Pin", "library/pyb.RTC", "library/pyb.SPI", "library/pyb.Servo", "library/pyb.Timer", "library/pyb.UART", "library/pyb.USB_HID", "library/pyb.USB_VCP", "library/random", "library/re", "library/select", "library/socket", "library/ssl", "library/stm", "library/struct", "library/sys", "library/time", "library/uctypes", "library/uping", "library/urequests", "library/vfs", "library/zlib", "license", "openmvcam/general", "openmvcam/quickref", "openmvcam/tutorial/analog_io", "openmvcam/tutorial/gpio_control", "openmvcam/tutorial/hardware_setup", "openmvcam/tutorial/index", "openmvcam/tutorial/io_tutorial", "openmvcam/tutorial/led_control", "openmvcam/tutorial/more_information", "openmvcam/tutorial/openmvide_overview", "openmvcam/tutorial/overview", "openmvcam/tutorial/production", "openmvcam/tutorial/script_structure", "openmvcam/tutorial/software_setup", "openmvcam/tutorial/system_architecture", "openmvcam/tutorial/uart_control", "reference/asm_thumb2_arith", "reference/asm_thumb2_compare", "reference/asm_thumb2_directives", "reference/asm_thumb2_float", "reference/asm_thumb2_hints_tips", "reference/asm_thumb2_index", "reference/asm_thumb2_label_branch", "reference/asm_thumb2_ldr", "reference/asm_thumb2_logical_bit", "reference/asm_thumb2_misc", "reference/asm_thumb2_mov", "reference/asm_thumb2_stack", "reference/asm_thumb2_str", "reference/constrained", "reference/filesystem", "reference/glossary", "reference/index", "reference/isr_rules", "reference/manifest", "reference/micropython2_migration", "reference/mpremote", "reference/mpyfiles", "reference/packages", "reference/pyboard.py", "reference/repl", "reference/speed_python"], "filenames": ["differences/python_310.rst", "differences/python_35.rst", "differences/python_36.rst", "differences/python_37.rst", "differences/python_38.rst", "differences/python_39.rst", "genrst/builtin_types.rst", "genrst/core_language.rst", "genrst/index.rst", "genrst/modules.rst", "genrst/syntax.rst", "index.rst", "library/_thread.rst", "library/array.rst", "library/asyncio.rst", "library/binascii.rst", "library/bluetooth.rst", "library/btree.rst", "library/builtins.rst", "library/cmath.rst", "library/collections.rst", "library/cryptolib.rst", "library/deflate.rst", "library/errno.rst", "library/gc.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/index.rst", "library/io.rst", "library/json.rst", "library/machine.rst", "library/machine.ADC.rst", "library/machine.ADCBlock.rst", "library/machine.CAN.rst", "library/machine.I2C.rst", "library/machine.I2S.rst", "library/machine.PWM.rst", "library/machine.Pin.rst", "library/machine.RTC.rst", "library/machine.SPI.rst", "library/machine.Signal.rst", "library/machine.Timer.rst", "library/machine.UART.rst", "library/machine.WDT.rst", "library/math.rst", "library/micropython.rst", "library/mutex.rst", "library/network.rst", "library/network.LAN.rst", "library/network.WINC.rst", "library/network.WLAN.rst", "library/omv.audio.rst", "library/omv.buzzer.rst", "library/omv.cpufreq.rst", "library/omv.display.rst", "library/omv.display.DACBacklight.rst", "library/omv.display.PWMBacklight.rst", "library/omv.display.ST7701.rst", "library/omv.display.displaydata.rst", "library/omv.display.dsidisplay.rst", "library/omv.display.rgbdisplay.rst", "library/omv.display.spidisplay.rst", "library/omv.fir.rst", "library/omv.ft5x06.rst", "library/omv.gif.rst", "library/omv.gt911.rst", "library/omv.image.rst", "library/omv.imu.rst", "library/omv.mjpeg.rst", "library/omv.ml.rst", "library/omv.ml.apps.rst", "library/omv.ml.preprocessing.rst", "library/omv.ml.utils.rst", "library/omv.omv.rst", "library/omv.rpc.rst", "library/omv.rtsp.rst", "library/omv.sensor.rst", "library/omv.tfp410.rst", "library/omv.tv.rst", "library/openamp.rst", "library/os.rst", "library/platform.rst", "library/pyb.rst", "library/pyb.ADC.rst", "library/pyb.CAN.rst", "library/pyb.DAC.rst", "library/pyb.ExtInt.rst", "library/pyb.Flash.rst", "library/pyb.I2C.rst", "library/pyb.LED.rst", "library/pyb.Pin.rst", "library/pyb.RTC.rst", "library/pyb.SPI.rst", "library/pyb.Servo.rst", "library/pyb.Timer.rst", "library/pyb.UART.rst", "library/pyb.USB_HID.rst", "library/pyb.USB_VCP.rst", "library/random.rst", "library/re.rst", "library/select.rst", "library/socket.rst", "library/ssl.rst", "library/stm.rst", "library/struct.rst", "library/sys.rst", "library/time.rst", "library/uctypes.rst", "library/uping.rst", "library/urequests.rst", "library/vfs.rst", "library/zlib.rst", "license.rst", "openmvcam/general.rst", "openmvcam/quickref.rst", "openmvcam/tutorial/analog_io.rst", "openmvcam/tutorial/gpio_control.rst", "openmvcam/tutorial/hardware_setup.rst", "openmvcam/tutorial/index.rst", "openmvcam/tutorial/io_tutorial.rst", "openmvcam/tutorial/led_control.rst", "openmvcam/tutorial/more_information.rst", "openmvcam/tutorial/openmvide_overview.rst", "openmvcam/tutorial/overview.rst", "openmvcam/tutorial/production.rst", "openmvcam/tutorial/script_structure.rst", "openmvcam/tutorial/software_setup.rst", "openmvcam/tutorial/system_architecture.rst", "openmvcam/tutorial/uart_control.rst", "reference/asm_thumb2_arith.rst", "reference/asm_thumb2_compare.rst", "reference/asm_thumb2_directives.rst", "reference/asm_thumb2_float.rst", "reference/asm_thumb2_hints_tips.rst", "reference/asm_thumb2_index.rst", "reference/asm_thumb2_label_branch.rst", "reference/asm_thumb2_ldr.rst", "reference/asm_thumb2_logical_bit.rst", "reference/asm_thumb2_misc.rst", "reference/asm_thumb2_mov.rst", "reference/asm_thumb2_stack.rst", "reference/asm_thumb2_str.rst", "reference/constrained.rst", "reference/filesystem.rst", "reference/glossary.rst", "reference/index.rst", "reference/isr_rules.rst", "reference/manifest.rst", "reference/micropython2_migration.rst", "reference/mpremote.rst", "reference/mpyfiles.rst", "reference/packages.rst", "reference/pyboard.py.rst", "reference/repl.rst", "reference/speed_python.rst"], "titles": ["Python 3.10", "Python 3.5", "Python 3.6", "Python 3.7", "Python 3.8", "Python 3.9", "Builtin types", "Core language", "MicroPython differences from CPython", "Modules", "Syntax", "MicroPython documentation and references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2013 multithreading support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2013 arrays of numeric data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 asynchronous I/O scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2013 binary/ASCII conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluetooth</span></code> \u2014 low-level Bluetooth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">btree</span></code> \u2013 simple BTree database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2013 builtin functions and exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2013 mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2013 collection and container types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cryptolib</span></code> \u2013 cryptographic ciphers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deflate</span></code> \u2013 deflate compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2013 system error codes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2013 control the garbage collector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2013 gzip compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2013 hashing algorithms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2013 heap queue algorithm", "MicroPython libraries", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2013 input/output streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2013 JSON encoding and decoding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">machine</span></code> \u2014 functions related to the hardware", "class ADC \u2013 analog to digital conversion", "class ADCBlock \u2013 control ADC peripherals", "class CAN \u2013 controller area network communication bus", "class I2C \u2013 a two-wire serial protocol", "class I2S \u2013 Inter-IC Sound bus protocol", "class PWM \u2013 pulse width modulation", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)", "class Signal \u2013 control and sense external I/O devices", "class Timer \u2013 control hardware timers", "class UART \u2013 duplex serial communication bus", "class WDT \u2013 watchdog timer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2013 mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">micropython</span></code> \u2013 access and control MicroPython internals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mutex</span></code> \u2014 mutex module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">network</span></code> \u2014 network configuration", "class LAN \u2013 control an Ethernet module", "class WINC \u2013 wifi shield driver", "class WLAN \u2013 control built-in WiFi interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audio</span></code> \u2014 Audio Module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">buzzer</span></code> \u2014 buzzer driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cpufreq</span></code> \u2014 CPU Frequency Control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">display</span></code> \u2014 display driver", "class DACBacklight \u2013 DAC Backlight", "class PWMBacklight \u2013 PWM Backlight", "class ST7701 \u2013 Display Controller", "class DisplayData \u2013 Display Data", "class DSIDisplay \u2013 DSI Display Driver", "class RGBDisplay \u2013 RGB Display Driver", "class SPIDisplay \u2013 SPI Display Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fir</span></code> \u2014 thermal sensor driver (fir == far infrared)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ft5x06</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gif</span></code> \u2014 gif recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gt911</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">image</span></code> \u2014 machine vision", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imu</span></code> \u2014 imu sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mjpeg</span></code> \u2014 mjpeg recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml</span></code> \u2014 Machine Learning", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.apps</span></code> \u2014 ML Apps", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.preprocessing</span></code> \u2014 ML Preprocessing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ml.utils</span></code> \u2014 ML Utils", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">omv</span></code> \u2014 OpenMV Cam Information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rpc</span></code> \u2014 rpc library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rtsp</span></code> \u2014 rtsp library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sensor</span></code> \u2014 camera sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfp410</span></code> \u2014 DVI/HDMI Controller", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tv</span></code> \u2014 tv shield driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openamp</span></code> \u2013 provides standard Asymmetric Multiprocessing (AMP) support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2013 basic \u201coperating system\u201d services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2013 access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyb</span></code> \u2014 functions related to the board", "class ADC \u2013 analog to digital conversion", "class CAN \u2013 controller area network communication bus", "class DAC \u2013 digital to analog conversion", "class ExtInt \u2013 configure I/O pins to interrupt on external events", "class Flash \u2013 access to built-in flash storage", "class I2C \u2013 a two-wire serial protocol", "class LED \u2013 LED object", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a controller-driven serial protocol", "class Servo \u2013 3-wire hobby servo driver", "class Timer \u2013 control internal timers", "class UART \u2013 duplex serial communication bus", "class USB_HID \u2013 USB Human Interface Device (HID)", "class USB_VCP \u2013 USB virtual comm port", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2013 generate random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2013 simple regular expressions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2013 wait for events on a set of streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2013 socket module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2013 SSL/TLS module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stm</span></code> \u2014 functionality specific to STM32 MCUs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2013 pack and unpack primitive data types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2013 system specific functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2013 time related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uctypes</span></code> \u2013 access binary data in a structured way", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uping</span></code> \u2014 Ping another computer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urequests</span></code> \u2014 Related functions of HTTP client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">vfs</span></code> \u2013 virtual filesystem control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2013 zlib compression &amp; decompression", "MicroPython license information", "General information about the openmvcam", "Quick reference for the openmvcam", "<span class=\"section-number\">6.1.3. </span>Analog IO", "<span class=\"section-number\">6.1.2. </span>GPIO Control", "<span class=\"section-number\">3. </span>Hardware Setup", "OpenMV Cam Tutorial", "<span class=\"section-number\">6. </span>I/O Tutorial", "<span class=\"section-number\">6.1.1. </span>LED Control", "<span class=\"section-number\">9. </span>More Information", "<span class=\"section-number\">4. </span>OpenMV IDE Overview", "<span class=\"section-number\">1. </span>Overview", "<span class=\"section-number\">8. </span>Releasing your OpenMV Cam Scripts for Production", "<span class=\"section-number\">5. </span>Script Structure", "<span class=\"section-number\">2. </span>Software Setup", "<span class=\"section-number\">7. </span>System Architecture", "<span class=\"section-number\">6.1.4. </span>UART Control", "<span class=\"section-number\">5. </span>Arithmetic instructions", "<span class=\"section-number\">6. </span>Comparison instructions", "<span class=\"section-number\">11. </span>Assembler directives", "<span class=\"section-number\">10. </span>Floating point instructions", "<span class=\"section-number\">1. </span>Hints and tips", "Inline assembler for Thumb2 architectures", "<span class=\"section-number\">7. </span>Branch instructions", "<span class=\"section-number\">2. </span>Load register from memory", "<span class=\"section-number\">4. </span>Logical &amp; bitwise instructions", "<span class=\"section-number\">9. </span>Miscellaneous instructions", "<span class=\"section-number\">1. </span>Register move instructions", "<span class=\"section-number\">8. </span>Stack push and pop", "<span class=\"section-number\">3. </span>Store register to memory", "MicroPython on microcontrollers", "Working with filesystems", "Glossary", "MicroPython language and implementation", "Writing interrupt handlers", "MicroPython manifest files", "MicroPython 2.0 Migration Guide", "MicroPython remote control: mpremote", "MicroPython .mpy files", "Package management", "The pyboard.py tool", "The MicroPython Interactive Interpreter Mode (aka REPL)", "Maximising MicroPython speed"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 16, 17, 22, 28, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 129, 134, 137, 138, 142, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155], "final": [0, 4, 5, 14, 28, 29, 40, 63, 65, 67, 69, 75, 107, 116, 117, 118, 121, 123, 126, 127, 128, 129, 143, 151, 154, 155], "wa": [0, 2, 4, 5, 16, 17, 22, 31, 40, 47, 59, 63, 67, 69, 70, 72, 73, 75, 77, 79, 83, 89, 91, 93, 96, 100, 102, 106, 107, 111, 114, 118, 121, 123, 124, 128, 136, 143, 151, 154, 155], "releas": [0, 2, 4, 5, 11, 14, 25, 47, 60, 61, 62, 64, 77, 80, 81, 87, 102, 119, 149, 151], "4": [0, 1, 6, 8, 9, 10, 16, 33, 35, 40, 48, 49, 50, 51, 63, 67, 70, 77, 81, 82, 83, 85, 86, 89, 90, 92, 93, 95, 96, 102, 105, 108, 109, 111, 115, 121, 132, 134, 136, 143, 144, 146, 147, 150, 151, 154], "octob": [0, 4, 5], "2021": 0, "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 144, 145, 146, 148, 149, 150, 152], "featur": [0, 2, 3, 4, 5, 8, 11, 16, 22, 28, 46, 95, 98, 118, 123, 125, 128, 145, 146, 148, 151, 154, 155], "ar": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "defin": [0, 1, 4, 5, 8, 11, 16, 22, 34, 38, 42, 46, 51, 67, 75, 83, 85, 88, 102, 104, 110, 111, 126, 134, 135, 136, 143, 144, 147, 148, 150, 151, 152, 155], "pep": [0, 1, 2, 3, 4, 5, 9], "619": 0, "detail": [0, 4, 5, 7, 9, 16, 37, 38, 46, 67, 80, 83, 85, 87, 102, 106, 108, 111, 112, 123, 134, 135, 136, 143, 144, 147, 148, 150, 155], "descript": [0, 4, 5, 36, 40, 51, 67, 135, 148, 155], "chang": [0, 1, 2, 3, 4, 5, 6, 11, 16, 17, 31, 32, 35, 36, 38, 40, 44, 48, 50, 54, 56, 57, 66, 67, 76, 77, 78, 81, 84, 86, 94, 95, 102, 108, 111, 114, 123, 124, 131, 144, 147, 148, 151, 152, 154, 155], "can": [0, 1, 2, 3, 4, 5, 7, 11, 14, 16, 17, 20, 21, 22, 24, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "found": [0, 2, 4, 5, 6, 7, 9, 10, 16, 28, 50, 67, 106, 111, 134, 143, 144, 147, 151, 155], "what": [0, 4, 5, 16, 31, 32, 41, 67, 70, 72, 75, 76, 95, 107, 108, 114, 115, 117, 118, 123, 124, 125, 128, 129, 145, 147, 154, 155], "": [0, 1, 4, 5, 7, 9, 11, 14, 15, 16, 17, 19, 22, 28, 29, 34, 35, 42, 45, 48, 50, 52, 56, 57, 63, 67, 68, 70, 72, 75, 76, 77, 80, 81, 84, 85, 88, 89, 95, 100, 101, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 138, 143, 144, 145, 147, 148, 150, 151, 152, 153, 155], "new": [0, 1, 2, 3, 4, 5, 13, 14, 16, 17, 20, 24, 26, 31, 34, 35, 37, 40, 42, 43, 63, 67, 71, 73, 75, 76, 77, 78, 80, 81, 83, 85, 86, 89, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 114, 115, 118, 121, 123, 125, 128, 143, 145, 147, 149, 154, 155], "syntax": [0, 1, 2, 4, 8, 11, 16, 20, 48, 51, 100, 108, 135, 146, 155], "statu": [0, 1, 2, 3, 4, 5, 8, 11, 16, 41, 48, 49, 51, 81, 104, 119, 136, 139], "634": 0, "structur": [0, 11, 28, 67, 75, 77, 102, 119, 128, 134, 143, 144, 147, 155], "pattern": [0, 1, 46, 67, 77, 84, 100, 107], "match": [0, 1, 2, 3, 11, 16, 34, 48, 49, 60, 61, 62, 63, 67, 70, 72, 75, 79, 80, 85, 91, 95, 102, 123, 149, 151], "specif": [0, 2, 5, 11, 14, 16, 17, 20, 29, 31, 35, 36, 38, 42, 51, 63, 75, 77, 81, 83, 86, 89, 107, 108, 111, 112, 115, 143, 145, 147, 149, 150, 155], "1": [0, 1, 2, 3, 4, 5, 7, 10, 11, 14, 16, 17, 20, 21, 24, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 115, 116, 117, 121, 123, 129, 131, 132, 134, 138, 143, 144, 145, 147, 149, 150, 151, 153, 154, 155], "635": 0, "motiv": 0, "rational": [0, 107], "636": 0, "tutori": [0, 11, 115, 122, 123, 124, 134, 143, 144, 147, 149, 155], "bpo": 0, "12782": 0, "parenthes": [0, 4], "context": [0, 1, 2, 3, 8, 11, 14, 31, 36, 47, 63, 77, 103, 133, 145, 147, 155], "manag": [0, 2, 8, 11, 17, 22, 25, 28, 40, 47, 51, 80, 112, 123, 127, 128, 145, 146, 150, 153, 155], "now": [0, 1, 2, 3, 4, 5, 11, 16, 17, 28, 39, 41, 43, 48, 49, 51, 67, 75, 77, 87, 91, 102, 107, 115, 117, 118, 120, 122, 123, 124, 125, 126, 128, 129, 145, 154], "offici": [0, 25], "allow": [0, 1, 2, 3, 4, 8, 11, 16, 17, 20, 22, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 49, 50, 51, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 83, 84, 88, 89, 91, 94, 97, 98, 102, 103, 107, 108, 111, 112, 114, 118, 121, 123, 124, 128, 144, 145, 148, 150, 153, 154], "standard": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 17, 22, 23, 25, 26, 34, 42, 43, 48, 51, 60, 61, 67, 72, 85, 88, 94, 96, 102, 103, 105, 106, 107, 108, 118, 123, 129, 136, 143, 144, 145, 146, 154, 155], "librari": [0, 1, 2, 5, 11, 16, 17, 22, 29, 67, 70, 77, 80, 112, 120, 125, 143, 145, 146, 147, 148, 152, 155], "618": 0, "add": [0, 2, 4, 11, 16, 17, 20, 28, 41, 65, 67, 69, 73, 77, 91, 117, 123, 125, 127, 130, 134, 135, 144, 147, 148], "option": [0, 1, 2, 3, 4, 11, 16, 17, 20, 22, 26, 29, 31, 34, 38, 48, 50, 63, 70, 83, 85, 95, 99, 101, 102, 106, 107, 108, 111, 115, 118, 119, 144, 147, 148, 149, 150, 152, 153, 154], "length": [0, 1, 11, 14, 16, 20, 31, 34, 35, 36, 39, 40, 43, 48, 67, 75, 81, 83, 85, 88, 96, 102, 108, 111, 134, 151], "check": [0, 1, 2, 5, 6, 10, 11, 20, 35, 67, 74, 89, 96, 103, 106, 128, 143, 150, 151, 154, 155], "To": [0, 2, 4, 9, 14, 16, 20, 28, 30, 48, 49, 51, 63, 67, 75, 77, 83, 84, 86, 89, 91, 95, 96, 100, 102, 107, 110, 114, 117, 118, 121, 123, 124, 125, 127, 128, 129, 134, 144, 147, 148, 150, 151, 152, 155], "zip": [0, 1, 11, 18], "interpret": [0, 1, 4, 7, 11, 30, 31, 67, 75, 103, 134, 143, 145, 146, 147, 148, 150, 153, 155], "improv": [0, 1, 2, 11, 17, 22, 67, 77, 128, 143, 145, 149], "626": 0, "precis": [0, 2, 31, 45, 60, 61, 62, 63, 67, 69, 77, 79, 84, 89, 93, 107, 133, 134, 143, 147], "line": [0, 2, 5, 7, 9, 10, 11, 14, 34, 35, 36, 40, 41, 43, 46, 77, 85, 87, 89, 93, 96, 98, 102, 115, 123, 124, 143, 147, 148, 150, 153, 154], "number": [0, 1, 3, 4, 8, 9, 11, 13, 14, 16, 17, 24, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 49, 50, 51, 52, 57, 64, 65, 66, 67, 69, 70, 74, 75, 76, 77, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 111, 118, 123, 131, 134, 138, 139, 143, 144, 147, 149, 150, 151, 154, 155], "debug": [0, 4, 11, 67, 74, 83, 91, 100, 119, 125, 143, 145, 147, 155], "other": [0, 1, 2, 3, 4, 5, 6, 11, 13, 14, 16, 17, 22, 28, 29, 31, 32, 35, 36, 37, 38, 41, 42, 46, 47, 48, 50, 51, 63, 67, 71, 75, 77, 84, 85, 86, 87, 88, 89, 93, 95, 100, 101, 102, 104, 106, 107, 108, 111, 113, 120, 121, 123, 124, 126, 128, 133, 134, 143, 144, 147, 148, 149, 150, 155], "tool": [0, 11, 67, 118, 119, 124, 125, 144, 145, 146, 150, 151, 152, 154, 155], "type": [0, 1, 3, 4, 5, 8, 9, 11, 13, 16, 17, 28, 29, 34, 38, 48, 49, 50, 51, 62, 63, 67, 70, 72, 74, 75, 76, 77, 79, 81, 85, 96, 98, 102, 103, 106, 108, 110, 111, 118, 123, 125, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155], "604": 0, "write": [0, 1, 10, 11, 13, 14, 16, 22, 25, 29, 30, 31, 35, 36, 38, 39, 40, 43, 60, 61, 62, 66, 67, 69, 75, 77, 81, 83, 86, 89, 95, 96, 98, 102, 103, 104, 111, 112, 114, 115, 116, 118, 123, 124, 125, 126, 129, 140, 144, 145, 146, 149, 150, 154, 155], "union": [0, 5], "x": [0, 3, 5, 6, 7, 9, 11, 20, 27, 38, 41, 45, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 77, 79, 83, 87, 99, 108, 123, 127, 131, 134, 143, 147, 149, 150, 151, 152, 154, 155], "y": [0, 5, 7, 11, 45, 60, 61, 62, 63, 64, 66, 67, 68, 69, 73, 77, 79, 83, 89, 108, 123, 131, 149, 150, 152], "613": 0, "explicit": [0, 6, 108, 136, 143, 150, 154], "alias": [0, 29, 67, 95, 150], "612": 0, "paramet": [0, 3, 4, 5, 6, 8, 11, 16, 17, 18, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 51, 52, 67, 77, 81, 83, 84, 85, 86, 89, 93, 96, 102, 103, 107, 110, 111, 112], "variabl": [0, 2, 3, 5, 8, 11, 16, 28, 46, 47, 75, 126, 128, 134, 143, 144, 147, 148, 150, 151, 153, 155], "import": [0, 1, 2, 3, 9, 11, 14, 16, 17, 20, 22, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 60, 61, 62, 63, 65, 66, 69, 77, 79, 80, 84, 85, 86, 89, 93, 94, 95, 96, 100, 106, 108, 115, 116, 117, 120, 121, 123, 126, 129, 134, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155], "deprec": [0, 1, 31, 51, 83, 88, 102, 115], "remov": [0, 1, 2, 5, 11, 20, 28, 34, 38, 64, 67, 77, 81, 88, 118, 123, 143, 149, 150, 153], "restrict": [0, 4, 5, 6, 11, 35, 40, 46, 51, 95, 113, 147, 148, 155], "644": 0, "requir": [0, 4, 6, 8, 11, 16, 22, 29, 31, 35, 37, 38, 40, 41, 43, 46, 48, 49, 50, 51, 67, 70, 71, 72, 75, 76, 77, 83, 84, 86, 87, 89, 93, 95, 96, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 118, 123, 124, 128, 134, 139, 143, 144, 145, 147, 148, 149, 151, 155], "openssl": [0, 2], "newer": [0, 1, 2], "632": 0, "distutil": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "Not": [0, 1, 5, 6, 7, 26, 37, 38, 67, 102, 107, 115, 136], "relev": [0, 1, 5, 96, 106, 110, 111, 135, 143, 155], "623": 0, "prepar": [0, 70], "wstr": 0, "member": [0, 8, 11], "pyunicodeobject": 0, "624": 0, "py_unicod": 0, "encod": [0, 2, 5, 6, 11, 15, 16, 28, 31, 67, 72, 95, 102, 103, 105, 108, 110, 136, 143], "api": [0, 2, 3, 4, 12, 16, 31, 36, 38, 80, 82, 86, 87, 88, 95, 107, 108, 145, 149], "597": 0, "encodingwarn": 0, "languag": [0, 1, 2, 3, 4, 5, 8, 11, 106, 108, 126, 135, 145, 147, 155], "int": [0, 1, 2, 4, 8, 9, 11, 13, 18, 38, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 86, 105, 106, 116, 133, 134, 143, 151, 155], "ha": [0, 1, 2, 4, 5, 6, 8, 9, 11, 14, 16, 22, 24, 26, 27, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 49, 50, 51, 66, 67, 70, 77, 80, 81, 83, 84, 85, 86, 89, 91, 92, 93, 96, 102, 103, 104, 106, 107, 111, 115, 116, 117, 118, 121, 123, 128, 129, 131, 133, 143, 145, 147, 148, 150, 151, 152, 154, 155], "method": [0, 1, 2, 3, 4, 5, 8, 11, 13, 14, 16, 20, 22, 25, 28, 29, 31, 46, 48, 63, 77, 79, 81, 100, 103, 111, 115, 117, 121, 123, 128, 129, 143, 144, 145, 151, 154, 155], "bit_count": 0, "return": [0, 1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 123, 126, 128, 133, 135, 136, 138, 144, 145, 147, 150, 151, 154, 155], "ones": [0, 16, 128, 148], "binari": [0, 1, 2, 11, 22, 25, 26, 28, 29, 41, 50, 51, 77, 84, 102, 107, 112, 123, 129, 138, 145], "expans": [0, 154], "given": [0, 7, 13, 14, 16, 17, 18, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 46, 48, 49, 51, 52, 70, 73, 75, 77, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 105, 106, 107, 108, 111, 115, 128, 144, 147, 148, 150, 151, 153, 155], "integ": [0, 4, 11, 14, 16, 32, 33, 34, 35, 37, 38, 43, 45, 46, 51, 67, 70, 77, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 111, 131, 135, 143, 147, 151, 154, 155], "also": [0, 2, 5, 6, 16, 17, 18, 20, 21, 31, 35, 38, 41, 43, 46, 47, 50, 51, 56, 60, 61, 62, 63, 67, 70, 72, 75, 77, 80, 83, 84, 87, 89, 91, 95, 103, 107, 108, 111, 112, 123, 127, 128, 135, 136, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155], "known": [0, 16, 17, 24, 29, 38, 48, 51, 67, 103, 107, 118, 121, 133, 136, 143, 145, 147, 150, 155], "popul": [0, 20, 34, 67, 85, 134, 151], "count": [0, 2, 8, 11, 13, 43, 66, 67, 69, 77, 83, 92, 95, 96, 100, 105, 106, 108, 109, 111, 117, 138, 144, 147, 151], "view": [0, 1, 11, 38, 63, 67, 77, 95, 124, 131, 155], "dict": [0, 2, 3, 4, 5, 8, 11, 17, 18, 20, 91, 110, 143], "kei": [0, 1, 2, 4, 11, 14, 16, 17, 20, 21, 48, 50, 51, 91, 103, 108, 143, 150, 154], "valu": [0, 1, 2, 4, 5, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 51, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 77, 79, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 144, 145, 147, 150, 151, 154, 155], "item": [0, 1, 11, 13, 17, 20, 27, 99, 147, 148, 149, 155], "all": [0, 1, 2, 3, 5, 7, 9, 11, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 43, 46, 48, 53, 59, 63, 67, 68, 70, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 91, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 118, 120, 122, 123, 124, 125, 126, 128, 134, 141, 143, 144, 145, 147, 148, 150, 151, 153, 154, 155], "have": [0, 1, 2, 3, 4, 8, 9, 10, 11, 16, 18, 20, 22, 24, 28, 30, 34, 35, 37, 40, 41, 45, 50, 52, 63, 67, 70, 73, 75, 77, 81, 83, 84, 85, 87, 89, 91, 95, 101, 102, 103, 104, 107, 108, 109, 111, 114, 115, 118, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 137, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155], "map": [0, 11, 18, 23, 38, 67, 77, 87, 91, 107, 128, 134, 147, 151, 155], "attribut": [0, 1, 2, 3, 5, 8, 11, 18, 20, 77, 103, 106, 111], "give": [0, 16, 35, 41, 42, 46, 84, 89, 95, 106, 118, 123, 153], "mappingproxytyp": 0, "object": [0, 1, 2, 3, 4, 5, 8, 11, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 121, 124, 126, 128, 129, 134, 143, 144, 145, 148, 151], "wrap": [0, 4, 6, 14, 22, 25, 34, 41, 70, 75, 83, 85, 86, 103, 107], "origin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dictionari": [0, 7, 11, 14, 17, 22, 23, 25, 76, 91, 106, 108, 110, 112, 143, 147, 150, 155], "function": [0, 1, 2, 3, 4, 5, 8, 9, 11, 16, 20, 28, 34, 35, 38, 39, 41, 44, 64, 70, 71, 73, 75, 76, 78, 84, 85, 87, 89, 94, 95, 96, 98, 108, 111, 115, 120, 123, 126, 128, 130, 133, 134, 135, 139, 143, 145, 147, 149, 150, 151, 152, 155], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155], "strict": 0, "flag": [0, 2, 10, 14, 16, 17, 20, 60, 61, 62, 63, 67, 69, 74, 79, 81, 100, 101, 102, 108, 130, 131, 133, 136, 137, 138, 139, 140, 142, 147, 150, 151, 153], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 138, 140, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155], "iter": [0, 1, 2, 4, 9, 10, 11, 13, 17, 18, 20, 75, 81, 101, 148, 150, 155], "equal": [0, 1, 14, 31, 63, 65, 67, 69, 75, 77, 99, 131, 136], "builtin": [0, 7, 8, 11, 28, 29, 102, 106, 145], "extens": [0, 1, 5, 14, 24, 28, 29, 41, 101, 103, 106, 123, 143, 145, 149], "take": [0, 7, 9, 14, 16, 17, 29, 32, 34, 38, 40, 42, 46, 50, 52, 58, 63, 67, 70, 75, 76, 77, 83, 84, 85, 92, 94, 96, 98, 100, 103, 106, 107, 120, 123, 126, 134, 143, 147, 150, 151, 155], "argument": [0, 1, 2, 3, 4, 5, 8, 11, 14, 15, 16, 17, 18, 20, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 67, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 111, 117, 123, 129, 130, 131, 132, 138, 139, 141, 143, 144, 147, 148, 150, 152, 153, 155], "longer": [0, 1, 4, 5, 14, 17, 26, 34, 43, 67, 74, 85, 107, 132, 154, 155], "accept": [0, 1, 2, 4, 9, 11, 14, 16, 17, 34, 43, 48, 50, 67, 70, 72, 76, 85, 87, 102, 103, 107, 141, 143, 147, 150], "decim": [0, 4, 52], "fraction": [0, 1, 4, 37, 45, 107], "convert": [0, 2, 5, 6, 11, 15, 27, 30, 32, 34, 38, 41, 45, 51, 67, 69, 70, 72, 85, 91, 102, 107, 110, 123, 135, 143, 145, 155], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 11, 14, 16, 17, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 52, 54, 60, 61, 62, 63, 67, 77, 81, 83, 84, 85, 87, 89, 93, 95, 96, 99, 100, 102, 103, 104, 106, 107, 111, 112, 114, 115, 118, 123, 125, 128, 135, 143, 144, 145, 147, 148, 150, 151, 153, 155], "loss": [0, 77, 108, 147], "e": [0, 2, 6, 7, 11, 15, 16, 17, 19, 22, 23, 24, 28, 29, 36, 37, 45, 48, 50, 60, 61, 62, 63, 67, 72, 74, 77, 80, 82, 83, 85, 88, 95, 100, 101, 102, 103, 105, 106, 107, 108, 115, 118, 128, 130, 131, 138, 143, 144, 145, 148, 150, 152, 153, 154, 155], "g": [0, 2, 6, 7, 16, 17, 22, 25, 28, 29, 36, 48, 60, 61, 62, 63, 65, 67, 68, 69, 72, 74, 77, 79, 82, 85, 88, 91, 100, 102, 103, 106, 107, 108, 128, 130, 131, 143, 144, 145, 148, 150, 152, 153, 155], "__int__": [0, 4], "do": [0, 2, 6, 8, 10, 11, 17, 28, 31, 33, 43, 46, 59, 60, 61, 62, 63, 64, 67, 69, 70, 72, 75, 77, 78, 79, 87, 89, 99, 103, 107, 109, 113, 114, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 142, 143, 144, 147, 148, 150, 155], "__index__": [0, 4], "If": [0, 6, 9, 13, 14, 15, 16, 17, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 67, 70, 71, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 122, 123, 125, 126, 127, 128, 131, 134, 138, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155], "__ipow__": 0, "notimpl": 0, "oper": [0, 1, 2, 4, 5, 7, 8, 11, 16, 17, 21, 27, 28, 29, 31, 34, 36, 38, 42, 46, 67, 75, 77, 83, 84, 85, 99, 100, 101, 102, 107, 108, 111, 114, 118, 124, 131, 135, 136, 139, 144, 145, 147, 153, 155], "correctli": [0, 2, 30, 31, 44], "fall": [0, 38, 67, 87, 95, 107, 143], "back": [0, 22, 67, 68, 73, 75, 76, 77, 95, 107, 112, 115, 118, 123, 125, 144, 147, 150, 154], "__pow__": 0, "__rpow__": 0, "expect": [0, 16, 31, 37, 67, 70, 72, 75, 107, 133, 147], "assign": [0, 4, 8, 11, 40, 67, 80, 85, 91, 108, 115, 134, 143, 147], "express": [0, 1, 2, 3, 4, 5, 8, 10, 11, 28, 46, 102, 107, 113, 123, 150], "unparenthes": [0, 5], "within": [0, 4, 14, 16, 34, 42, 46, 48, 67, 72, 75, 77, 83, 84, 85, 89, 95, 96, 108, 111, 114, 134, 148, 151, 154], "set": [0, 1, 2, 3, 11, 14, 16, 17, 18, 20, 22, 24, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 112, 114, 115, 118, 123, 125, 126, 131, 133, 134, 135, 136, 138, 139, 140, 141, 145, 147, 148, 150, 151, 152, 153, 154, 155], "liter": [0, 2, 4, 8, 11, 67, 100, 108, 143], "comprehens": [0, 2, 4, 5, 8, 11, 151], "well": [0, 16, 17, 24, 28, 34, 85, 102, 104, 108, 123, 124, 145, 148, 152], "sequenc": [0, 2, 20, 99, 100, 102, 134, 150], "index": [0, 1, 2, 6, 11, 13, 16, 20, 31, 34, 64, 67, 73, 81, 85, 91, 100, 104, 106, 111, 129, 147, 152], "slice": [0, 11, 13, 18, 155], "__builtins__": 0, "which": [0, 1, 2, 3, 4, 6, 8, 11, 14, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 131, 133, 134, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "i": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "look": [0, 11, 28, 41, 67, 75, 106, 107, 114, 118, 120, 123, 125, 150, 151, 152, 154, 155], "symbol": [0, 7, 20, 23, 67, 102, 143, 150], "when": [0, 1, 2, 3, 4, 5, 8, 11, 14, 16, 20, 22, 24, 25, 28, 29, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 85, 86, 87, 89, 91, 95, 96, 98, 99, 100, 102, 103, 105, 108, 111, 112, 114, 118, 121, 123, 124, 126, 128, 131, 133, 134, 136, 143, 144, 145, 147, 148, 150, 151, 152, 154, 155], "execut": [0, 9, 11, 31, 42, 46, 47, 63, 70, 75, 76, 77, 83, 92, 104, 106, 114, 123, 124, 125, 127, 128, 132, 133, 134, 136, 138, 139, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "instead": [0, 1, 5, 6, 8, 11, 14, 17, 22, 25, 28, 31, 38, 40, 41, 51, 60, 61, 62, 63, 67, 70, 71, 72, 77, 83, 93, 100, 101, 102, 103, 106, 107, 108, 112, 114, 118, 123, 127, 129, 138, 144, 145, 148, 150, 152, 153, 155], "__globals__": [0, 7], "initi": [0, 2, 4, 13, 16, 20, 21, 24, 29, 36, 38, 39, 52, 56, 57, 58, 60, 61, 62, 63, 66, 67, 77, 78, 79, 80, 86, 95, 103, 106, 126, 135, 138, 143, 147, 151, 154], "from": [0, 1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 16, 17, 18, 20, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 56, 57, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 120, 123, 125, 128, 129, 131, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "exist": [0, 4, 11, 16, 17, 21, 23, 26, 32, 34, 35, 40, 41, 75, 83, 96, 98, 103, 106, 111, 118, 123, 124, 143, 148, 149, 150, 151, 153, 154, 155], "els": [0, 34, 47, 70, 85, 98, 102, 106, 123, 125, 131], "current": [0, 1, 2, 3, 7, 8, 14, 16, 17, 22, 24, 26, 29, 31, 36, 37, 38, 39, 46, 48, 50, 51, 63, 64, 67, 70, 77, 81, 83, 89, 91, 92, 94, 95, 103, 106, 107, 108, 111, 114, 115, 118, 123, 124, 134, 139, 143, 147, 148, 149, 150, 153, 155], "two": [0, 1, 4, 5, 7, 11, 14, 16, 17, 31, 34, 37, 41, 45, 48, 51, 52, 59, 63, 67, 76, 77, 80, 83, 85, 96, 107, 111, 112, 118, 121, 123, 128, 131, 132, 133, 134, 138, 143, 147, 151, 152, 154, 155], "aiter": 0, "anext": 0, "been": [0, 1, 2, 4, 5, 16, 24, 28, 34, 43, 50, 67, 73, 77, 81, 85, 87, 123, 128, 143, 145, 148, 150, 152, 154, 155], "ad": [0, 1, 2, 3, 4, 5, 7, 11, 16, 20, 22, 29, 43, 64, 65, 67, 69, 70, 77, 92, 104, 106, 111, 125, 128, 131, 133, 137, 142, 144, 147, 149, 150, 152, 155], "provid": [0, 1, 2, 11, 13, 14, 16, 19, 22, 23, 25, 26, 28, 29, 32, 33, 34, 35, 37, 38, 45, 46, 47, 48, 49, 50, 51, 58, 67, 71, 81, 83, 85, 89, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 115, 123, 131, 133, 135, 136, 139, 143, 144, 145, 147, 149, 150, 151, 153, 154, 155], "asynchron": [0, 2, 11, 28, 29, 101, 120, 145], "counterpart": 0, "next": [0, 5, 7, 11, 14, 18, 37, 67, 75, 77, 96, 106, 116, 118, 123, 126, 128, 131, 143, 147, 149, 150, 151, 154], "respect": [0, 16, 35, 37, 38, 40, 67, 70, 77, 83, 84, 85, 89, 91, 93, 108, 130, 135, 146, 148], "static": [0, 16, 36, 50, 111, 134, 152], "staticmethod": [0, 11, 18, 134], "class": [0, 1, 2, 3, 4, 6, 8, 11, 18, 26, 28, 46, 64, 66, 78, 81, 100, 107, 108, 111, 115, 120, 121, 144, 145, 147, 149, 151, 155], "classmethod": [0, 11, 18, 21, 87, 91], "inherit": [0, 4, 8, 11, 28], "__module__": [0, 2, 8, 11], "__name__": [0, 7, 154], "__qualname__": 0, "__doc__": 0, "__annotations__": 0, "__wrapped__": 0, "moreov": 0, "callabl": [0, 11, 18, 38, 42, 70, 106], "regular": [0, 1, 2, 4, 6, 9, 11, 28, 31, 81, 121, 123, 150, 154], "annot": [0, 2, 3, 5], "complex": [0, 2, 4, 7, 11, 18, 28, 41, 70, 108, 124, 128, 143, 145], "target": [0, 11, 26, 35, 52, 80, 108, 123, 136, 145, 150, 152, 155], "everyth": [0, 44, 67, 76, 123, 124, 125, 128], "besid": [0, 17], "simpl": [0, 11, 28, 41, 67, 71, 75, 88, 124, 128, 134, 135, 143, 144, 147, 152], "name": [0, 2, 3, 4, 5, 8, 11, 16, 18, 20, 28, 29, 38, 46, 48, 49, 51, 66, 67, 70, 75, 76, 80, 81, 82, 87, 91, 95, 100, 102, 103, 104, 106, 107, 108, 110, 111, 123, 125, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155], "526": [0, 2], "caus": [0, 6, 7, 9, 10, 31, 46, 63, 67, 95, 96, 117, 129, 132, 134, 136, 147, 155], "ani": [0, 5, 6, 9, 11, 14, 16, 17, 18, 20, 22, 25, 26, 31, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 53, 56, 57, 63, 67, 69, 70, 72, 75, 76, 77, 81, 83, 84, 85, 87, 89, 91, 93, 95, 96, 98, 99, 100, 101, 103, 107, 111, 113, 118, 123, 125, 126, 127, 128, 129, 132, 133, 134, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "runtim": [0, 1, 4, 6, 11, 46, 143, 145, 151, 152, 155], "effect": [0, 7, 24, 26, 52, 67, 77, 91, 104, 108, 123, 126, 135, 145], "__future__": 0, "lazi": 0, "creat": [0, 1, 13, 14, 16, 17, 20, 26, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 108, 111, 114, 115, 117, 118, 120, 121, 122, 123, 126, 129, 132, 143, 144, 147, 150, 153, 154, 155], "empti": [0, 1, 3, 5, 13, 14, 16, 20, 27, 29, 34, 36, 67, 75, 85, 100, 101, 106, 123, 143], "demand": [0, 70, 143], "store": [0, 9, 11, 16, 17, 20, 27, 34, 35, 38, 43, 46, 63, 67, 70, 77, 84, 85, 88, 96, 98, 102, 105, 106, 111, 114, 118, 123, 128, 132, 133, 134, 135, 136, 143, 144, 145, 147, 151, 154, 155], "__dict__": [0, 13], "backward": [0, 81, 83, 144], "compat": [0, 6, 9, 10, 11, 16, 18, 20, 28, 67, 76, 81, 83, 101, 102, 106, 107, 111, 144, 145], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "best": [0, 5, 28, 31, 46, 65, 67, 69, 76, 77, 123, 125, 143, 146, 147, 155], "practic": [0, 11, 146], "work": [0, 1, 2, 3, 7, 8, 9, 11, 13, 16, 17, 19, 22, 25, 31, 38, 41, 45, 48, 50, 51, 63, 67, 70, 76, 77, 95, 98, 99, 102, 107, 108, 111, 112, 114, 115, 118, 123, 124, 125, 126, 127, 128, 134, 138, 143, 145, 146, 147, 149, 150, 153, 155], "consist": [0, 5, 34, 35, 36, 40, 43, 85, 89, 95, 96, 102, 108, 145, 147, 149, 151], "yield": [0, 4, 7, 81, 101], "await": [0, 1, 3, 14, 36, 147], "forbidden": 0, "under": [0, 16, 28, 46, 64, 68, 75, 76, 78, 111, 118, 123, 126, 143], "due": [0, 1, 4, 5, 16, 24, 28, 34, 37, 51, 67, 85, 100, 102, 104, 106, 118, 123, 145], "side": [0, 2, 11, 17, 20, 29, 31, 67, 75, 100, 102, 103, 104, 118, 150], "usag": [0, 6, 7, 11, 16, 17, 22, 23, 26, 29, 32, 33, 34, 35, 37, 38, 39, 40, 44, 46, 47, 49, 50, 51, 60, 61, 62, 63, 65, 66, 67, 69, 77, 79, 80, 84, 85, 86, 91, 92, 93, 94, 95, 101, 107, 108, 112, 115, 143, 147, 150, 153, 155], "unbound": 0, "super": [0, 2, 6, 8, 11, 18, 123], "might": [0, 16, 38, 39, 67, 75, 77, 95, 111, 118, 123, 124, 128, 143, 144, 147, 148, 150, 152], "alter": [0, 147], "process": [0, 4, 5, 16, 17, 31, 33, 47, 52, 63, 67, 70, 71, 72, 73, 75, 77, 84, 101, 102, 107, 111, 123, 124, 125, 131, 134, 136, 139, 143, 145, 147, 148, 155], "tabl": [0, 11, 34, 60, 61, 62, 63, 67, 68, 69, 79, 80, 85, 86, 88, 104, 143, 144], "render": [0, 60, 61, 62, 63, 67, 69, 79], "effectless": 0, "hash": [0, 2, 11, 18, 28, 143, 151], "nan": [0, 1, 2], "both": [0, 6, 7, 9, 13, 14, 15, 16, 17, 22, 31, 33, 34, 35, 36, 40, 41, 42, 43, 45, 46, 51, 67, 75, 77, 80, 85, 86, 89, 92, 94, 95, 96, 102, 103, 107, 108, 111, 114, 123, 143, 144, 145, 147, 149], "float": [0, 2, 4, 5, 8, 11, 13, 14, 18, 45, 51, 52, 60, 61, 62, 63, 67, 68, 70, 71, 72, 73, 77, 79, 84, 95, 102, 105, 107, 108, 117, 134, 135, 143], "depend": [0, 7, 13, 16, 22, 23, 26, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 67, 70, 72, 75, 80, 84, 85, 89, 91, 100, 101, 102, 103, 104, 107, 108, 111, 120, 123, 131, 143, 147, 148, 152, 153], "ident": [0, 16, 67, 130, 133, 138, 145, 146], "formerli": [0, 5], "thei": [0, 9, 16, 17, 18, 20, 28, 29, 32, 33, 35, 38, 40, 46, 50, 65, 67, 69, 71, 77, 81, 89, 91, 95, 101, 102, 103, 106, 107, 111, 114, 134, 139, 143, 144, 147, 148, 150, 151], "alwai": [0, 1, 2, 5, 7, 22, 25, 27, 28, 33, 34, 38, 46, 48, 67, 75, 77, 81, 83, 85, 93, 100, 102, 107, 108, 115, 118, 133, 144, 145, 147], "even": [0, 2, 28, 29, 35, 41, 43, 67, 69, 77, 96, 101, 102, 107, 108, 111, 115, 124, 128, 143, 147, 150, 153], "though": [0, 4, 77, 102, 107, 108], "one": [0, 1, 2, 8, 11, 14, 16, 17, 29, 34, 35, 37, 38, 41, 42, 43, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 67, 75, 77, 80, 81, 83, 85, 87, 91, 92, 95, 96, 98, 99, 100, 101, 103, 106, 108, 111, 114, 115, 116, 120, 121, 123, 125, 126, 128, 130, 131, 133, 134, 136, 138, 143, 145, 147, 148, 150, 151, 152, 154, 155], "anoth": [0, 2, 6, 11, 16, 17, 22, 28, 29, 31, 35, 46, 50, 67, 74, 75, 77, 96, 104, 106, 107, 114, 123, 134, 143, 147, 148, 150], "potenti": [0, 1, 36, 75, 143, 147], "quadrat": 0, "behavior": [0, 4, 80, 114, 123, 150], "excess": [0, 24, 84], "collis": [0, 7, 128], "contain": [0, 2, 3, 5, 8, 11, 13, 14, 16, 17, 28, 29, 31, 34, 35, 36, 40, 43, 48, 50, 63, 66, 67, 71, 72, 73, 75, 81, 83, 85, 86, 91, 96, 98, 100, 101, 102, 103, 107, 108, 109, 110, 111, 128, 131, 138, 139, 141, 143, 145, 148, 150, 151], "multipl": [0, 1, 4, 5, 8, 11, 16, 38, 40, 43, 46, 48, 51, 61, 63, 67, 70, 77, 83, 87, 88, 91, 100, 101, 102, 108, 111, 114, 123, 131, 133, 143, 147, 150, 154], "A": [0, 1, 2, 3, 4, 6, 7, 10, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 43, 46, 47, 48, 50, 60, 61, 62, 63, 67, 69, 70, 73, 75, 77, 79, 81, 83, 85, 86, 87, 89, 91, 96, 100, 102, 103, 106, 108, 111, 112, 113, 118, 123, 124, 138, 143, 144, 145, 147, 148, 150, 151, 152, 154, 155], "syntaxerror": [0, 8, 11, 18], "nameerror": [0, 7, 11, 18], "rais": [0, 1, 2, 5, 6, 8, 9, 11, 14, 16, 20, 27, 29, 30, 35, 37, 42, 43, 46, 48, 50, 67, 75, 95, 96, 98, 99, 101, 102, 106, 107, 111, 143, 147, 150, 151, 154, 155], "delet": [0, 11, 18, 31, 70, 110], "__debug__": [0, 46], "constant": [0, 1, 2, 11, 16, 46, 101, 108, 126, 143, 148, 155], "except": [0, 1, 2, 4, 7, 8, 10, 11, 14, 17, 23, 28, 29, 34, 35, 38, 42, 43, 46, 50, 59, 64, 75, 77, 85, 87, 91, 95, 96, 98, 100, 101, 102, 106, 107, 108, 111, 130, 135, 137, 138, 139, 142, 143, 148, 150, 154], "end_lineno": 0, "end_offset": 0, "none": [0, 2, 7, 9, 11, 14, 16, 17, 30, 34, 35, 36, 38, 39, 40, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 89, 91, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 144, 147, 148, 149, 151], "determin": [0, 35, 40, 44, 67, 76, 85, 89, 91, 95, 103, 107, 112, 123, 125, 134, 136, 139, 147, 148, 151, 154, 155], "built": [0, 1, 2, 3, 4, 5, 11, 16, 25, 35, 46, 48, 67, 70, 83, 106, 112, 118, 123, 124, 128, 143, 145, 147, 150, 155], "asyncio": [0, 3, 4, 5, 11, 28, 36], "miss": [0, 4, 28, 123], "connect_accepted_socket": 0, "arrai": [0, 2, 7, 8, 11, 34, 36, 39, 41, 52, 63, 66, 67, 72, 77, 84, 85, 86, 91, 108, 111, 132, 133, 134, 143, 147], "start": [0, 3, 4, 11, 14, 16, 17, 23, 28, 31, 35, 39, 44, 46, 50, 60, 61, 62, 63, 67, 75, 76, 77, 79, 80, 83, 86, 88, 89, 92, 99, 100, 105, 106, 107, 108, 111, 115, 125, 127, 128, 134, 144, 147, 148, 150, 152, 153, 154, 155], "stop": [0, 11, 14, 16, 31, 34, 35, 42, 43, 44, 50, 52, 67, 77, 80, 83, 85, 92, 95, 96, 99, 100, 107, 123, 150, 153], "gc": [0, 3, 4, 5, 7, 11, 28, 155], "audit": [0, 4], "hook": [0, 1, 4], "get_object": [0, 4], "get_referr": 0, "get_refer": 0, "hashlib": [0, 2, 11, 28], "preliminari": 0, "support": [0, 1, 2, 3, 4, 5, 8, 11, 13, 16, 17, 20, 21, 22, 25, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 48, 50, 51, 54, 60, 61, 67, 70, 72, 83, 84, 85, 89, 93, 95, 96, 99, 100, 102, 103, 105, 106, 108, 111, 112, 115, 118, 121, 123, 127, 128, 133, 134, 135, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155], "pure": [0, 29, 63, 64, 67, 75, 78, 145], "fallback": [0, 154], "pbkdf2_hmac": 0, "In": [0, 3, 4, 6, 14, 16, 18, 28, 29, 31, 34, 35, 37, 40, 41, 43, 46, 47, 51, 52, 67, 75, 77, 84, 85, 88, 95, 96, 99, 101, 102, 104, 107, 108, 111, 115, 118, 123, 127, 130, 134, 135, 137, 138, 142, 143, 147, 148, 149, 150, 154, 155], "futur": [0, 4, 14, 28, 39, 67, 88, 102, 117], "pbkdf2": 0, "hmac": [0, 148], "avail": [0, 1, 2, 4, 5, 11, 16, 18, 22, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 48, 50, 51, 63, 67, 70, 77, 81, 82, 83, 85, 86, 87, 91, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 112, 114, 115, 120, 123, 128, 135, 143, 144, 145, 148, 149, 150, 152, 153, 154], "o": [0, 1, 2, 5, 8, 11, 16, 20, 23, 28, 29, 31, 50, 60, 61, 62, 63, 77, 79, 83, 84, 101, 106, 107, 108, 111, 115, 116, 117, 119, 123, 126, 128, 144, 145, 147, 150, 152, 155], "cpu_count": 0, "vxwork": 0, "rto": [0, 106, 107], "eventfd": 0, "relat": [0, 11, 28, 45, 67, 81, 131, 145, 147], "helper": [0, 29, 126], "eventfd2": 0, "syscal": [0, 1, 2], "linux": [0, 1, 2, 5, 11, 47, 106, 114, 118, 119, 123, 124, 145, 150], "splice": 0, "move": [0, 11, 64, 67, 75, 81, 94, 115, 117, 118, 123, 128, 135, 136, 149], "data": [0, 1, 3, 4, 6, 9, 11, 14, 15, 16, 17, 21, 22, 25, 26, 28, 29, 30, 31, 34, 35, 36, 39, 40, 43, 47, 48, 49, 50, 55, 65, 67, 69, 70, 72, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 93, 94, 96, 97, 98, 101, 102, 103, 104, 110, 112, 115, 118, 120, 124, 128, 129, 131, 135, 143, 144, 145, 147, 151, 154, 155], "between": [0, 2, 4, 7, 8, 11, 15, 16, 30, 31, 35, 36, 37, 38, 41, 43, 46, 63, 67, 69, 70, 75, 77, 79, 80, 83, 84, 85, 86, 89, 90, 94, 95, 96, 99, 107, 109, 112, 115, 116, 117, 123, 129, 134, 143, 146, 151], "file": [0, 1, 2, 5, 6, 7, 9, 10, 11, 17, 22, 25, 28, 29, 30, 41, 50, 65, 67, 69, 70, 80, 81, 83, 88, 98, 102, 103, 104, 106, 108, 110, 111, 112, 113, 114, 118, 119, 125, 127, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155], "descriptor": [0, 1, 5, 11, 16, 83], "without": [0, 4, 16, 24, 31, 34, 35, 43, 48, 49, 67, 70, 75, 77, 79, 83, 85, 86, 106, 107, 108, 111, 113, 114, 120, 121, 123, 125, 128, 131, 144, 145, 147, 149, 150, 153], "copi": [0, 1, 2, 3, 11, 16, 25, 34, 67, 75, 77, 83, 108, 112, 113, 118, 123, 139, 143, 145, 148, 149, 150, 152, 153, 154, 155], "kernel": [0, 2, 67, 123], "address": [0, 1, 2, 11, 14, 16, 31, 35, 48, 49, 50, 51, 59, 63, 66, 75, 77, 80, 89, 91, 104, 108, 115, 133, 134, 136, 137, 142, 143, 145, 150, 153, 155], "space": [0, 3, 7, 8, 9, 11, 16, 20, 43, 63, 67, 70, 77, 104, 108, 118, 123, 128, 129, 143, 145, 150, 154], "user": [0, 8, 11, 16, 17, 28, 29, 31, 36, 39, 40, 41, 81, 91, 96, 102, 107, 111, 123, 125, 143, 145, 147, 150, 152, 153], "where": [0, 4, 8, 11, 13, 16, 23, 29, 31, 39, 47, 48, 51, 56, 57, 67, 73, 77, 82, 83, 84, 85, 86, 87, 102, 108, 111, 112, 123, 127, 130, 131, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 147, 150, 154, 155], "must": [0, 2, 3, 14, 16, 17, 18, 20, 22, 25, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 46, 48, 50, 51, 52, 58, 63, 65, 67, 69, 73, 75, 77, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 98, 100, 101, 102, 103, 106, 107, 111, 112, 114, 115, 132, 133, 134, 135, 136, 138, 143, 144, 147, 148, 150, 151, 152, 153, 155], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "pipe": 0, "o_evtonli": 0, "o_fsync": 0, "o_symlink": 0, "o_nofollow_ani": 0, "maco": [0, 145], "platform": [0, 5, 11, 28, 35, 37, 40, 80, 81, 89, 101, 106, 133, 143, 147, 155], "freedesktop_os_releas": 0, "retriev": [0, 17, 48, 49, 51, 82], "system": [0, 1, 2, 7, 11, 28, 29, 31, 35, 38, 39, 40, 44, 67, 74, 77, 80, 82, 83, 88, 102, 107, 108, 114, 118, 119, 120, 123, 124, 125, 127, 144, 145, 147, 150, 151, 153], "identif": 0, "freedesktop": 0, "org": [0, 6, 48, 102, 107, 108, 145, 146, 150, 152], "socket": [0, 1, 2, 5, 9, 11, 14, 16, 22, 25, 28, 29, 48, 49, 50, 51, 103, 108, 112], "timeout": [0, 1, 5, 14, 16, 31, 34, 35, 43, 44, 50, 59, 63, 71, 75, 77, 80, 85, 89, 92, 93, 96, 97, 98, 101, 102, 107, 109], "alia": [0, 14, 67, 69, 102, 108, 150], "timeouterror": [0, 14, 107], "mptcp": 0, "ipproto_mptcp": 0, "ip_recvto": 0, "receiv": [0, 1, 4, 14, 16, 34, 35, 36, 40, 43, 50, 59, 63, 64, 67, 70, 75, 77, 80, 85, 89, 93, 95, 96, 97, 98, 102, 103, 104, 109, 115, 120, 122, 129, 134, 145, 147, 154], "servic": [0, 11, 16, 28, 47, 48, 50, 80, 102, 147, 155], "ToS": 0, "dscp": 0, "ecn": 0, "field": [0, 20, 39, 48, 63, 67, 77, 81, 108, 151], "ssl": [0, 1, 2, 5, 11, 14, 28], "op_ignore_unexpected_eof": 0, "result": [0, 1, 4, 8, 9, 11, 16, 21, 28, 30, 37, 38, 48, 52, 56, 57, 60, 61, 62, 63, 65, 67, 69, 71, 73, 75, 76, 77, 79, 83, 84, 96, 100, 102, 104, 107, 115, 128, 130, 131, 133, 134, 136, 143, 147, 148, 150, 154, 155], "deprecationwarn": [0, 3], "sslcontext": [0, 2, 11, 14], "op_no_sslv2": 0, "op_no_sslv3": 0, "default": [0, 1, 2, 4, 5, 14, 16, 17, 22, 25, 30, 32, 33, 34, 35, 39, 46, 48, 49, 50, 56, 60, 61, 62, 63, 67, 68, 69, 71, 76, 77, 79, 80, 83, 84, 85, 86, 88, 95, 98, 100, 101, 102, 106, 108, 111, 112, 115, 123, 127, 129, 143, 144, 147, 148, 150, 152, 153, 155], "therefor": [0, 22, 37, 46, 86, 145, 147], "cannot": [0, 2, 6, 8, 10, 11, 13, 14, 16, 24, 26, 28, 35, 40, 44, 54, 67, 69, 114, 125, 134, 143, 147, 150, 155], "warn": [0, 28, 34, 85], "about": [0, 1, 11, 14, 16, 22, 34, 35, 37, 40, 46, 51, 59, 67, 77, 81, 83, 85, 89, 91, 92, 100, 104, 106, 108, 112, 115, 118, 120, 121, 123, 124, 126, 143, 147, 150], "again": [0, 16, 37, 39, 41, 43, 46, 75, 77, 101, 104, 107, 108, 116, 118, 123, 128, 143, 150, 154, 155], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "secur": [0, 2, 5, 16, 26, 48, 50, 51, 103, 150], "cipher": [0, 1, 2, 11, 28, 103], "forward": [0, 83, 123, 124, 125], "secreci": 0, "sha": [0, 2], "mac": [0, 11, 16, 31, 48, 49, 50, 51, 118, 119, 123], "disabl": [0, 11, 24, 31, 34, 37, 42, 46, 51, 59, 64, 70, 74, 77, 78, 80, 83, 85, 86, 87, 92, 95, 96, 98, 104, 106, 108, 111, 123, 139, 147, 150], "level": [0, 2, 11, 22, 28, 29, 31, 34, 35, 36, 38, 40, 41, 43, 46, 48, 49, 51, 60, 61, 62, 63, 67, 69, 71, 75, 77, 79, 85, 88, 89, 91, 93, 96, 100, 102, 104, 107, 112, 115, 145, 146, 150, 151, 154], "2": [0, 1, 2, 6, 7, 9, 10, 11, 13, 14, 16, 17, 20, 21, 22, 31, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 60, 61, 62, 63, 66, 67, 69, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 114, 115, 118, 121, 123, 132, 134, 135, 136, 143, 146, 147, 150, 151, 152, 153, 154, 155], "prohibit": [0, 5, 29], "weak": [0, 38], "rsa": 0, "dh": 0, "ecc": 0, "less": [0, 1, 20, 22, 24, 29, 34, 52, 60, 61, 62, 63, 67, 69, 75, 79, 83, 85, 86, 99, 102, 106, 123, 136, 145, 154], "than": [0, 1, 3, 4, 5, 9, 14, 16, 22, 24, 28, 34, 35, 37, 38, 40, 41, 43, 48, 52, 60, 61, 62, 63, 67, 69, 70, 72, 74, 75, 77, 79, 81, 83, 85, 86, 89, 99, 101, 102, 105, 106, 107, 112, 118, 123, 124, 130, 132, 134, 136, 143, 145, 147, 148, 152, 154, 155], "112": [0, 63], "bit": [0, 5, 6, 8, 11, 16, 31, 33, 34, 35, 36, 37, 40, 41, 43, 45, 52, 55, 56, 61, 63, 65, 67, 68, 75, 77, 78, 83, 84, 85, 86, 89, 92, 93, 96, 99, 104, 105, 106, 108, 112, 115, 116, 128, 130, 133, 134, 135, 136, 137, 138, 140, 142, 143, 151, 154, 155], "minimum": [0, 2, 16, 17, 31, 32, 63, 67, 71, 86, 94, 106, 111, 125, 143, 151], "protocol": [0, 1, 2, 4, 11, 16, 17, 31, 34, 39, 41, 43, 51, 83, 85, 88, 96, 102, 103, 107, 108, 111, 144, 145, 150, 154, 155], "version": [0, 1, 2, 11, 17, 28, 50, 67, 74, 81, 82, 88, 96, 100, 101, 104, 106, 118, 123, 135, 146, 148, 152, 153], "tl": [0, 2, 11, 28], "base": [0, 2, 3, 4, 5, 11, 16, 17, 19, 22, 23, 29, 36, 37, 45, 48, 50, 52, 56, 60, 61, 62, 63, 67, 69, 70, 72, 75, 77, 79, 83, 91, 103, 104, 108, 112, 128, 139, 143, 144, 145, 148, 150, 151], "hynek": 0, "schlawack": 0, "research": 0, "doe": [0, 5, 8, 11, 13, 14, 16, 17, 22, 38, 46, 48, 63, 67, 75, 76, 83, 84, 86, 89, 98, 102, 103, 107, 111, 114, 118, 125, 128, 140, 143, 147, 150, 151, 152, 153, 154, 155], "block": [0, 1, 2, 5, 11, 14, 16, 21, 22, 29, 31, 32, 33, 35, 36, 40, 43, 46, 47, 50, 62, 63, 67, 71, 75, 77, 79, 80, 81, 83, 84, 88, 91, 98, 102, 103, 108, 114, 128, 129, 132, 143, 147, 155], "them": [0, 14, 16, 17, 29, 31, 35, 38, 40, 41, 48, 67, 70, 71, 74, 77, 81, 89, 98, 102, 107, 108, 111, 123, 131, 134, 138, 141, 145, 146, 147, 148, 149, 150, 155], "activ": [0, 11, 16, 34, 38, 41, 46, 48, 49, 50, 51, 75, 76, 77, 83, 84, 85, 95, 96, 101, 104, 115, 123, 147, 150], "howev": [0, 1, 9, 13, 16, 28, 31, 63, 67, 70, 72, 75, 77, 80, 102, 107, 117, 118, 123, 125, 128, 143, 144, 145, 147, 148, 150, 152, 155], "build": [0, 5, 6, 7, 9, 10, 11, 16, 22, 28, 48, 70, 81, 106, 111, 124, 125, 128, 143, 144, 149, 151, 152], "distro": 0, "configur": [0, 2, 4, 11, 28, 31, 32, 33, 34, 35, 38, 41, 42, 50, 51, 83, 84, 85, 88, 89, 91, 95, 96, 98, 99, 106, 111, 112, 123, 144, 149, 150], "vendor": [0, 83], "patch": [0, 11, 50, 67, 74, 110], "suit": [0, 2, 103], "mai": [0, 8, 11, 14, 16, 17, 22, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 50, 51, 52, 59, 60, 61, 62, 63, 64, 67, 70, 71, 74, 75, 76, 77, 81, 83, 84, 89, 95, 96, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 114, 115, 118, 123, 124, 127, 130, 131, 133, 134, 138, 139, 143, 144, 145, 147, 150, 151, 154, 155], "prevent": [0, 6, 16, 24, 28, 43, 44, 46, 67, 77, 84, 118, 123, 125, 150, 155], "success": [0, 16, 47, 51, 75, 101, 111, 147], "handshak": [0, 1, 2, 103], "get_server_certif": 0, "heap": [0, 11, 24, 28, 31, 34, 46, 63, 67, 70, 75, 77, 84, 85, 107, 128, 145, 147, 150, 155], "multi": [0, 41, 67, 108], "phase": [0, 11, 19, 40, 67, 85, 93, 115], "verifi": [0, 44, 59, 118], "verify_x509_partial_chain": 0, "sy": [0, 1, 2, 3, 4, 5, 7, 8, 11, 28, 104, 151, 152], "orig_argv": 0, "list": [0, 1, 2, 3, 8, 9, 11, 13, 14, 16, 18, 20, 27, 34, 35, 46, 48, 50, 51, 54, 63, 64, 67, 70, 71, 73, 81, 83, 85, 89, 97, 98, 99, 100, 101, 102, 103, 106, 110, 115, 122, 136, 143, 147, 148, 149, 150, 151, 153, 155], "command": [0, 5, 11, 75, 77, 104, 123, 127, 143, 145, 148, 154], "pass": [0, 1, 3, 4, 6, 7, 11, 14, 16, 17, 26, 28, 31, 39, 41, 42, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 87, 89, 91, 93, 95, 98, 99, 100, 103, 104, 107, 108, 117, 121, 133, 139, 143, 147, 148, 153, 155], "stdlib_module_nam": 0, "_thread": [0, 11, 28], "interrupt_main": 0, "signal": [0, 4, 11, 29, 31, 34, 36, 38, 40, 43, 48, 50, 83, 85, 86, 93, 94, 95, 96, 104, 115, 128, 145, 155], "simul": [0, 147], "still": [0, 2, 16, 17, 24, 28, 29, 31, 43, 46, 61, 74, 84, 91, 100, 102, 106, 107, 112, 118, 123, 124, 125, 128, 143, 144, 145, 148, 151, 152, 153], "sigint": [0, 4], "note": [0, 1, 3, 4, 5, 11, 13, 14, 16, 17, 21, 22, 25, 29, 31, 34, 35, 38, 44, 45, 46, 47, 56, 57, 60, 61, 62, 63, 65, 66, 67, 69, 70, 75, 76, 77, 79, 80, 83, 85, 87, 89, 93, 95, 96, 100, 101, 102, 103, 106, 107, 108, 111, 112, 114, 115, 116, 119, 120, 123, 126, 129, 131, 133, 134, 138, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155], "discuss": [0, 42, 46, 107, 128, 143, 155], "issu": [0, 11, 16, 29, 67, 75, 83, 111, 114, 118, 123, 127, 132, 134, 136, 143, 144, 150, 155], "7847": 0, "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "cpython": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "implement": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "subset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "below": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "inform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "finalis": [1, 80], "group": [1, 2, 11, 100, 115, 145, 155], "impact": [1, 147], "micropython": [1, 4, 5, 6, 9, 14, 16, 18, 22, 23, 24, 25, 26, 29, 31, 34, 36, 41, 42, 47, 48, 51, 63, 67, 70, 77, 80, 81, 82, 83, 88, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 121, 123, 124, 127, 128, 129, 133, 135, 140, 144, 145, 152, 153], "448": 1, "addit": [1, 11, 15, 17, 24, 28, 29, 32, 33, 34, 38, 40, 41, 43, 48, 51, 77, 85, 89, 91, 93, 95, 96, 107, 112, 115, 117, 123, 127, 131, 143, 144, 148, 150, 152, 154, 155], "unpack": [1, 4, 8, 11, 28, 75], "gener": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 22, 26, 28, 31, 37, 38, 48, 51, 63, 67, 75, 76, 77, 83, 85, 86, 87, 89, 95, 102, 103, 104, 108, 116, 117, 118, 120, 121, 123, 124, 125, 127, 129, 133, 134, 139, 141, 143, 145, 148, 151, 153, 155], "partial": [1, 3, 118, 139, 147], "465": 1, "matrix": [1, 67], "complet": [1, 2, 3, 4, 5, 8, 11, 14, 16, 34, 63, 65, 67, 69, 75, 80, 85, 86, 95, 102, 103, 118, 120, 123, 128, 143, 147, 148, 151], "492": [1, 39], "coroutin": [1, 4, 5, 14, 147], "async": [1, 3, 4, 5, 14, 75, 147], "461": 1, "format": [1, 2, 3, 11, 13, 15, 22, 25, 30, 31, 36, 39, 48, 50, 63, 65, 67, 69, 72, 77, 85, 92, 103, 105, 106, 107, 111, 112, 115, 118, 123, 126, 129, 132, 143, 144, 145, 147, 151, 155], "string": [1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 18, 20, 23, 29, 30, 31, 33, 38, 43, 46, 48, 50, 51, 67, 70, 74, 75, 81, 82, 83, 91, 96, 100, 102, 103, 105, 106, 111, 117, 129, 145, 148, 150, 153, 154], "475": 1, "retri": [1, 108], "call": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 16, 24, 26, 31, 34, 35, 36, 38, 39, 42, 43, 44, 46, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 89, 91, 95, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 111, 115, 118, 121, 123, 126, 128, 129, 134, 135, 136, 143, 145, 147, 148, 154, 155], "fail": [1, 3, 7, 13, 16, 22, 46, 51, 75, 77, 102, 111, 112, 118, 127, 143, 144, 147, 151, 155], "eintr": 1, "479": 1, "stopiter": [1, 9, 11, 18], "handl": [1, 4, 5, 6, 7, 11, 41, 63, 67, 70, 75, 77, 80, 84, 89, 100, 115, 128, 134, 136, 143, 147], "insid": [1, 7, 42, 60, 61, 62, 63, 64, 67, 69, 75, 77, 79, 88, 127, 128, 148], "471": 1, "scandir": [1, 2], "485": [1, 72], "math": [1, 2, 3, 4, 5, 11, 28, 86, 116], "isclos": 1, "test": [1, 3, 6, 7, 11, 47, 60, 61, 62, 67, 87, 107, 115, 118, 123, 131, 133, 136, 145, 147, 149, 150, 151, 153, 154, 155], "approxim": 1, "miscellan": [1, 4, 11, 135], "441": 1, "applic": [1, 7, 11, 16, 17, 24, 26, 29, 36, 38, 41, 44, 52, 67, 71, 88, 102, 107, 123, 124, 125, 127, 136, 143, 144, 147, 148, 152, 155], "486": 1, "make": [1, 2, 6, 16, 17, 20, 22, 35, 38, 39, 46, 51, 62, 63, 65, 67, 69, 75, 76, 77, 79, 82, 83, 84, 86, 103, 108, 114, 117, 118, 123, 124, 127, 128, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155], "launcher": [1, 118], "awar": 1, "virtual": [1, 11, 28, 31, 42, 60, 83, 88, 114, 123, 143, 144, 147], "environ": [1, 3, 7, 11, 123, 125, 150, 153], "484": 1, "hint": [1, 5, 11, 60, 61, 62, 63, 67, 69, 79, 135, 155], "advisori": 1, "488": [1, 67, 92], "elimin": [1, 30, 67, 143, 155], "pyo": 1, "489": 1, "redesign": 1, "load": [1, 2, 9, 11, 20, 22, 28, 30, 60, 61, 62, 67, 70, 80, 84, 86, 95, 103, 106, 123, 124, 134, 135, 145, 147, 148, 151, 153, 155], "namereplac": 1, "error": [1, 2, 5, 8, 11, 28, 29, 34, 45, 67, 75, 83, 85, 89, 95, 101, 102, 106, 118, 123, 136, 143, 147, 150, 154, 155], "handler": [1, 11, 14, 16, 31, 36, 38, 39, 42, 46, 75, 95, 98, 104, 107, 146], "backslashreplac": 1, "decod": [1, 5, 11, 15, 28, 67, 76, 143], "translat": [1, 67, 102], "properti": [1, 8, 11, 16, 18, 29, 31, 102, 108, 115, 145], "docstr": 1, "writabl": [1, 3, 7], "especi": [1, 86, 115, 155], "collect": [1, 2, 5, 7, 9, 11, 24, 28, 73, 80, 102, 128, 152], "namedtupl": [1, 2, 11, 20], "circular": [1, 3, 11, 67, 86, 147], "involv": [1, 3, 118, 123, 124, 143, 155], "rel": [1, 4, 5, 63, 67, 104, 107, 108, 136, 145, 147, 148], "zipzap": 1, "ordereddict": [1, 11, 20], "c": [1, 3, 4, 5, 6, 7, 10, 23, 40, 46, 69, 75, 87, 98, 100, 104, 105, 108, 113, 115, 126, 131, 133, 135, 136, 143, 150, 151, 153, 154, 155], "100": [1, 16, 42, 46, 50, 53, 54, 56, 57, 60, 61, 62, 65, 66, 67, 69, 77, 84, 85, 86, 94, 95, 107, 118, 131, 143, 147, 155], "time": [1, 2, 3, 4, 5, 11, 14, 16, 22, 24, 28, 29, 31, 32, 34, 35, 36, 37, 42, 43, 46, 47, 48, 50, 51, 66, 67, 69, 70, 71, 76, 77, 80, 84, 85, 86, 87, 89, 93, 94, 95, 96, 101, 102, 103, 104, 111, 114, 118, 123, 126, 134, 143, 147, 148, 149, 150, 152, 154, 155], "faster": [1, 31, 67, 75, 77, 107, 123, 124, 128, 143, 145, 147, 152], "revers": [1, 2, 4, 11, 18, 62, 67, 68, 75, 77, 131, 138], "dequ": [1, 2, 8, 11, 20], "insert": [1, 3, 4, 9, 118, 147], "produc": [1, 8, 29, 60, 61, 62, 63, 67, 69, 79, 94, 107, 108, 123, 128, 130, 136, 143, 147, 154, 155], "updat": [1, 3, 4, 5, 11, 16, 26, 47, 50, 62, 65, 67, 69, 77, 79, 95, 101, 111, 114, 118, 122, 123, 126, 127, 136, 147, 148, 149, 150], "userstr": 1, "__getnewargs__": 1, "__rmod__": 1, "casefold": 1, "format_map": 1, "isprint": 1, "maketran": 1, "str": [1, 3, 8, 11, 13, 16, 17, 18, 30, 38, 65, 67, 69, 70, 71, 74, 134, 142, 143, 145, 155], "heapq": [1, 11, 28], "element": [1, 4, 9, 11, 13, 16, 27, 34, 67, 84, 85, 100, 101, 108, 134, 143, 155], "comparison": [1, 11, 16, 106, 135, 136, 143], "merg": [1, 67, 113], "custom": [1, 2, 11, 14, 70, 71, 77, 106, 110, 125, 152], "keyword": [1, 2, 3, 4, 8, 9, 11, 16, 17, 25, 32, 33, 36, 42, 43, 48, 51, 77, 83, 89, 95, 103, 115, 123, 138, 143, 148], "io": [1, 6, 11, 16, 17, 22, 25, 28, 67, 81, 117, 119, 120, 145], "bufferediobas": 1, "readinto1": 1, "most": [1, 6, 7, 11, 16, 17, 22, 28, 30, 31, 37, 40, 42, 43, 46, 48, 49, 50, 51, 83, 84, 88, 93, 96, 98, 102, 107, 108, 118, 124, 128, 134, 135, 136, 143, 145, 146, 148, 149, 151, 152, 154, 155], "underli": [1, 11, 17, 22, 25, 28, 29, 31, 32, 35, 37, 40, 41, 44, 67, 81, 83, 95, 103, 106, 107, 145, 147], "raw": [1, 8, 11, 17, 22, 31, 32, 67, 77, 94, 98, 100, 104, 112, 123, 144, 150, 153], "stream": [1, 11, 17, 22, 25, 28, 30, 43, 46, 52, 67, 74, 75, 76, 81, 96, 98, 102, 103, 106, 112, 123, 129, 143, 145, 155], "rawiobas": 1, "read": [1, 9, 11, 13, 14, 16, 22, 25, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 43, 60, 63, 64, 66, 67, 68, 77, 81, 83, 84, 89, 95, 96, 97, 98, 101, 102, 103, 104, 108, 111, 112, 114, 115, 116, 123, 124, 125, 128, 129, 143, 144, 145, 147, 150, 154, 155], "readinto": [1, 11, 14, 22, 25, 35, 36, 40, 43, 81, 96, 98, 102, 115, 143, 145, 155], "json": [1, 2, 8, 11, 22, 25, 28, 75, 110, 143, 152], "jsondecodeerror": 1, "valueerror": [1, 5, 6, 11, 18, 30, 37, 48, 99, 151], "better": [1, 2, 3, 16, 41, 67, 107, 115, 143, 144, 155], "inf": [1, 2], "wai": [1, 9, 11, 14, 16, 17, 22, 27, 28, 34, 35, 38, 40, 41, 44, 46, 47, 48, 67, 70, 75, 83, 84, 85, 101, 102, 106, 107, 112, 114, 117, 123, 125, 128, 133, 134, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "gcd": [1, 5], "direntri": 1, "urandom": [1, 2, 11, 81], "getrandom": [1, 2], "17": [1, 10, 16, 63, 67, 83, 84], "getentropi": 1, "openbsd": 1, "6": [1, 6, 8, 10, 11, 15, 16, 21, 22, 50, 67, 68, 77, 84, 85, 86, 87, 95, 107, 111, 115, 137, 142, 143, 144, 151, 154, 155], "need": [1, 6, 9, 10, 16, 17, 22, 28, 29, 35, 41, 43, 50, 66, 67, 70, 75, 76, 77, 78, 91, 95, 97, 102, 105, 106, 107, 108, 111, 114, 115, 117, 118, 120, 122, 123, 124, 125, 127, 128, 129, 131, 134, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dev": [1, 144, 150, 153], "avoid": [1, 6, 7, 29, 47, 77, 84, 107, 108, 114, 118, 128, 134, 143, 145, 147, 148, 150, 155], "failur": [1, 16, 47, 111, 118, 144, 147, 155], "exhaust": [1, 2, 7, 24, 63, 67, 75], "get_block": 1, "set_block": 1, "get": [1, 2, 3, 4, 5, 9, 11, 14, 16, 17, 29, 30, 31, 34, 37, 38, 39, 41, 42, 48, 49, 51, 54, 59, 60, 61, 62, 63, 68, 70, 74, 75, 77, 81, 83, 84, 85, 91, 92, 94, 95, 103, 104, 107, 108, 110, 111, 115, 117, 118, 120, 122, 123, 124, 125, 126, 144, 145, 147, 149, 150], "mode": [1, 2, 3, 11, 16, 17, 21, 25, 29, 34, 36, 38, 39, 40, 42, 46, 49, 50, 51, 52, 63, 65, 66, 67, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 97, 98, 102, 103, 108, 112, 115, 116, 143, 144, 146, 150], "o_nonblock": 1, "There": [1, 41, 46, 48, 50, 51, 67, 83, 87, 101, 111, 114, 115, 118, 126, 133, 134, 143, 144, 145, 147, 149, 155], "path": [1, 2, 3, 5, 7, 11, 28, 50, 60, 61, 62, 65, 67, 69, 70, 80, 81, 103, 106, 110, 111, 127, 148, 150, 151, 152, 153], "commonpath": 1, "longest": [1, 67], "common": [1, 5, 11, 16, 75, 83, 147, 150, 152, 155], "sub": [1, 7, 11, 17, 67, 73, 77, 100, 107, 108, 111, 130, 134, 150, 151], "each": [1, 3, 16, 17, 24, 28, 29, 35, 36, 40, 41, 52, 63, 66, 67, 70, 72, 77, 81, 84, 91, 92, 93, 95, 96, 98, 100, 104, 107, 108, 109, 111, 115, 118, 120, 121, 133, 134, 135, 143, 147, 148, 150, 151, 152], "pathnam": [1, 76], "re": [1, 2, 3, 6, 11, 16, 28, 31, 38, 41, 67, 69, 77, 102, 104, 117, 118, 120, 121, 123, 126, 128, 129, 143, 147, 148, 150, 154], "condit": [1, 11, 24, 31, 35, 43, 46, 84, 96, 101, 113, 130, 133, 136, 137, 138, 140, 142, 147], "fix": [1, 35, 40, 67, 75, 77, 95, 114, 118, 123, 127, 128, 136, 143, 155], "lookbehind": 1, "assert": [1, 20, 41, 46, 95, 96, 100, 104, 107, 108], "captur": [1, 11, 41, 46, 67, 77, 95, 100, 108, 123, 150, 155], "limit": [1, 11, 16, 22, 28, 42, 48, 50, 63, 67, 70, 75, 77, 84, 95, 99, 102, 104, 113, 128, 134, 143, 145, 155], "subn": 1, "replac": [1, 5, 11, 16, 28, 67, 100, 118, 123, 134, 145, 147, 150], "unmatch": [1, 100], "msg": 1, "po": 1, "lineno": 1, "colno": 1, "monoton": 1, "clock": [1, 11, 31, 35, 36, 40, 43, 49, 60, 61, 62, 67, 69, 75, 80, 83, 84, 85, 89, 93, 95, 96, 107, 121, 126, 150], "sendfil": 1, "send": [1, 11, 16, 34, 43, 48, 50, 59, 60, 62, 75, 80, 83, 85, 89, 93, 96, 97, 98, 102, 103, 104, 110, 115, 123, 129, 145, 154], "over": [1, 17, 20, 31, 32, 33, 35, 66, 67, 74, 75, 77, 80, 84, 92, 93, 95, 97, 98, 104, 108, 111, 114, 123, 124, 143, 144, 145, 150, 151, 154], "high": [1, 11, 31, 35, 38, 41, 43, 52, 67, 75, 77, 91, 95, 104, 107, 115, 117, 147, 154, 155], "perform": [1, 2, 5, 17, 29, 31, 35, 36, 38, 40, 51, 54, 67, 75, 77, 80, 83, 95, 100, 106, 107, 111, 123, 128, 130, 131, 136, 138, 143, 147, 150, 152, 153, 154, 155], "unix": [1, 6, 7, 9, 10, 11, 16, 82, 102, 107, 143, 144, 145, 150], "upload": [1, 110], "being": [1, 3, 5, 8, 11, 14, 16, 29, 31, 38, 39, 41, 43, 45, 46, 47, 49, 52, 60, 61, 62, 63, 67, 69, 70, 75, 76, 77, 78, 79, 81, 92, 95, 98, 104, 108, 111, 114, 118, 120, 123, 124, 125, 131, 139, 143, 147, 148, 149, 150], "plain": 1, "sendal": [1, 11, 102], "reset": [1, 11, 14, 34, 35, 39, 44, 60, 61, 62, 63, 65, 66, 69, 77, 79, 80, 85, 92, 95, 101, 104, 107, 114, 115, 118, 123, 126, 144, 147], "everi": [1, 16, 67, 75, 83, 86, 87, 92, 102, 107, 108, 145, 150], "byte": [1, 2, 3, 5, 8, 9, 11, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 29, 31, 34, 35, 36, 39, 40, 43, 46, 51, 59, 60, 62, 63, 67, 69, 70, 75, 77, 80, 81, 83, 84, 85, 86, 88, 89, 93, 96, 97, 98, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 123, 129, 132, 133, 134, 136, 137, 142, 143, 145, 147, 150, 151, 154, 155], "sent": [1, 16, 34, 35, 43, 51, 62, 75, 76, 85, 98, 102, 123, 154], "maximum": [1, 11, 16, 20, 22, 31, 32, 35, 39, 44, 51, 63, 67, 70, 71, 77, 81, 86, 90, 94, 100, 102, 106, 108, 128, 137, 142, 147], "total": [1, 16, 24, 60, 61, 62, 63, 67, 69, 79, 87, 107, 115, 128, 147], "durat": [1, 16, 31, 37, 43, 48, 83, 96, 124, 147, 150, 155], "backlog": [1, 14, 102], "listen": [1, 11, 16, 59, 71, 75, 102, 103], "By": [1, 5, 16, 17, 25, 41, 46, 60, 61, 62, 63, 67, 69, 76, 77, 80, 83, 95, 107, 128, 131, 144, 148, 150], "somaxconn": 1, "128": [1, 9, 16, 34, 62, 63, 67, 77, 85, 86, 93, 95, 154], "whichev": 1, "memori": [1, 6, 7, 9, 11, 17, 22, 24, 25, 29, 34, 38, 39, 42, 46, 48, 67, 70, 75, 77, 80, 83, 84, 85, 89, 95, 102, 108, 111, 112, 114, 115, 119, 123, 132, 134, 135, 144, 145, 147, 148, 149, 152, 155], "bio": 1, "layer": [1, 29, 75, 103, 124, 128, 144], "negoti": [1, 16], "sslsocket": [1, 2, 5, 103], "queri": [1, 16, 24, 43, 48, 50, 51, 91, 107, 111, 150], "actual": [1, 5, 11, 22, 29, 33, 34, 35, 38, 40, 41, 48, 67, 84, 85, 88, 89, 100, 103, 106, 107, 108, 111, 123, 143, 145, 153, 155], "either": [1, 2, 4, 7, 16, 20, 21, 29, 34, 39, 44, 49, 63, 67, 70, 72, 75, 85, 89, 93, 95, 100, 106, 107, 108, 111, 112, 118, 123, 127, 143, 145, 147, 150, 151, 152, 155], "sslwantreaderror": 1, "sslwantwriteerror": 1, "non": [1, 5, 7, 11, 16, 22, 28, 29, 34, 36, 37, 41, 42, 44, 46, 47, 62, 67, 69, 70, 75, 79, 81, 85, 90, 98, 100, 102, 103, 107, 108, 111, 123, 150, 151, 155], "would": [1, 22, 28, 29, 46, 67, 84, 91, 108, 124, 128, 133, 141, 143, 144, 145, 147, 148, 150, 154, 155], "previous": [1, 2, 5, 14, 16, 67, 75, 77, 79, 91, 95, 103, 111, 123, 148], "cert_time_to_second": 1, "input": [1, 2, 6, 11, 15, 18, 22, 28, 31, 32, 38, 43, 60, 61, 62, 67, 70, 72, 73, 79, 81, 84, 85, 86, 87, 91, 95, 96, 101, 102, 104, 106, 112, 115, 116, 120, 143, 145, 147, 148, 153], "utc": [1, 6, 7, 9, 10, 107], "local": [1, 2, 3, 8, 11, 16, 18, 67, 80, 102, 107, 134, 150, 152, 153, 155], "per": [1, 7, 16, 17, 43, 52, 65, 66, 67, 68, 70, 75, 77, 95, 96, 101, 107, 145, 151], "rfc": [1, 15], "5280": 1, "addition": [1, 16, 29, 67, 73, 75, 77, 114, 123, 125, 148, 149, 150], "sslobject": [1, 103], "shared_ciph": 1, "client": [1, 2, 11, 28, 48, 50, 51, 76, 103, 150], "dure": [1, 2, 6, 16, 22, 28, 31, 36, 46, 48, 63, 67, 75, 79, 84, 95, 111, 112, 118, 123, 144, 147, 148, 150], "do_handshak": [1, 103], "shutdown": [1, 5, 11, 77, 80, 111], "match_hostnam": 1, "ip": [1, 48, 49, 50, 51, 102, 150, 153], "set_coroutine_wrapp": 1, "global": [1, 2, 7, 11, 16, 18, 28, 46, 47, 67, 77, 126, 128, 143, 144, 147], "whenev": [1, 29, 63, 77, 78, 81, 98, 123], "def": [1, 6, 7, 10, 14, 16, 28, 34, 42, 47, 75, 80, 85, 87, 91, 95, 134, 143, 144, 147, 154, 155], "get_coroutine_wrapp": 1, "obtain": [1, 16, 37, 50, 113, 133, 137, 142, 143], "wrapper": [1, 25, 148], "is_fin": [1, 5], "shut": 1, "down": [1, 11, 16, 38, 48, 50, 51, 64, 67, 68, 69, 72, 75, 76, 77, 84, 86, 87, 91, 92, 95, 117, 118, 128, 147, 148, 154], "parser": [1, 5, 46], "correct": [1, 4, 16, 34, 63, 67, 70, 72, 77, 83, 84, 85, 107, 123, 143, 144, 151, 155], "ignor": [1, 3, 5, 11, 14, 15, 34, 42, 43, 67, 70, 71, 72, 76, 80, 83, 85, 95, 100, 102, 111, 114, 118, 139, 151, 152], "beta": 2, "12": [2, 7, 9, 10, 16, 33, 36, 63, 67, 83, 84, 86, 95, 107, 115, 116, 151], "sep": [2, 15], "2016": 2, "summari": [2, 11, 28, 143], "here": [2, 9, 18, 28, 31, 46, 48, 60, 61, 62, 67, 70, 75, 102, 108, 116, 123, 125, 126, 129, 131, 134, 135, 145, 147, 150, 154, 155], "498": 2, "515": 2, "underscor": [2, 11, 46, 143], "numer": [2, 11, 16, 20, 23, 28, 64, 67, 100, 102, 107, 155], "525": 2, "provision": [2, 4, 102], "530": 2, "468": 2, "preserv": [2, 3, 20, 67, 69, 123, 134, 150], "order": [2, 3, 4, 8, 9, 11, 16, 17, 20, 28, 31, 36, 43, 67, 70, 81, 82, 91, 104, 105, 106, 107, 111, 141, 147, 149, 150, 151, 155], "kwarg": [2, 29, 77, 144, 155], "487": [2, 92], "simpler": [2, 29], "creation": [2, 3, 11, 46, 97, 98, 115, 143], "520": 2, "definit": [2, 11, 107, 108, 124, 130, 143, 152], "495": [2, 79], "disambigu": 2, "506": 2, "secret": [2, 16], "519": 2, "intern": [2, 9, 11, 16, 17, 28, 36, 38, 63, 67, 70, 75, 77, 79, 83, 84, 85, 87, 88, 104, 114, 115, 118, 125, 128, 143, 144, 145, 147, 151], "509": 2, "privat": [2, 8, 11, 16, 103], "won": [2, 29, 42, 67, 101, 118, 123, 128, 154], "t": [2, 8, 9, 11, 14, 16, 17, 29, 34, 35, 40, 41, 42, 50, 67, 70, 75, 81, 84, 85, 91, 95, 100, 101, 102, 107, 108, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135, 143, 145, 147, 148, 150, 151, 152, 153, 154, 155], "523": 2, "frame": [2, 11, 34, 59, 60, 61, 62, 63, 65, 67, 69, 70, 74, 75, 77, 85, 107, 118, 119, 126, 128], "evalu": [2, 3, 67, 84, 143, 150, 155], "window": [2, 5, 11, 16, 25, 67, 73, 77, 82, 112, 118, 119, 123, 143, 145, 150, 154], "524": 2, "startup": [2, 77, 92, 123, 144, 150], "528": 2, "consol": 2, "utf": [2, 3, 6, 151], "8": [2, 3, 6, 8, 10, 11, 15, 16, 22, 31, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 63, 67, 68, 74, 77, 79, 83, 84, 85, 86, 89, 92, 93, 95, 96, 102, 104, 105, 107, 108, 115, 117, 128, 131, 143, 147, 151, 154, 155], "529": 2, "filesystem": [2, 8, 11, 28, 29, 67, 83, 88, 118, 143, 145, 146, 147, 148, 150, 152, 154], "nonloc": 2, "statement": [2, 4, 14, 46, 47, 123, 126, 132, 134, 143, 147, 154, 155], "textual": [2, 102], "appear": [2, 106, 118, 123, 124], "befor": [2, 6, 14, 16, 31, 36, 37, 39, 48, 52, 60, 61, 62, 63, 65, 67, 69, 70, 72, 75, 76, 77, 79, 80, 91, 97, 102, 104, 107, 114, 118, 120, 123, 124, 125, 127, 134, 135, 136, 138, 143, 147, 148, 150, 154, 155], "first": [2, 4, 5, 7, 11, 16, 17, 27, 31, 34, 40, 43, 48, 52, 65, 67, 75, 76, 77, 80, 85, 89, 93, 96, 99, 100, 102, 103, 104, 106, 107, 108, 111, 115, 118, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 134, 138, 143, 144, 147, 148, 149, 150, 151, 152, 154], "affect": [2, 37, 48, 67, 83, 106, 130, 137, 138, 140, 142, 145, 147], "same": [2, 7, 9, 16, 21, 25, 28, 30, 31, 34, 35, 37, 38, 40, 41, 43, 45, 46, 47, 48, 50, 63, 65, 66, 67, 70, 76, 81, 85, 86, 87, 89, 91, 93, 94, 95, 100, 101, 102, 107, 108, 111, 112, 114, 115, 123, 125, 143, 145, 147, 148, 150, 152, 153, 154], "scope": [2, 102, 126, 134, 136, 143, 147, 151], "syntaxwarn": [2, 4], "It": [2, 5, 14, 16, 17, 20, 22, 25, 26, 31, 32, 33, 38, 43, 48, 67, 72, 75, 80, 82, 83, 84, 86, 88, 91, 93, 95, 96, 97, 98, 101, 103, 106, 107, 112, 115, 117, 120, 123, 128, 134, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "possibl": [2, 11, 16, 17, 22, 29, 31, 34, 38, 40, 43, 46, 48, 51, 52, 59, 67, 72, 75, 77, 80, 81, 82, 84, 85, 94, 96, 98, 102, 107, 115, 118, 123, 125, 134, 135, 145, 147, 151, 154], "special": [2, 4, 8, 11, 29, 67, 70, 100, 108, 120, 123, 139, 147, 155], "indic": [2, 4, 9, 11, 13, 16, 22, 34, 41, 46, 50, 63, 79, 85, 93, 95, 102, 103, 106, 121, 131, 134, 136, 147, 151, 154], "exampl": [2, 7, 10, 11, 14, 16, 17, 20, 23, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 60, 61, 62, 63, 65, 66, 67, 69, 70, 72, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 99, 100, 102, 104, 107, 108, 111, 112, 115, 118, 119, 120, 124, 126, 128, 129, 130, 131, 134, 138, 141, 143, 144, 145, 147, 151, 152, 153, 154, 155], "__iter__": [2, 5, 11, 17], "long": [2, 4, 6, 11, 31, 65, 67, 69, 75, 77, 84, 105, 106, 107, 129, 143, 147, 151, 154, 155], "repeat": [2, 39, 81, 83, 86, 143, 154], "traceback": [2, 3, 6, 7, 9, 46, 106, 154], "abbrevi": 2, "previou": [2, 16, 24, 26, 31, 32, 33, 38, 65, 67, 77, 81, 83, 84, 95, 100, 106, 107, 123, 147, 153, 154], "modulenotfounderror": 2, "find": [2, 28, 67, 107, 118, 122, 123, 144, 150], "code": [2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 21, 24, 26, 28, 40, 46, 47, 48, 67, 75, 77, 87, 98, 102, 104, 106, 107, 111, 114, 115, 116, 119, 123, 124, 126, 128, 129, 131, 132, 133, 135, 136, 138, 143, 144, 145, 147, 148, 149, 150, 153, 154], "importerror": [2, 3, 5, 11, 18], "try": [2, 6, 7, 9, 10, 14, 17, 23, 26, 28, 34, 40, 41, 46, 47, 67, 70, 75, 76, 77, 85, 87, 102, 118, 123, 151, 154], "reli": [2, 6, 7, 10, 107], "zero": [2, 5, 16, 35, 67, 70, 71, 72, 90, 94, 95, 100, 102, 111, 131, 134, 136, 137, 138, 139, 140, 147, 151], "metaclass": 2, "stai": [2, 75, 77], "extend": [2, 6, 11, 13, 20, 34, 67, 85, 88, 100, 131, 134, 137, 140, 144], "binascii": [2, 11, 26, 28, 51], "b2a_base64": [2, 11, 15], "newlin": [2, 15, 43, 96, 98, 102], "control": [2, 4, 11, 16, 22, 31, 32, 35, 36, 43, 47, 48, 50, 53, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 73, 75, 77, 79, 83, 89, 90, 94, 98, 108, 118, 119, 120, 123, 131, 134, 145, 146, 147, 148, 154], "whether": [2, 16, 29, 32, 34, 38, 41, 43, 47, 49, 51, 85, 89, 96, 101, 103, 106, 113, 123, 131, 134, 136, 143, 147, 151], "charact": [2, 3, 15, 43, 46, 48, 67, 96, 98, 100, 102, 105, 123, 129, 143, 150, 154], "append": [2, 7, 11, 13, 16, 20, 28, 46, 110, 147, 152, 155], "cmath": [2, 11, 28], "tau": 2, "\u03c4": 2, "infj": 2, "nanj": 2, "repr": [2, 11, 13, 18], "abstract": [2, 16, 29, 41, 48, 88, 115, 145], "repres": [2, 14, 17, 30, 32, 33, 38, 46, 48, 63, 67, 70, 77, 81, 85, 88, 91, 97, 98, 102, 107, 108, 111, 137, 142, 143, 147, 150], "size": [2, 6, 7, 10, 11, 16, 17, 18, 24, 25, 26, 31, 34, 35, 36, 43, 46, 52, 62, 65, 66, 67, 69, 70, 72, 73, 75, 77, 81, 84, 85, 88, 101, 102, 105, 108, 109, 111, 112, 118, 123, 126, 128, 132, 143, 144, 150, 151, 154, 155], "__reversed__": 2, "asyncgener": 2, "specifi": [2, 4, 5, 16, 17, 20, 22, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 51, 52, 56, 57, 60, 61, 62, 63, 67, 69, 72, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 98, 100, 101, 102, 103, 107, 108, 111, 132, 133, 136, 137, 141, 142, 143, 144, 148, 150, 151, 152], "tupl": [2, 4, 7, 8, 11, 16, 18, 19, 20, 30, 31, 34, 35, 38, 39, 40, 45, 48, 49, 50, 51, 54, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 77, 79, 81, 82, 83, 85, 92, 94, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 143, 145, 148, 150], "verbos": [2, 29, 46], "renam": [2, 11, 67, 81, 125], "recurs": [2, 108, 128, 134, 148, 150, 151], "instanc": [2, 4, 16, 22, 23, 25, 31, 32, 38, 43, 47, 95, 99, 100, 101, 103, 108, 123, 131, 134, 143, 144, 147, 150, 155], "pickl": [2, 4, 143], "blake2": 2, "were": [2, 16, 20, 35, 67, 91, 96, 101, 118, 123, 124, 131, 143, 150, 154], "blake2b": 2, "full": [2, 3, 9, 20, 22, 24, 31, 34, 36, 43, 46, 49, 84, 85, 86, 96, 104, 107, 134, 143, 145, 150], "sha3_224": 2, "sha3_256": 2, "sha3_384": 2, "sha3_512": 2, "shake": 2, "shake_128": 2, "shake_256": 2, "password": [2, 48, 50, 51, 76, 153], "deriv": [2, 11, 47, 81, 93, 147], "scrypt": 2, "should": [2, 6, 9, 10, 14, 16, 17, 18, 20, 22, 28, 29, 30, 31, 34, 35, 37, 40, 41, 43, 44, 46, 48, 51, 56, 57, 58, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 111, 117, 118, 122, 123, 124, 125, 126, 134, 136, 143, 144, 145, 147, 148, 150, 151, 154, 155], "16": [2, 10, 16, 31, 36, 37, 52, 63, 67, 77, 84, 85, 87, 89, 93, 95, 104, 106, 108, 137, 140, 142, 143, 154, 155], "32": [2, 10, 11, 22, 31, 34, 36, 39, 45, 48, 63, 67, 75, 77, 81, 85, 92, 93, 99, 104, 106, 108, 111, 112, 128, 130, 133, 134, 135, 137, 138, 140, 142, 155], "close": [2, 5, 11, 14, 17, 22, 25, 29, 37, 41, 48, 65, 67, 69, 84, 98, 99, 101, 102, 135, 145], "explicitli": [2, 6, 9, 16, 17, 22, 65, 69, 102, 107, 147, 148, 150], "On": [2, 16, 17, 28, 31, 37, 44, 45, 46, 49, 59, 75, 77, 80, 84, 88, 91, 106, 107, 114, 118, 123, 128, 143, 144, 147, 148, 152], "until": [2, 5, 14, 16, 17, 30, 31, 34, 36, 42, 43, 46, 47, 59, 60, 61, 62, 63, 64, 67, 69, 71, 77, 78, 79, 83, 84, 85, 96, 101, 102, 103, 104, 118, 126, 139, 147, 150, 154], "entropi": 2, "pool": [2, 143], "increas": [2, 16, 22, 36, 38, 46, 67, 75, 77, 107, 118, 126, 128, 154, 155], "random": [2, 5, 8, 11, 16, 17, 28, 67, 76, 81, 83, 86, 128, 147, 155], "expos": [2, 5, 31, 83, 91, 104, 107, 136, 144], "modifi": [2, 11, 16, 29, 37, 47, 67, 76, 101, 113, 123, 144, 147, 151], "span": [2, 11, 100, 144], "p": [2, 7, 38, 100, 105, 113, 115, 117, 144, 153], "ython": 2, "v": [2, 14, 20, 29, 41, 54, 67, 77, 84, 106, 131, 133, 136], "r": [2, 11, 17, 19, 29, 48, 60, 61, 62, 63, 67, 69, 79, 100, 150, 154], "gvr": 2, "access": [2, 5, 8, 11, 16, 17, 20, 23, 28, 29, 32, 33, 38, 41, 47, 48, 50, 51, 63, 67, 76, 77, 83, 84, 86, 100, 102, 103, 111, 114, 115, 118, 120, 123, 133, 134, 137, 142, 143, 144, 145, 147, 148, 150, 152], "__getitem__": [2, 11, 13, 17], "equival": [2, 3, 7, 13, 16, 17, 28, 38, 100, 101, 102, 123, 143, 148, 150, 153], "so": [2, 4, 6, 9, 16, 17, 22, 26, 29, 31, 33, 35, 37, 42, 46, 47, 63, 65, 67, 69, 70, 72, 77, 80, 83, 87, 91, 95, 98, 101, 102, 106, 107, 108, 112, 113, 116, 118, 120, 121, 123, 125, 127, 128, 143, 144, 145, 147, 150, 153, 154, 155], "mo": [2, 77], "like": [2, 4, 5, 11, 16, 17, 20, 21, 22, 25, 29, 31, 37, 41, 43, 61, 63, 67, 70, 75, 76, 77, 81, 83, 96, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 114, 118, 121, 123, 124, 125, 126, 127, 128, 129, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155], "ioctl": [2, 11, 77, 88, 111, 144], "sio_loopback_fast_path": 2, "getsockopt": 2, "so_domain": 2, "so_protocol": 2, "so_peersec": 2, "so_passsec": 2, "setsockopt": [2, 11, 102], "optnam": [2, 102], "optlen": 2, "form": [2, 4, 15, 19, 30, 38, 39, 48, 51, 67, 81, 99, 100, 102, 110, 111, 133, 143, 145, 150, 151, 152], "famili": [2, 9, 11, 67, 102], "af_alg": 2, "interfac": [2, 11, 16, 17, 25, 31, 32, 49, 50, 76, 83, 88, 102, 103, 108, 112, 143, 144, 145, 150, 155], "crypto": 2, "alg_": 2, "sol_alg": 2, "sendmsg_afalg": 2, "tcp_user_timeout": 2, "tcp_congest": 2, "recommend": [2, 7, 11, 14, 16, 22, 26, 29, 48, 67, 95, 100, 101, 102, 106, 108, 121, 125, 144, 148], "3de": 2, "chacha20": 2, "poly1305": 2, "session": [2, 76, 150], "connect": [2, 11, 26, 31, 33, 34, 35, 36, 48, 49, 50, 51, 67, 75, 76, 78, 83, 85, 96, 98, 102, 103, 113, 118, 119, 124, 126, 143, 145, 152, 153, 154], "sslsession": 2, "resumpt": 2, "speed": [2, 11, 67, 70, 75, 84, 92, 94, 112, 115, 120, 128, 143, 146, 147, 154], "up": [2, 3, 4, 11, 14, 16, 28, 29, 31, 32, 33, 35, 38, 39, 41, 44, 46, 48, 49, 50, 51, 52, 63, 64, 67, 68, 69, 70, 72, 75, 76, 77, 80, 83, 84, 85, 86, 87, 91, 92, 95, 100, 102, 107, 108, 112, 114, 115, 117, 118, 120, 123, 124, 125, 126, 128, 129, 131, 144, 147, 150, 151, 152, 154, 155], "reduc": [2, 6, 7, 9, 31, 38, 51, 77, 83, 84, 86, 123, 128, 143, 145, 147, 149, 155], "latenc": [2, 77, 147], "get_ciph": [2, 11, 103], "enabl": [2, 5, 11, 16, 20, 22, 24, 25, 31, 38, 43, 44, 46, 47, 48, 50, 51, 59, 61, 62, 64, 67, 68, 70, 77, 79, 83, 85, 86, 87, 91, 95, 96, 99, 102, 103, 104, 106, 110, 111, 112, 115, 123, 125, 128, 133, 134, 135, 136, 137, 139, 142, 144, 147, 149, 150, 154, 155], "prioriti": [2, 38, 42, 67, 107, 139, 147], "intenum": 2, "intflag": 2, "server": [2, 11, 14, 48, 50, 51, 76, 102, 103, 110], "post_handshake_auth": 2, "verify_client_post_handshak": 2, "post": [2, 11, 67, 70, 110], "authent": [2, 16, 103], "struct": [2, 8, 11, 28, 75, 77, 108, 129, 143], "ieee": [2, 3], "754": [2, 3], "half": [2, 86, 105, 126, 137, 142, 155], "via": [2, 4, 14, 16, 18, 22, 33, 35, 40, 48, 60, 61, 62, 63, 67, 75, 77, 78, 80, 82, 84, 88, 111, 115, 118, 123, 145, 147, 148, 150, 151, 152, 154], "getfilesystemencodeerror": 2, "unicod": [2, 7, 8, 11, 143], "filenam": [2, 5, 25, 65, 69, 81, 83, 148, 153], "zlib": [2, 11, 22, 28], "compress": [2, 11, 28, 67, 69, 72, 74, 76, 77, 123], "decompress": [2, 11, 28, 69], "538": 3, "coerc": [3, 134], "legaci": [3, 16, 26], "539": 3, "thread": [3, 14, 47, 107, 118, 123, 147], "storag": [3, 11, 16, 17, 22, 25, 67, 77, 83, 111, 123, 128, 143, 144, 145, 149, 152], "540": 3, "552": 3, "determinist": 3, "pyc": 3, "553": 3, "breakpoint": 3, "557": 3, "560": 3, "core": [3, 8, 11, 26, 28, 29, 31, 38, 80, 104, 145], "562": 3, "__getattr__": 3, "__dir__": 3, "563": 3, "postpon": 3, "564": 3, "nanosecond": [3, 31, 32, 37, 107], "resolut": [3, 8, 11, 33, 37, 55, 56, 60, 61, 63, 65, 67, 69, 77, 79, 84, 86, 107, 115, 116, 123], "565": 3, "show": [3, 16, 48, 60, 61, 62, 63, 67, 79, 84, 93, 95, 102, 115, 118, 123, 144, 150, 151, 153, 154], "__main__": [3, 5, 7], "567": 3, "reserv": [3, 138], "255": [3, 6, 34, 37, 48, 49, 50, 51, 53, 60, 61, 62, 63, 67, 69, 70, 72, 77, 79, 85, 92, 115, 116, 140], "fromhex": 3, "bytearrai": [3, 8, 11, 16, 18, 22, 34, 36, 39, 40, 67, 70, 75, 77, 83, 84, 85, 86, 89, 93, 97, 108, 115, 134, 143, 144, 145, 147, 155], "ascii": [3, 7, 11, 28, 51, 67, 100, 143, 151], "whitespac": [3, 11, 30, 100, 105, 143], "gain": [3, 52, 63, 77, 155], "isascii": 3, "displai": [3, 4, 8, 11, 28, 56, 57, 63, 64, 65, 67, 69, 77, 78, 79, 100, 118, 119, 145, 150, 153], "__file__": [3, 5], "absolut": [3, 5, 37, 41, 45, 46, 67, 104, 107, 112, 125, 148], "bind": [3, 11, 76, 102], "submodul": [3, 115, 148], "__format__": 3, "rather": [3, 4, 5, 14, 16, 28, 46, 108, 128, 134, 143, 145, 147, 148, 150, 152, 155], "self": [3, 4, 6, 7, 34, 83, 85, 144, 147, 152, 155], "dynam": [3, 48, 77, 111, 143, 145], "stack": [3, 11, 16, 46, 70, 77, 83, 128, 135, 136, 147], "trace": [3, 49, 83, 106, 147], "tracebacktyp": 3, "instanti": [3, 11, 48, 84, 104, 143, 147, 155], "tb_next": 3, "m": [3, 4, 6, 43, 44, 45, 69, 77, 83, 89, 100, 107, 116, 134, 135, 143, 147, 151, 152, 154, 155], "switch": [3, 37, 41, 77, 81, 85, 87, 121], "eagerli": 3, "expand": [3, 4, 5, 46, 67, 100, 154], "directori": [3, 5, 7, 23, 81, 106, 110, 111, 114, 123, 127, 143, 144, 148, 150, 151, 152, 153], "left": [3, 20, 36, 39, 60, 61, 62, 63, 64, 67, 68, 73, 77, 79, 83, 100, 118, 123], "occur": [3, 6, 14, 31, 42, 43, 46, 47, 77, 83, 92, 95, 96, 98, 107, 123, 139, 143, 147, 150, 155], "importtim": 3, "pythonprofileimporttim": 3, "too": [3, 6, 11, 60, 61, 62, 67, 75, 77, 107, 108, 118, 120, 123, 128, 147, 155], "mani": [3, 7, 11, 28, 29, 31, 41, 43, 60, 61, 62, 63, 67, 75, 77, 96, 100, 102, 107, 108, 124, 145, 151], "includ": [3, 8, 11, 16, 17, 22, 25, 26, 28, 31, 35, 39, 41, 46, 48, 51, 72, 75, 81, 88, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 112, 113, 123, 125, 126, 134, 136, 143, 144, 145, 147, 148, 152, 153, 154, 155], "freez": [3, 11, 119, 148], "unfreez": 3, "get_freeze_count": 3, "remaind": [3, 45, 96, 144], "style": [3, 4, 106, 134, 150], "tidi": 3, "split": [3, 8, 11, 41, 67, 100, 108, 123, 155], "compil": [3, 4, 6, 7, 11, 18, 46, 82, 100, 104, 123, 124, 125, 134, 145, 147, 148, 152, 154, 155], "breakpointhook": 3, "_coroutine_origin_tracking_depth": 3, "mostli": [3, 144, 146], "pep564": 3, "abov": [3, 6, 7, 8, 16, 23, 28, 29, 31, 32, 34, 37, 38, 41, 46, 48, 49, 51, 66, 67, 71, 77, 84, 85, 86, 100, 101, 103, 106, 107, 108, 111, 113, 114, 115, 116, 118, 121, 123, 128, 129, 135, 136, 143, 147, 148, 150, 151, 152, 153, 155], "time_n": [3, 11, 107], "14": [4, 6, 10, 16, 36, 63, 67, 85, 95, 155], "2019": 4, "569": 4, "570": [4, 9], "posit": [4, 5, 6, 8, 11, 18, 36, 43, 45, 64, 66, 67, 71, 77, 83, 85, 89, 94, 100, 102, 106, 107, 108, 112, 115, 136, 153], "572": 4, "574": 4, "5": [4, 6, 8, 10, 11, 14, 16, 20, 22, 37, 45, 50, 63, 64, 66, 67, 75, 77, 86, 92, 94, 95, 96, 102, 104, 111, 112, 115, 116, 143, 144, 147, 150, 151, 154], "out": [4, 6, 11, 13, 14, 24, 29, 35, 38, 40, 41, 46, 49, 64, 67, 73, 75, 77, 83, 84, 96, 102, 107, 113, 115, 118, 121, 123, 131, 135, 143, 147, 149, 150, 151, 154], "band": 4, "578": 4, "587": 4, "590": 4, "vectorcal": 4, "fast": [4, 5, 22, 35, 38, 40, 67, 75, 123, 124, 126, 147, 155], "f": [4, 8, 11, 13, 17, 22, 25, 66, 67, 70, 81, 105, 108, 116, 123, 134, 143, 144, 150, 152, 153, 155], "continu": [4, 16, 30, 31, 32, 36, 40, 75, 77, 83, 86, 106, 115, 131, 132, 134, 147, 151, 153, 154], "illeg": 4, "claus": [4, 5], "problem": [4, 51, 118, 124, 127, 134, 143, 147], "lift": [4, 46], "bool": [4, 11, 18, 20, 47, 49, 62, 63, 65, 67, 68, 69, 70, 74, 77, 78, 79, 104, 155], "as_integer_ratio": 4, "constructor": [4, 9, 11, 29, 46, 67, 108, 111, 117, 129, 143, 147, 155], "__float__": [4, 6], "__complex__": 4, "n": [4, 5, 8, 11, 14, 48, 49, 63, 66, 67, 77, 81, 96, 99, 100, 105, 115, 129, 130, 131, 132, 133, 134, 136, 137, 140, 142, 143, 154, 155], "escap": [4, 8, 11, 100, 150], "dictview": 4, "further": [4, 22, 28, 38, 48, 95, 101, 106, 108, 112, 135, 136, 143, 147, 148, 149, 151, 155], "particular": [4, 23, 26, 28, 29, 31, 32, 35, 36, 38, 40, 48, 67, 75, 77, 80, 91, 102, 103, 107, 108, 113, 118, 121, 123, 143, 145, 147, 151, 155], "arg": [4, 7, 10, 11, 46, 60, 62, 67, 77, 88, 91, 101, 102, 111, 144, 150, 155], "enclos": [4, 67], "comma": [4, 13], "10": [4, 6, 7, 8, 10, 11, 16, 19, 22, 29, 35, 39, 43, 45, 63, 65, 67, 77, 84, 96, 99, 102, 109, 112, 115, 116, 117, 120, 124, 134, 151, 154], "20": [4, 6, 10, 16, 67, 82, 92, 134, 147, 151, 155], "30": [4, 10, 16, 55, 67, 77, 83, 94, 95, 105, 115, 123, 134, 147, 154, 155], "40": [4, 10, 67], "help": [4, 28, 77, 122, 123, 143, 153, 154], "suggest": [4, 17, 108], "arithmet": [4, 11, 107, 131, 135, 138, 147, 155], "subclass": [4, 6, 8, 11, 20, 29, 83, 102], "datetim": [4, 11, 39, 92, 107, 115, 150], "date": [4, 39, 81, 92, 103, 107, 115, 118, 123, 135], "timedelta": 4, "interrupt": [4, 11, 38, 39, 42, 46, 47, 63, 75, 77, 95, 98, 104, 107, 108, 139, 146, 150, 155], "ctrl": [4, 46, 98, 123, 143, 147, 150, 153, 154], "keyboardinterrupt": [4, 11, 18, 46, 98, 154], "caught": [4, 14], "exit": [4, 5, 7, 11, 14, 46, 83, 106, 114, 150, 153, 154], "detect": [4, 22, 73, 77, 106, 111, 112, 114, 118, 123, 144, 150, 152], "di": 4, "some": [4, 8, 16, 17, 19, 28, 29, 31, 35, 37, 38, 40, 42, 45, 48, 50, 67, 75, 77, 81, 83, 91, 101, 102, 103, 104, 106, 107, 108, 111, 115, 118, 123, 124, 126, 128, 129, 130, 134, 135, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155], "advanc": [4, 17, 20, 67, 100, 123, 147, 155], "program": [4, 11, 16, 29, 31, 39, 50, 84, 95, 106, 111, 114, 118, 123, 125, 126, 134, 135, 136, 143, 145, 149, 150, 151, 152, 153, 155], "codetyp": 4, "three": [4, 16, 17, 31, 34, 47, 67, 72, 77, 85, 104, 106, 121, 126, 132, 134, 138, 141, 143, 151, 153, 154, 155], "pow": [4, 11, 18, 45, 67], "permit": [4, 113, 147, 155], "expon": [4, 45], "neg": [4, 13, 19, 31, 36, 45, 46, 60, 61, 62, 63, 67, 79, 81, 83, 92, 102, 105, 107, 112, 115, 130, 131, 136], "case": [4, 5, 6, 10, 16, 17, 21, 22, 25, 28, 29, 31, 34, 35, 37, 40, 41, 43, 46, 51, 67, 69, 80, 81, 84, 85, 88, 95, 99, 101, 102, 103, 106, 107, 108, 111, 115, 123, 128, 130, 135, 137, 138, 142, 143, 147, 148, 149, 150, 151, 154, 155], "prime": 4, "modulu": [4, 19], "sync": [4, 11, 67, 69, 81, 83, 111, 114, 115, 154], "comput": [4, 11, 28, 37, 46, 67, 75, 77, 93, 115, 118, 123, 124, 128, 143, 154, 155], "second": [4, 11, 14, 16, 34, 39, 40, 65, 67, 68, 75, 77, 84, 85, 89, 92, 93, 99, 102, 104, 107, 108, 111, 114, 115, 118, 129, 132, 133, 143, 147, 150, 151, 153, 154], "__reduce__": 4, "six": [4, 67], "run": [4, 5, 8, 11, 14, 16, 21, 24, 36, 39, 42, 43, 44, 46, 47, 50, 52, 67, 73, 75, 76, 77, 83, 84, 98, 104, 106, 107, 108, 114, 118, 119, 124, 125, 126, 127, 128, 131, 132, 143, 145, 147, 150, 151, 152, 155], "graduat": 4, "stabl": [4, 67], "launch": [4, 118, 127, 150], "nativ": [4, 6, 11, 67, 81, 102, 105, 106, 108, 145, 151], "repl": [4, 11, 28, 31, 46, 81, 83, 106, 143, 145, 146, 150, 152, 153], "cancellederror": [4, 14], "baseexcept": 4, "concurr": [4, 14, 16, 124, 147], "task": [4, 5, 11, 77, 95, 107, 123, 147], "get_coro": 4, "create_task": [4, 11, 14, 147], "event": [4, 11, 28, 31, 38, 42, 64, 83, 95, 96, 98, 107, 113, 147], "loop": [4, 5, 11, 47, 65, 67, 75, 77, 84, 107, 126, 134, 143, 145, 147, 150, 154, 155], "set_nam": 4, "happi": [4, 147], "eyebal": 4, "create_connect": 4, "happy_eyeballs_delai": 4, "interleav": [4, 52], "while": [4, 7, 11, 14, 16, 29, 35, 36, 40, 41, 43, 47, 48, 50, 60, 61, 62, 63, 66, 67, 69, 72, 74, 75, 76, 77, 79, 80, 83, 96, 106, 107, 112, 115, 116, 117, 118, 123, 124, 126, 128, 131, 132, 134, 143, 145, 147, 150, 151, 153, 154, 155], "dist": 4, "euclidean": 4, "distanc": [4, 11, 67], "point": [4, 5, 11, 13, 16, 31, 45, 46, 48, 50, 51, 63, 64, 66, 67, 68, 70, 72, 75, 77, 80, 83, 84, 85, 95, 99, 102, 105, 106, 107, 108, 118, 124, 134, 135, 143, 144, 147, 150, 152, 154], "hypot": 4, "dimens": 4, "prod": 4, "analog": [4, 11, 31, 33, 38, 83, 91, 119, 120], "sum": [4, 11, 18, 41, 67, 102, 108], "product": [4, 11, 29, 83, 118, 119, 128], "combinator": 4, "perm": 4, "comb": 4, "isqrt": 4, "accur": [4, 63, 67, 84, 107], "squar": [4, 19, 45, 67, 134], "root": [4, 19, 45, 81, 83, 111, 144, 151], "convers": [4, 8, 11, 28, 31, 33, 70, 72, 77, 83, 123, 143, 147, 152], "factori": [4, 20, 84, 144], "unraisablehook": 4, "overridden": [4, 65, 69, 125], "how": [4, 11, 22, 31, 32, 42, 60, 61, 62, 63, 67, 69, 70, 72, 77, 79, 91, 95, 102, 116, 119, 120, 123, 126, 129, 134, 144, 145, 147, 149, 150], "unrais": 4, "5th": 5, "2020": [5, 39], "596": 5, "573": 5, "state": [5, 9, 11, 14, 16, 29, 31, 34, 38, 41, 43, 44, 48, 49, 50, 51, 60, 61, 62, 64, 70, 77, 78, 83, 85, 91, 92, 111, 115, 117, 118, 121, 129, 130, 135, 137, 138, 139, 142, 143, 147, 150], "584": 5, "585": 5, "593": 5, "flexibl": [5, 41, 42, 111, 124, 149], "602": 5, "adopt": [5, 155], "annual": 5, "cycl": [5, 16, 37, 53, 57, 80, 83, 95, 115, 148, 155], "aim": [5, 143, 145, 146], "month": [5, 39, 92, 107], "614": 5, "relax": 5, "grammar": 5, "decor": [5, 134, 145, 155], "615": 5, "iana": [5, 103], "zone": 5, "databas": [5, 11, 28], "present": [5, 13, 20, 25, 38, 53, 67, 68, 88, 103, 106, 112, 134, 143, 144], "zoneinfo": 5, "616": 5, "prefix": [5, 7, 28, 104, 108], "suffix": 5, "617": 5, "peg": 5, "__import__": 5, "script": [5, 11, 28, 31, 43, 46, 50, 67, 74, 75, 76, 77, 83, 114, 115, 118, 119, 120, 121, 124, 127, 148, 150], "ex": [5, 80, 118], "python3": [5, 143], "py": [5, 8, 11, 28, 46, 83, 114, 118, 123, 125, 127, 129, 144, 145, 146, 148, 150, 151, 152, 154], "becam": 5, "sometim": [5, 8, 91, 123, 147, 155], "valid": [5, 14, 16, 22, 37, 38, 49, 51, 67, 77, 86, 87, 89, 98, 101, 103, 112, 147, 150, 151], "much": [5, 22, 29, 41, 42, 43, 60, 61, 62, 63, 67, 69, 70, 75, 76, 77, 79, 82, 95, 96, 98, 100, 102, 123, 124, 144, 145, 152, 154], "parallel": [5, 55, 61, 78], "aclos": 5, "asend": 5, "athrow": 5, "ag_run": 5, "reflect": [5, 144, 150], "unexpect": [5, 8, 11, 35, 147, 154], "mask": [5, 9, 11, 48, 49, 51, 77, 84, 85, 101, 138, 139], "typeerror": [5, 6, 9, 11, 18, 42], "indexof": 5, "countof": 5, "lambda": [5, 6, 38, 76, 95, 115, 147, 151], "part": [5, 16, 26, 38, 45, 46, 48, 67, 83, 92, 103, 107, 108, 118, 126, 143, 147, 148, 151, 152], "signific": [5, 31, 40, 93, 108, 134, 143, 147, 151, 152, 155], "concern": [5, 146], "reuse_address": 5, "create_datagram_endpoint": 5, "shutdown_default_executor": 5, "schedul": [5, 11, 28, 36, 46, 63, 77, 101, 107], "executor": 5, "wait": [5, 11, 14, 16, 28, 29, 31, 34, 35, 37, 43, 47, 48, 50, 59, 63, 65, 75, 77, 80, 83, 85, 89, 93, 96, 97, 98, 102, 107, 116, 118, 126, 129, 147, 150, 153, 154], "threadpoolexecutor": 5, "finish": [5, 16, 75, 77, 83, 84, 85, 102, 118, 123, 126, 128, 153, 154], "pidfdchildwatch": 5, "child": [5, 151], "watcher": 5, "poll": [5, 11, 43, 66, 74, 75, 83, 102, 104, 107], "to_thread": 5, "cancel": [5, 11, 14, 16, 39, 75, 81, 118, 147, 154], "wait_for": [5, 11, 14], "typererror": 5, "incompat": [5, 151], "garbag": [5, 11, 28, 102, 128, 145], "resurrect": 5, "collector": [5, 11, 28, 128, 145], "lcm": [5, 80], "least": [5, 17, 22, 34, 40, 67, 75, 85, 93, 101, 102, 107, 108, 123, 143, 145, 151], "nextaft": 5, "after": [5, 6, 14, 16, 21, 24, 26, 34, 35, 37, 42, 43, 44, 46, 50, 60, 61, 62, 63, 65, 67, 69, 73, 75, 76, 77, 79, 81, 83, 84, 85, 89, 95, 96, 100, 104, 107, 114, 118, 121, 123, 124, 125, 128, 132, 133, 135, 136, 138, 143, 144, 147, 148, 149, 150, 153, 154], "toward": [5, 45, 68, 128], "ulp": 5, "pidfd_open": 5, "p_pidfd": 5, "unsetenv": [5, 9], "putenv": [5, 9], "waitstatus_to_exitcod": 5, "randbyt": 5, "platlibdir": 5, "stderr": [5, 11, 106], "buffer": [5, 11, 14, 16, 17, 21, 29, 34, 35, 36, 38, 39, 40, 43, 46, 60, 61, 62, 63, 67, 70, 74, 77, 79, 80, 84, 85, 86, 89, 93, 96, 97, 98, 102, 105, 108, 115, 118, 119, 128, 129, 143, 145], "interact": [5, 11, 102, 104, 145, 146, 147, 150, 153], "micropy_cpython_compat": 5, "wed": [6, 7, 9, 10], "31": [6, 7, 9, 10, 83, 106, 107, 112, 134, 137, 138, 142], "jul": [6, 7, 9, 10], "2024": [6, 7, 9, 10, 113], "21": [6, 7, 9, 10, 16, 22, 28, 39, 67, 112, 151], "24": [6, 7, 9, 10, 16, 52, 55, 61, 63, 78, 134], "29": [6, 7, 9, 10, 16, 34, 67, 85], "optimis": [6, 7, 9, 10, 16, 46, 143, 145, 148, 155], "workaround": [6, 7, 9, 10, 50], "sampl": [6, 7, 9, 10, 32, 33, 36, 40, 52, 75, 84, 85, 86, 93, 95, 115, 123], "print": [6, 7, 9, 10, 11, 16, 17, 18, 20, 23, 34, 35, 38, 39, 40, 46, 48, 49, 51, 63, 66, 67, 76, 80, 83, 84, 85, 87, 89, 92, 93, 95, 106, 107, 108, 109, 115, 116, 123, 126, 134, 143, 144, 145, 147, 150, 151, 153, 154, 155], "cpy": [6, 7, 8, 9, 11], "recent": [6, 7, 9, 17, 31, 154], "last": [6, 7, 9, 16, 31, 34, 35, 40, 43, 77, 83, 85, 89, 93, 96, 107, 118, 123, 148, 154], "stdin": [6, 7, 10, 11, 106, 154], "attributeerror": [6, 9, 11, 18], "bin": [6, 7, 9, 10, 11, 18, 67, 120, 123, 127], "sh": [6, 7, 9, 10, 127], "port": [6, 7, 9, 10, 11, 14, 16, 17, 22, 23, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 46, 48, 49, 50, 51, 55, 75, 76, 81, 83, 86, 87, 91, 99, 100, 101, 102, 103, 106, 107, 111, 118, 123, 127, 143, 144, 145, 148, 149, 150, 151, 153, 155], "highli": [6, 7, 12, 28, 29, 31], "optim": [6, 7, 17, 24, 67, 77, 107, 108, 123, 128, 145], "happen": [6, 16, 40, 43, 50, 63, 64, 67, 100, 101, 102, 123, 147, 150], "bodi": [6, 110, 155], "report": [6, 11, 46, 63, 83, 111, 144, 147, 151], "l": [6, 13, 67, 105, 129, 136, 143, 150, 153], "foo": [6, 7, 20, 134, 143, 144, 147, 148, 151, 152, 153, 154, 155], "bar": [6, 7, 11, 20, 67, 77, 119, 134, 143, 147, 148, 155], "indexerror": [6, 11, 13, 18, 20, 27], "rang": [6, 7, 9, 10, 11, 13, 16, 17, 18, 19, 32, 35, 37, 63, 65, 66, 67, 69, 72, 73, 77, 85, 86, 87, 92, 99, 100, 102, 107, 108, 115, 128, 134, 136, 137, 138, 142, 143, 144, 147, 151, 154, 155], "fulli": [6, 12, 16, 29, 67, 118, 128, 143, 155], "b": [6, 7, 9, 10, 13, 16, 17, 20, 29, 34, 35, 40, 48, 60, 61, 62, 63, 67, 69, 70, 79, 85, 87, 89, 93, 99, 100, 102, 105, 108, 115, 129, 132, 134, 136, 138, 143, 150, 153, 154, 155], "x01": [6, 9, 102, 154], "x02": [6, 9, 102], "x00": [6, 154], "strive": 6, "__mod__": 6, "sens": [6, 11, 31, 67, 83, 108, 120, 128], "leav": [6, 34, 67, 85, 118, 125, 150, 154], "you": [6, 9, 16, 17, 22, 28, 30, 31, 34, 35, 37, 41, 43, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 91, 93, 94, 95, 97, 98, 102, 106, 107, 108, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "interest": [6, 31, 60, 61, 62, 63, 67, 69, 72, 73, 79, 104, 124], "don": [6, 8, 9, 11, 17, 29, 35, 40, 42, 50, 67, 81, 84, 91, 95, 101, 102, 107, 114, 118, 125, 126, 127, 128, 129, 150, 152], "7": [6, 8, 10, 11, 16, 35, 43, 63, 65, 67, 75, 85, 86, 89, 92, 95, 96, 108, 115, 137, 142, 150, 151], "abc": [6, 43, 89, 96, 154], "utf8": [6, 67], "veri": [6, 46, 63, 67, 70, 75, 76, 77, 84, 93, 106, 107, 108, 118, 124, 126, 128, 145, 147, 150], "rare": [6, 144, 147, 148], "123": [6, 34, 35, 46, 85, 89, 115, 154], "3": [6, 7, 8, 9, 10, 11, 16, 17, 20, 31, 35, 36, 40, 43, 46, 50, 51, 57, 63, 66, 67, 75, 77, 83, 84, 85, 86, 89, 93, 95, 96, 98, 102, 104, 108, 111, 114, 115, 116, 117, 120, 121, 128, 129, 132, 143, 146, 147, 150, 151, 154], "13": [6, 10, 16, 36, 37, 67, 92, 96, 107], "obj": [6, 18, 30, 101, 108], "operand": [6, 130, 131], "1g": 6, "9": [6, 8, 9, 10, 11, 16, 37, 43, 63, 67, 96, 99, 100, 108, 115, 117, 120, 151, 154], "1e": 6, "01": [6, 107], "unless": [6, 16, 17, 26, 34, 43, 60, 61, 62, 65, 67, 69, 74, 85, 96, 111, 123, 144, 147, 151], "realli": [6, 63, 74, 123, 125], "prefer": [6, 16, 25, 28, 84, 100, 112, 127, 148], "http": [6, 11, 28, 48, 67, 87, 107, 108, 145, 152], "en": [6, 107], "wikipedia": [6, 107, 108], "wiki": [6, 107, 108, 135], "composition_over_inherit": 6, "__add__": [6, 11, 13], "42": [6, 9, 10, 35, 96], "84": [6, 95], "del": [6, 7, 9, 17, 28], "bytesio": [6, 11, 17, 22, 25, 29], "programm": [6, 124, 143, 155], "manual": [6, 7, 11, 16, 24, 41, 67, 70, 72, 77, 107, 118, 134, 135, 145], "ensur": [6, 14, 16, 44, 60, 61, 62, 63, 69, 77, 111, 123, 125, 132, 143, 147, 155], "worst": 6, "scenario": [6, 150], "freed": 6, "free": [6, 41, 46, 47, 63, 67, 70, 76, 80, 81, 93, 101, 113, 118, 128, 143, 147, 150, 152], "bug": [6, 50, 123, 147], "corrupt": [6, 77, 118, 144], "abcdefg": 6, "hijklmnop": 6, "11": [6, 10, 16, 34, 48, 51, 67, 75, 85, 95, 115, 151], "buffererror": 6, "export": [6, 153], "true": [6, 7, 14, 15, 16, 17, 22, 31, 34, 35, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 74, 76, 77, 79, 80, 81, 83, 85, 86, 91, 93, 96, 98, 99, 102, 103, 107, 109, 111, 115, 116, 126, 131, 143, 147, 148, 155], "directli": [6, 7, 11, 13, 14, 17, 41, 46, 67, 70, 72, 75, 84, 91, 95, 102, 106, 107, 120, 143, 145, 148, 149, 150, 152], "eg": [6, 31, 46, 81, 84, 115, 153], "easi": [6, 67, 76, 77, 117, 129], "altern": [6, 11, 38, 40, 48, 67, 77, 83, 95, 108, 111, 123, 143, 148, 153, 155], "abcdefghi": 6, "acegi": 6, "aa": 7, "ab": [7, 11, 18, 45], "output": [7, 9, 10, 11, 14, 20, 22, 28, 35, 36, 37, 38, 43, 55, 56, 57, 61, 67, 70, 72, 77, 79, 81, 86, 91, 94, 95, 96, 104, 106, 112, 115, 116, 120, 123, 127, 143, 145, 150, 153, 154, 155], "upi": [7, 8, 11, 135], "aa1": 7, "1ab": 7, "a1": [7, 150], "1a": 7, "balanc": [7, 51, 67, 77], "hello": [7, 115, 126, 129, 144], "world": [7, 67, 115, 117, 126, 129, 144], "rf": [7, 104], "microppython": 7, "text": [7, 11, 29, 67, 119, 143, 154], "depth": [7, 46, 67], "hierarchi": [7, 11, 151], "overrid": [7, 11, 85, 93, 144, 152], "keep": [7, 39, 61, 67, 69, 75, 77, 92, 107, 114, 117, 123, 128, 147, 148, 151, 153, 155], "mind": [7, 17, 28], "__str__": [7, 11, 91], "uniqu": [7, 31, 66, 67, 83, 145], "__print_str": 7, "do_print": 7, "example_str": 7, "class_item": 7, "26": [7, 10, 16, 112], "18": [7, 10, 16, 63, 67, 84, 151], "_foo__print_str": 7, "d": [7, 9, 13, 20, 22, 67, 88, 100, 105, 115, 123, 124, 128, 129, 143, 144, 147, 150, 153, 154], "exactli": [7, 14, 38, 41, 45, 70, 87, 92, 98, 108, 115, 121, 147], "ram": [7, 11, 22, 24, 31, 46, 60, 61, 62, 63, 67, 70, 77, 79, 86, 123, 128, 144, 145, 148, 149, 150, 151, 152, 153, 154], "extern": [7, 11, 17, 31, 38, 59, 75, 78, 79, 83, 88, 89, 92, 123, 144, 148], "func_x": 7, "__enter__": 7, "enter": [7, 16, 28, 31, 34, 85, 136, 143, 150, 154], "func": [7, 46, 106, 143, 155], "_": [7, 11, 147, 155], "maintain": [7, 60, 61, 62, 63, 67, 75, 77, 79, 107, 124, 134, 145, 147, 149, 150], "slot": [7, 34, 67, 81, 85, 118, 143], "thu": [7, 29, 42, 67, 102, 106, 107, 131, 132, 134, 140, 141, 143, 145], "val": [7, 9, 13, 17, 32, 33, 66, 68, 84], "expr": [7, 46], "modules3": 7, "beyond": [7, 28, 34, 48, 51, 85, 134, 145, 147], "minim": [7, 22, 106], "inher": [7, 29, 147], "portabl": [7, 41, 42, 102, 107], "github": [7, 125, 145, 150, 152, 153], "workspac": 7, "cpydiff": 7, "simplic": [7, 11, 107], "search": [7, 11, 16, 67, 100, 106, 114, 122, 123, 148, 150, 151, 152], "overhead": [7, 41, 149, 155], "instal": [7, 11, 25, 48, 75, 77, 102, 112, 118, 125, 127, 144, 145, 150, 153], "belong": 7, "compon": [7, 67, 107, 145], "your": [7, 11, 16, 22, 28, 31, 41, 46, 48, 51, 53, 63, 67, 75, 76, 77, 88, 94, 95, 102, 106, 107, 114, 115, 117, 118, 119, 120, 121, 122, 126, 127, 129, 144, 145, 148, 149, 150, 151, 152, 153, 154], "wide": [7, 41, 43, 67, 96, 103, 136, 145, 149], "modules2": 7, "subpkg": 7, "python": [8, 11, 16, 24, 29, 30, 31, 41, 46, 75, 88, 95, 98, 100, 104, 105, 106, 108, 111, 118, 120, 123, 124, 126, 127, 129, 134, 135, 138, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155], "select": [8, 11, 26, 28, 35, 36, 38, 40, 43, 67, 70, 72, 75, 83, 84, 86, 89, 95, 96, 98, 100, 102, 103, 115, 118, 123, 146, 148], "section": [8, 11, 28, 29, 47, 48, 59, 83, 115, 135, 136, 143, 150, 154], "behaviour": [8, 10, 16, 29, 31, 35, 38, 42, 48, 84, 86, 96, 98, 101, 102, 103, 107, 131, 135, 144, 150, 155], "compar": [8, 9, 11, 67, 95, 106, 133, 136, 145], "conflict": [8, 29, 77], "nth": [8, 11], "greater": [8, 9, 11, 34, 67, 77, 84, 85, 99, 136, 154], "mp_small_int": [8, 11], "doesn": [8, 9, 11, 17, 29, 40, 41, 67, 70, 75, 95, 100, 102, 107, 108, 118, 121, 123, 127, 128, 133, 135, 145, 151, 153, 154], "concaten": [8, 11, 13, 59, 82, 143], "adjac": [8, 11, 37], "brace": [8, 11], "pars": [8, 11, 30, 59, 67, 123], "resolv": [8, 11, 14, 16, 102, 148, 151], "unbalanc": [8, 11], "nest": [8, 11, 46, 108, 134, 136, 151], "bracket": [8, 11, 99], "__del__": [8, 11], "mro": [8, 11], "compliant": [8, 11, 155], "mangl": [8, 11], "getter": [8, 11], "messag": [8, 11, 14, 34, 75, 80, 85, 123, 147, 153], "__exit__": [8, 11], "aren": [8, 11, 17, 29, 67, 123], "eval": [8, 10, 11, 18, 143, 145, 150, 154], "__all__": [8, 11], "unsupport": [8, 11], "__init__": [8, 11, 21, 144, 147, 152, 155], "__path__": [8, 11], "packag": [8, 11, 25, 28, 112, 118, 120, 127, 145, 146, 148, 150, 153], "singl": [8, 11, 13, 14, 16, 32, 37, 40, 41, 43, 46, 48, 52, 67, 72, 76, 77, 85, 86, 89, 96, 100, 103, 107, 123, 124, 132, 133, 134, 143, 144, 145, 147, 148, 150, 151, 152, 155], "namespac": [8, 11, 102], "across": [8, 11, 39, 41, 67, 107, 115, 123, 145, 149], "memoryview": [8, 11, 16, 18, 34, 39, 67, 75, 85, 145, 155], "save": [9, 11, 16, 29, 31, 41, 51, 54, 65, 67, 69, 70, 77, 114, 118, 123, 134, 136, 141, 143, 147, 154], "mark": [9, 31, 102, 143], "end": [9, 11, 13, 14, 17, 20, 25, 29, 30, 35, 43, 44, 67, 77, 86, 96, 100, 102, 105, 125, 134, 143, 147, 148, 150, 151, 152, 154], "whose": [9, 60, 61, 62, 63, 67, 79, 86, 108, 138, 143], "signatur": [9, 24, 111, 144], "af_inet": [9, 11, 102], "sock_stream": [9, 11, 102, 103], "proto": [9, 102], "fileno": 9, "af": [9, 11, 91, 95, 102], "ipproto_tcp": [9, 11, 102], "follow": [9, 15, 16, 17, 20, 28, 29, 31, 34, 35, 37, 38, 39, 41, 46, 48, 51, 59, 63, 67, 77, 81, 82, 83, 85, 91, 92, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 122, 125, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155], "sock_dgram": [9, 11, 102], "individu": [9, 90, 96, 100, 108, 121, 145, 147], "implicit": [9, 11, 29, 107, 108, 150], "truncat": [9, 16], "257": 9, "overflowerror": 9, "sign": [9, 45, 52, 67, 83, 105, 107, 108, 130, 131, 134, 135, 136], "char": [9, 96, 105, 129], "fals": [9, 14, 16, 17, 22, 34, 38, 39, 41, 43, 46, 47, 48, 49, 51, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 74, 77, 79, 83, 85, 86, 89, 91, 93, 96, 98, 102, 103, 104, 109, 143, 148, 152, 155], "deflt": 9, "lib": [9, 25, 28, 67, 82, 102, 106, 112, 143, 145, 148, 150, 152, 153], "256": [9, 22, 36, 60, 61, 62, 63, 67, 69, 79, 85, 93, 95, 144, 154], "z": [9, 19, 20, 22, 67, 68, 83, 131, 133, 136], "dump": [9, 11, 22, 25, 30, 50, 87, 125, 143], "new_vari": 9, "prng": [9, 99], "32bit": 9, "util": [9, 11, 22, 70, 150, 152, 153], "64": [9, 22, 25, 63, 67, 77, 85, 93, 96, 106, 108, 109], "11012060200154094713": 9, "abl": [9, 16, 22, 28, 43, 75, 77, 118, 120, 123, 125, 128, 145, 152], "cast": [9, 52, 67, 155], "larger": [9, 16, 17, 67, 70, 75, 77, 105, 112, 118, 128, 144, 147], "wordsiz": 9, "340282366920938463463374607431768211456": 9, "bb": [9, 67], "fewer": 10, "len": [10, 11, 13, 16, 18, 20, 40, 43, 60, 67, 70, 86, 88, 96, 98, 102, 118, 121, 134, 144], "15": [10, 16, 22, 63, 67, 84, 87, 95, 112, 154], "19": [10, 16, 63, 67, 151], "22": [10, 16, 67, 87, 106, 151], "23": [10, 16, 67, 107, 115, 134, 151, 154], "25": [10, 16, 67, 95, 115, 120, 143], "27": [10, 16], "28": [10, 16, 63, 85], "33": [10, 134, 143], "34": [10, 67], "35": [10, 67, 85, 112], "36": [10, 39], "37": 10, "38": [10, 85], "39": 10, "41": [10, 115], "43": 10, "44": 10, "45": [10, 94, 115], "46": 10, "47": [10, 112], "48": [10, 115], "49": 10, "50": [10, 37, 54, 67, 75, 83, 115, 128, 144], "51": [10, 154], "52": 10, "53": 10, "54": 10, "55": 10, "56": 10, "57": 10, "58": 10, "59": [10, 107], "60": [10, 54, 55, 60, 61, 62, 63, 67, 79, 94, 115], "61": 10, "62": [10, 75], "63": 10, "67": [10, 37], "rebind": 10, "1and": 10, "1or": 10, "1if": 10, "1els": 10, "latin": 10, "small": [10, 22, 25, 31, 56, 57, 65, 67, 77, 108, 114, 118, 128, 134, 143, 145, 149, 151, 155], "letter": [10, 13, 48, 91, 100, 143], "micro": [11, 16, 71, 77, 83, 106, 118, 143], "__setitem__": [11, 13, 17], "__len__": [11, 13], "__iadd__": [11, 13], "__repr__": [11, 13], "current_task": [11, 14], "sleep": [11, 14, 31, 38, 39, 48, 68, 77, 83, 87, 92, 107, 115, 120, 150, 154], "sleep_m": [11, 14, 66, 76, 107, 115], "wait_for_m": [11, 14], "gather": [11, 14], "is_set": [11, 14], "clear": [11, 14, 16, 28, 34, 49, 60, 61, 62, 67, 77, 85, 95, 115, 118, 128, 131, 136, 138, 139, 147, 150], "threadsafeflag": [11, 147], "lock": [11, 46, 47, 67, 107, 147], "acquir": [11, 14, 47, 143, 147], "tcp": [11, 50, 102, 123, 150], "open_connect": [11, 14], "start_serv": [11, 14], "get_extra_info": [11, 14], "wait_clos": [11, 14], "readexactli": [11, 14], "readlin": [11, 14, 43, 96, 98, 102], "drain": [11, 14, 36, 38, 91, 117], "get_event_loop": [11, 14], "new_event_loop": [11, 14], "run_forev": [11, 14], "run_until_complet": [11, 14], "set_exception_handl": [11, 14], "get_exception_handl": [11, 14], "default_exception_handl": [11, 14], "call_exception_handl": [11, 14], "hexlifi": [11, 15, 26, 51], "unhexlifi": [11, 15], "a2b_base64": [11, 15], "chr": [11, 18, 46, 98], "delattr": [11, 18], "dir": [11, 18, 81, 150, 154], "divmod": [11, 18], "enumer": [11, 18, 51, 67], "exec": [11, 18, 143, 150, 153], "filter": [11, 18, 34, 48, 52, 59, 71, 73, 85, 95, 102, 121, 123], "frozenset": [11, 18], "getattr": [11, 18], "hasattr": [11, 18], "hex": [11, 18, 108, 134, 150], "id": [11, 16, 18, 20, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 48, 49, 50, 58, 64, 66, 67, 74, 75, 76, 77, 83, 85, 90, 91, 94, 95, 98, 104, 114, 118, 119, 126, 127, 150], "from_byt": [11, 18], "to_byt": [11, 18], "isinst": [11, 18], "issubclass": [11, 18], "max": [11, 18, 63, 67, 77, 83, 106], "min": [11, 18, 27, 63, 67, 77, 98], "oct": [11, 18], "open": [11, 14, 17, 18, 22, 25, 29, 38, 41, 50, 51, 67, 69, 91, 99, 108, 111, 117, 118, 119, 124, 127, 143, 144, 145, 150], "ord": [11, 18, 67], "round": [11, 16, 18, 37, 45, 67, 147], "setattr": [11, 18], "sort": [11, 17, 18, 67, 77, 129], "assertionerror": [11, 18], "keyerror": [11, 18], "memoryerror": [11, 18, 46, 75], "notimplementederror": [11, 18], "oserror": [11, 14, 17, 18, 22, 23, 35, 59, 96, 101, 102, 103, 111], "runtimeerror": [11, 18, 46, 147], "systemexit": [11, 18, 106], "zerodivisionerror": [11, 18], "mathemat": [11, 28, 107], "co": [11, 19, 45], "exp": [11, 19, 45], "log": [11, 19, 45, 67], "log10": [11, 19, 45], "polar": [11, 19, 40, 67, 93, 95, 115], "rect": [11, 19, 77], "sin": [11, 19, 45, 86, 116], "sqrt": [11, 19, 45, 67, 133], "pi": [11, 19, 45, 86, 152], "appendleft": [11, 20], "pop": [11, 20, 27, 134, 135], "popleft": [11, 20], "errno": [11, 28, 102, 111], "errorcod": [11, 23], "mem_alloc": [11, 24, 143], "mem_fre": [11, 24, 143], "threshold": [11, 24, 71, 73, 77, 123, 143], "gzip": [11, 22, 28, 112], "gzipfil": [11, 22, 25], "algorithm": [11, 22, 25, 28, 67, 73, 77, 112, 128, 147], "sha256": [11, 26], "sha1": [11, 26], "md5": [11, 26], "digest": [11, 26, 110], "hexdigest": [11, 26], "queue": [11, 14, 20, 28, 46, 147], "heappush": [11, 27], "heappop": [11, 27], "heapifi": [11, 27], "conceptu": 11, "stringio": [11, 29], "getvalu": [11, 22, 29], "aco": [11, 45], "acosh": [11, 45], "asin": [11, 45], "asinh": [11, 45], "atan": [11, 45], "atan2": [11, 45], "atanh": [11, 45], "ceil": [11, 45, 77], "copysign": [11, 45], "cosh": [11, 45], "degre": [11, 45, 60, 61, 62, 63, 67, 68, 69, 77, 79, 84, 94, 115], "erf": [11, 45], "erfc": [11, 45], "expm1": [11, 45], "fab": [11, 45], "floor": [11, 45, 52], "fmod": [11, 45], "frexp": [11, 45], "gamma": [11, 45, 67], "isfinit": [11, 45], "isinf": [11, 45], "isnan": [11, 45], "ldexp": [11, 45], "lgamma": [11, 45], "log2": [11, 45], "modf": [11, 45], "radian": [11, 45, 67, 116], "sinh": [11, 45], "tan": [11, 45], "tanh": [11, 45], "trunc": [11, 45], "basic": [11, 19, 28, 45, 66, 85, 89, 91, 108, 110, 115, 123, 147], "unam": [11, 81], "chdir": [11, 81, 144, 150], "getcwd": [11, 81], "ilistdir": [11, 81], "listdir": [11, 81], "mkdir": [11, 23, 81, 150, 153], "rmdir": [11, 81, 150, 153], "stat": [11, 81, 109, 111], "statvf": [11, 81], "termin": [11, 67, 75, 106, 119, 134, 147, 150, 154], "redirect": 11, "duplic": [11, 25, 108, 112, 145], "dupterm": [11, 81], "mount": [11, 83, 114, 118, 123, 144, 149, 150], "umount": [11, 81, 83, 111, 144, 149, 150], "vfsfat": [11, 81, 111, 144, 149], "vfslfs1": [11, 81, 111, 149], "vfslfs2": [11, 81, 111, 144, 149], "vfsposix": [11, 81, 111, 149], "identifi": [11, 16, 28, 31, 32, 33, 34, 35, 36, 38, 48, 50, 81, 85, 102, 106, 108, 145], "python_compil": [11, 82], "libc_ver": [11, 82], "getrandbit": [11, 99], "randint": [11, 99], "randrang": [11, 99], "uniform": [11, 99], "seed": [11, 99], "choic": [11, 99, 107, 123], "regex": 11, "regist": [11, 16, 31, 34, 35, 43, 59, 63, 64, 66, 68, 75, 76, 77, 78, 80, 83, 85, 87, 91, 95, 98, 101, 102, 106, 108, 130, 134, 135, 136, 138, 139, 141, 145, 148, 155], "unregist": [11, 101], "ipol": [11, 101], "getaddrinfo": [11, 14, 48, 102], "inet_ntop": [11, 102], "inet_pton": [11, 102], "af_inet6": [11, 102], "ipproto_udp": [11, 102], "recv": [11, 34, 48, 85, 89, 93, 96, 97, 98, 102, 103, 115, 147], "sendto": [11, 102], "recvfrom": [11, 102], "settimeout": [11, 102], "setblock": [11, 102], "makefil": [11, 102, 148, 151], "wrap_socket": [11, 103], "load_cert_chain": [11, 103], "load_verify_loc": [11, 103], "set_ciph": [11, 103], "verify_mod": [11, 103], "sslerror": [11, 103], "protocol_tls_cli": [11, 103], "protocol_tls_serv": [11, 103], "cert_non": [11, 103], "cert_opt": [11, 103], "cert_requir": [11, 103], "pack": [11, 28, 67, 75, 108, 129], "primit": [11, 28, 108], "calcsiz": [11, 105], "pack_into": [11, 105], "unpack_from": [11, 105], "atexit": [11, 106], "print_except": [11, 106], "settrac": [11, 106], "argv": [11, 106], "byteord": [11, 18, 106], "maxsiz": [11, 106], "ps1": [11, 106], "ps2": [11, 106], "stdout": [11, 106], "tracebacklimit": [11, 106], "version_info": [11, 106], "gmtime": [11, 107], "localtim": [11, 107], "mktime": [11, 107], "sleep_u": [11, 107, 115], "ticks_m": [11, 107, 115], "ticks_u": [11, 107, 155], "ticks_cpu": [11, 107], "ticks_add": [11, 107], "ticks_diff": [11, 107, 115, 155], "tick": [11, 69, 83, 92, 95, 107, 126, 155], "fp": [11, 67, 77, 107, 123, 126], "avg": [11, 107], "multithread": [11, 28], "bluetooth": [11, 28, 123], "low": [11, 28, 31, 35, 38, 41, 43, 49, 63, 67, 75, 77, 88, 91, 95, 96, 104, 112, 115, 117, 120, 124, 128, 139, 152], "ble": [11, 134, 136], "config": [11, 16, 22, 25, 41, 48, 49, 51, 149, 150], "irq": [11, 14, 16, 31, 36, 38, 39, 42, 46, 83, 95, 98, 104], "broadcast": [11, 48, 51, 79], "role": 11, "advertis": 11, "gap_advertis": [11, 16], "observ": 11, "scanner": 11, "gap_scan": [11, 16], "central": 11, "gap_connect": [11, 16], "peripher": [11, 31, 35, 36, 38, 42, 43, 54, 85, 89, 91, 93, 95, 97, 108, 145, 155], "gap_disconnect": [11, 16], "gatt": 11, "gatts_register_servic": [11, 16], "gatts_read": [11, 16], "gatts_writ": [11, 16], "gatts_notifi": [11, 16], "gatts_ind": [11, 16], "gatts_set_buff": [11, 16], "gattc_discover_servic": [11, 16], "gattc_discover_characterist": [11, 16], "gattc_discover_descriptor": [11, 16], "gattc_read": [11, 16], "gattc_writ": [11, 16], "gattc_exchange_mtu": [11, 16], "l2cap": 11, "orient": [11, 67], "channel": [11, 32, 33, 36, 42, 48, 50, 51, 52, 56, 57, 60, 61, 62, 63, 67, 69, 72, 77, 79, 80, 83, 84, 104, 115, 123, 150], "l2cap_listen": [11, 16], "l2cap_connect": [11, 16], "l2cap_disconnect": [11, 16], "l2cap_send": [11, 16], "l2cap_recvinto": [11, 16], "pair": [11, 14, 20, 29, 38, 52, 85, 102, 115, 145], "bond": 11, "gap_pair": [11, 16], "gap_passkei": [11, 16], "uuid": 11, "btree": [11, 28], "flush": [11, 14, 17, 29, 43, 67, 69, 77, 145], "__delitem__": [11, 17], "__contains__": [11, 17], "incl": [11, 17], "desc": [11, 17], "cryptolib": [11, 28], "cryptograph": [11, 26, 28], "ae": [11, 21], "encrypt": [11, 16, 21, 50, 103], "decrypt": [11, 21], "deflat": [11, 25, 28, 112], "deflateio": [11, 22, 25, 112], "auto": [11, 22, 77, 112, 123, 144], "machin": [11, 14, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 66, 72, 73, 77, 81, 95, 104, 106, 107, 108, 115, 119, 120, 129, 134, 143, 145, 147, 149, 150, 151, 154, 155], "hardwar": [11, 28, 29, 35, 37, 38, 39, 40, 41, 43, 48, 49, 50, 51, 79, 81, 83, 85, 89, 93, 96, 99, 104, 107, 108, 111, 119, 123, 143, 145, 147], "mem8": [11, 31, 104], "mem16": [11, 31, 104, 155], "mem32": [11, 31, 104, 134], "soft_reset": [11, 31, 39, 150, 154], "reset_caus": [11, 31], "bootload": [11, 31, 83, 114, 150, 154], "disable_irq": [11, 31, 83, 147, 154], "enable_irq": [11, 31, 83, 147, 154], "power": [11, 16, 38, 45, 49, 51, 54, 58, 63, 67, 77, 80, 92, 94, 102, 107, 108, 114, 115, 118, 120, 121, 123, 124, 125, 126, 139, 143, 144, 145, 147], "freq": [11, 31, 35, 37, 42, 53, 66, 75, 84, 85, 86, 95, 115, 147, 154], "idl": [11, 31, 38, 39, 40, 43, 75, 93, 115, 154], "lightsleep": [11, 31], "deepsleep": [11, 31, 38, 39, 154], "unique_id": [11, 31, 83, 154], "time_pulse_u": [11, 31], "bitstream": [11, 31], "pwron_reset": [11, 31], "hard_reset": [11, 31, 83], "wdt_reset": [11, 31], "deepsleep_reset": [11, 31], "wlan_wak": [11, 31], "pin_wak": [11, 31], "rtc_wake": [11, 31], "pin": [11, 14, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 47, 49, 50, 56, 57, 60, 61, 62, 63, 66, 75, 77, 79, 83, 84, 85, 86, 89, 93, 94, 95, 96, 104, 107, 116, 117, 118, 120, 126, 128, 129, 145, 147, 154, 155], "init": [11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 50, 52, 58, 63, 79, 85, 86, 89, 91, 93, 95, 96, 98, 115, 147], "__call__": [11, 38, 70], "off": [11, 14, 34, 38, 40, 41, 43, 52, 60, 61, 62, 67, 77, 83, 85, 89, 90, 91, 93, 96, 112, 115, 118, 121, 123, 126, 128, 134, 154, 155], "pull": [11, 35, 38, 41, 75, 87, 91, 95, 115, 117], "drive": [11, 38, 43, 53, 55, 60, 61, 62, 78, 86, 91, 96, 114, 119, 123], "IN": [11, 38, 49, 91, 113, 115, 117], "open_drain": [11, 38], "alt": [11, 38, 91, 95], "alt_open_drain": [11, 38], "pull_up": [11, 38, 87, 91, 115, 117], "pull_down": [11, 38, 87, 91, 117], "pull_hold": [11, 38], "drive_0": [11, 38], "drive_1": [11, 38], "drive_2": [11, 38], "irq_fal": [11, 38, 87, 95], "irq_ris": [11, 38, 87, 115], "irq_low_level": [11, 38], "irq_high_level": [11, 38], "devic": [11, 16, 28, 31, 35, 36, 40, 43, 44, 47, 48, 61, 75, 83, 88, 89, 96, 98, 103, 104, 114, 115, 118, 120, 127, 143, 145, 147, 148, 150, 152, 154, 155], "adc": [11, 31, 38, 77, 83, 91, 95, 116, 120, 130, 155], "digit": [11, 16, 31, 36, 38, 41, 77, 83, 91, 95, 100, 120, 145], "read_u16": [11, 32, 115], "read_uv": [11, 32, 33], "adcblock": [11, 31, 32], "area": [11, 31, 60, 61, 62, 63, 67, 69, 72, 77, 79, 83, 104, 123], "network": [11, 26, 28, 31, 49, 50, 51, 76, 81, 83, 102, 103, 105, 107, 108, 123, 145, 150, 152], "commun": [11, 31, 35, 40, 41, 59, 75, 80, 83, 89, 129, 155], "bu": [11, 31, 41, 59, 63, 66, 75, 78, 80, 83, 89, 93, 97, 98, 104, 120, 128, 129], "deinit": [11, 34, 36, 37, 39, 40, 42, 43, 56, 57, 60, 61, 62, 63, 79, 80, 85, 86, 89, 93, 95, 96, 115], "restart": [11, 34, 39, 44, 80, 85, 123, 150], "info": [11, 34, 77, 83, 85, 92, 104, 154], "setfilt": [11, 34, 85], "clearfilt": [11, 34, 85], "rxcallback": [11, 34, 85], "normal": [11, 24, 29, 34, 38, 41, 43, 46, 67, 70, 73, 77, 85, 86, 91, 103, 107, 108, 118, 133, 134, 143, 144, 147, 150, 151, 154], "loopback": [11, 34, 85], "silent": [11, 34, 85], "silent_loopback": [11, 34, 85], "error_act": [11, 34, 85], "error_warn": [11, 34, 85], "error_pass": [11, 34, 85], "bus_off": [11, 34, 85], "list32": [11, 34, 85], "dual": [11, 34, 52, 85], "pwm": [11, 31, 41, 53, 55, 94, 95, 121], "puls": [11, 31, 94, 95], "width": [11, 31, 40, 60, 61, 62, 63, 65, 66, 67, 69, 73, 77, 79, 85, 89, 94, 95, 130, 131, 136, 137, 140, 142], "duty_u16": [11, 37, 115], "duty_n": [11, 37, 115], "uart": [11, 16, 31, 67, 83, 119, 120, 143, 145, 147, 152, 155], "duplex": [11, 31, 83], "serial": [11, 17, 31, 36, 75, 83, 98, 118, 119, 120, 129, 145, 150, 153, 154], "sendbreak": [11, 43, 96], "txdone": [11, 43], "spi": [11, 31, 55, 67, 83, 104, 120, 143, 147], "softspi": [11, 40, 115], "write_readinto": [11, 40, 115], "msb": [11, 40, 93, 131, 151], "lsb": [11, 40, 93, 151], "i2c": [11, 31, 59, 63, 66, 67, 83, 91, 93, 120, 143, 147], "wire": [11, 31, 41, 83], "softi2c": [11, 35, 115], "scan": [11, 16, 17, 35, 48, 50, 51, 63, 67, 89, 115, 118, 123, 150], "readfrom": [11, 35, 115], "readfrom_into": [11, 35], "writeto": [11, 35, 115], "writevto": [11, 35], "readfrom_mem": [11, 35], "readfrom_mem_into": [11, 35], "writeto_mem": [11, 35], "i2": [11, 31], "inter": [11, 31, 80], "ic": [11, 31, 95, 118], "sound": [11, 31, 84], "shift": [11, 36, 72, 108], "rx": [11, 16, 34, 36, 43, 49, 67, 75, 85, 96, 115, 129, 145], "tx": [11, 16, 34, 36, 43, 49, 75, 85, 96, 115, 129, 145], "stereo": [11, 36], "mono": [11, 36], "rtc": [11, 31, 83, 103, 107, 150], "real": [11, 19, 31, 41, 67, 83, 102, 107, 111, 117, 147], "alarm": [11, 39], "alarm_left": [11, 39], "alarm0": [11, 39], "timer": [11, 31, 37, 47, 57, 75, 83, 84, 86, 92, 94, 107, 121, 147], "one_shot": [11, 42, 115], "period": [11, 31, 36, 37, 39, 42, 44, 69, 83, 84, 92, 95, 96, 102, 107, 115, 143, 147, 155], "wdt": [11, 31], "watchdog": [11, 31, 35], "feed": [11, 26, 44, 67, 143], "const": [11, 16, 31, 46, 134, 143, 147], "opt_level": [11, 46, 148], "alloc_emergency_exception_buf": [11, 42, 46, 95, 147], "mem_info": [11, 46, 143, 150], "qstr_info": [11, 46, 143], "stack_us": [11, 46], "heap_lock": [11, 46], "heap_unlock": [11, 46], "kbd_intr": [11, 46], "adapt": [11, 67, 143, 145, 155], "abstractn": [11, 48], "disconnect": [11, 16, 48, 50, 51, 118, 123, 126, 150], "isconnect": [11, 48, 49, 50, 51, 76, 78, 83, 98], "ifconfig": [11, 48, 49, 50, 51, 150], "winc": [11, 48], "wifi": [11, 28, 31, 48, 76, 119, 150, 154], "shield": [11, 28, 48, 62, 63, 77, 123], "driver": [11, 16, 29, 40, 48, 49, 51, 67, 77, 83, 87, 93, 95, 111, 118, 123, 127, 129, 144, 145, 147, 148, 150, 155], "start_ap": [11, 50], "connected_sta": [11, 50], "wait_for_sta": [11, 50], "netinfo": [11, 50], "rssi": [11, 16, 48, 50, 51], "fw_version": [11, 50], "fw_dump": [11, 50], "fw_updat": [11, 50], "wpa_psk": [11, 50], "802_1x": [11, 50], "mode_sta": [11, 50], "mode_ap": [11, 50], "mode_p2p": [11, 50], "mode_bsp": [11, 50], "mode_firmwar": [11, 50], "wlan": [11, 48, 50, 75, 76, 150], "pm_perform": [11, 51], "pm_powersav": [11, 51], "pm_none": [11, 51], "lan": [11, 48, 75, 76], "ethernet": [11, 48], "countri": [11, 48], "hostnam": [11, 48, 51, 103], "openamp": [11, 28], "asymmetr": [11, 28], "multiprocess": [11, 28], "amp": [11, 28, 86], "new_service_callback": [11, 80], "endpoint": [11, 32, 99], "is_readi": [11, 80, 89], "remoteproc": 11, "uctyp": [11, 28, 134, 143], "layout": [11, 144], "content": [11, 13, 29, 34, 85, 110, 123, 127, 130, 134, 137, 138, 140, 141, 142, 147, 150, 151, 152, 153], "little_endian": [11, 108], "big_endian": [11, 108], "sizeof": [11, 108], "addressof": [11, 108, 134], "bytes_at": [11, 108], "bytearray_at": [11, 108], "uint8": [11, 70, 72, 108], "int8": [11, 70, 72, 108], "uint16": [11, 70, 72, 108], "int16": [11, 70, 72, 108], "uint32": [11, 108], "int32": [11, 108], "uint64": [11, 108], "int64": [11, 108], "float32": [11, 67, 70, 108], "float64": [11, 108], "void": [11, 105, 108], "ptr": [11, 108, 155], "mutex": [11, 28, 75, 147], "ping": [11, 28], "urequest": [11, 28], "respons": [11, 16, 67, 75, 104, 107, 111, 122, 147], "header": [11, 22, 25, 59, 104, 108, 110, 112, 126], "request": [11, 16, 31, 34, 35, 40, 48, 83, 84, 85, 89, 93, 102, 110, 148], "head": [11, 110, 115, 143], "put": [11, 31, 46, 50, 68, 77, 83, 102, 110, 115, 116, 120, 121, 123, 126, 132, 133, 134, 147, 155], "vf": [11, 28, 81, 83, 88, 149, 150], "mkf": [11, 83, 111, 144], "abstractblockdev": [11, 83, 88, 111, 144], "readblock": [11, 83, 88, 111, 144], "writeblock": [11, 83, 88, 111, 144], "openmv": [11, 34, 53, 54, 56, 62, 63, 64, 67, 68, 70, 75, 76, 77, 78, 83, 88, 89, 98, 113, 114, 116, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129], "cam": [11, 34, 53, 54, 56, 62, 63, 67, 68, 70, 75, 76, 77, 83, 88, 89, 98, 114, 116, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129], "pyb": [11, 14, 28, 34, 37, 47, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 115, 116, 117, 119, 121, 129, 144, 147, 153, 154], "board": [11, 14, 16, 17, 22, 26, 28, 31, 34, 35, 36, 41, 42, 48, 49, 52, 62, 68, 74, 81, 88, 91, 95, 106, 107, 120, 121, 123, 124, 125, 128, 144, 145, 147, 150, 152, 153, 154], "delai": [11, 38, 42, 65, 77, 83, 107, 116, 143, 147, 150, 155], "udelai": [11, 83], "milli": [11, 16, 68, 83], "elapsed_milli": [11, 83], "elapsed_micro": [11, 83], "fault_debug": [11, 83], "wfi": [11, 83, 139], "standbi": [11, 83, 84, 92], "have_cdc": [11, 83], "hid": [11, 83], "main": [11, 14, 31, 46, 47, 77, 83, 93, 114, 123, 125, 128, 129, 144, 148, 150, 151, 152, 153], "repl_uart": [11, 83], "rng": [11, 83, 147, 154], "usb_mod": [11, 83, 97], "hid_mous": [11, 83], "hid_keyboard": [11, 83], "read_tim": [11, 84], "adcal": 11, "list16": [11, 85], "mask16": [11, 85], "mask32": [11, 85], "dac": [11, 55, 83, 95, 116, 120], "nois": [11, 52, 67, 86], "triangl": [11, 86], "write_tim": [11, 86], "extint": [11, 83, 115], "reg": [11, 66, 77, 87, 91], "swint": [11, 87], "irq_rising_fal": [11, 87], "flash": [11, 17, 70, 83, 84, 111, 119, 123, 124, 125, 144, 145, 147, 148, 150, 152], "mem_read": [11, 89, 115], "mem_writ": [11, 89, 115], "led": [11, 14, 31, 41, 75, 83, 95, 118, 119, 120, 123, 124, 147, 155], "toggl": [11, 90, 95, 115, 120, 121, 147, 155], "mapper": [11, 87, 91], "af_list": [11, 91], "gpio": [11, 38, 41, 43, 56, 60, 61, 62, 87, 91, 95, 104, 107, 119, 120, 145, 155], "af_od": [11, 91], "af_pp": [11, 91], "out_od": [11, 91, 117], "out_pp": [11, 91, 115, 117], "pull_non": [11, 87, 91, 115], "pinaf": [11, 83], "wakeup": [11, 83, 92], "calibr": [11, 32, 63, 77, 84, 92, 94], "servo": [11, 83, 95, 120], "hobbi": [11, 83], "angl": [11, 67, 68, 94, 115], "pulse_width": [11, 94, 95], "driven": [11, 38, 40, 49, 83, 95], "send_recv": [11, 93, 115], "callback": [11, 14, 16, 31, 34, 36, 38, 39, 42, 46, 47, 52, 59, 63, 64, 70, 71, 75, 77, 78, 80, 85, 87, 92, 95, 98, 115], "counter": [11, 21, 29, 83, 95, 107, 108, 115, 116, 135, 136, 147], "prescal": [11, 85, 93, 95], "source_freq": [11, 95], "timerchannel": [11, 83], "setup": [11, 50, 60, 61, 62, 63, 65, 67, 69, 75, 76, 77, 79, 83, 107, 119, 123, 124, 126, 150], "pulse_width_perc": [11, 95, 115], "center": [11, 60, 61, 62, 63, 67, 69, 72, 77, 79, 95], "brk_off": [11, 95], "brk_low": [11, 95], "brk_high": [11, 95], "readchar": [11, 96], "writechar": [11, 96], "rt": [11, 43, 98, 137, 142], "ct": [11, 43, 98], "flow": [11, 16, 43, 67, 98, 154], "transmitt": [11, 145], "usb_hid": [11, 83], "usb": [11, 31, 83, 88, 114, 119, 123, 144, 145, 149, 150, 152, 153, 154], "human": [11, 83, 118], "usb_vcp": [11, 83], "comm": [11, 83], "setinterrupt": [11, 98], "debug_mode_en": [11, 98], "irq_rx": [11, 98], "stm": [11, 28, 91, 134, 155], "stm32": [11, 16, 28, 31, 34, 38, 43, 56, 120, 128, 143, 148, 150, 153], "mcu": [11, 28, 31, 35, 42, 83, 84, 85, 88, 108, 125, 145, 155], "gpioa": [11, 31, 104, 155], "gpiob": [11, 104], "gpio_bsrr": [11, 31, 104], "gpio_idr": [11, 31, 104], "gpio_odr": [11, 104, 155], "stm32wbxx": 11, "rfcore_statu": [11, 104], "rfcore_fw_vers": [11, 104], "rfcore_sys_hci": [11, 104], "stm32wlxx": 11, "subghz_c": [11, 104], "subghz_irq": [11, 104], "subghz_is_busi": [11, 104], "sensor": [11, 35, 41, 60, 61, 62, 65, 67, 69, 76, 79, 84, 123, 124, 126, 128, 145, 147], "camera": [11, 28, 60, 61, 62, 63, 65, 67, 68, 69, 76, 79, 95, 115, 118, 121, 123, 124, 126], "snapshot": [11, 60, 61, 62, 63, 65, 67, 69, 76, 77, 79, 123, 126, 128], "skip_fram": [11, 60, 61, 62, 63, 65, 69, 77, 79, 126], "height": [11, 60, 61, 62, 63, 65, 66, 67, 69, 73, 77, 79], "get_fb": [11, 77], "get_id": [11, 77], "alloc_extra_fb": [11, 77, 128], "dealloc_extra_fb": [11, 77], "set_pixformat": [11, 60, 61, 62, 63, 65, 69, 77, 79, 126], "get_pixformat": [11, 77], "set_frames": [11, 60, 61, 62, 63, 65, 69, 77, 79, 126], "get_frames": [11, 77], "set_framer": [11, 77], "get_framer": [11, 77], "set_window": [11, 67, 77], "get_window": [11, 77], "set_gainceil": [11, 77], "set_contrast": [11, 77], "set_bright": [11, 77], "set_satur": [11, 77], "set_qual": [11, 77], "set_colorbar": [11, 77], "set_auto_gain": [11, 77], "get_gain_db": [11, 77], "set_auto_exposur": [11, 77], "get_exposure_u": [11, 77], "set_auto_whiteb": [11, 77], "get_rgb_gain_db": [11, 77], "set_auto_blc": [11, 77], "get_blc_reg": [11, 77], "set_hmirror": [11, 77], "get_hmirror": [11, 77], "set_vflip": [11, 77], "get_vflip": [11, 77], "set_transpos": [11, 77], "get_transpos": [11, 77], "set_auto_rot": [11, 77], "get_auto_rot": [11, 77], "set_framebuff": [11, 77], "get_framebuff": [11, 77], "disable_delai": [11, 77], "disable_full_flush": [11, 77], "set_lens_correct": [11, 77], "set_vsync_callback": [11, 77], "set_frame_callback": [11, 77], "get_frame_avail": [11, 63, 77], "set_color_palett": [11, 77], "get_color_palett": [11, 77], "__write_reg": [11, 68, 77], "__read_reg": [11, 68, 77], "grayscal": [11, 60, 61, 62, 63, 65, 67, 69, 72, 77, 79, 123, 126], "rgb565": [11, 60, 61, 62, 63, 65, 67, 69, 77, 79, 123, 126], "bayer": [11, 67, 77], "yuv422": [11, 67, 77], "jpeg": [11, 67, 69, 74, 75, 76, 77, 123], "ov2640": [11, 76, 77], "ov5640": [11, 76, 77], "ov7690": [11, 77], "ov7725": [11, 67, 77], "ov9650": [11, 77], "mt9v022": [11, 77], "mt9v024": [11, 77], "mt9v032": [11, 77], "mt9v034": [11, 77], "mt9m114": [11, 77], "lepton": [11, 63, 67, 77], "hm01b0": [11, 77], "hm0360": [11, 77], "gc2145": [11, 77], "pag7920": [11, 77], "paj6100": [11, 77], "frogeye2020": [11, 77], "qqcif": [11, 77], "qcif": [11, 77], "cif": [11, 77], "qqsif": [11, 77], "qsif": [11, 77], "sif": [11, 77, 79], "qqqqvga": [11, 77], "qqqvga": [11, 77], "qqvga": [11, 65, 77], "qvga": [11, 55, 63, 69, 77, 126], "vga": [11, 55, 77], "hqqqqvga": [11, 77], "hqqqvga": [11, 77], "hqqvga": [11, 77], "hqvga": [11, 77], "hvga": [11, 77], "b64x32": [11, 77], "b64x64": [11, 67, 77], "b128x64": [11, 77], "b128x128": [11, 77], "b160x160": [11, 77], "b320x320": [11, 77], "lcd": [11, 55, 58, 60, 61, 62, 77, 78, 79], "qqvga2": [11, 77], "wvga": [11, 77], "wvga2": [11, 77], "svga": [11, 55, 77], "xga": [11, 55, 77], "wxga": [11, 77], "sxga": [11, 55, 77], "sxgam": [11, 77], "uxga": [11, 55, 77], "hd": [11, 55, 77], "fhd": [11, 55, 77], "qhd": [11, 77], "qxga": [11, 77], "wqxga": [11, 77], "wqxga2": [11, 77], "ioctl_set_readout_window": [11, 77], "ioctl_get_readout_window": [11, 77], "ioctl_set_triggered_mod": [11, 77], "ioctl_get_triggered_mod": [11, 77], "ioctl_set_fov_wid": [11, 77], "ioctl_get_fov_wid": [11, 77], "ioctl_trigger_auto_focu": [11, 77], "ioctl_pause_auto_focu": [11, 77], "ioctl_reset_auto_focu": [11, 77], "ioctl_wait_on_auto_focu": [11, 77], "ioctl_set_night_mod": [11, 77], "ioctl_get_night_mod": [11, 77], "ioctl_lepton_get_width": [11, 77], "ioctl_lepton_get_height": [11, 77], "ioctl_lepton_get_radiometri": [11, 77], "ioctl_lepton_get_refresh": [11, 77], "ioctl_lepton_get_resolut": [11, 77], "ioctl_lepton_run_command": [11, 77], "ioctl_lepton_set_attribut": [11, 77], "ioctl_lepton_get_attribut": [11, 77], "ioctl_lepton_get_fpa_temperatur": [11, 77], "ioctl_lepton_get_aux_temperatur": [11, 77], "ioctl_lepton_set_measurement_mod": [11, 77], "ioctl_lepton_get_measurement_mod": [11, 77], "ioctl_lepton_set_measurement_rang": [11, 77], "ioctl_lepton_get_measurement_rang": [11, 77], "ioctl_himax_md_en": [11, 77], "ioctl_himax_md_clear": [11, 77], "ioctl_himax_md_window": [11, 77], "ioctl_himax_md_threshold": [11, 77], "ioctl_himax_osc_en": [11, 77], "single_buff": [11, 77], "double_buff": [11, 77], "triple_buff": [11, 62, 77, 79], "video_fifo": [11, 77], "imag": [11, 28, 50, 60, 61, 62, 63, 65, 69, 70, 73, 74, 75, 76, 77, 79, 80, 115, 118, 123, 124, 125, 126, 128, 145], "vision": [11, 28, 77, 119, 120, 121, 124, 128], "binary_to_grayscal": [11, 67], "binary_to_rgb": [11, 67], "binary_to_lab": [11, 67], "binary_to_yuv": [11, 67], "grayscale_to_binari": [11, 67], "grayscale_to_rgb": [11, 67], "grayscale_to_lab": [11, 67], "grayscale_to_yuv": [11, 67], "rgb_to_binari": [11, 67], "rgb_to_grayscal": [11, 67], "rgb_to_lab": [11, 67], "rgb_to_yuv": [11, 67], "lab_to_binari": [11, 67], "lab_to_grayscal": [11, 67], "lab_to_rgb": [11, 67], "lab_to_yuv": [11, 67], "yuv_to_binari": [11, 67], "yuv_to_grayscal": [11, 67], "yuv_to_rgb": [11, 67], "yuv_to_lab": [11, 67], "load_decriptor": [11, 67], "save_descriptor": [11, 67], "match_descriptor": [11, 67], "haarcascad": 11, "similar": [11, 14, 17, 24, 26, 29, 31, 83, 93, 100, 103, 106, 107, 108, 126, 133, 145, 150, 151, 152, 155], "mean": [11, 16, 17, 22, 24, 29, 30, 39, 41, 46, 48, 52, 63, 67, 70, 72, 77, 81, 83, 84, 86, 95, 99, 102, 104, 107, 108, 114, 115, 123, 125, 128, 129, 131, 134, 136, 139, 143, 145, 147, 149, 150, 154, 155], "stdev": [11, 67, 72], "histogram": [11, 119], "l_bin": [11, 67], "a_bin": [11, 67], "b_bin": [11, 67], "get_percentil": [11, 67], "get_threshold": [11, 67], "get_statist": [11, 67], "percentil": 11, "l_valu": [11, 67], "a_valu": [11, 67], "b_valu": [11, 67], "statist": [11, 150], "median": [11, 67], "lq": [11, 67], "uq": [11, 67], "l_mean": [11, 67], "l_median": [11, 67], "l_mode": [11, 67], "l_stdev": [11, 67], "l_min": [11, 67], "l_max": [11, 67], "l_lq": [11, 67], "l_uq": [11, 67], "a_mean": [11, 67], "a_median": [11, 67], "a_mod": [11, 67], "a_stdev": [11, 67], "a_min": [11, 67], "a_max": [11, 67], "a_lq": [11, 67], "a_uq": [11, 67], "b_mean": [11, 67], "b_median": [11, 67], "b_mode": [11, 67], "b_stdev": [11, 67], "b_min": [11, 67], "b_max": [11, 67], "b_lq": [11, 67], "b_uq": [11, 67], "blob": 11, "corner": [11, 60, 61, 62, 63, 67, 73, 79, 118, 123], "min_corn": [11, 67], "w": [11, 17, 20, 36, 60, 61, 62, 63, 67, 69, 73, 77, 79, 100, 104, 108, 123, 144, 153, 154], "h": [11, 13, 60, 61, 62, 63, 67, 69, 70, 73, 77, 79, 83, 86, 87, 105, 123, 129, 143, 153], "pixel": [11, 60, 61, 62, 63, 64, 65, 67, 69, 77, 79, 123, 126], "cx": [11, 67], "cxf": [11, 67], "cy": [11, 67], "cyf": [11, 67], "rotat": [11, 60, 61, 62, 63, 67, 68, 69, 77, 79, 115], "rotation_deg": [11, 67], "rotation_rad": [11, 67], "perimet": [11, 67], "elong": [11, 67], "densiti": [11, 67], "extent": [11, 67], "compact": [11, 30, 67, 145], "solid": [11, 67, 123], "convex": [11, 67], "x_hist_bin": [11, 67], "y_hist_bin": [11, 67], "major_axis_lin": [11, 67], "minor_axis_lin": [11, 67], "enclosing_circl": [11, 67], "enclosed_ellips": [11, 67], "x1": [11, 67, 77, 91, 155], "y1": [11, 67, 77, 95], "x2": [11, 67, 77, 95], "y2": [11, 67, 77], "magnitud": [11, 67], "theta": [11, 67], "rho": [11, 67], "circl": [11, 19, 45], "rectangl": [11, 60, 61, 62, 63, 69, 79], "qrcode": 11, "payload": [11, 16, 59, 67, 75, 85], "ecc_level": [11, 67], "data_typ": [11, 67], "eci": [11, 67], "is_numer": [11, 67], "is_alphanumer": [11, 67], "is_binari": [11, 67], "is_kanji": [11, 67], "apriltag": [11, 128], "decision_margin": [11, 67], "ham": [11, 67], "good": [11, 46, 56, 67], "x_translat": [11, 67], "y_translat": [11, 67], "z_translat": [11, 67], "x_rotat": [11, 67], "y_rotat": [11, 67], "z_rotat": [11, 67], "datamatrix": 11, "row": [11, 46, 67, 143], "column": [11, 67, 123, 150], "capac": [11, 67, 143, 147], "pad": [11, 67], "barcod": 11, "qualiti": [11, 67, 69, 76, 77, 118, 123], "displac": 11, "scale": [11, 32, 60, 61, 62, 63, 67, 69, 70, 72, 77, 79, 84, 108], "kptmatch": 11, "keypoint": 11, "imageio": [11, 123], "is_clos": [11, 67, 69], "offset": [11, 67, 70, 88, 104, 105, 107, 108, 111, 133, 137, 142, 144], "buffer_s": [11, 67], "seek": [11, 29, 67, 145], "file_stream": [11, 67], "memory_stream": [11, 67], "get_pixel": [11, 67], "set_pixel": [11, 67], "to_ndarrai": [11, 67], "to_bitmap": [11, 67], "to_grayscal": [11, 67], "to_rgb565": [11, 67], "to_rainbow": [11, 67], "to_ironbow": [11, 67], "to_jpeg": [11, 67], "to_png": [11, 67], "crop": [11, 60, 61, 62, 63, 67, 69, 72, 77, 79], "draw_lin": [11, 67], "draw_rectangl": [11, 67], "draw_circl": [11, 67], "draw_ellips": [11, 67], "draw_str": [11, 67], "draw_cross": [11, 67], "draw_arrow": [11, 67], "draw_edg": [11, 67], "draw_imag": [11, 67], "draw_keypoint": [11, 67], "flood_fil": [11, 67], "mask_rectang": [11, 67], "mask_circl": [11, 67], "mask_ellips": [11, 67], "invert": [11, 37, 41, 43, 67, 115], "b_and": [11, 67], "b_nand": [11, 67], "b_or": [11, 67], "b_nor": [11, 67], "b_xor": [11, 67], "b_xnor": [11, 67], "awb": [11, 67], "ccm": [11, 67], "gamma_corr": [11, 67], "negat": [11, 67, 100], "rsub": [11, 67], "differ": [11, 17, 31, 35, 40, 41, 42, 43, 46, 48, 67, 70, 74, 76, 85, 93, 108, 111, 114, 115, 118, 120, 123, 124, 128, 134, 145, 146, 147, 149], "blend": [11, 63, 67, 69], "histeq": [11, 67], "erod": [11, 67], "dilat": [11, 67], "top_hat": [11, 67], "black_hat": [11, 67], "midpoint": [11, 67], "morph": [11, 67], "gaussian": [11, 67, 73], "laplacian": [11, 67], "bilater": [11, 67], "linpolar": [11, 67], "logpolar": [11, 67], "lens_corr": [11, 67], "rotation_corr": [11, 67], "get_similar": [11, 67], "get_histogram": [11, 67], "get_regress": [11, 67], "find_blob": [11, 67, 123], "find_lin": [11, 67], "find_line_seg": [11, 67], "find_circl": [11, 67], "find_rect": [11, 67], "find_qrcod": [11, 67], "find_apriltag": [11, 67, 77], "find_datamatric": [11, 67], "find_barcod": [11, 67], "find_displac": [11, 67, 77], "find_templ": [11, 67], "find_featur": [11, 67], "find_ey": [11, 67], "find_lbp": [11, 67], "find_keypoint": [11, 67], "find_edg": [11, 67], "find_hog": [11, 67], "stero_dispar": [11, 67], "png": [11, 67, 69], "palette_rainbow": [11, 60, 61, 62, 63, 67, 69, 77, 79], "palette_ironbow": [11, 60, 61, 62, 63, 67, 69, 79], "bilinear": [11, 60, 61, 62, 63, 67, 69, 72, 79], "bicub": [11, 60, 61, 62, 63, 67, 69, 79], "vflip": [11, 60, 61, 62, 63, 67, 69, 77, 79], "hmirror": [11, 60, 61, 62, 63, 67, 69, 77, 79], "transpos": [11, 60, 61, 62, 63, 67, 69, 77, 79], "extract_rgb_channel_first": [11, 60, 61, 62, 63, 67, 69, 79], "apply_color_palette_first": [11, 60, 61, 62, 63, 67, 69, 79], "scale_aspect_keep": [11, 60, 61, 62, 63, 67, 69, 79], "scale_aspect_expand": [11, 60, 61, 62, 63, 67, 69, 79], "scale_aspect_ignor": [11, 60, 61, 62, 63, 67, 69, 79], "black_background": [11, 67], "rotate_90": [11, 60, 61, 62, 63, 67, 69, 79], "rotate_180": [11, 60, 61, 62, 63, 67, 69, 79], "rotate_270": [11, 60, 61, 62, 63, 67, 69, 79], "jpeg_subsampling_auto": [11, 67], "jpeg_subsampling_444": [11, 67], "jpeg_subsampling_422": [11, 67], "jpeg_subsampling_420": [11, 67], "search_ex": [11, 67], "search_d": [11, 67], "edge_canni": [11, 67], "edge_simpl": [11, 67], "corner_fast": [11, 67], "corner_agast": [11, 67], "tag16h5": [11, 67], "tag25h7": [11, 67], "tag25h9": [11, 67], "tag36h10": [11, 67], "tag36h11": [11, 67], "artoolkit": [11, 67], "ean2": [11, 67], "ean5": [11, 67], "ean8": [11, 67], "upc": [11, 67], "isbn10": [11, 67], "upca": [11, 67], "ean13": [11, 67], "isbn13": [11, 67], "i25": [11, 67], "databar": [11, 67], "databar_exp": [11, 67], "codabar": [11, 67], "code39": [11, 67], "pdf417": [11, 67], "code93": [11, 67], "code128": [11, 67], "ml": [11, 28, 52], "learn": [11, 28, 35, 72, 73, 126], "app": [11, 41, 70, 127, 150, 153], "microspeech": [11, 70], "speech": [11, 70], "recognit": [11, 70], "preprocess": [11, 67, 70, 84], "nm": [11, 70], "soft": [11, 31, 70, 147], "suppress": [11, 70], "add_bounding_box": [11, 73], "get_bounding_box": [11, 73], "model": [11, 38, 42, 52, 53, 68, 71, 72, 73, 91, 93, 120], "predict": [11, 70, 72, 128, 147], "input_shap": [11, 70], "input_dtyp": [11, 70], "input_scal": [11, 70], "input_zero_point": [11, 70], "output_shap": [11, 70], "output_dtyp": [11, 70], "output_scal": [11, 70], "output_zero_point": [11, 70], "label": [11, 67, 70, 71, 73, 118, 123, 131, 134, 144], "gif": [11, 28, 69, 123], "record": [11, 28, 52, 67, 77, 123], "add_fram": [11, 65, 69], "mjpeg": [11, 28, 65, 67, 123], "audio": [11, 28, 36], "start_stream": [11, 52], "stop_stream": [11, 52], "spidisplai": [11, 55], "refresh": [11, 55, 60, 61, 62, 63, 77, 79], "bgr": [11, 62], "byte_swap": [11, 62], "backlight": [11, 55, 60, 61, 62], "bus_writ": [11, 58, 60, 62], "rgbdisplai": [11, 55], "rgb": [11, 31, 55, 60, 62, 63, 67, 69, 72, 79, 114, 115, 121, 123], "dsidisplai": [11, 55, 58], "dsi": [11, 55, 58], "bus_read": [11, 58, 60], "displaydata": [11, 55], "display_id": [11, 59], "send_fram": [11, 59], "receive_fram": [11, 59], "frame_callback": [11, 59], "st7701": [11, 55, 60], "read_id": [11, 58, 66], "dacbacklight": [11, 55, 60, 61, 62], "pwmbacklight": [11, 55, 60, 61, 62], "tqvga": [11, 55], "fhvga": [11, 55], "fhvga2": [11, 55], "thvga": [11, 55], "fwvga": [11, 55, 60, 61], "fwvga2": [11, 55], "tfwvga": [11, 55], "tfwvga2": [11, 55], "wsvga": [11, 55], "sxga2": [11, 55], "fir": [11, 28], "thermal": [11, 28, 64, 67, 78], "far": [11, 22, 28, 65, 69, 128, 154], "infrar": [11, 28], "radiometr": [11, 63, 77], "register_vsync_cb": [11, 63], "register_frame_cb": [11, 63], "trigger_ffc": [11, 63], "read_ta": [11, 63], "read_ir": [11, 63], "draw_ir": [11, 63], "fir_non": [11, 63], "fir_shield": [11, 63], "fir_mlx90621": [11, 63], "fir_mlx90640": [11, 63], "fir_mlx90641": [11, 63], "fir_amg8833": [11, 63], "fir_lepton": [11, 63], "tv": [11, 28], "tv_none": [11, 79], "tv_shield": [11, 79], "cpufreq": [11, 28], "cpu": [11, 28, 31, 81, 91, 104, 107, 108, 155], "frequenc": [11, 28, 31, 35, 36, 37, 40, 42, 52, 53, 57, 75, 84, 85, 86, 89, 93, 95, 115, 147], "set_frequ": [11, 54], "get_current_frequ": [11, 54], "get_supported_frequ": [11, 54], "buzzer": [11, 28, 41], "duti": [11, 16, 37, 53, 57, 95, 115], "resonant_freq": [11, 53], "imu": [11, 77], "acceleration_mg": [11, 68], "angular_rate_mdp": [11, 68], "temperature_c": [11, 68], "roll": [11, 68, 77, 95], "pitch": [11, 68, 121], "rpc": [11, 28], "get_byt": [11, 75], "put_byt": [11, 75], "stream_read": [11, 75], "stream_writ": [11, 75], "rpc_master": 11, "rpc_slave": 11, "register_callback": [11, 75], "schedule_callback": [11, 75], "setup_loop_callback": [11, 75], "rpc_can_mast": 11, "master": [11, 36, 89, 93, 115], "rpc_can_slav": 11, "slave": [11, 89, 115], "rpc_i2c_mast": 11, "rpc_i2c_slav": 11, "rpc_spi_mast": 11, "rpc_spi_slav": 11, "rpc_uart_mast": 11, "rpc_uart_slav": 11, "rpc_usb_vcp_mast": 11, "vcp": [11, 83, 98], "rpc_usb_vcp_slav": 11, "rpc_network_mast": 11, "rpc_network_slav": 11, "rtsp": [11, 28], "rtsp_server": 11, "register_setup_cb": [11, 76], "register_play_cb": [11, 76], "register_pause_cb": [11, 76], "register_teardown_cb": [11, 76], "omv": [11, 28], "version_major": [11, 74], "version_minor": [11, 74], "version_patch": [11, 74], "version_str": [11, 74], "arch": [11, 49, 74, 151], "board_typ": [11, 74], "board_id": [11, 74], "disable_fb": [11, 74], "gt911": [11, 28], "touch": [11, 28, 150, 153], "screen": [11, 28, 56, 57, 58, 60, 61, 62, 79], "_read_reg": [11, 66], "_write_reg": [11, 66], "read_point": [11, 66], "ft5x06": [11, 28], "get_gestur": [11, 64], "get_point": [11, 64], "get_point_flag": [11, 64], "get_point_id": [11, 64], "get_point_x": [11, 64], "get_point_i": [11, 64], "touch_callback": [11, 64, 66], "update_point": [11, 64], "lcd_gesture_move_up": [11, 64], "lcd_gesture_move_left": [11, 64], "lcd_gesture_move_down": [11, 64], "lcd_gesture_move_right": [11, 64], "lcd_gesture_zoom_in": [11, 64], "lcd_gesture_zoom_out": [11, 64], "lcd_gesture_non": [11, 64], "lcd_flag_press": [11, 64], "lcd_flag_releas": [11, 64], "lcd_flag_mov": [11, 64], "tfp410": [11, 28, 61], "dvi": [11, 28], "hdmi": [11, 28, 55, 59, 61], "hotplug_callback": [11, 78], "third": [11, 67, 99, 108, 129, 143, 148, 150, 151, 152, 154], "parti": [11, 67, 148, 150, 152], "ulab": [11, 70], "numpi": [11, 52, 70, 72], "manipul": [11, 67, 155], "pid": [11, 83, 150], "proport": [11, 155], "integr": [11, 45, 104, 123, 147, 150, 155], "bno055": 11, "ssd1306": 11, "ol": 11, "tb6612": 11, "stepper": 11, "motor": [11, 94, 95, 124], "modbu": 11, "mqtt": 11, "vl53l1x": 11, "tof": 11, "glossari": [11, 146], "aka": [11, 50, 51, 146], "indent": 11, "past": [11, 67, 123, 143], "remot": [11, 16, 34, 75, 76, 80, 85, 102, 123, 136, 145, 146, 153], "mpremot": [11, 103, 145, 146], "shortcut": [11, 38, 102, 123, 127], "mpy": [11, 106, 143, 145, 146, 148, 149, 152, 154], "qstr": [11, 143], "tip": [11, 123, 135], "emerg": [11, 46], "isr": [11, 47], "overcom": [11, 133, 136], "design": [11, 75, 107, 111, 124, 128, 143, 144, 145], "reentranc": [11, 47], "critic": [11, 31, 46, 47, 83, 155], "maximis": [11, 143, 146], "alloc": [11, 16, 17, 21, 24, 34, 38, 42, 46, 63, 67, 77, 84, 85, 95, 101, 107, 108, 128, 143, 145, 147, 151], "slowest": 11, "declar": [11, 46, 134, 143, 147], "cach": [11, 17, 108], "emitt": 11, "viper": [11, 151], "microcontrol": [11, 31, 71, 75, 77, 104, 114, 120, 124, 128, 145, 146, 149, 155], "fragment": [11, 24, 29, 77, 81, 112, 128, 145, 147, 149, 155], "postscript": 11, "footnot": 11, "manifest": [11, 125, 146, 152], "add_librari": [11, 148], "metadata": [11, 148], "freeze_as_str": [11, 148], "freeze_as_mpi": [11, 148], "freeze_mpi": [11, 148], "mip": [11, 145, 150], "publish": [11, 113], "inlin": [11, 134, 146, 147, 155], "assembl": [11, 133, 136, 140, 146, 147, 155], "thumb2": [11, 146], "architectur": [11, 41, 74, 82, 119, 134, 143, 146, 151], "convent": [11, 93, 143, 150, 153], "instruct": [11, 83, 87, 132, 137, 141, 142, 143, 147, 155], "categori": [11, 155], "logic": [11, 34, 38, 41, 43, 60, 61, 62, 63, 67, 69, 76, 79, 85, 91, 95, 101, 131, 134, 135, 145], "bitwis": [11, 16, 36, 98, 135], "subtract": [11, 67, 70, 92, 107, 131], "divis": 11, "apsr": [11, 133, 136], "branch": [11, 19, 131, 132, 135, 150, 152], "subroutin": 11, "push": [11, 27, 31, 83, 87, 91, 134, 135], "arm": [11, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 145, 147], "fpu": 11, "direct": [11, 15, 16, 17, 22, 31, 50, 60, 61, 62, 63, 66, 67, 68, 79, 84, 86, 88, 104, 107, 134, 135, 136, 155], "pyboard": [11, 14, 31, 36, 37, 45, 84, 85, 88, 91, 92, 96, 106, 114, 127, 128, 129, 133, 134, 143, 146, 147, 154, 155], "esp8266": [11, 31, 39, 43, 44, 153], "esp32": [11, 16, 31, 36, 39, 43, 148, 153], "fat": [11, 111, 118], "littlef": [11, 111], "hybrid": 11, "migrat": [11, 146], "guid": [11, 35, 41, 59, 71, 146, 152, 155], "overview": [11, 119], "readabl": [11, 134], "just": [11, 14, 16, 20, 29, 35, 50, 60, 61, 62, 63, 67, 69, 74, 75, 76, 77, 78, 79, 84, 102, 106, 107, 108, 117, 118, 120, 122, 123, 124, 125, 127, 128, 129, 145, 147, 148, 150, 153, 155], "chain": [11, 21, 103], "rh": [11, 115], "subscript": [11, 16, 20, 31, 99, 104, 108, 155], "step": [11, 60, 61, 62, 67, 95, 99, 107, 125, 143, 154, 155], "behav": [11, 101, 107, 154], "bit_length": 11, "No": [11, 17, 34, 38, 63, 71, 75, 77, 85, 125, 144], "becom": [11, 14, 24, 31, 34, 36, 38, 46, 50, 60, 61, 62, 63, 67, 69, 79, 85, 96, 101, 123, 143, 150, 153], "invalid": [11, 15, 83, 107, 143, 147], "its": [11, 12, 16, 17, 19, 20, 24, 27, 28, 31, 33, 34, 35, 37, 40, 45, 46, 50, 63, 65, 67, 70, 75, 80, 81, 82, 83, 84, 85, 86, 89, 94, 101, 103, 106, 108, 111, 114, 115, 119, 127, 130, 134, 136, 138, 143, 144, 145, 147, 148, 150, 151, 152, 155], "resiz": [11, 34, 85], "endswith": 11, "subscr": 11, "ljust": 11, "rjust": 11, "rsplit": 11, "yet": [11, 12, 77, 149], "typecod": [11, 13, 86], "overflow": [11, 16, 20, 34, 36, 85, 107, 130, 131, 136], "throw": [11, 59, 87, 128], "serialis": [11, 30, 143], "getenv": 11, "word": [11, 17, 36, 41, 71, 86, 93, 100, 104, 108, 132, 133, 137, 142, 143, 147, 154, 155], "few": [11, 28, 29, 41, 108, 115, 117, 118, 122, 123, 145, 147], "licens": [11, 148], "quick": [11, 102, 120, 135, 143, 145, 155], "openmvcam": 11, "sd": [11, 36, 77, 118, 125, 133, 143, 144], "card": [11, 77, 118, 125, 135, 143], "boot": [11, 46, 83, 118, 123, 125, 127, 144, 150, 153], "softwar": [11, 34, 35, 40, 41, 85, 87, 113, 119, 124, 155], "desktop": [11, 77, 119, 145], "raspberrypi": [11, 119], "menu": [11, 118, 119, 127], "edit": [11, 75, 114, 119, 125, 150], "viewer": [11, 119], "video": [11, 65, 67, 69, 76, 77, 118, 119], "As": [11, 16, 23, 38, 49, 50, 67, 75, 85, 100, 102, 108, 110, 111, 112, 118, 120, 121, 123, 128, 141, 143, 144, 147, 149, 150, 151, 152, 155], "protect": [11, 16, 47, 50, 118, 119], "onewir": 11, "dht": 11, "experiment": 12, "settl": [12, 77], "q": [13, 67, 105, 143], "latter": [13, 107, 112, 133], "grow": [13, 67, 77, 128, 155], "thrown": [13, 34, 75, 85, 147], "place": [13, 21, 22, 27, 28, 29, 34, 40, 44, 67, 85, 96, 107, 130, 143, 147, 151], "represent": [13, 15, 30, 102, 106, 145], "separ": [13, 15, 17, 20, 30, 40, 67, 102, 108, 145], "blink": [14, 75, 118], "period_m": 14, "led1": [14, 41], "led2": [14, 41], "700": 14, "400": [14, 31, 54, 86], "10_000": 14, "coro": 14, "associ": [14, 32, 35, 38, 47, 73, 84, 87, 90, 91, 95, 102, 108, 113, 123, 147, 150], "millisecond": [14, 16, 31, 34, 39, 42, 44, 59, 63, 67, 71, 75, 77, 80, 83, 85, 89, 92, 93, 94, 96, 97, 98, 101, 102, 107, 115, 143, 155], "trap": 14, "caller": [14, 22, 111], "cleanup": 14, "return_except": 14, "promot": 14, "inject": [14, 150], "synchronis": [14, 85, 147], "otherwis": [14, 16, 21, 31, 34, 35, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 67, 70, 76, 77, 81, 83, 85, 86, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 111, 113, 114, 118, 123, 131, 135, 148, 151, 153, 154], "safe": [14, 147], "alreadi": [14, 23, 29, 31, 35, 67, 77, 80, 83, 84, 86, 102, 111, 115, 123, 125, 143, 147, 150, 152, 153], "immedi": [14, 34, 36, 38, 47, 71, 75, 85, 96, 98, 101, 103, 123, 130, 131, 137, 140, 142, 147, 150, 154], "outsid": [14, 37, 46, 67, 75, 107, 143, 150], "possibli": [14, 77, 81, 111, 141, 155], "automat": [14, 16, 22, 24, 29, 34, 52, 60, 61, 62, 63, 65, 67, 69, 70, 72, 75, 77, 80, 83, 84, 85, 87, 91, 101, 102, 111, 112, 115, 118, 123, 125, 127, 143, 144, 145, 148, 150, 152], "upon": [14, 31, 42, 83, 106, 148, 154], "coordin": [14, 67, 73], "unlock": [14, 46, 47, 147], "atom": [14, 46, 147], "remain": [14, 35, 38, 67, 87, 88, 96, 103, 111, 143, 154], "host": [14, 80, 83, 98, 102, 109, 111, 144, 145, 150, 152], "transport": [14, 75, 103], "reader": 14, "writer": 14, "Will": [14, 111], "could": [14, 28, 67, 82, 87, 91, 96, 108, 118, 124, 143, 145, 147, 154], "made": [14, 16, 29, 33, 67, 85, 95, 100, 114, 128, 134, 143], "incom": [14, 16, 46, 96, 147, 154], "minimis": [14, 143, 147], "streamread": [14, 36], "streamwrit": [14, 36], "extra": [14, 22, 32, 34, 35, 40, 46, 77, 85, 89, 93, 96, 148], "peernam": 14, "eof": [14, 102], "encount": [14, 30, 75, 127, 147], "buf": [14, 16, 34, 35, 36, 40, 43, 66, 83, 84, 85, 86, 88, 93, 96, 98, 102, 108, 111, 115, 143, 144, 147, 155], "eoferror": 14, "accumul": [14, 20, 52, 67], "sinc": [14, 24, 67, 83, 102, 107, 112, 118, 123, 124, 126, 128, 133], "through": [14, 26, 50, 67, 75, 86, 87, 91, 92, 94, 95, 103, 115, 118, 122, 123, 143, 147, 148, 155], "variou": [15, 20, 32, 48, 54, 71, 87, 107, 108, 110, 111, 147, 148, 150, 155], "hexadecim": 15, "suppli": [15, 38, 41, 67, 84, 91, 155], "invers": [15, 41, 45, 67, 107], "base64": 15, "conform": [15, 106, 108], "2045": 15, "3548": 15, "energi": 16, "intend": [16, 28, 37, 106, 107, 145, 154], "higher": [16, 22, 28, 29, 31, 37, 38, 41, 42, 46, 52, 63, 67, 73, 75, 77, 88, 107, 115, 136, 143, 147], "we": [16, 17, 29, 67, 77, 95, 107, 114, 117, 118, 120, 121, 122, 123, 124, 125, 128, 129], "aiobl": [16, 150], "develop": [16, 29, 41, 107, 123, 125, 145, 148, 149, 150, 152, 153, 155], "subject": [16, 113, 147], "singleton": 16, "radio": [16, 48, 104], "param": [16, 34, 48, 51, 85, 102], "quot": [16, 48, 51], "addr_typ": 16, "addr": [16, 35, 48, 68, 89, 108, 144], "addr_mod": 16, "0x00": [16, 40, 89], "public": 16, "0x01": [16, 89, 131], "0x02": 16, "rpa": 16, "0x03": 16, "nrpa": 16, "gap_nam": 16, "gap": 16, "0x1800": 16, "characterist": [16, 40, 154], "0x2a00": 16, "rxbuf": [16, 43], "entir": [16, 17, 28, 46, 67, 96, 100, 143, 144, 148, 150, 155], "bursti": 16, "abil": [16, 29, 111, 118, 123, 147, 149], "mtu": 16, "att": 16, "exchang": 16, "_irq_mtu_exchang": 16, "discov": [16, 28, 48], "mitm": 16, "capabl": [16, 31, 38, 48, 55, 115, 123, 143, 145, 147, 152], "_io_capability_display_onli": 16, "_io_capability_display_yesno": 16, "_io_capability_keyboard_onli": 16, "_io_capability_no_input_output": 16, "_io_capability_keyboard_displai": 16, "le_secur": 16, "le": [16, 136], "unnecessari": [16, 155], "adv_data": 16, "char_data": 16, "notify_data": 16, "entri": [16, 34, 80, 81, 85, 106, 107, 152], "ringbuff": 16, "invoc": [16, 101], "connected_addr": 16, "matched_uuid": 16, "inspect": [16, 150, 151], "decid": 16, "elsewher": [16, 132, 155], "And": [16, 66, 75, 117, 120, 124, 127, 128, 129], "bt_irq": 16, "_irq_central_connect": 16, "conn_handl": 16, "elif": [16, 107], "_irq_central_disconnect": 16, "_irq_gatts_writ": 16, "written": [16, 21, 25, 29, 35, 36, 39, 43, 46, 86, 96, 98, 101, 102, 108, 111, 123, 147, 154, 155], "attr_handl": 16, "_irq_gatts_read_request": 16, "deni": [16, 147], "_irq_scan_result": 16, "adv_typ": 16, "_irq_scan_don": 16, "_irq_peripheral_connect": 16, "_irq_peripheral_disconnect": 16, "_irq_gattc_service_result": 16, "start_handl": 16, "end_handl": 16, "_irq_gattc_service_don": 16, "onc": [16, 17, 20, 34, 35, 41, 42, 44, 48, 51, 65, 67, 69, 70, 75, 76, 83, 102, 107, 111, 117, 118, 120, 123, 125, 126, 129, 143, 144, 150, 155], "discoveri": 16, "_irq_gattc_characteristic_result": 16, "value_handl": 16, "_irq_gattc_characteristic_don": 16, "_irq_gattc_descriptor_result": 16, "dsc_handl": 16, "_irq_gattc_descriptor_don": 16, "_irq_gattc_read_result": 16, "_irq_gattc_read_don": 16, "_irq_gattc_write_don": 16, "_irq_gattc_notifi": 16, "notifi": 16, "_irq_gattc_ind": 16, "_irq_gatts_indicate_don": 16, "acknowledg": [16, 154], "u": [16, 28, 67, 77, 83, 107, 118, 122, 153, 155], "_irq_l2cap_accept": 16, "reject": 16, "cid": 16, "psm": 16, "our_mtu": 16, "peer_mtu": 16, "_irq_l2cap_connect": 16, "_irq_l2cap_disconnect": 16, "attempt": [16, 31, 46, 51, 83, 107, 143, 144, 147, 155], "_irq_l2cap_recv": 16, "_irq_l2cap_send_readi": 16, "readi": [16, 33, 63, 77, 80, 89, 101, 102, 118, 123, 125, 147, 149, 150, 152, 155], "transmit": [16, 31, 34, 35, 36, 43, 51, 67, 85, 96, 109, 120], "_irq_connection_upd": 16, "conn_interv": 16, "conn_lat": 16, "supervision_timeout": 16, "_irq_encryption_upd": 16, "key_siz": 16, "_irq_get_secret": 16, "th": 16, "sec_typ": 16, "_irq_set_secret": 16, "_irq_passkey_act": 16, "respond": [16, 35, 89, 147, 154], "passkei": 16, "action": [16, 113, 123, 125, 150, 153], "_gatts_no_error": 16, "_gatts_error_read_not_permit": 16, "_gatts_error_write_not_permit": 16, "_gatts_error_insufficient_authent": 16, "0x05": 16, "_gatts_error_insufficient_author": 16, "0x08": [16, 35], "_gatts_error_insufficient_encrypt": 16, "0x0f": 16, "_passkey_action_non": 16, "_passkey_action_input": 16, "_passkey_action_displai": 16, "_passkey_action_numeric_comparison": 16, "firmwar": [16, 22, 25, 28, 31, 50, 67, 70, 77, 80, 88, 104, 106, 112, 114, 118, 123, 125, 127, 134, 143, 144, 145, 148, 149, 152], "interval_u": 16, "resp_data": 16, "interv": [16, 31, 83, 99, 107, 109, 143, 147], "nearest": [16, 60, 61, 62, 63, 67, 69, 79], "625u": 16, "repli": [16, 51], "reus": [16, 34, 67, 85, 143, 145], "resum": [16, 31, 150], "duration_m": 16, "1280000": 16, "window_u": 16, "11250": 16, "indefinit": [16, 31, 71, 83], "background": [16, 36, 67, 69, 77, 145, 150], "itself": [16, 17, 22, 25, 28, 67, 75, 86, 100, 114, 130, 143, 147, 151, 155], "adv_ind": 16, "scannabl": 16, "undirect": 16, "adv_direct_ind": 16, "adv_scan_ind": 16, "adv_nonconn_ind": 16, "0x04": 16, "scan_rsp": 16, "want": [16, 17, 22, 41, 63, 65, 67, 69, 73, 75, 76, 77, 88, 98, 107, 108, 115, 117, 118, 121, 123, 124, 125, 126, 127, 129, 144, 148, 150, 153, 154], "scan_duration_m": 16, "2000": [16, 44, 67, 77, 89, 107, 115, 126, 155], "min_conn_interval_u": 16, "max_conn_interval_u": 16, "outstand": [16, 75], "earli": [16, 24, 107, 143], "chosen": [16, 93, 102], "typic": [16, 22, 25, 28, 31, 36, 37, 47, 48, 52, 53, 56, 57, 58, 67, 70, 75, 77, 80, 88, 103, 106, 107, 131, 136, 144, 145, 147, 148, 152, 155], "30000": [16, 115], "50000": [16, 35], "microsecond": [16, 31, 35, 39, 77, 83, 85, 107, 115, 155], "shorter": [16, 22, 150], "throughput": 16, "expens": [16, 67, 118, 128], "usual": [16, 17, 20, 23, 24, 29, 32, 35, 37, 38, 40, 46, 47, 48, 49, 51, 67, 84, 99, 103, 106, 107, 108, 111, 128, 136, 143, 144, 145, 147, 151, 154, 155], "act": [16, 32, 35, 43, 96, 98, 101, 120, 154], "wasn": 16, "themselv": [16, 118, 123, 143], "These": [16, 17, 29, 35, 38, 40, 46, 48, 51, 67, 88, 104, 123, 130, 131, 133, 134, 135, 136, 137, 138, 140, 142, 143, 147, 148, 151, 155], "registr": [16, 135], "anyth": [16, 38, 41, 60, 61, 62, 63, 67, 69, 70, 75, 79, 91, 96, 118, 124, 125, 143, 155], "char_handl": 16, "services_definit": 16, "OR": [16, 38, 60, 61, 62, 63, 67, 69, 79, 101, 113], "combin": [16, 29, 35, 71, 101, 102, 104, 144, 150], "privaci": 16, "flatten": 16, "heart": [16, 70], "rate": [16, 35, 36, 40, 43, 60, 61, 62, 63, 67, 68, 75, 77, 84, 85, 89, 92, 93, 95, 96, 109, 115, 147, 153], "nordic": 16, "hr_uuid": 16, "0x180d": 16, "hr_char": 16, "0x2a37": 16, "flag_read": 16, "flag_notifi": 16, "hr_servic": 16, "uart_uuid": 16, "6e400001": 16, "b5a3": 16, "f393": 16, "e0a9": 16, "e50e24dcca9": 16, "uart_tx": 16, "6e400003": 16, "uart_rx": 16, "6e400002": 16, "flag_writ": 16, "uart_servic": 16, "hr": 16, "bt": 16, "_flag_broadcast": 16, "0x0001": 16, "_flag_read": 16, "0x0002": 16, "_flag_write_no_respons": 16, "0x0004": 16, "_flag_writ": 16, "0x0008": 16, "_flag_notifi": 16, "0x0010": 16, "_flag_ind": 16, "0x0020": 16, "_flag_authenticated_signed_writ": 16, "0x0040": 16, "_flag_aux_writ": 16, "0x0100": 16, "_flag_read_encrypt": 16, "0x0200": 16, "_flag_read_authent": 16, "0x0400": 16, "_flag_read_author": 16, "0x0800": 16, "_flag_write_encrypt": 16, "0x1000": [16, 134], "_flag_write_authent": 16, "0x2000": 16, "_flag_write_author": 16, "0x4000": [16, 81], "send_upd": 16, "subscrib": 16, "notif": [16, 118, 122], "regardless": [16, 31, 41, 96, 101, 138, 144, 155], "largest": 16, "At": [16, 34, 35, 36, 40, 43, 80, 85, 89, 93, 95, 96, 98, 143, 144, 154], "someth": [16, 29, 67, 75, 87, 118, 129, 150, 154], "0xffff": [16, 85, 92, 95, 140], "confirm": [16, 104], "bluekitchen": 16, "nimbl": 16, "multiplex": 16, "establish": [16, 76, 103, 155], "credit": 16, "unlik": [16, 41, 67, 75, 100, 102, 106, 108, 121, 133, 145, 154], "share": [16, 37, 40, 41, 61, 65, 67, 69, 75, 77, 80, 95, 123, 134, 147], "independ": [16, 39, 53, 54, 67, 92, 108, 145, 147], "amount": [16, 22, 24, 29, 31, 46, 66, 67, 70, 71, 77, 95, 102, 118, 123, 143, 145, 147, 151, 152, 155], "consum": [16, 143, 154], "chanc": 16, "peer": [16, 103], "unsuccess": 16, "twice": [16, 67, 118, 154, 155], "stall": [16, 96], "grant": [16, 113], "unabl": [16, 147], "those": [16, 32, 35, 38, 46, 47, 48, 67, 89, 100, 121, 123, 134, 146, 147, 155], "volatil": 16, "irk": 16, "prompt": [16, 106, 118, 127, 145, 150, 154], "shown": [16, 134], "0x2908": 16, "disk": [17, 60, 61, 62, 67, 69, 70, 114, 123, 143, 147], "effici": [17, 20, 25, 29, 35, 40, 46, 77, 100, 101, 102, 112, 143, 145, 155], "notabl": [17, 151], "berkelydb": 17, "xx": [17, 48, 50, 67], "hold": [17, 20, 29, 45, 46, 67, 77, 106, 107, 133, 145, 147, 151], "partit": [17, 88, 144, 149], "etc": [17, 22, 23, 25, 31, 38, 40, 41, 48, 67, 70, 72, 75, 76, 77, 80, 91, 96, 100, 102, 103, 106, 107, 118, 123, 124, 126, 131, 144, 145, 148, 150, 152], "oftentim": 17, "idiom": 17, "care": [17, 40, 58, 67, 70, 83, 108, 147], "NOT": [17, 26, 100, 102, 103, 113, 115], "mydb": 17, "db": 17, "assum": [17, 22, 35, 67, 87, 96, 101, 102, 107, 111, 118, 126, 131, 135, 150], "transact": [17, 35], "forget": [17, 84], "pages": 17, "caches": 17, "minkeypag": 17, "tweak": 17, "unus": [17, 34, 67, 85, 111, 128, 145], "page": [17, 47, 85, 123, 135], "node": [17, 106], "512": [17, 25, 63, 83, 85, 88, 92, 95, 111, 144], "65536": [17, 115], "enough": [17, 22, 34, 52, 56, 77, 85, 121, 123, 145], "polici": [17, 29, 77, 102], "reach": [17, 29, 86, 95], "Then": [17, 67, 85, 107, 121, 143, 148, 154], "lru": 17, "big": [17, 67, 77, 105, 106, 107, 108, 128, 155], "reclaim": [17, 143, 145, 155], "mandatori": [17, 38], "unwritten": 17, "sure": [17, 67, 76, 84, 102, 114, 115, 118, 123, 127, 150, 151], "start_kei": 17, "end_kei": 17, "inclus": [17, 22, 35, 37, 85, 99, 107, 112], "exclus": [17, 47, 147, 150], "descend": 17, "ORed": [17, 67, 108], "togeth": [17, 33, 38, 67, 123], "cosin": [19, 45], "exponenti": [19, 45, 67], "natur": [19, 37, 45, 67, 108, 131, 147], "logarithm": [19, 22, 45, 112], "cut": [19, 52, 75], "along": [19, 46, 60, 61, 62, 67, 75, 87, 120, 123, 127, 129, 134, 147], "axi": [19, 67], "phi": 19, "sine": [19, 45, 86], "ratio": [19, 37, 45, 60, 61, 62, 63, 67, 69, 75, 77, 79], "circumfer": [19, 45], "diamet": [19, 45], "maxlen": [20, 98], "doubl": [20, 67, 77, 105, 134, 150], "bound": [20, 42, 46, 50, 67, 73, 80, 102, 123, 147, 155], "discard": [20, 131, 154], "opposit": [20, 67], "right": [20, 36, 64, 67, 68, 73, 100, 107, 108, 113, 118, 120, 123, 124, 125, 138, 147], "room": [20, 34, 77, 85, 107, 123], "mytupl": 20, "t1": 20, "t2": 20, "rememb": [20, 63, 70, 114, 123], "benefit": [20, 124, 147, 148, 155], "k": [20, 150], "iv": 21, "suitabl": [21, 22, 26, 49, 75, 147], "vice": [21, 37, 63], "versa": [21, 37, 63], "mode_ecb": 21, "electron": 21, "book": 21, "ecb": 21, "mode_cbc": 21, "cbc": 21, "mode_ctr": 21, "ctr": 21, "vector": [21, 35, 67], "in_buf": 21, "out_buf": 21, "newli": [21, 147], "mutabl": [21, 67, 89, 93, 97, 98, 106, 147], "commonli": [22, 38, 40, 51, 112, 145, 147, 154], "archiv": [22, 112], "v1": [22, 28, 96, 105, 111, 112, 144, 151, 154], "micropy_py_defl": 22, "micropy_py_deflate_compress": 22, "own": [22, 67, 91, 94, 100, 101, 145, 148, 150, 155], "wbit": [22, 112], "1024": [22, 85, 112, 144], "32k": [22, 112], "kilobyt": [22, 108], "know": [22, 67, 118, 120, 123, 126, 128, 143, 155], "bidirect": [22, 80], "gz": [22, 25, 127], "wb": [22, 25, 102], "rb": [22, 25, 67, 102], "becaus": [22, 29, 41, 46, 47, 48, 51, 54, 66, 67, 75, 101, 102, 103, 114, 118, 123, 128, 129, 131, 134, 135, 138, 143, 147, 150, 152, 154, 155], "sourc": [22, 25, 31, 32, 33, 38, 39, 46, 59, 63, 67, 69, 80, 87, 92, 95, 107, 108, 112, 115, 118, 120, 121, 123, 125, 135, 143, 145, 147, 148, 151, 152], "turn": [22, 34, 40, 43, 60, 61, 62, 67, 77, 85, 89, 90, 93, 96, 115, 118, 121, 123, 124, 143, 148, 150, 154], "compressed_data": 22, "get_data_z": 22, "decompressed_data": 22, "uncompressed_data": 22, "get_data": 22, "de": [22, 86, 104, 118, 123, 145], "compressor": [22, 112], "slower": [22, 67, 77, 123, 152], "smaller": [22, 41, 67, 77, 86, 102, 106, 112, 143, 145, 155], "mid": 22, "decompressor": 22, "trivial": 22, "uncompress": [22, 65, 67], "unset": 22, "32kib": 22, "reason": [22, 29, 31, 34, 48, 54, 85, 102, 112, 118, 128, 133, 143, 145, 147], "kib": 22, "arbitrari": [22, 38, 40, 48, 87, 107, 108, 111, 134, 144, 145, 147], "consid": [22, 26, 31, 67, 90, 108, 115, 143, 147, 155], "larg": [22, 67, 69, 70, 75, 77, 108, 118, 123, 128, 143, 151, 152], "inventori": [23, 26, 102], "eexist": 23, "eagain": 23, "ansi": 23, "posix": [23, 47, 100, 101, 107, 111, 145], "mention": [23, 77, 84, 118, 147], "exc": [23, 106], "my_dir": 23, "trigger": [24, 31, 34, 38, 39, 63, 67, 77, 84, 85, 86, 87, 92, 95, 98, 143, 147, 150, 155], "satisfi": [24, 85], "oom": 24, "intent": 24, "earlier": [24, 28, 67, 96, 107, 108, 150], "hope": 24, "heurist": 24, "measur": [24, 31, 37, 63, 67, 77, 83, 84, 95, 107, 115, 137, 142, 147, 155], "vari": [24, 29, 31, 143, 147], "set_threshold": 24, "semant": [24, 101, 108], "conveni": [25, 35, 108, 112, 150], "frozen": [25, 106, 112, 143, 145, 148], "around": [25, 34, 42, 46, 64, 67, 70, 75, 85, 86, 95, 107, 123, 134, 147], "fileobj": 25, "footer": [25, 112], "checksum": [25, 59, 112], "compresslevel": 25, "mtime": [25, 81, 111], "guidanc": 25, "choos": [25, 48, 75, 80, 99, 114, 127, 128], "exact": [26, 67, 77, 80, 102, 107, 108, 123], "among": [26, 38, 48, 107], "modern": [26, 29, 114, 118, 125, 145], "sha2": 26, "seri": [26, 67, 85, 104, 123, 147, 148, 149, 150], "purpos": [26, 38, 46, 67, 86, 94, 113, 117, 120, 121, 141, 145, 147, 155], "constraint": [26, 28, 42, 107, 145, 147, 155], "internet": [26, 124, 145], "interoper": 26, "offer": [26, 41, 125, 143, 147], "hasher": 26, "fed": [26, 44, 143], "achiev": [26, 29, 31, 37, 67, 86, 96, 112, 124, 134, 143, 147, 155], "essenti": [27, 147, 154], "smallest": 27, "onto": [27, 28, 63, 67, 69, 87, 118, 127, 134, 141], "mirror": [28, 60, 61, 62, 63, 67, 69, 77, 79], "resourc": [28, 29, 63, 76, 80, 102, 124, 143, 145], "chapter": [28, 146], "aspir": 28, "project": [28, 67, 128, 145, 148, 149], "embed": [28, 107, 124, 132, 155], "With": [28, 31, 34, 37, 39, 40, 43, 49, 77, 81, 84, 85, 89, 91, 92, 93, 96, 107, 134], "pleas": [28, 35, 67, 75, 76, 115, 118, 120, 122, 123, 126], "unavail": [28, 81, 143], "pertain": 28, "ifi": 28, "fit": [28, 48, 60, 61, 62, 63, 67, 69, 70, 77, 79, 113, 123, 128, 143], "philosophi": 28, "drop": [28, 67, 77, 84, 123, 134], "locat": [28, 60, 61, 62, 63, 67, 79, 83, 85, 89, 111, 123, 132, 136, 143, 147, 148, 150, 152, 155], "folder": [28, 123, 125, 127], "appli": [28, 32, 37, 48, 52, 60, 61, 62, 63, 66, 67, 69, 70, 72, 73, 75, 77, 79, 86, 100, 118, 143, 145, 147, 148, 154, 155], "perhap": [28, 42], "wildcard": 28, "forc": [28, 34, 50, 63, 67, 77, 85, 95, 118, 143], "temporarili": [28, 47, 75], "_path": 28, "extra_method": 28, "utim": [28, 115], "umodul": 28, "simplifi": [29, 106, 107, 147], "serv": [29, 43, 139, 145, 155], "foundat": 29, "concret": [29, 37, 48, 111], "adher": 29, "dichotomi": 29, "wise": [29, 67], "classif": 29, "somewhat": [29, 67, 143], "unbuff": [29, 102], "os": [29, 145], "rtose": [29, 145], "bufferbloat": 29, "preciou": 29, "introduc": [29, 143, 147, 149], "later": [29, 35, 46, 63, 67, 77, 89, 108, 123, 146, 147], "But": [29, 41, 67, 107, 108, 123, 124, 128, 129], "ti": [29, 93], "buffered": 29, "incur": [29, 86], "short": [29, 31, 65, 67, 69, 102, 105, 124, 129, 145, 147, 153], "ask": [29, 101, 118, 122, 123], "similarli": [29, 83, 95, 134, 147, 148, 153], "suscept": 29, "guarante": [29, 40, 46, 102, 107, 147], "against": [29, 67, 75, 100, 103], "trait": 29, "concis": 29, "desir": [29, 84, 85, 91, 96], "strongli": 29, "advis": [29, 132], "favour": 29, "govern": 29, "peculiar": [29, 106, 146], "tricki": 29, "never": [29, 46, 63, 77, 84, 111, 123, 150], "arriv": [29, 95, 96, 147], "whatev": [29, 60, 61, 62, 63, 67, 69, 70, 75, 77, 79, 123], "lack": [29, 107, 147, 155], "clearli": 29, "inde": 29, "op": [29, 70, 86, 102, 111, 144, 155], "convolut": [29, 67], "undefin": [29, 35, 38, 48, 81, 102, 155], "matter": [29, 102], "prevail": 29, "cours": [29, 108], "alloc_s": 29, "prealloc": [29, 155], "That": [29, 43, 67, 77, 107, 114, 122, 123, 125, 128, 143], "lead": [29, 31, 38, 75, 107, 108, 144, 147, 148, 150, 155], "realloc": [29, 77], "hit": [29, 77], "situat": [29, 46, 108, 111, 114, 128, 143, 144, 147], "item_separ": 30, "key_separ": 30, "deserialis": 30, "unrestrict": 31, "buse": [31, 34, 85, 89, 93, 96], "incorrectli": 31, "malfunct": [31, 108], "lockup": 31, "crash": [31, 44, 108, 123, 147], "extrem": [31, 77, 86, 108, 124], "damag": [31, 113, 114], "physic": [31, 34, 35, 36, 38, 40, 41, 43, 49, 85, 89, 91, 93, 96, 111, 143], "thin": 31, "shim": 31, "top": [31, 41, 60, 61, 62, 63, 67, 73, 77, 79, 118, 123, 124, 128, 140, 151], "notat": [31, 67, 99, 102, 104, 108, 130, 131, 133, 136, 137, 138, 140, 142, 155], "0x48000000": 31, "0x18": 31, "0x10": [31, 115, 131, 143], "pa2": [31, 104], "pa3": [31, 104], "manner": [31, 67, 83, 143], "button": [31, 41, 74, 76, 83, 118, 123, 126, 144], "tri": [31, 67, 77, 82, 102, 135, 143, 147, 154, 155], "retain": [31, 108], "thing": [31, 67, 75, 91, 114, 118, 123, 124, 126, 128, 154], "compromis": 31, "unexpectedli": 31, "opaqu": [31, 60, 61, 62, 63, 67, 69, 77, 79, 102, 107], "restor": [31, 46, 83, 134, 135, 141], "hz": [31, 36, 37, 42, 53, 55, 63, 77, 79, 84, 92, 95, 115], "hertz": [31, 60, 61, 62, 77], "gate": 31, "consumpt": [31, 83, 120, 124, 143], "soon": [31, 38, 46, 64, 78, 96, 102, 147], "time_m": 31, "Such": [31, 46, 143, 147], "wake": [31, 38, 39, 68, 77, 83, 92], "retent": 31, "subsystem": [31, 84, 143], "hard": [31, 38, 77, 83, 98, 104, 107, 114, 128, 147, 150], "distinguish": [31, 102, 106], "soc": [31, 42, 108], "substr": [31, 82, 100, 143], "pulse_level": 31, "timeout_u": 31, "1000000": [31, 40, 115, 154], "straight": [31, 123, 124, 125], "awai": [31, 41, 67, 77], "bang": [31, 35, 40, 41, 115], "four": [31, 34, 67, 85, 112, 115, 123, 131, 132, 133, 143, 151], "high_time_0": 31, "low_time_0": 31, "high_time_1": 31, "low_time_1": 31, "850": 31, "800": [31, 66], "450": 31, "ws2812": 31, "800khz": 31, "accuraci": [31, 37, 63, 86, 95, 115], "cortex": [31, 67, 80], "m0": 31, "48mhz": 31, "120n": 31, "closer": [31, 67, 149], "30n": 31, "neopixel": 31, "strip": [31, 123, 143], "voltag": [32, 34, 38, 56, 84, 85, 86, 115, 116, 147], "discretis": 32, "65535": [32, 34, 37, 85, 102, 115], "microvolt": 32, "sample_n": 32, "atten": 32, "aspect": [32, 60, 61, 62, 63, 67, 69, 77, 79, 155], "attenu": 32, "taken": [32, 77, 100, 108, 147], "unit": [32, 36, 42, 43, 67, 81, 85, 96, 107, 121, 150], "done": [32, 43, 59, 70, 75, 77, 96, 103, 107, 118, 123, 124, 128, 133, 134, 143, 147, 149, 150, 152, 155], "finer": [33, 37], "TO": [34, 113], "FOR": [34, 113], "THE": [34, 113], "rt1062": 34, "AND": [34, 67, 113], "WILL": [34, 102], "BE": [34, 113], "OF": [34, 113], "classic": [34, 77, 85, 134, 147], "transceiv": [34, 85], "124": [34, 85], "fifo": [34, 43, 77, 85], "construct": [34, 35, 36, 37, 38, 40, 42, 43, 80, 85, 86, 89, 93, 95, 96, 111, 115, 134, 144, 145, 147], "initialis": [34, 35, 36, 38, 39, 40, 42, 43, 48, 49, 84, 85, 86, 89, 91, 93, 95, 96, 99, 111, 134, 143, 144], "p3": [34, 50, 62, 63, 75, 79, 93, 115, 120], "p1": [34, 50, 63, 66, 67, 79, 93, 96, 115, 144], "auto_restart": [34, 85], "baudrat": [34, 40, 43, 75, 85, 89, 93, 96, 115, 129, 153], "particip": [34, 85], "go": [34, 35, 60, 61, 62, 67, 75, 85, 87, 91, 96, 116, 117, 120, 124, 126, 128, 155], "tec": [34, 85], "rec": [34, 85], "96": [34, 83, 85], "passiv": [34, 85], "fill": [34, 36, 52, 60, 61, 62, 63, 67, 69, 75, 77, 79, 85, 89, 93, 97, 98, 123, 155], "entert": [34, 85], "pend": [34, 67, 85, 96, 98], "bank": [34, 85], "rtr": [34, 85], "extfram": [34, 85], "boolean": [34, 38, 41, 48, 50, 51, 67, 85, 91, 147, 155], "transmiss": [34, 43, 85, 86, 96], "5000": [34, 37, 44, 75, 77, 85, 89, 93, 97, 98, 109, 115], "five": [34, 51, 81, 85], "fmi": [34, 85], "fifth": [34, 85], "inplac": [34, 40, 85, 89], "subsequ": [34, 46, 85, 96, 102, 131, 132, 134, 143, 150, 152], "lst": [34, 85], "shall": [34, 42, 85, 113], "dlc": [34, 85], "fun": [34, 77, 85, 91, 95], "lost": [34, 50, 85, 118, 130, 147], "cb0": [34, 85], "scl": [35, 75, 89, 115], "sda": [35, 75, 89, 91, 115], "attach": [35, 38, 43, 59, 63, 77, 79, 89, 104, 110, 114, 118, 123, 125], "primarili": [35, 40, 123], "circuitri": 35, "resistor": [35, 38, 87, 91, 115, 117], "kohm": 35, "vcc": 35, "wrong": [35, 69, 108, 131], "often": [35, 87, 152, 153], "breakout": 35, "rule": [35, 155], "troubl": 35, "excel": 35, "adafruit": [35, 145], "400000": [35, 40, 89, 115], "400khz": [35, 40], "x10": 35, "stretch": [35, 60, 61, 62, 63, 67, 69, 79], "held": 35, "etimedout": 35, "lower": [35, 37, 40, 48, 60, 61, 62, 63, 67, 69, 73, 77, 79, 89, 92, 102, 118, 136, 147, 151, 155], "0x77": 35, "transit": [35, 95], "nack": 35, "ack": 35, "nbyte": [35, 40, 43, 96, 98, 102, 132], "transfer": [35, 36, 40, 43, 75, 86, 89, 93, 134, 136, 145, 154], "sequenti": [35, 145, 150], "contribut": 35, "memaddr": [35, 89], "addrsiz": 35, "synchron": [36, 40, 75, 94, 104, 115], "sck": [36, 40, 93, 115], "technic": [36, 155], "preview": [36, 106, 149], "feedback": [36, 123], "encourag": 36, "sck_pin": 36, "ws_pin": 36, "sd_pin": 36, "y6": [36, 85], "y5": [36, 85, 91], "y8": 36, "audio_out": 36, "44100": 36, "ibuf": 36, "20000": [36, 89, 115], "audio_in": 36, "22050": 36, "num_written": 36, "num_read": 36, "i2s_callback": 36, "swriter": 36, "sreader": 36, "mck": 36, "dma": [36, 86, 89], "underflow": 36, "deiniti": [36, 56, 57, 63, 79], "littl": [36, 50, 67, 96, 105, 106, 108, 124, 129, 132, 134, 143, 154], "endian": [36, 96, 105, 108, 129, 132, 154], "preced": [36, 151], "volum": [36, 53, 118, 128, 143], "6db": 36, "8192": [37, 86], "32768": [37, 92], "reinitialis": [37, 86], "200u": 37, "5u": 37, "3000": 37, "3u": 37, "dest": [37, 80, 150, 153], "entiti": 37, "unsign": [37, 67, 86, 105, 108, 130, 131, 134, 136, 151, 154, 155], "enhanc": 37, "discret": 37, "divid": [37, 67, 70, 84, 85, 93, 95], "80mhz": 37, "300khz": 37, "80000000": 37, "300000": 37, "266": 37, "267": 37, "299625": 37, "300751": 37, "rp2040": [37, 44, 150], "granular": 37, "averag": [37, 107, 145], "cost": [37, 41, 62, 67, 75, 77, 79, 128, 143, 155], "spectral": 37, "puriti": 37, "interdepend": 37, "lowest": [37, 41, 77], "insignific": 37, "300_000": 37, "unambigu": 38, "certain": [38, 95, 102, 111, 135, 144, 148, 155], "p0": [38, 50, 62, 63, 79, 93, 96, 115, 117, 120], "p2": [38, 50, 62, 63, 66, 67, 79, 93, 96, 115, 144], "reconfigur": [38, 43, 44], "imped": [38, 86], "unchang": [38, 103], "strength": [38, 50, 56, 57, 67], "rest": [38, 67, 85, 125, 148, 151], "omit": [38, 41, 93, 94, 102, 145, 147, 153, 155], "edg": [38, 40, 67, 75, 87, 93, 95, 115], "rise": [38, 87, 95], "ed": [38, 67, 102], "nrf": [38, 43, 153], "rp2": [38, 43, 148], "cc3200": [38, 43], "track": [39, 64, 67, 77, 92, 107, 123, 126], "datetimetupl": [39, 92], "year": [39, 92, 107], "dai": [39, 83, 92], "weekdai": [39, 92, 107], "hour": [39, 92, 107, 122], "minut": [39, 83, 92, 107, 122], "subsecond": [39, 92, 107], "tzinfo": 39, "januari": 39, "2015": [39, 154], "time_in_m": 39, "alarm_id": 39, "expir": [39, 42, 44], "persist": [39, 88, 144, 155], "2048": [39, 86], "mosi": [40, 75, 93, 115], "miso": [40, 75, 93, 115], "4th": 40, "chip": [40, 50, 60, 61, 62, 66, 78, 84, 121, 134, 143, 155], "12345678": [40, 115], "deselect": 40, "rxdata": 40, "0x42": [40, 89, 115], "txdata": 40, "simultan": 40, "500000": [40, 115], "firstbit": [40, 93], "sit": [40, 93, 126], "bitbang": 40, "wipi": 40, "write_buf": 40, "read_buf": 40, "deassert": 41, "seem": [41, 107], "major": [41, 50, 67, 74, 106, 145, 149, 151], "goal": [41, 124, 149], "relai": 41, "nice": [41, 123], "suppos": [41, 107, 108], "led1_pin": 41, "led2_pin": 41, "light": [41, 67, 77, 90, 118, 123], "ll": [41, 67, 77, 88, 118, 120, 123, 126, 127, 128, 129, 153, 154], "segment": [41, 67, 85, 115, 121, 128], "reed": 41, "moistur": 41, "flame": 41, "detector": [41, 67], "come": [41, 67, 87, 91, 108, 118, 127, 143, 151, 155], "minor": [41, 50, 67, 74, 106, 151], "doubt": 41, "unexcit": 41, "enjoi": 41, "frustrat": 41, "fact": [41, 77, 134, 143], "simpli": [41, 118, 125, 127, 134, 144], "slightli": 41, "pin_obj": 41, "pin_argu": 41, "univers": [41, 145, 155], "skip": [41, 67, 77], "intermedi": [41, 108], "inact": [41, 48, 49, 95], "deactiv": [41, 48, 50, 51], "deal": [42, 67, 77, 107, 113, 143, 147], "heterogen": 42, "kind": [42, 48, 67, 102, 113], "greatli": [42, 128], "baselin": 42, "mycallback": 42, "1khz": 42, "tim": [42, 84, 95, 115, 147], "1000": [42, 48, 59, 67, 75, 76, 83, 89, 95, 96, 102, 106, 115, 129, 147, 155], "100m": [42, 107], "shot": [42, 101], "fire": [42, 104], "1000m": 42, "upper": [42, 67], "nonetyp": 42, "isn": [42, 67, 118, 124, 128, 148, 155], "deinitialis": [42, 95], "usart": [43, 96], "confus": [43, 96, 147], "9600": [43, 96, 115], "pariti": [43, 96], "odd": [43, 67, 96, 99], "txbuf": 43, "timeout_char": [43, 96, 115, 129], "inv_tx": 43, "inv_rx": 43, "bitmask": [43, 67], "suffici": [43, 96], "paus": [43, 67, 76, 77, 83, 147, 150], "fly": 43, "sophist": [43, 152], "pollin": [43, 101, 102], "break": [43, 75, 95, 96, 98, 118, 123, 149, 154], "baud": [43, 75, 85, 115, 153], "mimxrt": [43, 49], "renesa": 43, "ra": [43, 154], "tell": [43, 67, 72, 76, 107, 118, 129], "ongo": 43, "recover": [44, 155], "8388": 44, "sensibl": [44, 89, 93], "hyperbol": 45, "tangent": 45, "princip": [45, 147], "infin": [45, 67], "complementari": [45, 95, 115], "decompos": 45, "mantissa": 45, "finit": [45, 46], "infinit": [45, 67, 77, 123, 126], "const_x": 46, "const_i": 46, "hand": [46, 84, 100, 118, 123], "begin": [46, 67, 75, 83, 148, 154, 155], "hidden": [46, 48, 51, 123], "recognis": [46, 111], "mainli": [46, 144], "bytecod": [46, 106, 143, 145, 147, 148, 151, 152, 155], "particularli": [46, 67, 147], "ie": [46, 154], "former": 46, "forcefulli": 46, "micropy_py_micropython_heap_lock": 46, "earliest": 46, "preempt": [46, 143, 147], "opcod": [46, 155], "fundament": 46, "region": [46, 48, 56, 57, 60, 61, 62, 63, 67, 69, 72, 73, 77, 79, 111, 143, 145], "solut": [46, 102, 143, 147], "term": [47, 96, 102, 134, 143, 147, 154], "notion": [47, 81, 147], "mutual": [47, 147], "pthread_mutex_lock": 47, "pthread_mutex_unlock": 47, "pthread_mutex_trylock": 47, "mechan": [47, 87, 92, 134, 144, 145], "routin": [47, 147, 155], "data_readi": 47, "defer": [47, 103, 147], "man": [47, 103], "semaphor": 47, "geeksforgeek": 47, "stackoverflow": 47, "differencebetween": 47, "rout": [48, 75, 128], "variant": [48, 111, 136, 145], "nic": [48, 49, 51], "80": [48, 63, 67, 75, 85, 102, 123], "nhost": 48, "impli": [48, 113, 134, 143, 155], "is_act": [48, 50, 51], "service_id": 48, "primari": [48, 88, 95, 144, 149], "accompani": 48, "said": [48, 67, 77, 114, 123, 125, 128], "medium": 48, "predefin": [48, 91, 108], "bssid": [48, 50, 51], "media": 48, "ssid": [48, 50, 51, 76], "link": [48, 49, 51, 82, 102, 123, 134, 135, 136, 141, 150, 151], "technologi": [48, 51, 128], "sta": [48, 50, 51], "ap": [48, 50, 51, 150], "station": [48, 50, 51, 150], "subnet": [48, 49, 50, 51], "gatewai": [48, 49, 50, 51], "dn": [48, 49, 50, 51, 132], "192": [48, 49, 50, 51, 54], "168": [48, 49, 50, 51, 54, 95], "dealt": [48, 51], "formal": [48, 51, 155], "my": [48, 51, 67, 124, 148], "iso": 48, "3166": 48, "alpha": [48, 60, 61, 62, 63, 67, 69, 79], "complianc": 48, "worldwid": 48, "dhcp": [48, 50, 51], "mdn": [48, 51], "phy": 49, "phy_typ": 49, "board_default": 49, "phy_addr": 49, "ref_clk_mod": 49, "hardwir": 49, "pyh": 49, "seeed": 49, "mix": [49, 67], "phy_lan8720": 49, "config_paramet": 49, "low_pow": 49, "phy_ksz8081": 49, "phy_dp83825": 49, "phy_dp83848": 49, "phy_rtl8211f": 49, "mode_st": 50, "p6": [50, 62, 115, 116, 120], "p7": [50, 62, 89, 94, 115, 120], "p8": [50, 62, 89, 94, 115, 120], "winc1500": [50, 123], "wep": [50, 51], "fw": 50, "reopen": 50, "sta_if": [50, 51, 76, 150], "upstream": [50, 51], "ap_if": [50, 51], "usocket": 50, "udp": [50, 102, 123], "forev": [50, 52, 124], "ip_addr": 50, "subnet_addr": 50, "gateway_addr": 50, "dns_addr": 50, "xxx": [50, 143], "ipv4": [50, 102], "versu": [50, 60, 61, 62, 63, 67, 69, 70, 79, 118, 128, 143], "author": [50, 113, 148], "revis": 50, "wpa": [50, 51], "psk": [50, 51], "wpa2": [50, 51], "enterpris": 50, "bsp": 50, "processor": [51, 67, 80, 120, 128, 136, 147], "interface_id": 51, "wireless": [51, 79, 123], "visibl": [51, 143], "status": 51, "stat_idl": 51, "stat_connect": 51, "progress": [51, 143, 149], "stat_wrong_password": 51, "incorrect": [51, 107], "stat_no_ap_found": 51, "stat_connect_fail": 51, "stat_got_ip": 51, "reconnect": [51, 118], "unlimit": 51, "txpower": 51, "dbm": 51, "pm": 51, "microphon": 52, "arduino": [52, 67, 77, 120, 123, 124], "portenta": [52, 67, 77], "nicla": [52, 77], "16000": [52, 95], "gain_db": [52, 77], "highpass": 52, "9883": 52, "mic": 52, "h7": [52, 54, 77, 85, 88, 96, 115, 125], "calcul": [52, 67, 85, 107, 147], "factor": [52, 67], "pcmbuf": 52, "pcm": 52, "ndarrai": [52, 67, 70, 72], "infer": [52, 70], "who": [52, 123], "amplitud": 53, "onboard": [53, 114, 117, 123, 143], "percentag": [53, 85, 95], "defint": 53, "highest": [53, 67, 77, 107, 115], "4000": 53, "m4": [54, 67, 80, 115, 117, 118, 125], "supported_frequ": 54, "mhz": [54, 95, 115], "cpu_clk_in_mhz": 54, "hclk_in_mhz": 54, "pclk1_in_mhz": 54, "pclk2_in_mhz": 54, "120": [54, 63, 75, 77, 115], "144": 54, "216": 54, "m7": [54, 67, 89, 96, 115, 117, 118, 125], "240": [54, 66, 67, 79], "200": [54, 57, 67, 77, 86, 107, 115, 131], "480": [54, 66, 67], "rev": 54, "xy": [54, 115], "silicon": 54, "mipi": [55, 58, 60], "320x240": [55, 67, 77, 126], "frames": [55, 60, 61, 77], "240x320": 55, "480x272": 55, "480x128": 55, "640x480": [55, 77], "320x480": 55, "800x480": [55, 60, 61], "800x320": 55, "480x800": 55, "480x480": 55, "800x600": [55, 77], "1024x600": 55, "1024x768": [55, 77], "1280x1024": [55, 77], "1280x400": 55, "1600x1200": [55, 77], "1280x720": [55, 77], "1920x1080": [55, 77], "stm32h7": [55, 80, 128], "1080p": 55, "p5": [56, 63, 84, 89, 96, 115, 120, 129], "linear": [56, 57, 67], "necessari": [56, 57, 67, 70, 72, 102, 111, 134, 143, 147, 155], "bright": [56, 57, 67, 77], "drastic": [56, 57], "cotnrol": 58, "display_control": 58, "displayport": 59, "cec": 59, "ddc": 59, "ddc_addr": 59, "0x50": 59, "talk": [59, 60, 67, 75, 117, 120, 123], "eeprom": 59, "edid": 59, "dst_addr": 59, "src_addr": 59, "packet": [59, 75, 83, 109], "recept": [59, 154], "anymor": [59, 64, 67, 78, 116, 118, 123], "portrait": [60, 61], "One": [60, 61, 85, 126, 147], "swap": [60, 61, 62, 63, 67, 69, 77, 79], "destruct": [60, 61, 62, 143], "x_scale": [60, 61, 62, 63, 67, 79], "y_scale": [60, 61, 62, 63, 67, 79], "roi": [60, 61, 62, 63, 67, 69, 70, 72, 73, 77, 79, 123], "rgb_channel": [60, 61, 62, 63, 67, 69, 79], "color_palett": [60, 61, 62, 63, 67, 69, 79], "alpha_palett": [60, 61, 62, 63, 67, 69, 79], "draw": [60, 61, 62, 63, 69], "jpg": [60, 61, 62, 67, 123], "flip": [60, 61, 62, 63, 67, 69, 77, 79], "horizont": [60, 61, 62, 63, 65, 67, 69, 77, 79, 123], "vertic": [60, 61, 62, 63, 65, 67, 69, 77, 79, 123], "extract": [60, 61, 62, 63, 67, 69, 79, 108, 125, 127, 145], "green": [60, 61, 62, 63, 67, 69, 77, 79, 115, 118, 121, 123, 126, 147, 155], "black": [60, 61, 62, 67, 69, 77, 79, 121], "transpar": [60, 61, 62, 63, 67, 69, 79, 111], "perfectli": [60, 61, 62, 67, 79], "color": [60, 61, 62, 63, 65, 67, 69, 77, 79, 114, 123], "lookup": [60, 61, 62, 63, 67, 69, 79, 108, 143, 155], "palett": [60, 61, 62, 63, 67, 69, 77, 79], "downscal": [60, 61, 62, 63, 67, 69, 79], "neighbor": [60, 61, 62, 63, 67, 69, 79], "drawn": [60, 61, 62, 63, 67, 69, 79], "90": [60, 61, 62, 63, 67, 68, 69, 76, 77, 79, 94, 115], "180": [60, 61, 62, 63, 67, 68, 69, 77, 79], "270": [60, 61, 62, 63, 67, 68, 69, 77, 79], "display_off": [60, 61, 62], "goe": [60, 61, 62, 67, 95, 143, 154], "white": [60, 61, 62, 67, 77, 123, 124], "dim": [60, 61, 62, 121], "cmd": [60, 62, 88], "dc": 60, "display_on": 61, "databu": 61, "128x160": [62, 77], "160": [62, 63, 67], "red": [62, 67, 77, 115, 118, 121, 124, 147], "blue": [62, 67, 77, 115, 118, 121], "our": [62, 67, 77, 95, 118, 121, 122, 123, 124, 125, 127, 128], "3x": [62, 79], "sdram": [62, 77], "tripl": [62, 63, 77, 79], "img": [63, 67, 126], "ta": 63, "ir": [63, 115, 121], "to_min": 63, "to_max": 63, "ambient": [63, 84], "temperatur": [63, 68, 77, 84, 115, 143], "2f": [63, 143], "seen": [63, 87, 111, 143], "thermopil": 63, "p4": [63, 89, 96, 115, 120, 129, 155], "16x4": 63, "32x24": 63, "16x12": 63, "8x8": 63, "80x60": [63, 67, 77], "flir": [63, 67, 77], "160x120": [63, 77], "950c": 63, "750c": 63, "600c": 63, "450c": 63, "300c": 63, "80c": 63, "140c": 63, "400c": 63, "125": [63, 85], "kb": [63, 77, 79, 118], "cb": [63, 75, 76, 77, 147], "nomial": 63, "flat": [63, 67], "ffc": 63, "celsiu": [63, 68, 77], "destin": [63, 67, 69, 80, 102, 136, 140, 152], "clip": [63, 65, 67, 69], "seamlessli": [63, 67], "modif": [63, 67, 111, 147], "x_size": 63, "y_size": 63, "pixformat": [63, 67, 77], "copy_to_fb": [63, 67], "mlx90621": 63, "refactor": [64, 78], "i2c_addr": [64, 78], "0x38": 64, "lcd_gesture_": 64, "lcd_flag_": 64, "gestur": 64, "zoom": [64, 67, 77, 123], "press": [64, 123, 143, 144, 150, 154], "playback": 65, "had": [65, 77, 147, 154], "centi": 65, "viewabl": [65, 69], "400_000": [66, 115], "reset_pin": 66, "irq_pin": 66, "touch_point": 66, "0x5d": 66, "reserve_x": 66, "reserve_i": 66, "reverse_axi": 66, "stio": 66, "refresh_r": 66, "accord": [66, 84, 105, 130, 147], "pressur": [66, 143], "correl": [66, 67], "binary_image_valu": 67, "rgb888": [67, 72], "lab": [67, 123], "yuv": [67, 123], "grayscale_valu": 67, "rgb_tupl": 67, "lab_tupl": 67, "yuv_tupl": 67, "descritor0": 67, "descriptor1": 67, "70": 67, "filter_outli": 67, "lbp": 67, "metric": 67, "orb": 67, "ambigu": 67, "tighten": [67, 118], "outlier": 67, "haar": 67, "cascad": 67, "stage": [67, 155], "frontalfac": 67, "frontal": 67, "face": [67, 68, 124], "ey": [67, 118, 123], "googl": 67, "someon": 67, "opencv": [67, 124], "lot": [67, 75, 77, 83, 123, 128], "contrast": [67, 77], "lighter": 67, "train": [67, 71, 72], "hundr": 67, "pictur": [67, 77, 118, 123, 126], "cat": [67, 150, 153], "deviat": [67, 72], "ssim": 67, "dsim": 67, "cdf": 67, "cross": [67, 143, 145, 148, 151], "distribut": [67, 113, 123, 145], "ruin": 67, "otsu": 67, "halv": 67, "quartil": 67, "get_stat": 67, "l_": 67, "a_": 67, "b_": 67, "127": [67, 86, 102], "necessarili": 67, "lie": [67, 138], "box": [67, 73, 118, 123], "centroid": 67, "pencil": 67, "pen": 67, "shortest": [67, 100], "ellips": 67, "ry": 67, "hough": 67, "transform": 67, "179": 67, "radiu": [67, 77], "url": [67, 102, 110, 145, 152], "qr": 67, "plan": [67, 120, 123], "seriou": [67, 124], "kanji": 67, "yourself": [67, 123, 149], "treat": [67, 86, 100, 102, 107, 114, 130], "241": 67, "2319": 67, "586": 67, "511": [67, 92], "tag": [67, 151, 152], "refin": 67, "unknown": [67, 81], "plai": [67, 75, 77, 123], "eas": 67, "front": [67, 118, 121, 124], "plane": 67, "scanlin": 67, "increment": [67, 147, 154], "estim": 67, "bpp": 67, "pre": [67, 70, 77, 106, 143, 145, 147, 148, 150, 155], "meta": 67, "bmp": [67, 123], "pgm": 67, "ppm": [67, 92], "veru": 67, "shape": [67, 70], "blank": [67, 123, 154], "rgbtupl": 67, "debay": 67, "dtype": 67, "bitmap": [67, 77], "deep": [67, 83], "quit": [67, 114, 120], "easili": [67, 77, 84, 118, 123, 126, 128, 129, 145], "rainbow": 67, "ironbow": 67, "encode_for_id": 67, "subsampl": 67, "x0": 67, "y0": 67, "thick": 67, "yc": 67, "x_space": 67, "y_space": 67, "mono_spac": 67, "char_rot": 67, "char_hmirror": 67, "char_vflip": 67, "string_rot": 67, "string_hmirror": 67, "string_vflip": 67, "8x10": 67, "cursor": [67, 123, 154], "decreas": [67, 154], "terribl": [67, 123], "arrow": [67, 126], "x3": [67, 91, 95], "y3": [67, 85], "x4": 67, "y4": [67, 85], "rotation_angle_in_degre": 67, "glyph": 67, "seed_threshold": 67, "05": 67, "floating_threshold": 67, "clear_background": 67, "flood": 67, "did": [67, 129], "rectangular": 67, "radius_x": 67, "radius_i": 67, "lo": [67, 75], "hi": [67, 124, 136], "l_lo": 67, "l_hi": 67, "a_lo": 67, "a_hi": 67, "b_lo": 67, "b_hi": 67, "click": [67, 76, 118, 123, 126, 127], "drag": [67, 123, 127], "tight": [67, 107], "editor": [67, 123, 143, 150], "gui": 67, "slider": 67, "untouch": [67, 111], "binar": 67, "datatyp": 67, "nand": 67, "nor": [67, 77, 133, 143], "xor": 67, "xnor": 67, "grai": 67, "matric": 67, "rr": 67, "rg": 67, "gr": 67, "gg": 67, "gb": 67, "br": [67, 85], "bg": 67, "ro": 67, "bo": 67, "3x3": 67, "3x4": 67, "weight": [67, 70], "Or": [67, 80, 86, 108, 124, 150], "whole": [67, 69, 85, 98, 118, 123], "quickli": [67, 72, 75, 77, 94, 114, 118, 123, 124, 128, 145, 147, 153], "darker": 67, "brighter": 67, "remap": [67, 73], "clip_limit": 67, "qualiz": 67, "convolv": 67, "neighbour": 67, "eros": 67, "blur": 67, "5x5": 67, "sharpest": 67, "smooth": [67, 92], "surfac": 67, "slow": [67, 75, 77, 92, 123, 128, 147, 148], "50th": 67, "75": [67, 75, 85], "great": [67, 95, 128], "artifact": 67, "bia": 67, "neighborhood": 67, "mul": [67, 130], "1d": 67, "2d": [67, 124], "adjust": [67, 77, 84, 92], "noth": [67, 79, 98, 123, 126, 155], "unsharp": 67, "sharp": 67, "sharpen": 67, "unthreshold": 67, "color_sigma": 67, "space_sigma": 67, "cartessian": 67, "x_corr": 67, "y_corr": 67, "un": 67, "fishey": 67, "distort": 67, "fov": 67, "perspect": [67, 77], "3d": 67, "spin": [67, 124], "approach": [67, 124, 143, 147, 152, 155], "viewport": 67, "homographi": 67, "image_width": 67, "image_height": 67, "fourth": [67, 106], "let": [67, 77, 107, 118, 120, 123, 126, 129, 155], "bird": 67, "top_tilt": 67, "bottom_tilt": 67, "tilt": 67, "dssim": 67, "disimilar": 67, "invok": [67, 123, 143, 150, 155], "get_hist": 67, "motion": [67, 77, 83], "differenc": 67, "x_stride": 67, "y_stride": 67, "area_threshold": 67, "pixels_threshold": 67, "robust": [67, 75, 118, 154], "regress": 67, "theil": 67, "sen": 67, "slope": 67, "blog": 67, "margin": [67, 123], "threshold_cb": 67, "merge_cb": 67, "x_hist_bins_max": 67, "y_hist_bins_max": 67, "intersect": 67, "x_histogram": 67, "y_histogram": 67, "theta_margin": 67, "rho_margin": 67, "bulki": 67, "sobel": 67, "apart": [67, 107], "gradient": 67, "clean": [67, 118, 123, 150], "merge_dist": 67, "max_theta_differ": 67, "lsd": 67, "jump": [67, 85, 136], "x_margin": 67, "y_margin": 67, "r_margin": 67, "r_min": 67, "r_max": 67, "r_step": 67, "10000": [67, 115, 143, 155], "quad": [67, 134], "shear": 67, "slide": 67, "scene": 67, "flatter": 67, "undo": [67, 123, 154], "barrel": 67, "narrow": 67, "lens": 67, "fx": 67, "fy": 67, "farther": 67, "wors": 67, "warp": 67, "focal": 67, "printabl": [67, 150], "x11": 67, "984": 67, "656": 67, "mm": 67, "multipli": [67, 70, 85, 150], "952": 67, "effort": [67, 123], "datamatric": 67, "spend": 67, "640": 67, "blurri": 67, "rss": 67, "templat": [67, 111], "template_roi": 67, "optic": 67, "consider": [67, 155], "serach_ex": 67, "poorer": 67, "pupil": 67, "scale_factor": 67, "max_keypoint": 67, "corner_detector": 67, "agast": 67, "FOr": 67, "edge_typ": 67, "canni": 67, "hog": 67, "graidient": 67, "max_dispar": 67, "stero": 67, "dispar": 67, "640x240": 67, "camrea": 67, "useless": 67, "nonsens": 67, "simd": 67, "toi": 67, "wheel": 67, "upscal": 67, "visual": [67, 123], "canva": 67, "afterward": [67, 75, 77, 127, 147], "cover": [67, 108, 119, 123, 134, 143, 147, 154, 155], "player": [67, 123], "tag1h5": 67, "enum": [67, 77], "dof": 68, "lsm6ds3": 68, "acceler": [68, 70, 94], "ly": 68, "bottom": [68, 73, 77, 118, 123, 128, 140], "angular": 68, "stand": [68, 148], "upsid": 68, "tensorflow": [70, 71], "lite": [70, 71], "4d": 70, "tensor": [70, 72, 73], "leverag": [70, 128, 129], "cmsi": [70, 104], "nn": 70, "helium": 70, "etho": 70, "npu": 70, "rank": 70, "scipi": 70, "moment": [70, 93, 95, 115, 147], "load_to_fb": 70, "dealloc": [70, 77, 128], "wherea": [70, 102, 134, 143, 150], "reshap": 70, "writeabl": 70, "arena": 70, "recogn": 71, "spoken": 71, "ye": [71, 118, 124, 128, 144], "preprocessor": 71, "micro_speech": 71, "65": 71, "confid": [71, 73], "tflite": 72, "norm": 72, "456": [72, 89], "406": 72, "229": 72, "224": 72, "225": 72, "guess": 72, "answer": [72, 122, 124], "rgb88": 72, "score": 73, "overlap": 73, "window_w": 73, "window_h": 73, "xmin": 73, "ymin": 73, "xmax": 73, "ymax": 73, "label_index": 73, "sigma": 73, "kept": [73, 128], "penalti": [73, 86, 143], "aggress": 73, "meant": [74, 75], "fb": [74, 155], "wish": 74, "procedur": [75, 135, 143], "checkout": [75, 76], "115200": [75, 115, 129, 153], "memory_view_object_result": 75, "remote_function_or_method_nam": 75, "bytes_object_argu": 75, "encapsul": 75, "memoryview_object_argu": 75, "bytes_object_result": 75, "reimplement": 75, "buff": 75, "timeout_m": [75, 104], "okai": [75, 118], "call_back": 75, "queue_depth": 75, "read_timeout_m": 75, "repeatedli": [75, 92, 126, 155], "bytes_or_memory_view": 75, "catch": [75, 102], "write_timeout_m": 75, "send_timeout": 75, "recv_timeout": 75, "parent": 75, "some_function_or_method_that_takes_a_long_time_to_execut": 75, "stuff": 75, "normal_rpc_call_back": 75, "message_if": 75, "0x7ff": [75, 85], "bit_rat": 75, "250000": 75, "sample_point": [75, 85], "can_bu": 75, "mb": 75, "message_id": 75, "tseg1": 75, "tseg2": 75, "87": 75, "ohm": [75, 91], "Be": [75, 115], "slave_addr": 75, "0x12": [75, 89, 108, 115], "100000": [75, 115, 132, 143], "i2c_bu": 75, "ground": [75, 94], "cs_pin": [75, 115], "10000000": [75, 115], "clk_polar": 75, "clk_phase": 75, "spi_bu": 75, "sclk": [75, 115], "uart_port": 75, "com": [75, 83, 152], "network_if": [75, 76], "0x1dba": 75, "traffic": 75, "vlc": 76, "web": [76, 123, 126], "554": 76, "differenti": 76, "tear": 76, "woken": [77, 84], "grab": 77, "secondari": [77, 128], "temporari": [77, 128, 150], "steal": 77, "framebuff": [77, 155], "stabil": 77, "neither": [77, 143, 151], "300": 77, "gen": 77, "shutter": 77, "lepton1": 77, "pixart": 77, "contigu": [77, 128, 134, 143, 155], "instantli": 77, "intens": [77, 90, 121], "bss": 77, "liad": 77, "88x72": 77, "176x144": 77, "352x288": 77, "88x60": 77, "176x120": 77, "352x240": 77, "40x30": 77, "30x20": 77, "60x40": 77, "120x80": 77, "240x160": 77, "480x320": 77, "64x32": 77, "64x64": 77, "128x64": 77, "128x128": 77, "160x160": 77, "320x320": 77, "720x480": 77, "752x480": 77, "1280x768": 77, "1280x960": 77, "2560x1440": 77, "2048x1536": 77, "2560x1600": 77, "2592x1944": 77, "exposur": 77, "140": 77, "200x200": 77, "paren": 77, "gainceil": 77, "satur": 77, "gain_db_ceil": 77, "decibel": 77, "exposure_u": 77, "pretti": [77, 84], "conserv": 77, "rgb_gain_db": 77, "blc": 77, "got": [77, 123, 125, 129], "ever": [77, 128, 129], "advent": 77, "latest": [77, 152, 153], "older": [77, 151], "regard": [77, 147], "randomli": 77, "hous": 77, "eras": [77, 111, 118, 144], "ago": [77, 107], "huge": 77, "old": 77, "bulk": [77, 155], "risk": [77, 147], "stale": 77, "radi": 77, "coef": 77, "vsync": 77, "readout": 77, "dramat": 77, "maximum_camera_sensor_pixel_width": 77, "maximum_camera_sensor_pixel_height": 77, "focu": [77, 118], "fpc": 77, "nightmod": 77, "night": [77, 121], "sdk": 77, "deseri": 77, "fpa": 77, "temp": [77, 84, 143], "aux": 77, "500c": 77, "clamp": 77, "max_temp_in_celsiu": 77, "min_temp_in_celsiu": 77, "10c": 77, "40c": 77, "pc15": 77, "oscil": 77, "sheet": 77, "fft": 77, "0x3f": 78, "352": 79, "infrastructur": 80, "vring": 80, "rpmsg": 80, "life": [80, 123], "ept_recv_callback": 80, "src": [80, 148, 150, 153], "ept": 80, "vuart": 80, "rproc": 80, "virtual_uart": 80, "elf": [80, 108], "0x081e0000": 80, "ns_callback": 80, "announc": 80, "endpoint_addr_ani": 80, "destroi": [80, 143], "sysnam": 81, "nodenam": 81, "inod": 81, "0x8000": 81, "Its": [81, 134, 151, 155], "old_path": 81, "new_path": 81, "f_bsize": 81, "f_frsize": 81, "f_block": 81, "f_bfree": 81, "f_bavail": 81, "unprivileg": 81, "f_file": 81, "f_ffree": 81, "f_favail": 81, "f_flag": 81, "f_namemax": 81, "f_avail": 81, "stream_object": 81, "iobas": 81, "fsobj": [81, 111], "mount_point": [81, 111], "readonli": [81, 83, 111], "block_dev": [81, 111], "readsiz": [81, 111], "progsiz": [81, 111], "lookahead": [81, 111], "compos": [82, 96], "sever": [82, 108, 143, 150, 155], "delimit": 82, "dash": 82, "libc": 82, "xtensa": [82, 145, 151], "idfv4": 82, "newlib3": 82, "smallint": 83, "outcom": [83, 143, 147], "elaps": [83, 96, 102, 107], "fault": [83, 114, 147], "fatal": 83, "1000hz": 83, "1m": [83, 143, 144, 155], "500": [83, 85, 107, 115], "ua": 83, "undergo": [83, 86], "pc": [83, 114, 118, 128, 136, 143, 144, 145, 150, 152, 153], "mous": [83, 97, 123], "dump_alloc_t": 83, "mountpoint": 83, "unmount": [83, 111, 114, 150], "blocknum": 83, "slash": 83, "modestr": 83, "vid": [83, 150], "0xf055": 83, "msc": [83, 144, 153], "high_spe": 83, "understood": 83, "mass": [83, 88, 145, 149, 152], "pybd": 83, "cdc": [83, 150], "scsi": 83, "lun": 83, "sdcard": [83, 144], "appropri": [83, 84, 95, 133, 134, 152, 154], "keyboard": [83, 97], "read_channel": 84, "read_core_temp": 84, "read_core_vbat": 84, "vbat": 84, "read_core_vref": 84, "vref": 84, "read_vref": 84, "4095": [84, 86, 115, 116], "10hz": 84, "3v": [84, 86, 115, 116, 117, 120], "die": 84, "centigrad": 84, "although": [84, 133, 152], "ten": [84, 147], "backup": [84, 107], "batteri": [84, 107], "21v": 84, "nomin": [84, 85], "overload": 84, "backscal": 84, "fine": [84, 107, 124], "met": 84, "proper": [84, 103], "exce": [84, 147], "unscal": 84, "unwant": 84, "0xffffffff": [84, 131, 134, 138, 155], "0x70000": 84, "f4": 85, "f7": [85, 115], "fd": 85, "126": [85, 143], "kbit": 85, "arbitr": 85, "1mbit": 85, "500_000": 85, "brs_baudrat": 85, "1_000_000": 85, "0xfff0": 85, "fdf": 85, "ya": 85, "yb": 85, "pb8": 85, "pb9": 85, "pb12": [85, 93, 115], "pb13": [85, 93, 96, 115], "sjw": 85, "bs1": 85, "bs2": 85, "num_filter_bank": 85, "brs_sjw": 85, "brs_bs1": 85, "brs_bs2": 85, "brs_sample_point": 85, "quanta": 85, "resynchronis": 85, "brs_prescal": 85, "tq": 85, "pclk1": 85, "bittim": 85, "42mhz": 85, "28khz": 85, "680": 85, "stm32f405": 85, "datasheet": [85, 108], "0x111": 85, "bitrat": 85, "x5": 86, "x6": 86, "65v": 86, "wave": [86, 116], "400hz": 86, "2047": [86, 116], "5k\u03c9": 86, "15k\u03c9": 86, "consequ": [86, 111, 136, 147, 155], "5m\u03c9": 86, "pseudo": [86, 99, 140], "ramp": 86, "burst": 86, "dac1": 86, "dac2": 86, "buf1": 86, "buf2": 86, "waveform": 86, "px0": 87, "px1": 87, "caution": 87, "pushbutton": 87, "bounc": 87, "www": [87, 102], "eng": 87, "utah": 87, "edu": 87, "cs5780": 87, "debounc": 87, "pdf": 87, "explan": 87, "techniqu": [87, 143, 147, 155], "evt_ris": 87, "evt_fal": 87, "evt_rising_fal": 87, "irq_xxx": 87, "evt_xxx": 87, "wfe": 87, "exti": 87, "usrsw": 87, "customis": 88, "0x100": [88, 143, 155], "block_num": [88, 111, 144], "spiflash": 88, "plu": [88, 115, 125, 133, 136], "pullup": [89, 96], "recipi": 89, "pb10": [89, 96, 115], "pb11": [89, 96, 115], "pd12": [89, 115], "pd13": [89, 115], "gencal": 89, "properli": [89, 103, 118], "addr_siz": 89, "0x7f": 89, "emit": [90, 132, 140, 143, 151, 155], "diod": 90, "x1_pin": 91, "pybv1": [91, 154], "a0": [91, 150], "mymapperdict": 91, "leftmotordir": 91, "c12": 91, "mymapp": 91, "pin_nam": 91, "summaris": [91, 147], "ordin": 91, "usabl": [91, 92, 102, 143], "40k": 91, "3v3": 91, "gnd": 91, "11k": 91, "microprocessor": 91, "varieti": [91, 95, 111, 143, 147, 151], "x3_af": 91, "af1_tim2": 91, "af2_tim5": 91, "af3_tim9": [91, 154], "af7_usart2": 91, "tim2_ch3": 91, "tim2": [91, 115], "2014": [92, 107], "mondai": 92, "sundai": 92, "took": 92, "0x10000": 92, "0x20000": 92, "cal": 92, "954": 92, "likewis": 92, "600000": 93, "crc": [93, 134], "0x7": 93, "polynomi": 93, "1234": [93, 115], "nss": 93, "pb14": [93, 96, 115], "pb15": [93, 96, 115], "328125": 93, "apb": 93, "texa": 93, "instrument": 93, "oppos": 93, "motorola": 93, "ahb1": 93, "s1": [94, 115], "s2": 94, "servo1": 94, "servo2": 94, "1500m": [94, 115], "1500": [94, 115], "p9": [94, 115, 120], "pulse_min": 94, "pulse_max": 94, "pulse_centr": 94, "pulse_angle_90": 94, "pulse_speed_100": 94, "centr": 94, "simplest": [95, 145, 147, 148, 150, 152], "2hz": 95, "1hz": 95, "99": 95, "199": 95, "div": 95, "deadtim": 95, "brk": 95, "100hz": 95, "83": 95, "999": 95, "psc": 95, "0x3fffffff": 95, "autoreload": 95, "arr": [95, 108], "dead": 95, "complimentari": 95, "1008": 95, "kill": 95, "brk_in": 95, "afn_timx": 95, "pwm_invert": 95, "oc_tim": 95, "oc_act": 95, "oc_inact": 95, "oc_toggl": 95, "oc_forced_act": 95, "oc_forced_inact": 95, "enc_a": 95, "ch1": 95, "enc_b": 95, "ch2": 95, "enc_ab": 95, "oc": 95, "enc": 95, "ch1n": 95, "ch2n": 95, "8000": 95, "ch3": [95, 115], "pin_t8_1": 95, "af3_tim8": [95, 154], "pc6": 95, "tim8_ch1": 95, "pin_t8_1n": 95, "x8": 95, "pa7": 95, "tim8_ch1n": 95, "pin_bkin": 95, "x7": 95, "pa6": 95, "tim8_bkin": 95, "break_callabck": 95, "align": [95, 105, 108, 111, 115, 132, 137, 142], "read_buf_len": 96, "nrt": 96, "nct": 96, "paragraph": [96, 114], "116": 96, "ceas": 96, "emul": [97, 129], "implicitli": [98, 111, 148, 150, 152], "trail": [98, 138], "micropy_py_random_extra_func": 99, "micropy_py_random_seed_init_func": 99, "greedi": 100, "za": 100, "z0": 100, "9_": 100, "backslash": 100, "rn": [100, 130, 131, 133, 135, 137, 138, 140, 142], "cr": 100, "lf": [100, 144], "repetit": [100, 147], "line1": 100, "rline2": 100, "nline3": 100, "line2": 100, "line3": 100, "regex_str": 100, "anchor": 100, "substitut": [100, 143, 155], "max_split": 100, "rlist": 101, "wlist": 101, "xlist": 101, "eventmask": 101, "pollout": 101, "pollhup": 101, "pollerr": 101, "unsolicit": 101, "ok": [101, 154], "enoent": 101, "accordingli": [101, 143], "calle": [101, 145], "emploi": [101, 134, 135, 143, 147, 155], "bsd": 102, "sockaddr": 102, "sock": [102, 103], "domain": 102, "hack": 102, "ipv4_address": 102, "dot": [102, 108, 154], "ipv6": 102, "ipv6_address": 102, "flowinfo": 102, "scopeid": 102, "colon": [102, 154], "2001": 102, "db8": 102, "canonnam": 102, "gaierror": 102, "bin_addr": 102, "x7f": 102, "txt_addr": 102, "x03": 102, "x04": [102, 154], "sol_": 102, "so_": 102, "ipproto_": 102, "dgram": 102, "unaccept": 102, "refus": 102, "conn": 102, "chunk": 102, "consecut": [102, 132], "bufsiz": 102, "nonneg": 102, "poller": 102, "shorthand": 102, "rwb": 102, "facil": 103, "server_sid": 103, "cert": 103, "cert_req": 103, "cadata": 103, "server_hostnam": 103, "do_handshake_on_connect": 103, "certif": 103, "mbedtl": 103, "ca": 103, "der": 103, "protocol_": 103, "certfil": 103, "keyfil": 103, "cafil": 103, "axtl": 103, "sni": 103, "prone": 103, "middl": [103, 108, 150, 155], "attack": 103, "verif": 103, "cert_": 103, "ntptime": 103, "bsrr": 104, "fu": 104, "ogf": 104, "ocf": 104, "hci": 104, "subghz": 104, "modem": 104, "truthi": 104, "falsei": 104, "rfbusi": 104, "busi": [104, 129], "fmt": 105, "v2": [105, 111, 144], "retval": 106, "underlyingli": 106, "tracefunc": 106, "micropy_py_sys_settrac": 106, "releaselevel": 106, "_machin": 106, "_mpy": [106, 151], "mandat": 106, "bare": [106, 143, 144], "baremet": [106, 107, 108, 145], "referenc": [106, 143, 145, 151, 155], "epoch": 107, "1970": 107, "00": 107, "calendar": 107, "sec": 107, "mdai": 107, "yeardai": 107, "centuri": 107, "mon": 107, "sun": 107, "366": 107, "jan": 107, "ticks_max": 107, "ticks_period": 107, "why": [107, 118, 124, 128], "benchmark": 107, "delta": [107, 115, 155], "modular": 107, "deadlin": 107, "do_a_little_of_someth": 107, "ticks1": 107, "ticks2": 107, "ring": 107, "distant": 107, "complement": [107, 130, 131, 138], "monitor": [107, 143, 150], "notch": 107, "dial": 107, "plate": 107, "mistak": 107, "regularli": [107, 123, 155], "metaphor": 107, "accommod": [107, 149], "500u": 107, "overdu": 107, "snippet": [107, 145, 153], "scheduled_tim": 107, "nap": 107, "oop": [107, 108], "late": [107, 147], "run_fast": 107, "year_2038_problem": 107, "timestamp": [107, 111], "foreign": [108, 145], "idea": [108, 123, 150], "behind": [108, 118, 124], "ctype": 108, "streamlin": 108, "familiar": [108, 123, 135, 143], "uncar": 108, "executable_and_linkable_format": 108, "file_head": 108, "elf_head": 108, "ei_mag": 108, "0x0": 108, "ei_data": 108, "0x5": 108, "e_machin": 108, "x7felf": 108, "pointer": [108, 135, 155], "coord": 108, "struct1": 108, "data1": 108, "data2": 108, "stm32f4xx": 108, "wwdg": 108, "wwdg_layout": 108, "wwdg_cr": 108, "bfuint32": 108, "wdga": 108, "bf_po": 108, "bf_len": 108, "wwdg_cfr": 108, "ewi": 108, "wdgtb": 108, "0x40002c00": 108, "0b10": 108, "field1": 108, "field2": 108, "scalar": 108, "field_nam": 108, "b0": [108, 138, 142], "b1": [108, 138], "Of": 108, "aggreg": 108, "arr2": 108, "ptr2": 108, "bitfield": 108, "bitf0": 108, "bfuint16": 108, "lsbit": 108, "bitsiz": 108, "typenam": 108, "bf": 108, "rightmost": 108, "abi": 108, "layout_typ": 108, "occupi": [108, 133, 143], "immut": [108, 143], "ffi": [108, 145], "my_struct": 108, "substruct1": 108, "dereferenc": 108, "derefer": 108, "mcu_regist": 108, "peripheral_a": 108, "register1": 108, "reg_a": 108, "register0": 108, "dozen": 108, "anywai": [108, 117, 118, 120, 121, 123, 125, 126, 128, 129], "spread": 108, "artifici": 108, "megabyt": [108, 128], "synthet": 108, "quiet": 109, "auth": 110, "kw": 110, "rrequest": 110, "subdirectori": [111, 148], "live": [111, 148, 155], "eperm": 111, "einval": 111, "lfs1": 111, "347": [111, 144], "reformat": [111, 118], "lfs2": 111, "295": [111, 144], "piec": [111, 150], "prior": [111, 131, 132, 134, 138, 141, 147], "intercept": [111, 154], "erasur": 111, "onward": 112, "trade": [112, 155], "constrain": [112, 137, 142], "mit": 113, "copyright": 113, "2013": 113, "damien": 113, "georg": 113, "paul": 113, "sokolovski": 113, "llc": 113, "permiss": [113, 127, 130, 138], "herebi": 113, "charg": 113, "person": [113, 123, 154], "sublicens": 113, "sell": 113, "whom": 113, "furnish": 113, "notic": [113, 123], "substanti": [113, 143, 145, 155], "portion": 113, "AS": 113, "warranti": 113, "BUT": 113, "merchant": 113, "noninfring": 113, "NO": 113, "holder": 113, "liabl": 113, "claim": 113, "liabil": 113, "contract": 113, "tort": 113, "aris": [113, 143, 147], "WITH": 113, "cabl": [114, 118], "eject": 114, "think": [114, 123], "complic": 114, "remount": [114, 150], "rescan": 114, "overwrit": 114, "reconmend": 114, "asset": [114, 118], "powerup": 114, "dfu": [114, 118, 123, 127, 150], "immediantli": 114, "reflash": 114, "pinout": [115, 120], "tim0": 115, "tim1": 115, "gpio0": 115, "gpio2": 115, "illumin": [115, 121], "uart1": 115, "pwm2": 115, "pwm4": 115, "pwm5": 115, "pwm6": 115, "pwm9": 115, "pwm3": 115, "0v": [115, 116, 117, 120], "irrespect": [115, 132], "200000": 115, "0xff": [115, 140, 143, 151], "12345": 115, "reliabl": [115, 129], "0x3a": 115, "0x76": 115, "2017": 115, "ow": 115, "gpio12": 115, "readbyt": 115, "writebyt": 115, "select_rom": 115, "rom": [115, 148, 152], "ds18s20": 115, "ds18b20": 115, "ds18x20": 115, "convert_temp": 115, "750": 115, "read_temp": 115, "7k": 115, "dht11": 115, "humid": 115, "dht22": 115, "p_out": 115, "p_in": 115, "pa5": 115, "pd14": 115, "5v": [115, 116, 120], "toler": [115, 116, 120, 144], "sink": [115, 120], "ma": [115, 120], "intr": 115, "ext": 115, "tim3": 115, "tim4": [115, 147], "tim7": 115, "tim14": 115, "tim8": 115, "tim12": 115, "tim17": 115, "ch": 115, "ss": 115, "volt": 116, "360": 116, "probabl": [117, 128], "tini": 117, "ve": [117, 118, 123, 125, 127, 128, 129, 154], "cloth": 118, "strand": 118, "microfib": 118, "glass": 118, "isopropyl": 118, "alcohol": 118, "screw": 118, "rub": 118, "wet": 118, "gentli": 118, "dirt": 118, "spot": 118, "microscop": 118, "evapor": 118, "water": 118, "gentl": 118, "rip": 118, "connector": 118, "movement": 118, "hole": 118, "strain": 118, "relief": 118, "browser": [118, 145], "unrespons": [118, 123], "didn": 118, "saw": 118, "ubuntu": 118, "icon": [118, 123], "broken": [118, 124, 154], "loader": [118, 123, 127], "unplug": [118, 123], "plug": 118, "recov": [118, 127, 143], "sai": [118, 123, 143], "hello_world": 118, "webcam": 118, "dig": 118, "bump": 118, "plastic": 118, "unscrew": 118, "eventu": [118, 147], "focus": 118, "manufactur": [118, 128], "accident": 118, "ntf": 118, "journal": 118, "scratch": 118, "wrote": 118, "95": 118, "98": 118, "facto": 118, "importantli": 118, "patent": 118, "safeti": [118, 147], "tb": 118, "fat12": 118, "fat16": 118, "fat32": 118, "sdhc": 118, "sdxc": 118, "feel": 118, "accessori": 119, "topic": [120, 147, 155], "hookup": 120, "worri": [120, 150], "beefi": 120, "auxiliari": 120, "red_l": 121, "green_l": 121, "blue_l": 121, "ir_l": 121, "heavili": 121, "dark": 121, "strong": 121, "meter": 121, "onlin": [122, 125], "signup": 122, "email": 122, "twitter": 122, "forum": 122, "account": [122, 125], "question": 122, "qtcreator": 123, "pane": 123, "combo": 123, "backend": 123, "obviou": 123, "explor": 123, "ton": [123, 124], "lastli": 123, "profession": 123, "redo": 123, "font": 123, "hover": 123, "walk": 123, "tooltip": 123, "joi": 123, "gotten": 123, "smart": 123, "pick": [123, 126], "highlight": 123, "knowledg": [123, 155], "unkil": 123, "recours": 123, "xp": 123, "harder": 123, "reocord": 123, "ffmpeg": 123, "transcod": 123, "constantli": [123, 128], "wild": 123, "anywher": 123, "candi": 123, "programmat": [123, 154], "thought": 123, "graph": 123, "easier": [123, 149], "million": 123, "scroll": 123, "ini": 123, "bootup": 123, "comment": [123, 126], "deploi": [123, 150, 153], "dialog": 123, "submenu": 123, "mp4": 123, "07d": 123, "understand": [123, 143, 147, 154, 155], "printf": 123, "7d": 123, "join": 123, "tab": [123, 154], "folk": 123, "thank": [124, 125, 128], "tuturi": [124, 126, 128], "wall": 124, "accomplish": 124, "happili": 124, "valv": 124, "experi": [124, 147], "solv": 124, "instant": 124, "job": 124, "faq": 124, "ship": 125, "luckili": [125, 128], "cloud": 125, "everyon": 125, "fork": 125, "repo": [125, 148, 150, 152], "openmv2": 125, "openmv3": 125, "openmv4": 125, "openmv4p": 125, "omv_lib_dir": 125, "door": 125, "vulner": 125, "assur": 125, "anyon": 125, "studi": 126, "plenti": 126, "distinct": [126, 143], "bring": [126, 154], "welcom": 126, "download": [127, 149, 152, 153], "dmg": 127, "macport": 127, "homebrew": 127, "sudo": 127, "libusb": 127, "pip": [127, 145, 150, 152], "pyusb": 127, "brew": 127, "chmod": 127, "readm": [127, 143], "txt": [127, 144], "openmvid": 127, "qt": 127, "linker": 127, "tar": 127, "dram": 128, "sdr": 128, "cheapest": 128, "revv": 128, "bandwidth": 128, "2gb": 128, "666mb": 128, "haven": 128, "sram": 128, "hopefulli": 128, "shrink": 128, "automag": 128, "arbitrarili": [128, 143], "100kb": 128, "breakdown": 129, "abadon": 129, "ustruct": 129, "lhb": 129, "a_32_bit_valu": 129, "a_16_bit_valu": 129, "a_8_bit_valu": 129, "pixi": 129, "pixy_uart_emul": 129, "rd": [130, 131, 133, 135, 138, 139, 140], "rm": [130, 131, 133, 135, 136, 150, 153], "denot": [130, 131, 133, 136, 137, 138, 140, 142], "r0": [130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142], "r7": [130, 131, 135, 137, 138, 141, 142], "immn": [130, 137, 140, 142], "imm8": [130, 131, 140], "imm3": 130, "carri": [130, 131, 136, 147], "rdn": 130, "sbc": 130, "sdiv": 130, "udiv": 130, "bge": [131, 136], "bhi": [131, 136], "bgt": [131, 134, 136], "0x80000000": [131, 134], "borrow": 131, "compliment": 131, "0x7fffffff": 131, "0x8000000": 131, "cmp": [131, 134], "cmn": 131, "tst": 131, "ite": [131, 136], "condition": 131, "r1": [131, 134, 141], "eq": [131, 136], "mov": [131, 134, 140], "itt": 131, "itet": 131, "ittt": 131, "itttt": 131, "itee": 131, "inner1": 132, "facilit": [132, 155], "d0": 132, "d1": 132, "henc": [132, 137, 142, 143, 147], "thumb": [132, 135, 145, 147], "coprocessor": [133, 155], "equip": 133, "s0": [133, 134], "s31": 133, "vmov": 133, "sm": 133, "sn": 133, "r13": [133, 135], "r15": [133, 135, 136, 138, 140], "vadd": 133, "vsub": 133, "vneg": 133, "vmul": [133, 134], "vdiv": 133, "vsqrt": 133, "fpscr": 133, "vmr": 133, "apsr_nzcv": 133, "vldr": [133, 134], "vstr": [133, 134], "vcmp": 133, "vcvt_f32_s32": 133, "vcvt_s32_f32": 133, "asm_thumb": 134, "appreci": [134, 147], "bl": [134, 136, 150], "lr": [134, 136, 141], "r14": [134, 136, 141], "bx": [134, 136], "contriv": 134, "illustr": [134, 147, 155], "outer": [134, 136, 151], "demonstr": [134, 135], "fibonacci": 134, "fib": 134, "dofib": 134, "r2": 134, "fibdon": 134, "uint": [134, 155], "uadd": 134, "0x40000000": 134, "indirect": [134, 135], "getindirect": 134, "ldr": [134, 137], "testindirect": 134, "litter": 134, "mydata": 134, "principl": [134, 143, 147], "v7": [134, 135], "0xe92d": 134, "0x0f00": 134, "r8": [134, 135, 141], "r9": 134, "r10": 134, "r11": 134, "quantiti": 134, "gamut": 134, "enable_crc": 134, "rcc": 134, "rcc_ahb1enr": 134, "reset_crc": 134, "crc_cr": 134, "getval": 134, "movwt": [134, 140], "r3": 134, "crc_dr": 134, "getcrc": 134, "assembli": 135, "consult": 135, "r12": [135, 141], "constitut": [135, 147], "imposs": 135, "concept": [135, 145, 151, 152, 155], "pseudocod": 135, "emitinlinethumb": 135, "rm0090": 135, "site": [135, 152], "academ": 135, "bewar": 135, "ne": 136, "cc": 136, "mi": 136, "minu": 136, "pl": 136, "vc": 136, "ge": 136, "lt": 136, "gt": 136, "uncondit": 136, "beq": 136, "bne": 136, "blt": 136, "bc": 136, "bcc": 136, "bmi": 136, "bpl": 136, "bv": 136, "bvc": 136, "beq_w": 136, "inner": 136, "imm5": [137, 142], "imm7": [137, 142], "ldrb": 137, "ldrh": 137, "imm6": [137, 142], "eor": 138, "and_": 138, "orr": 138, "mvn": 138, "bic": 138, "lsl": 138, "lsr": 138, "asr": 138, "ror": 138, "rotate_right": 138, "b31": 138, "b30": 138, "b2": 138, "b3": 138, "unaffect": [138, 147], "clz": 138, "count_leading_zero": 138, "rbit": 138, "bit_revers": 138, "nop": 139, "suspend": 139, "cpsid": 139, "cpsie": 139, "mr": 139, "special_reg": 139, "ipsr": 139, "basepri": 139, "movw": 140, "imm16": 140, "movt": 140, "halfword": 140, "imm32": 140, "immateri": 141, "regset": 141, "strb": 142, "b7": 142, "strh": 142, "b15": 142, "unfamiliar": [143, 155], "nonvolatil": 143, "impract": 143, "inaccess": 143, "incorpor": 143, "mymodul": 143, "tree": 143, "clone": 143, "repositori": [143, 148, 151], "toolchain": 143, "vm": [143, 145, 152], "insuffici": 143, "precompil": [143, 151], "_col": 143, "presenc": [143, 147], "prepend": [143, 148], "assist": [143, 155], "implic": [143, 147], "mystr": 143, "brown": 143, "fox": 143, "resid": [143, 144], "0xdeadbeef0000deadbeef": 143, "needless": 143, "unwittingli": 143, "var": 143, "var1": 143, "var2": 143, "needlessli": 143, "piecem": 143, "fashion": 143, "06d": 143, "xff": 143, "painless": 143, "lstrip": 143, "obvious": 143, "qstrdefsport": 143, "rebuild": [143, 151], "gone": [143, 147], "redund": [143, 155], "discours": 143, "bigger": 143, "despit": [143, 153], "outlin": [143, 147], "perman": 143, "utilis": 143, "10kib": 143, "tail": 143, "0x400": 143, "1kib": 143, "advantag": [143, 144, 152], "firstli": [143, 147, 155], "secondli": [143, 147, 155], "quicker": [143, 155], "provok": [143, 147], "circumst": 143, "starv": 143, "amelior": 143, "surpris": 143, "signifi": 143, "metal": [143, 144], "flashbdev": 144, "bdev": 144, "ramblockdev": 144, "block_siz": 144, "num_block": 144, "ramdisk": 144, "2m": 144, "resist": 144, "fuse": 144, "block_count": 144, "4096": 144, "allow_oth": 144, "sdb1": 144, "mnt": 144, "256kib": 144, "frequent": [144, 155], "resili": 144, "csv": 144, "type_data": 144, "fledg": 145, "circuit": 145, "pcb": 145, "invis": 145, "offlin": 145, "circuitpython": 145, "industri": 145, "jython": 145, "ironpython": 145, "pypi": [145, 152], "acronym": 145, "bundl": 145, "electr": 145, "vastli": 145, "almost": [145, 149], "laptop": 145, "phone": 145, "cheaper": 145, "stdlib": 145, "freebsd": 145, "solari": 145, "basi": 145, "x86": [145, 151], "x64": [145, 151], "interchang": 145, "upip": 145, "obsolet": 145, "inspir": 145, "webrepl": [145, 152], "doc": 146, "brief": 147, "introduct": [147, 149], "vagu": 147, "deliber": 147, "cleanli": 147, "deleg": 147, "hazard": [147, 155], "confer": 147, "entrant": 147, "disallow": 147, "set_volum": 147, "0xa5": 147, "0x5a": 147, "bar_ref": 147, "occas": [147, 155], "diagnos": 147, "circumv": 147, "problemat": 147, "parlanc": 147, "unsaf": [147, 150], "dsp": 147, "queu": 147, "compli": 147, "empt": [147, 155], "sustain": 147, "unconstrain": 147, "growth": 147, "propag": 147, "disrupt": 147, "tsf": 147, "cooper": 147, "mere": 147, "beginn": 147, "crucial": 147, "anticip": 147, "inevit": 147, "grasp": 147, "organis": 147, "scheme": 147, "interpos": 147, "reentrant": 147, "assess": 147, "inconsist": 147, "race": 147, "boundsexcept": 147, "arrays": 147, "callback1": 147, "exceed": 147, "irq_stat": 147, "compris": [147, 155], "subtl": 147, "overwritten": 147, "unpredict": 147, "dataset": 147, "proce": 147, "undesir": 147, "overrun": [147, 155], "radic": 147, "challeng": 147, "eight": 147, "significantli": 148, "alon": 148, "mpy_dir": 148, "mpy_lib_dir": 148, "port_dir": 148, "board_dir": 148, "pybv11": 148, "myboard": 148, "frozen_manifest": 148, "cmake": 148, "mpconfigboard": 148, "mk": 148, "micropy_frozen_manifest": 148, "micropy_board_dir": 148, "opt": 148, "library_path": 148, "package_path": 148, "base_path": 148, "baz": 148, "module_path": 148, "manifest_path": 148, "exclud": 148, "mydriv": 148, "pybd_sf2": 148, "aiorepl": 148, "cd": 148, "myproject": 148, "decad": 149, "unblock": 149, "explain": 149, "micropy_preview_version_2": 149, "deploy": 149, "autom": 150, "pipx": 150, "df": 150, "rfc2217": 150, "ttyacm0": [150, 153], "c0": 150, "com0": 150, "acm": 150, "ftdi": 150, "j": [150, 154], "strictli": 150, "cp": [150, 152, 153], "scp": 150, "clariti": 150, "successfulli": 150, "reboot": [150, 154], "uf2": 150, "pico": 150, "fresh": 150, "macro": 150, "a2": 150, "a3": 150, "ttyacmn": 150, "u0": 150, "u1": 150, "u2": 150, "u3": 150, "ttyusbn": 150, "c1": 150, "c2": 150, "c3": 150, "comn": 150, "c33": 150, "334d335c3138": 150, "wl_scan": 150, "wl": 150, "nearbi": 150, "wl_ifconfig": 150, "demo": 150, "ttyacm1": 150, "com1": 150, "ttyusb0": 150, "print_state_info": 150, "500m": 150, "workflow": 150, "gitlab": [150, 152], "functool": 150, "machineri": 151, "sys_mpi": 151, "armv6": 151, "armv6m": 151, "armv7m": 151, "armv7em": 151, "armv7emsp": 151, "armv7emdp": 151, "xtensawin": 151, "march": 151, "uppercas": 151, "recompil": 151, "git": 151, "mpy_cross_flag": 151, "commit": 151, "bdbc869f9ea200c0d28b2bc7bfb60acd9d884e1b": 151, "6967ff3c581a66f73e9f3d78975f47528db39980": 151, "d94141e1473aebae0d3c63aeaa8397651ad6fa01": 151, "f2040bfc7ee033e48acef9f289790f3b4e6b74e5": 151, "5716c5cf65e9b2cb46c2906f40302401bdd27517": 151, "9a5f92ea72754c01cc03e5efcdfe94021120531": 151, "ff93fd4f50321c6190e1659b19e64fef3045a484": 151, "dd11af209d226b7d18d5148b239662e30ed60bad": 151, "6a11048af1d01c78bdacddadd1b72dc7ba7c6478": 151, "d8c834c95d506db979ec871417de90b7951edc30": 151, "children": 151, "vuint": 151, "8th": 151, "xd": 151, "myfil": 151, "0x4d": 151, "reloc": 151, "fetch": 152, "pkgname": 152, "easiest": 152, "broadli": 152, "webserv": 152, "alongsid": 152, "mlx90640": 152, "dep": 152, "defaultdict": 152, "otheraddit": 152, "downsid": 152, "standalon": 153, "pyseri": 153, "pipi": 153, "telnet": 153, "login": 153, "usernam": 153, "pyboard_devic": 153, "pyboard_baudr": 153, "ssh": 153, "enter_raw_repl": 153, "ret": 153, "exit_raw_repl": 153, "backspac": 154, "wind": 154, "compound": 154, "af3": 154, "af3_tim": 154, "af3_tim10": 154, "af3_tim11": 154, "6466": 154, "6467": 154, "6468": 154, "mess": 154, "indentationerror": 154, "g6f70283": 154, "dirti": 154, "stm32f405rg": 154, "echo": 154, "friendli": 154, "verbatim": 154, "x05a": 154, "worth": 154, "reamin": 154, "uncaught": 154, "x01print": 154, "nraw": 154, "x80": 154, "x04123": 154, "outset": 155, "devot": 155, "attent": 155, "straightforward": 155, "textbook": 155, "spectacular": 155, "dedic": 155, "paramount": 155, "allevi": 155, "ba": 155, "2k": 155, "mv": 155, "caveat": 155, "aliv": 155, "panacea": 155, "10k": 155, "nonetheless": 155, "indispens": 155, "profil": 155, "judici": 155, "timed_funct": 155, "mynam": 155, "new_func": 155, "3f": 155, "obj_displai": 155, "ba_ref": 155, "adequ": 155, "clutter": 155, "linebuf": 155, "roughli": 155, "pursuit": 155, "modulo": 155, "benefici": 155, "pep0484": 155, "ptr8": 155, "ptr16": 155, "ptr32": 155, "ptrx": 155, "impos": 155, "rapidli": 155, "bit0": 155, "toggle_n": 155, "odr": 155, "kickstart": 155, "mypin": 155, "a14": 155, "bit14": 155}, "objects": {"": [[18, 0, 1, "", "AssertionError"], [18, 0, 1, "", "AttributeError"], [18, 0, 1, "", "Exception"], [18, 0, 1, "", "ImportError"], [18, 0, 1, "", "IndexError"], [18, 0, 1, "", "KeyError"], [18, 0, 1, "", "KeyboardInterrupt"], [18, 0, 1, "", "MemoryError"], [18, 0, 1, "", "NameError"], [18, 0, 1, "", "NotImplementedError"], [18, 0, 1, "", "OSError"], [18, 0, 1, "", "RuntimeError"], [18, 0, 1, "", "StopIteration"], [18, 0, 1, "", "SyntaxError"], [18, 0, 1, "", "SystemExit"], [78, 1, 0, "-", "TFP410"], [18, 0, 1, "", "TypeError"], [18, 0, 1, "", "ValueError"], [18, 0, 1, "", "ZeroDivisionError"], [12, 1, 0, "-", "_thread"], [18, 4, 1, "", "abs"], [148, 4, 1, "", "add_library"], [18, 4, 1, "", "all"], [18, 4, 1, "", "any"], [13, 1, 0, "-", "array"], [14, 1, 0, "-", "asyncio"], [52, 1, 0, "-", "audio"], [18, 4, 1, "", "bin"], [15, 1, 0, "-", "binascii"], [16, 1, 0, "-", "bluetooth"], [28, 1, 0, "-", "bno055"], [18, 3, 1, "", "bool"], [17, 1, 0, "-", "btree"], [53, 1, 0, "-", "buzzer"], [18, 3, 1, "", "bytearray"], [18, 3, 1, "", "bytes"], [18, 4, 1, "", "callable"], [18, 4, 1, "", "chr"], [18, 4, 1, "", "classmethod"], [19, 1, 0, "-", "cmath"], [20, 1, 0, "-", "collections"], [18, 4, 1, "", "compile"], [18, 3, 1, "", "complex"], [54, 1, 0, "-", "cpufreq"], [21, 1, 0, "-", "cryptolib"], [22, 1, 0, "-", "deflate"], [18, 4, 1, "", "delattr"], [18, 3, 1, "", "dict"], [18, 4, 1, "", "dir"], [55, 1, 0, "-", "display"], [18, 4, 1, "", "divmod"], [18, 4, 1, "", "enumerate"], [23, 1, 0, "-", "errno"], [18, 4, 1, "", "eval"], [18, 4, 1, "", "exec"], [18, 4, 1, "", "filter"], [63, 1, 0, "-", "fir"], [18, 3, 1, "", "float"], [148, 4, 1, "", "freeze"], [148, 4, 1, "", "freeze_as_mpy"], [148, 4, 1, "", "freeze_as_str"], [148, 4, 1, "", "freeze_mpy"], [18, 3, 1, "", "frozenset"], [64, 1, 0, "-", "ft5x06"], [24, 1, 0, "-", "gc"], [18, 4, 1, "", "getattr"], [65, 1, 0, "-", "gif"], [18, 4, 1, "", "globals"], [66, 1, 0, "-", "gt911"], [25, 1, 0, "-", "gzip"], [18, 4, 1, "", "hasattr"], [18, 4, 1, "", "hash"], [26, 1, 0, "-", "hashlib"], [27, 1, 0, "-", "heapq"], [18, 4, 1, "", "hex"], [18, 4, 1, "", "id"], [67, 1, 0, "-", "image"], [68, 1, 0, "-", "imu"], [148, 4, 1, "", "include"], [18, 4, 1, "", "input"], [18, 3, 1, "", "int"], [29, 1, 0, "-", "io"], [18, 4, 1, "", "isinstance"], [18, 4, 1, "", "issubclass"], [18, 4, 1, "", "iter"], [30, 1, 0, "-", "json"], [18, 4, 1, "", "len"], [18, 3, 1, "", "list"], [18, 4, 1, "", "locals"], [31, 1, 0, "-", "machine"], [18, 4, 1, "", "map"], [45, 1, 0, "-", "math"], [18, 4, 1, "", "max"], [18, 3, 1, "", "memoryview"], [148, 4, 1, "", "metadata"], [46, 1, 0, "-", "micropython"], [18, 4, 1, "", "min"], [69, 1, 0, "-", "mjpeg"], [70, 1, 0, "-", "ml"], [28, 1, 0, "-", "modbus"], [148, 4, 1, "", "module"], [28, 1, 0, "-", "mqtt"], [47, 1, 0, "-", "mutex"], [48, 1, 0, "-", "network"], [18, 4, 1, "", "next"], [18, 3, 1, "", "object"], [18, 4, 1, "", "oct"], [74, 1, 0, "-", "omv"], [18, 4, 1, "", "open"], [80, 1, 0, "-", "openamp"], [18, 4, 1, "", "ord"], [81, 1, 0, "-", "os"], [148, 4, 1, "", "package"], [28, 1, 0, "-", "pid"], [82, 1, 0, "-", "platform"], [18, 4, 1, "", "pow"], [18, 4, 1, "", "print"], [18, 4, 1, "", "property"], [83, 1, 0, "-", "pyb"], [99, 1, 0, "-", "random"], [18, 4, 1, "", "range"], [100, 1, 0, "-", "re"], [18, 4, 1, "", "repr"], [148, 4, 1, "", "require"], [18, 4, 1, "", "reversed"], [18, 4, 1, "", "round"], [75, 1, 0, "-", "rpc"], [76, 1, 0, "-", "rtsp"], [101, 1, 0, "-", "select"], [77, 1, 0, "-", "sensor"], [18, 3, 1, "", "set"], [18, 4, 1, "", "setattr"], [18, 3, 1, "", "slice"], [102, 1, 0, "-", "socket"], [18, 4, 1, "", "sorted"], [28, 1, 0, "-", "ssd1306"], [103, 1, 0, "-", "ssl"], [18, 4, 1, "", "staticmethod"], [104, 1, 0, "-", "stm"], [18, 3, 1, "", "str"], [105, 1, 0, "-", "struct"], [18, 4, 1, "", "sum"], [18, 4, 1, "", "super"], [106, 1, 0, "-", "sys"], [28, 1, 0, "-", "tb6612"], [107, 1, 0, "-", "time"], [18, 3, 1, "", "tuple"], [79, 1, 0, "-", "tv"], [18, 4, 1, "", "type"], [108, 1, 0, "-", "uctypes"], [28, 1, 0, "-", "ulab"], [109, 1, 0, "-", "uping"], [110, 1, 0, "-", "urequests"], [111, 1, 0, "-", "vfs"], [28, 1, 0, "-", "vl53l1x"], [18, 4, 1, "", "zip"], [112, 1, 0, "-", "zlib"]], "TFP410.TFP410": [[78, 2, 1, "", "hotplug_callback"], [78, 2, 1, "", "isconnected"]], "TFP410.tfp410": [[78, 3, 1, "", "TFP410"]], "array": [[13, 3, 1, "", "array"]], "array.array": [[13, 2, 1, "", "__add__"], [13, 2, 1, "", "__getitem__"], [13, 2, 1, "", "__iadd__"], [13, 2, 1, "", "__len__"], [13, 2, 1, "", "__repr__"], [13, 2, 1, "", "__setitem__"], [13, 2, 1, "", "append"], [13, 2, 1, "", "extend"]], "asyncio": [[14, 3, 1, "", "Event"], [14, 3, 1, "", "Lock"], [14, 3, 1, "", "Loop"], [14, 3, 1, "", "Server"], [14, 3, 1, "", "Stream"], [14, 3, 1, "", "Task"], [14, 3, 1, "", "ThreadSafeFlag"], [14, 4, 1, "", "create_task"], [14, 4, 1, "", "current_task"], [14, 4, 1, "", "gather"], [14, 4, 1, "", "get_event_loop"], [14, 4, 1, "", "new_event_loop"], [14, 4, 1, "", "open_connection"], [14, 4, 1, "", "run"], [14, 4, 1, "", "sleep"], [14, 4, 1, "", "sleep_ms"], [14, 4, 1, "", "start_server"], [14, 4, 1, "", "wait_for"], [14, 4, 1, "", "wait_for_ms"]], "asyncio.Event": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "is_set"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "asyncio.Lock": [[14, 2, 1, "", "acquire"], [14, 2, 1, "", "locked"], [14, 2, 1, "", "release"]], "asyncio.Loop": [[14, 2, 1, "", "call_exception_handler"], [14, 2, 1, "", "close"], [14, 2, 1, "", "create_task"], [14, 2, 1, "", "default_exception_handler"], [14, 2, 1, "", "get_exception_handler"], [14, 2, 1, "", "run_forever"], [14, 2, 1, "", "run_until_complete"], [14, 2, 1, "", "set_exception_handler"], [14, 2, 1, "", "stop"]], "asyncio.Server": [[14, 2, 1, "", "close"], [14, 2, 1, "", "wait_closed"]], "asyncio.Stream": [[14, 2, 1, "", "close"], [14, 2, 1, "", "drain"], [14, 2, 1, "", "get_extra_info"], [14, 2, 1, "", "read"], [14, 2, 1, "", "readexactly"], [14, 2, 1, "", "readinto"], [14, 2, 1, "", "readline"], [14, 2, 1, "", "wait_closed"], [14, 2, 1, "", "write"]], "asyncio.Task": [[14, 2, 1, "", "cancel"]], "asyncio.ThreadSafeFlag": [[14, 2, 1, "", "clear"], [14, 2, 1, "", "set"], [14, 2, 1, "", "wait"]], "audio": [[52, 4, 1, "", "init"], [52, 4, 1, "", "start_streaming"], [52, 4, 1, "", "stop_streaming"]], "binascii": [[15, 4, 1, "", "a2b_base64"], [15, 4, 1, "", "b2a_base64"], [15, 4, 1, "", "hexlify"], [15, 4, 1, "", "unhexlify"]], "bluetooth": [[16, 3, 1, "", "BLE"], [16, 3, 1, "", "UUID"]], "bluetooth.BLE": [[16, 2, 1, "", "active"], [16, 2, 1, "", "config"], [16, 2, 1, "", "gap_advertise"], [16, 2, 1, "", "gap_connect"], [16, 2, 1, "", "gap_disconnect"], [16, 2, 1, "", "gap_pair"], [16, 2, 1, "", "gap_passkey"], [16, 2, 1, "", "gap_scan"], [16, 2, 1, "", "gattc_discover_characteristics"], [16, 2, 1, "", "gattc_discover_descriptors"], [16, 2, 1, "", "gattc_discover_services"], [16, 2, 1, "", "gattc_exchange_mtu"], [16, 2, 1, "", "gattc_read"], [16, 2, 1, "", "gattc_write"], [16, 2, 1, "", "gatts_indicate"], [16, 2, 1, "", "gatts_notify"], [16, 2, 1, "", "gatts_read"], [16, 2, 1, "", "gatts_register_services"], [16, 2, 1, "", "gatts_set_buffer"], [16, 2, 1, "", "gatts_write"], [16, 2, 1, "", "irq"], [16, 2, 1, "", "l2cap_connect"], [16, 2, 1, "", "l2cap_disconnect"], [16, 2, 1, "", "l2cap_listen"], [16, 2, 1, "", "l2cap_recvinto"], [16, 2, 1, "", "l2cap_send"]], "btree": [[17, 5, 1, "", "DESC"], [17, 5, 1, "", "INCL"], [17, 4, 1, "", "open"]], "btree.btree": [[17, 2, 1, "", "__contains__"], [17, 2, 1, "", "__delitem__"], [17, 2, 1, "", "__getitem__"], [17, 2, 1, "", "__iter__"], [17, 2, 1, "", "__setitem__"], [17, 2, 1, "", "close"], [17, 2, 1, "", "flush"], [17, 2, 1, "", "get"], [17, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [17, 2, 1, "", "values"]], "buzzer": [[53, 5, 1, "", "RESONANT_FREQ"], [53, 4, 1, "", "duty"], [53, 4, 1, "", "freq"]], "cmath": [[19, 4, 1, "", "cos"], [19, 5, 1, "", "e"], [19, 4, 1, "", "exp"], [19, 4, 1, "", "log"], [19, 4, 1, "", "log10"], [19, 4, 1, "", "phase"], [19, 5, 1, "", "pi"], [19, 4, 1, "", "polar"], [19, 4, 1, "", "rect"], [19, 4, 1, "", "sin"], [19, 4, 1, "", "sqrt"]], "collections": [[20, 3, 1, "", "OrderedDict"], [20, 3, 1, "", "deque"], [20, 4, 1, "", "namedtuple"]], "collections.deque": [[20, 2, 1, "", "append"], [20, 2, 1, "", "appendleft"], [20, 2, 1, "", "extend"], [20, 2, 1, "", "pop"], [20, 2, 1, "", "popleft"]], "cpufreq": [[54, 4, 1, "", "get_current_frequencies"], [54, 4, 1, "", "get_supported_frequencies"], [54, 4, 1, "", "set_frequency"]], "cryptolib": [[21, 3, 1, "", "aes"]], "cryptolib.aes": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "decrypt"], [21, 2, 1, "", "encrypt"]], "deflate": [[22, 3, 1, "", "DeflateIO"]], "deflate.deflate": [[22, 5, 1, "", "AUTO"], [22, 5, 1, "", "GZIP"], [22, 5, 1, "", "RAW"], [22, 5, 1, "", "ZLIB"]], "display.DACBacklight": [[56, 2, 1, "", "backlight"], [56, 2, 1, "", "deinit"]], "display.DSIDisplay": [[60, 2, 1, "", "backlight"], [60, 2, 1, "", "bus_read"], [60, 2, 1, "", "bus_write"], [60, 2, 1, "", "clear"], [60, 2, 1, "", "deinit"], [60, 2, 1, "", "height"], [60, 2, 1, "", "refresh"], [60, 2, 1, "", "width"], [60, 2, 1, "", "write"]], "display.DisplayData": [[59, 2, 1, "", "frame_callback"], [59, 2, 1, "", "receive_frame"], [59, 2, 1, "", "send_frame"]], "display": [[55, 5, 1, "", "FHD"], [55, 5, 1, "", "FHVGA"], [55, 5, 1, "", "FHVGA2"], [55, 5, 1, "", "FWVGA"], [55, 5, 1, "", "FWVGA2"], [55, 5, 1, "", "HD"], [55, 5, 1, "", "QVGA"], [62, 3, 1, "", "SPIDisplay"], [55, 5, 1, "", "SVGA"], [55, 5, 1, "", "SXGA"], [55, 5, 1, "", "SXGA2"], [55, 5, 1, "", "TFWVGA"], [55, 5, 1, "", "TFWVGA2"], [55, 5, 1, "", "THVGA"], [55, 5, 1, "", "TQVGA"], [55, 5, 1, "", "UXGA"], [55, 5, 1, "", "VGA"], [55, 5, 1, "", "WSVGA"], [55, 5, 1, "", "XGA"]], "display.PWMBacklight": [[57, 2, 1, "", "backlight"], [57, 2, 1, "", "deinit"]], "display.RGBDisplay": [[61, 2, 1, "", "backlight"], [61, 2, 1, "", "clear"], [61, 2, 1, "", "deinit"], [61, 2, 1, "", "height"], [61, 2, 1, "", "refresh"], [61, 2, 1, "", "width"], [61, 2, 1, "", "write"]], "display.SPIDisplay": [[62, 2, 1, "", "backlight"], [62, 2, 1, "", "bgr"], [62, 2, 1, "", "bus_write"], [62, 2, 1, "", "byte_swap"], [62, 2, 1, "", "clear"], [62, 2, 1, "", "deinit"], [62, 2, 1, "", "height"], [62, 2, 1, "", "refresh"], [62, 2, 1, "", "triple_buffer"], [62, 2, 1, "", "width"], [62, 2, 1, "", "write"]], "display.ST7701": [[58, 2, 1, "", "init"], [58, 2, 1, "", "read_id"]], "display.display": [[56, 3, 1, "", "DACBacklight"], [60, 3, 1, "", "DSIDisplay"], [59, 3, 1, "", "DisplayData"], [57, 3, 1, "", "PWMBacklight"], [61, 3, 1, "", "RGBDisplay"], [58, 3, 1, "", "ST7701"]], "display.display.DisplayData": [[59, 2, 1, "", "display_id"]], "errno": [[23, 5, 1, "", "errorcode"]], "fir": [[63, 5, 1, "", "FIR_AMG8833"], [63, 5, 1, "", "FIR_LEPTON"], [63, 5, 1, "", "FIR_MLX90621"], [63, 5, 1, "", "FIR_MLX90640"], [63, 5, 1, "", "FIR_MLX90641"], [63, 5, 1, "", "FIR_NONE"], [63, 5, 1, "", "FIR_SHIELD"], [63, 4, 1, "", "deinit"], [63, 4, 1, "", "draw_ir"], [63, 4, 1, "", "get_frame_available"], [63, 4, 1, "", "height"], [63, 4, 1, "", "init"], [63, 4, 1, "", "radiometric"], [63, 4, 1, "", "read_ir"], [63, 4, 1, "", "read_ta"], [63, 4, 1, "", "refresh"], [63, 4, 1, "", "register_frame_cb"], [63, 4, 1, "", "register_vsync_cb"], [63, 4, 1, "", "resolution"], [63, 4, 1, "", "snapshot"], [63, 4, 1, "", "trigger_ffc"], [63, 4, 1, "", "type"], [63, 4, 1, "", "width"]], "ft5x06.FT5X06": [[64, 2, 1, "", "get_gesture"], [64, 2, 1, "", "get_point_flag"], [64, 2, 1, "", "get_point_id"], [64, 2, 1, "", "get_point_x"], [64, 2, 1, "", "get_point_y"], [64, 2, 1, "", "get_points"], [64, 2, 1, "", "touch_callback"], [64, 2, 1, "", "update_points"]], "ft5x06": [[64, 5, 1, "", "LCD_FLAG_MOVED"], [64, 5, 1, "", "LCD_FLAG_PRESSED"], [64, 5, 1, "", "LCD_FLAG_RELEASED"], [64, 5, 1, "", "LCD_GESTURE_MOVE_DOWN"], [64, 5, 1, "", "LCD_GESTURE_MOVE_LEFT"], [64, 5, 1, "", "LCD_GESTURE_MOVE_RIGHT"], [64, 5, 1, "", "LCD_GESTURE_MOVE_UP"], [64, 5, 1, "", "LCD_GESTURE_NONE"], [64, 5, 1, "", "LCD_GESTURE_ZOOM_IN"], [64, 5, 1, "", "LCD_GESTURE_ZOOM_OUT"]], "ft5x06.ft5x06": [[64, 3, 1, "", "FT5X06"]], "gc": [[24, 4, 1, "", "collect"], [24, 4, 1, "", "disable"], [24, 4, 1, "", "enable"], [24, 4, 1, "", "mem_alloc"], [24, 4, 1, "", "mem_free"], [24, 4, 1, "", "threshold"]], "gif": [[65, 3, 1, "", "Gif"]], "gif.Gif": [[65, 2, 1, "", "add_frame"], [65, 2, 1, "", "close"], [65, 2, 1, "", "format"], [65, 2, 1, "", "height"], [65, 2, 1, "", "loop"], [65, 2, 1, "", "size"], [65, 2, 1, "", "width"]], "gt911.GT911": [[66, 2, 1, "", "_read_reg"], [66, 2, 1, "", "_write_reg"], [66, 2, 1, "", "read_id"], [66, 2, 1, "", "read_points"], [66, 2, 1, "", "reset"]], "gt911.gt911": [[66, 3, 1, "", "GT911"]], "gzip": [[25, 3, 1, "", "GzipFile"], [25, 4, 1, "", "compress"], [25, 4, 1, "", "decompress"], [25, 4, 1, "", "open"]], "hashlib.hash": [[26, 2, 1, "", "digest"], [26, 2, 1, "", "hexdigest"], [26, 2, 1, "", "update"]], "hashlib.hashlib": [[26, 3, 1, "", "md5"], [26, 3, 1, "", "sha1"], [26, 3, 1, "", "sha256"]], "heapq": [[27, 4, 1, "", "heapify"], [27, 4, 1, "", "heappop"], [27, 4, 1, "", "heappush"]], "image": [[67, 5, 1, "", "APPLY_COLOR_PALETTE_FIRST"], [67, 5, 1, "", "AREA"], [67, 5, 1, "", "ARTOOLKIT"], [67, 5, 1, "", "BAYER"], [67, 5, 1, "", "BICUBIC"], [67, 5, 1, "", "BILINEAR"], [67, 5, 1, "", "BINARY"], [67, 5, 1, "", "BLACK_BACKGROUND"], [67, 5, 1, "", "CENTER"], [67, 5, 1, "", "CODABAR"], [67, 5, 1, "", "CODE128"], [67, 5, 1, "", "CODE39"], [67, 5, 1, "", "CODE93"], [67, 5, 1, "", "CORNER_AGAST"], [67, 5, 1, "", "CORNER_FAST"], [67, 5, 1, "", "DATABAR"], [67, 5, 1, "", "DATABAR_EXP"], [67, 5, 1, "", "EAN13"], [67, 5, 1, "", "EAN2"], [67, 5, 1, "", "EAN5"], [67, 5, 1, "", "EAN8"], [67, 5, 1, "", "EDGE_CANNY"], [67, 5, 1, "", "EDGE_SIMPLE"], [67, 5, 1, "", "EXTRACT_RGB_CHANNEL_FIRST"], [67, 5, 1, "", "GRAYSCALE"], [67, 5, 1, "", "HMIRROR"], [67, 3, 1, "", "HaarCascade"], [67, 5, 1, "", "I25"], [67, 5, 1, "", "ISBN10"], [67, 5, 1, "", "ISBN13"], [67, 3, 1, "", "Image"], [67, 3, 1, "", "ImageIO"], [67, 5, 1, "", "JPEG"], [67, 5, 1, "", "JPEG_SUBSAMPLING_420"], [67, 5, 1, "", "JPEG_SUBSAMPLING_422"], [67, 5, 1, "", "JPEG_SUBSAMPLING_444"], [67, 5, 1, "", "JPEG_SUBSAMPLING_AUTO"], [67, 5, 1, "", "PALETTE_IRONBOW"], [67, 5, 1, "", "PALETTE_RAINBOW"], [67, 5, 1, "", "PDF417"], [67, 5, 1, "", "PNG"], [67, 5, 1, "", "RGB565"], [67, 5, 1, "", "ROTATE_180"], [67, 5, 1, "", "ROTATE_270"], [67, 5, 1, "", "ROTATE_90"], [67, 5, 1, "", "SCALE_ASPECT_EXPAND"], [67, 5, 1, "", "SCALE_ASPECT_IGNORE"], [67, 5, 1, "", "SCALE_ASPECT_KEEP"], [67, 5, 1, "", "SEARCH_DS"], [67, 5, 1, "", "SEARCH_EX"], [67, 3, 1, "", "Similarity"], [67, 5, 1, "", "TAG16H5"], [67, 5, 1, "", "TAG25H7"], [67, 5, 1, "", "TAG25H9"], [67, 5, 1, "", "TAG36H10"], [67, 5, 1, "", "TAG36H11"], [67, 5, 1, "", "TRANSPOSE"], [67, 5, 1, "", "UPCA"], [67, 5, 1, "", "UPCE"], [67, 5, 1, "", "VFLIP"], [67, 5, 1, "", "YUV422"], [67, 3, 1, "", "apriltag"], [67, 3, 1, "", "barcode"], [67, 4, 1, "", "binary_to_grayscale"], [67, 4, 1, "", "binary_to_lab"], [67, 4, 1, "", "binary_to_rgb"], [67, 4, 1, "", "binary_to_yuv"], [67, 3, 1, "", "blob"], [67, 3, 1, "", "circle"], [67, 3, 1, "", "datamatrix"], [67, 3, 1, "", "displacement"], [67, 4, 1, "", "grayscale_to_binary"], [67, 4, 1, "", "grayscale_to_lab"], [67, 4, 1, "", "grayscale_to_rgb"], [67, 4, 1, "", "grayscale_to_yuv"], [67, 3, 1, "", "histogram"], [67, 3, 1, "", "kptmatch"], [67, 4, 1, "", "lab_to_binary"], [67, 4, 1, "", "lab_to_grayscale"], [67, 4, 1, "", "lab_to_rgb"], [67, 4, 1, "", "lab_to_yuv"], [67, 3, 1, "", "line"], [67, 4, 1, "", "load_decriptor"], [67, 4, 1, "", "match_descriptor"], [67, 3, 1, "", "percentile"], [67, 3, 1, "", "qrcode"], [67, 3, 1, "", "rect"], [67, 4, 1, "", "rgb_to_binary"], [67, 4, 1, "", "rgb_to_grayscale"], [67, 4, 1, "", "rgb_to_lab"], [67, 4, 1, "", "rgb_to_yuv"], [67, 4, 1, "", "save_descriptor"], [67, 3, 1, "", "statistics"], [67, 3, 1, "", "threshold"], [67, 4, 1, "", "yuv_to_binary"], [67, 4, 1, "", "yuv_to_grayscale"], [67, 4, 1, "", "yuv_to_lab"], [67, 4, 1, "", "yuv_to_rgb"]], "image.Image": [[67, 2, 1, "", "add"], [67, 2, 1, "", "assign"], [67, 2, 1, "", "awb"], [67, 2, 1, "", "b_and"], [67, 2, 1, "", "b_nand"], [67, 2, 1, "", "b_nor"], [67, 2, 1, "", "b_or"], [67, 2, 1, "", "b_xnor"], [67, 2, 1, "", "b_xor"], [67, 2, 1, "", "bilateral"], [67, 2, 1, "", "binary"], [67, 2, 1, "", "black_hat"], [67, 2, 1, "", "blend"], [67, 2, 1, "", "bytearray"], [67, 2, 1, "", "ccm"], [67, 2, 1, "", "clear"], [67, 2, 1, "", "close"], [67, 2, 1, "", "compress"], [67, 2, 1, "", "copy"], [67, 2, 1, "", "crop"], [67, 2, 1, "", "difference"], [67, 2, 1, "", "dilate"], [67, 2, 1, "", "draw_arrow"], [67, 2, 1, "", "draw_circle"], [67, 2, 1, "", "draw_cross"], [67, 2, 1, "", "draw_edges"], [67, 2, 1, "", "draw_ellipse"], [67, 2, 1, "", "draw_image"], [67, 2, 1, "", "draw_keypoints"], [67, 2, 1, "", "draw_line"], [67, 2, 1, "", "draw_rectangle"], [67, 2, 1, "", "draw_string"], [67, 2, 1, "", "erode"], [67, 2, 1, "", "find_apriltags"], [67, 2, 1, "", "find_barcodes"], [67, 2, 1, "", "find_blobs"], [67, 2, 1, "", "find_circles"], [67, 2, 1, "", "find_datamatrices"], [67, 2, 1, "", "find_displacement"], [67, 2, 1, "", "find_edges"], [67, 2, 1, "", "find_eye"], [67, 2, 1, "", "find_features"], [67, 2, 1, "", "find_hog"], [67, 2, 1, "", "find_keypoints"], [67, 2, 1, "", "find_lbp"], [67, 2, 1, "", "find_line_segments"], [67, 2, 1, "", "find_lines"], [67, 2, 1, "", "find_qrcodes"], [67, 2, 1, "", "find_rects"], [67, 2, 1, "", "find_template"], [67, 2, 1, "", "flood_fill"], [67, 2, 1, "", "flush"], [67, 2, 1, "", "format"], [67, 2, 1, "", "gamma"], [67, 2, 1, "", "gamma_corr"], [67, 2, 1, "", "gaussian"], [67, 2, 1, "", "get_histogram"], [67, 2, 1, "", "get_pixel"], [67, 2, 1, "", "get_regression"], [67, 2, 1, "", "get_similarity"], [67, 2, 1, "", "get_statistics"], [67, 2, 1, "", "height"], [67, 2, 1, "", "histeq"], [67, 2, 1, "", "invert"], [67, 2, 1, "", "laplacian"], [67, 2, 1, "", "lens_corr"], [67, 2, 1, "", "linpolar"], [67, 2, 1, "", "logpolar"], [67, 2, 1, "", "mask_circle"], [67, 2, 1, "", "mask_ellipse"], [67, 2, 1, "", "mask_rectange"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "median"], [67, 2, 1, "", "midpoint"], [67, 2, 1, "", "min"], [67, 2, 1, "", "mode"], [67, 2, 1, "", "morph"], [67, 2, 1, "", "negate"], [67, 2, 1, "", "open"], [67, 2, 1, "", "replace"], [67, 2, 1, "", "rotation_corr"], [67, 2, 1, "", "rsub"], [67, 2, 1, "", "save"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "set"], [67, 2, 1, "", "set_pixel"], [67, 2, 1, "", "size"], [67, 2, 1, "", "stero_disparity"], [67, 2, 1, "", "sub"], [67, 2, 1, "", "to_bitmap"], [67, 2, 1, "", "to_grayscale"], [67, 2, 1, "", "to_ironbow"], [67, 2, 1, "", "to_jpeg"], [67, 2, 1, "", "to_ndarray"], [67, 2, 1, "", "to_png"], [67, 2, 1, "", "to_rainbow"], [67, 2, 1, "", "to_rgb565"], [67, 2, 1, "", "top_hat"], [67, 2, 1, "", "width"]], "image.ImageIO": [[67, 5, 1, "", "FILE_STREAM"], [67, 5, 1, "", "MEMORY_STREAM"], [67, 2, 1, "", "buffer_size"], [67, 2, 1, "", "close"], [67, 2, 1, "", "count"], [67, 2, 1, "", "is_closed"], [67, 2, 1, "", "offset"], [67, 2, 1, "", "read"], [67, 2, 1, "", "seek"], [67, 2, 1, "", "size"], [67, 2, 1, "", "sync"], [67, 2, 1, "", "type"], [67, 2, 1, "", "version"], [67, 2, 1, "", "write"]], "image.Similarity": [[67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "stdev"]], "image.apriltag": [[67, 2, 1, "", "corners"], [67, 2, 1, "", "cx"], [67, 2, 1, "", "cxf"], [67, 2, 1, "", "cy"], [67, 2, 1, "", "cyf"], [67, 2, 1, "", "decision_margin"], [67, 2, 1, "", "family"], [67, 2, 1, "", "goodness"], [67, 2, 1, "", "h"], [67, 2, 1, "", "hamming"], [67, 2, 1, "", "id"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "rotation"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "x_rotation"], [67, 2, 1, "", "x_translation"], [67, 2, 1, "", "y"], [67, 2, 1, "", "y_rotation"], [67, 2, 1, "", "y_translation"], [67, 2, 1, "", "z_rotation"], [67, 2, 1, "", "z_translation"]], "image.barcode": [[67, 2, 1, "", "corners"], [67, 2, 1, "", "h"], [67, 2, 1, "", "payload"], [67, 2, 1, "", "quality"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "rotation"], [67, 2, 1, "", "type"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.blob": [[67, 2, 1, "", "area"], [67, 2, 1, "", "code"], [67, 2, 1, "", "compactness"], [67, 2, 1, "", "convexity"], [67, 2, 1, "", "corners"], [67, 2, 1, "", "count"], [67, 2, 1, "", "cx"], [67, 2, 1, "", "cxf"], [67, 2, 1, "", "cy"], [67, 2, 1, "", "cyf"], [67, 2, 1, "", "density"], [67, 2, 1, "", "elongation"], [67, 2, 1, "", "enclosed_ellipse"], [67, 2, 1, "", "enclosing_circle"], [67, 2, 1, "", "extent"], [67, 2, 1, "", "h"], [67, 2, 1, "", "major_axis_line"], [67, 2, 1, "", "min_corners"], [67, 2, 1, "", "minor_axis_line"], [67, 2, 1, "", "perimeter"], [67, 2, 1, "", "pixels"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "rotation"], [67, 2, 1, "", "rotation_deg"], [67, 2, 1, "", "rotation_rad"], [67, 2, 1, "", "roundness"], [67, 2, 1, "", "solidity"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "x_hist_bins"], [67, 2, 1, "", "y"], [67, 2, 1, "", "y_hist_bins"]], "image.circle": [[67, 2, 1, "", "magnitude"], [67, 2, 1, "", "r"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.datamatrix": [[67, 2, 1, "", "capacity"], [67, 2, 1, "", "columns"], [67, 2, 1, "", "corners"], [67, 2, 1, "", "h"], [67, 2, 1, "", "padding"], [67, 2, 1, "", "payload"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "rotation"], [67, 2, 1, "", "rows"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.displacement": [[67, 2, 1, "", "response"], [67, 2, 1, "", "rotation"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "x_translation"], [67, 2, 1, "", "y_translation"]], "image.histogram": [[67, 2, 1, "", "a_bins"], [67, 2, 1, "", "b_bins"], [67, 2, 1, "", "bins"], [67, 2, 1, "", "get_percentile"], [67, 2, 1, "", "get_statistics"], [67, 2, 1, "", "get_threshold"], [67, 2, 1, "", "l_bins"]], "image.kptmatch": [[67, 2, 1, "", "count"], [67, 2, 1, "", "cx"], [67, 2, 1, "", "cy"], [67, 2, 1, "", "h"], [67, 2, 1, "", "match"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "theta"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.line": [[67, 2, 1, "", "length"], [67, 2, 1, "", "line"], [67, 2, 1, "", "magnitude"], [67, 2, 1, "", "rho"], [67, 2, 1, "", "theta"], [67, 2, 1, "", "x1"], [67, 2, 1, "", "x2"], [67, 2, 1, "", "y1"], [67, 2, 1, "", "y2"]], "image.percentile": [[67, 2, 1, "", "a_value"], [67, 2, 1, "", "b_value"], [67, 2, 1, "", "l_value"], [67, 2, 1, "", "value"]], "image.qrcode": [[67, 2, 1, "", "corners"], [67, 2, 1, "", "data_type"], [67, 2, 1, "", "ecc_level"], [67, 2, 1, "", "eci"], [67, 2, 1, "", "h"], [67, 2, 1, "", "is_alphanumeric"], [67, 2, 1, "", "is_binary"], [67, 2, 1, "", "is_kanji"], [67, 2, 1, "", "is_numeric"], [67, 2, 1, "", "mask"], [67, 2, 1, "", "payload"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "version"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.rect": [[67, 2, 1, "", "corners"], [67, 2, 1, "", "h"], [67, 2, 1, "", "magnitude"], [67, 2, 1, "", "rect"], [67, 2, 1, "", "w"], [67, 2, 1, "", "x"], [67, 2, 1, "", "y"]], "image.statistics": [[67, 2, 1, "", "a_lq"], [67, 2, 1, "", "a_max"], [67, 2, 1, "", "a_mean"], [67, 2, 1, "", "a_median"], [67, 2, 1, "", "a_min"], [67, 2, 1, "", "a_mode"], [67, 2, 1, "", "a_stdev"], [67, 2, 1, "", "a_uq"], [67, 2, 1, "", "b_lq"], [67, 2, 1, "", "b_max"], [67, 2, 1, "", "b_mean"], [67, 2, 1, "", "b_median"], [67, 2, 1, "", "b_min"], [67, 2, 1, "", "b_mode"], [67, 2, 1, "", "b_stdev"], [67, 2, 1, "", "b_uq"], [67, 2, 1, "", "l_lq"], [67, 2, 1, "", "l_max"], [67, 2, 1, "", "l_mean"], [67, 2, 1, "", "l_median"], [67, 2, 1, "", "l_min"], [67, 2, 1, "", "l_mode"], [67, 2, 1, "", "l_stdev"], [67, 2, 1, "", "l_uq"], [67, 2, 1, "", "lq"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "median"], [67, 2, 1, "", "min"], [67, 2, 1, "", "mode"], [67, 2, 1, "", "stdev"], [67, 2, 1, "", "uq"]], "image.threshold": [[67, 2, 1, "", "a_value"], [67, 2, 1, "", "b_value"], [67, 2, 1, "", "l_value"], [67, 2, 1, "", "value"]], "imu": [[68, 4, 1, "", "__read_reg"], [68, 4, 1, "", "__write_reg"], [68, 4, 1, "", "acceleration_mg"], [68, 4, 1, "", "angular_rate_mdps"], [68, 4, 1, "", "pitch"], [68, 4, 1, "", "roll"], [68, 4, 1, "", "sleep"], [68, 4, 1, "", "temperature_c"]], "int": [[18, 2, 1, "", "from_bytes"], [18, 2, 1, "", "to_bytes"]], "io": [[29, 3, 1, "", "BytesIO"], [29, 3, 1, "", "StringIO"], [29, 4, 1, "", "open"]], "io.BytesIO": [[29, 2, 1, "", "getvalue"]], "json": [[30, 4, 1, "", "dump"], [30, 4, 1, "", "dumps"], [30, 4, 1, "", "load"], [30, 4, 1, "", "loads"]], "machine": [[32, 3, 1, "", "ADC"], [33, 3, 1, "", "ADCBlock"], [34, 3, 1, "", "CAN"], [35, 3, 1, "", "I2C"], [36, 3, 1, "", "I2S"], [37, 3, 1, "", "PWM"], [38, 3, 1, "", "Pin"], [39, 3, 1, "", "RTC"], [40, 3, 1, "", "SPI"], [41, 3, 1, "", "Signal"], [35, 3, 1, "", "SoftI2C"], [40, 3, 1, "", "SoftSPI"], [42, 3, 1, "", "Timer"], [43, 3, 1, "", "UART"], [44, 3, 1, "", "WDT"], [31, 4, 1, "", "bitstream"], [31, 4, 1, "", "bootloader"], [31, 4, 1, "", "deepsleep"], [31, 4, 1, "", "disable_irq"], [31, 4, 1, "", "enable_irq"], [31, 4, 1, "", "freq"], [31, 4, 1, "", "idle"], [31, 4, 1, "", "lightsleep"], [31, 5, 1, "", "mem16"], [31, 5, 1, "", "mem32"], [31, 5, 1, "", "mem8"], [31, 4, 1, "", "reset"], [31, 4, 1, "", "reset_cause"], [31, 4, 1, "", "sleep"], [31, 4, 1, "", "soft_reset"], [31, 4, 1, "", "time_pulse_us"], [31, 4, 1, "", "unique_id"]], "machine.ADC": [[32, 2, 1, "", "block"], [32, 2, 1, "", "init"], [32, 2, 1, "", "read_u16"], [32, 2, 1, "", "read_uv"]], "machine.ADCBlock": [[33, 2, 1, "", "connect"], [33, 2, 1, "", "init"]], "machine.CAN": [[34, 5, 1, "", "BUS_OFF"], [34, 5, 1, "", "DUAL"], [34, 5, 1, "", "ERROR_ACTIVE"], [34, 5, 1, "", "ERROR_PASSIVE"], [34, 5, 1, "", "ERROR_WARNING"], [34, 5, 1, "", "LIST32"], [34, 5, 1, "", "LOOPBACK"], [34, 5, 1, "", "NORMAL"], [34, 5, 1, "", "SILENT"], [34, 5, 1, "", "SILENT_LOOPBACK"], [34, 5, 1, "", "STOPPED"], [34, 2, 1, "", "any"], [34, 2, 1, "", "clearfilter"], [34, 2, 1, "", "deinit"], [34, 2, 1, "", "info"], [34, 2, 1, "", "init"], [34, 2, 1, "", "recv"], [34, 2, 1, "", "restart"], [34, 2, 1, "", "rxcallback"], [34, 2, 1, "", "send"], [34, 2, 1, "", "setfilter"], [34, 2, 1, "", "state"]], "machine.I2C": [[35, 2, 1, "", "init"], [35, 2, 1, "", "readfrom"], [35, 2, 1, "", "readfrom_into"], [35, 2, 1, "", "readfrom_mem"], [35, 2, 1, "", "readfrom_mem_into"], [35, 2, 1, "", "readinto"], [35, 2, 1, "", "scan"], [35, 2, 1, "", "start"], [35, 2, 1, "", "stop"], [35, 2, 1, "", "write"], [35, 2, 1, "", "writeto"], [35, 2, 1, "", "writeto_mem"], [35, 2, 1, "", "writevto"]], "machine.I2S": [[36, 5, 1, "", "MONO"], [36, 5, 1, "", "RX"], [36, 5, 1, "", "STEREO"], [36, 5, 1, "", "TX"], [36, 2, 1, "", "deinit"], [36, 2, 1, "", "init"], [36, 2, 1, "", "irq"], [36, 2, 1, "", "readinto"], [36, 2, 1, "", "shift"], [36, 2, 1, "", "write"]], "machine.PWM": [[37, 2, 1, "", "deinit"], [37, 2, 1, "", "duty_ns"], [37, 2, 1, "", "duty_u16"], [37, 2, 1, "", "freq"], [37, 2, 1, "", "init"]], "machine.Pin": [[38, 5, 1, "", "ALT"], [38, 5, 1, "", "ALT_OPEN_DRAIN"], [38, 5, 1, "", "ANALOG"], [38, 5, 1, "", "DRIVE_0"], [38, 5, 1, "", "DRIVE_1"], [38, 5, 1, "", "DRIVE_2"], [38, 5, 1, "", "IN"], [38, 5, 1, "", "IRQ_FALLING"], [38, 5, 1, "", "IRQ_HIGH_LEVEL"], [38, 5, 1, "", "IRQ_LOW_LEVEL"], [38, 5, 1, "", "IRQ_RISING"], [38, 5, 1, "", "OPEN_DRAIN"], [38, 5, 1, "", "OUT"], [38, 5, 1, "", "PULL_DOWN"], [38, 5, 1, "", "PULL_HOLD"], [38, 5, 1, "", "PULL_UP"], [38, 2, 1, "", "__call__"], [38, 2, 1, "", "drive"], [38, 2, 1, "", "high"], [38, 2, 1, "", "init"], [38, 2, 1, "", "irq"], [38, 2, 1, "", "low"], [38, 2, 1, "", "mode"], [38, 2, 1, "", "off"], [38, 2, 1, "", "on"], [38, 2, 1, "", "pull"], [38, 2, 1, "", "value"]], "machine.RTC": [[39, 5, 1, "", "ALARM0"], [39, 2, 1, "", "alarm"], [39, 2, 1, "", "alarm_left"], [39, 2, 1, "", "cancel"], [39, 2, 1, "", "datetime"], [39, 2, 1, "", "deinit"], [39, 2, 1, "", "init"], [39, 2, 1, "", "irq"], [39, 2, 1, "", "memory"], [39, 2, 1, "", "now"]], "machine.SPI": [[40, 5, 1, "", "CONTROLLER"], [40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"], [40, 2, 1, "", "deinit"], [40, 2, 1, "", "init"], [40, 2, 1, "", "read"], [40, 2, 1, "", "readinto"], [40, 2, 1, "", "write"], [40, 2, 1, "", "write_readinto"]], "machine.Signal": [[41, 2, 1, "", "off"], [41, 2, 1, "", "on"], [41, 2, 1, "", "value"]], "machine.SoftSPI": [[40, 5, 1, "", "LSB"], [40, 5, 1, "", "MSB"]], "machine.Timer": [[42, 5, 1, "", "ONE_SHOT"], [42, 5, 1, "", "PERIODIC"], [42, 2, 1, "", "deinit"], [42, 2, 1, "", "init"]], "machine.UART": [[43, 2, 1, "", "any"], [43, 2, 1, "", "deinit"], [43, 2, 1, "", "flush"], [43, 2, 1, "", "init"], [43, 2, 1, "", "read"], [43, 2, 1, "", "readinto"], [43, 2, 1, "", "readline"], [43, 2, 1, "", "sendbreak"], [43, 2, 1, "", "txdone"], [43, 2, 1, "", "write"]], "machine.WDT": [[44, 2, 1, "", "feed"]], "machine.machine": [[31, 5, 1, "", "DEEPSLEEP"], [31, 5, 1, "", "DEEPSLEEP_RESET"], [31, 5, 1, "", "HARD_RESET"], [31, 5, 1, "", "IDLE"], [31, 5, 1, "", "PIN_WAKE"], [31, 5, 1, "", "PWRON_RESET"], [31, 5, 1, "", "RTC_WAKE"], [31, 5, 1, "", "SLEEP"], [31, 5, 1, "", "SOFT_RESET"], [31, 5, 1, "", "WDT_RESET"], [31, 5, 1, "", "WLAN_WAKE"]], "math": [[45, 4, 1, "", "acos"], [45, 4, 1, "", "acosh"], [45, 4, 1, "", "asin"], [45, 4, 1, "", "asinh"], [45, 4, 1, "", "atan"], [45, 4, 1, "", "atan2"], [45, 4, 1, "", "atanh"], [45, 4, 1, "", "ceil"], [45, 4, 1, "", "copysign"], [45, 4, 1, "", "cos"], [45, 4, 1, "", "cosh"], [45, 4, 1, "", "degrees"], [45, 5, 1, "", "e"], [45, 4, 1, "", "erf"], [45, 4, 1, "", "erfc"], [45, 4, 1, "", "exp"], [45, 4, 1, "", "expm1"], [45, 4, 1, "", "fabs"], [45, 4, 1, "", "floor"], [45, 4, 1, "", "fmod"], [45, 4, 1, "", "frexp"], [45, 4, 1, "", "gamma"], [45, 4, 1, "", "isfinite"], [45, 4, 1, "", "isinf"], [45, 4, 1, "", "isnan"], [45, 4, 1, "", "ldexp"], [45, 4, 1, "", "lgamma"], [45, 4, 1, "", "log"], [45, 4, 1, "", "log10"], [45, 4, 1, "", "log2"], [45, 4, 1, "", "modf"], [45, 5, 1, "", "pi"], [45, 4, 1, "", "pow"], [45, 4, 1, "", "radians"], [45, 4, 1, "", "sin"], [45, 4, 1, "", "sinh"], [45, 4, 1, "", "sqrt"], [45, 4, 1, "", "tan"], [45, 4, 1, "", "tanh"], [45, 4, 1, "", "trunc"]], "micropython": [[46, 4, 1, "", "alloc_emergency_exception_buf"], [46, 4, 1, "", "const"], [46, 4, 1, "", "heap_lock"], [46, 4, 1, "", "heap_locked"], [46, 4, 1, "", "heap_unlock"], [46, 4, 1, "", "kbd_intr"], [46, 4, 1, "", "mem_info"], [46, 4, 1, "", "opt_level"], [46, 4, 1, "", "qstr_info"], [46, 4, 1, "", "schedule"], [46, 4, 1, "", "stack_use"]], "mjpeg": [[69, 3, 1, "", "Mjpeg"]], "mjpeg.Mjpeg": [[69, 2, 1, "", "add_frame"], [69, 2, 1, "", "close"], [69, 2, 1, "", "count"], [69, 2, 1, "", "height"], [69, 2, 1, "", "is_closed"], [69, 2, 1, "", "size"], [69, 2, 1, "", "sync"], [69, 2, 1, "", "width"], [69, 2, 1, "", "write"]], "ml": [[70, 3, 1, "", "Model"], [71, 1, 0, "-", "apps"], [72, 1, 0, "-", "preprocessing"], [73, 1, 0, "-", "utils"]], "ml.Model": [[70, 6, 1, "", "input_dtype"], [70, 6, 1, "", "input_scale"], [70, 6, 1, "", "input_shape"], [70, 6, 1, "", "input_zero_point"], [70, 6, 1, "", "labels"], [70, 6, 1, "", "len"], [70, 6, 1, "", "output_dtype"], [70, 6, 1, "", "output_scale"], [70, 6, 1, "", "output_shape"], [70, 6, 1, "", "output_zero_point"], [70, 2, 1, "", "predict"], [70, 6, 1, "", "ram"]], "ml.apps": [[71, 3, 1, "", "MicroSpeech"]], "ml.apps.MicroSpeech": [[71, 2, 1, "", "listen"]], "ml.preprocessing": [[72, 3, 1, "", "Normalization"]], "ml.utils": [[73, 3, 1, "", "NMS"]], "ml.utils.NMS": [[73, 2, 1, "", "add_bounding_boxes"], [73, 2, 1, "", "get_bounding_boxes"]], "mutex": [[47, 3, 1, "", "Mutex"]], "mutex.Mutex": [[47, 2, 1, "", "release"], [47, 2, 1, "", "test"]], "network": [[48, 3, 1, "", "AbstractNIC"], [49, 3, 1, "", "LAN"], [50, 3, 1, "", "WINC"], [51, 3, 1, "", "WLAN"], [48, 4, 1, "", "country"], [48, 4, 1, "", "hostname"]], "network.AbstractNIC": [[48, 2, 1, "", "active"], [48, 2, 1, "", "config"], [48, 2, 1, "", "connect"], [48, 2, 1, "", "disconnect"], [48, 2, 1, "", "ifconfig"], [48, 2, 1, "", "isconnected"], [48, 2, 1, "", "scan"], [48, 2, 1, "", "status"]], "network.LAN": [[49, 2, 1, "", "active"], [49, 2, 1, "", "config"], [49, 2, 1, "", "ifconfig"], [49, 2, 1, "", "isconnected"], [49, 2, 1, "", "status"]], "network.WINC": [[50, 5, 1, "", "802_1X"], [50, 5, 1, "", "MODE_AP"], [50, 5, 1, "", "MODE_BSP"], [50, 5, 1, "", "MODE_FIRMWARE"], [50, 5, 1, "", "MODE_P2P"], [50, 5, 1, "", "MODE_STA"], [50, 5, 1, "", "OPEN"], [50, 5, 1, "", "WPA_PSK"], [50, 2, 1, "", "active"], [50, 2, 1, "", "connect"], [50, 2, 1, "", "connected_sta"], [50, 2, 1, "", "disconnect"], [50, 2, 1, "", "fw_dump"], [50, 2, 1, "", "fw_update"], [50, 2, 1, "", "fw_version"], [50, 2, 1, "", "ifconfig"], [50, 2, 1, "", "isconnected"], [50, 2, 1, "", "netinfo"], [50, 2, 1, "", "rssi"], [50, 2, 1, "", "scan"], [50, 2, 1, "", "start_ap"], [50, 2, 1, "", "wait_for_sta"]], "network.WLAN": [[51, 5, 1, "", "PM_NONE"], [51, 5, 1, "", "PM_PERFORMANCE"], [51, 5, 1, "", "PM_POWERSAVE"], [51, 2, 1, "", "active"], [51, 2, 1, "", "config"], [51, 2, 1, "", "connect"], [51, 2, 1, "", "disconnect"], [51, 2, 1, "", "ifconfig"], [51, 2, 1, "", "isconnected"], [51, 2, 1, "", "scan"], [51, 2, 1, "", "status"]], "omv": [[74, 4, 1, "", "arch"], [74, 4, 1, "", "board_id"], [74, 4, 1, "", "board_type"], [74, 4, 1, "", "disable_fb"], [74, 4, 1, "", "version_major"], [74, 4, 1, "", "version_minor"], [74, 4, 1, "", "version_patch"], [74, 4, 1, "", "version_string"]], "openamp": [[80, 3, 1, "", "Endpoint"], [80, 3, 1, "", "RemoteProc"], [80, 4, 1, "", "new_service_callback"]], "openamp.Endpoint": [[80, 2, 1, "", "deinit"], [80, 2, 1, "", "is_ready"], [80, 2, 1, "", "send"]], "openamp.RemoteProc": [[80, 2, 1, "", "shutdown"], [80, 2, 1, "", "start"], [80, 2, 1, "", "stop"]], "os": [[81, 3, 1, "", "VfsFat"], [81, 3, 1, "", "VfsLfs1"], [81, 3, 1, "", "VfsLfs2"], [81, 3, 1, "", "VfsPosix"], [81, 4, 1, "", "chdir"], [81, 4, 1, "", "dupterm"], [81, 4, 1, "", "getcwd"], [81, 4, 1, "", "ilistdir"], [81, 4, 1, "", "listdir"], [81, 4, 1, "", "mkdir"], [81, 4, 1, "", "mount"], [81, 4, 1, "", "remove"], [81, 4, 1, "", "rename"], [81, 4, 1, "", "rmdir"], [81, 4, 1, "", "stat"], [81, 4, 1, "", "statvfs"], [81, 4, 1, "", "sync"], [81, 4, 1, "", "umount"], [81, 4, 1, "", "uname"], [81, 4, 1, "", "urandom"]], "platform": [[82, 4, 1, "", "libc_ver"], [82, 4, 1, "", "platform"], [82, 4, 1, "", "python_compiler"]], "pyb": [[84, 3, 1, "", "ADC"], [85, 3, 1, "", "CAN"], [86, 3, 1, "", "DAC"], [87, 3, 1, "", "ExtInt"], [88, 3, 1, "", "Flash"], [89, 3, 1, "", "I2C"], [90, 3, 1, "", "LED"], [91, 3, 1, "", "Pin"], [92, 3, 1, "", "RTC"], [93, 3, 1, "", "SPI"], [94, 3, 1, "", "Servo"], [95, 3, 1, "", "Timer"], [96, 3, 1, "", "UART"], [97, 3, 1, "", "USB_HID"], [98, 3, 1, "", "USB_VCP"], [83, 4, 1, "", "bootloader"], [83, 4, 1, "", "delay"], [83, 4, 1, "", "disable_irq"], [83, 4, 1, "", "elapsed_micros"], [83, 4, 1, "", "elapsed_millis"], [83, 4, 1, "", "enable_irq"], [83, 4, 1, "", "fault_debug"], [83, 4, 1, "", "hard_reset"], [83, 4, 1, "", "have_cdc"], [83, 4, 1, "", "hid"], [83, 4, 1, "", "info"], [83, 4, 1, "", "main"], [83, 4, 1, "", "micros"], [83, 4, 1, "", "millis"], [83, 4, 1, "", "mount"], [83, 4, 1, "", "repl_uart"], [83, 4, 1, "", "rng"], [83, 4, 1, "", "standby"], [83, 4, 1, "", "stop"], [83, 4, 1, "", "sync"], [83, 4, 1, "", "udelay"], [83, 4, 1, "", "unique_id"], [83, 4, 1, "", "usb_mode"], [83, 4, 1, "", "wfi"]], "pyb.ADC": [[84, 2, 1, "", "read"], [84, 2, 1, "", "read_timed"]], "pyb.CAN": [[85, 5, 1, "", "BUS_OFF"], [85, 5, 1, "", "DUAL"], [85, 5, 1, "", "ERROR_ACTIVE"], [85, 5, 1, "", "ERROR_PASSIVE"], [85, 5, 1, "", "ERROR_WARNING"], [85, 5, 1, "", "LIST16"], [85, 5, 1, "", "LIST32"], [85, 5, 1, "", "LOOPBACK"], [85, 5, 1, "", "MASK"], [85, 5, 1, "", "MASK16"], [85, 5, 1, "", "MASK32"], [85, 5, 1, "", "NORMAL"], [85, 5, 1, "", "RANGE"], [85, 5, 1, "", "SILENT"], [85, 5, 1, "", "SILENT_LOOPBACK"], [85, 5, 1, "", "STOPPED"], [85, 2, 1, "", "any"], [85, 2, 1, "", "clearfilter"], [85, 2, 1, "", "deinit"], [85, 2, 1, "", "info"], [85, 2, 1, "", "recv"], [85, 2, 1, "", "restart"], [85, 2, 1, "", "rxcallback"], [85, 2, 1, "", "send"], [85, 2, 1, "", "setfilter"], [85, 2, 1, "", "state"]], "pyb.DAC": [[86, 5, 1, "", "CIRCULAR"], [86, 5, 1, "", "NORMAL"], [86, 2, 1, "", "deinit"], [86, 2, 1, "", "init"], [86, 2, 1, "", "noise"], [86, 2, 1, "", "triangle"], [86, 2, 1, "", "write"], [86, 2, 1, "", "write_timed"]], "pyb.ExtInt": [[87, 5, 1, "", "IRQ_FALLING"], [87, 5, 1, "", "IRQ_RISING"], [87, 5, 1, "", "IRQ_RISING_FALLING"], [87, 2, 1, "", "disable"], [87, 2, 1, "", "enable"], [87, 2, 1, "", "line"], [87, 2, 1, "", "regs"], [87, 2, 1, "", "swint"]], "pyb.Flash": [[88, 2, 1, "", "ioctl"], [88, 2, 1, "", "readblocks"], [88, 2, 1, "", "writeblocks"]], "pyb.I2C": [[89, 5, 1, "", "CONTROLLER"], [89, 5, 1, "", "PERIPHERAL"], [89, 2, 1, "", "deinit"], [89, 2, 1, "", "init"], [89, 2, 1, "", "is_ready"], [89, 2, 1, "", "mem_read"], [89, 2, 1, "", "mem_write"], [89, 2, 1, "", "recv"], [89, 2, 1, "", "scan"], [89, 2, 1, "", "send"]], "pyb.LED": [[90, 2, 1, "", "intensity"], [90, 2, 1, "", "off"], [90, 2, 1, "", "on"], [90, 2, 1, "", "toggle"]], "pyb.Pin": [[91, 5, 1, "", "AF_OD"], [91, 5, 1, "", "AF_PP"], [91, 5, 1, "", "ALT"], [91, 5, 1, "", "ANALOG"], [91, 5, 1, "", "IN"], [91, 5, 1, "", "OUT_OD"], [91, 5, 1, "", "OUT_PP"], [91, 5, 1, "", "PULL_DOWN"], [91, 5, 1, "", "PULL_NONE"], [91, 5, 1, "", "PULL_UP"], [91, 2, 1, "", "__str__"], [91, 2, 1, "", "af"], [91, 2, 1, "", "af_list"], [91, 2, 1, "", "debug"], [91, 2, 1, "", "dict"], [91, 2, 1, "", "gpio"], [91, 2, 1, "", "init"], [91, 2, 1, "", "mapper"], [91, 2, 1, "", "mode"], [91, 2, 1, "", "name"], [91, 2, 1, "", "names"], [91, 2, 1, "", "pin"], [91, 2, 1, "", "port"], [91, 2, 1, "", "pull"], [91, 2, 1, "", "value"]], "pyb.RTC": [[92, 2, 1, "", "calibration"], [92, 2, 1, "", "datetime"], [92, 2, 1, "", "info"], [92, 2, 1, "", "wakeup"]], "pyb.SPI": [[93, 5, 1, "", "CONTROLLER"], [93, 5, 1, "", "LSB"], [93, 5, 1, "", "MSB"], [93, 5, 1, "", "PERIPHERAL"], [93, 2, 1, "", "deinit"], [93, 2, 1, "", "init"], [93, 2, 1, "", "recv"], [93, 2, 1, "", "send"], [93, 2, 1, "", "send_recv"]], "pyb.Servo": [[94, 2, 1, "", "angle"], [94, 2, 1, "", "calibration"], [94, 2, 1, "", "pulse_width"], [94, 2, 1, "", "speed"]], "pyb.Timer": [[95, 5, 1, "", "BRK_HIGH"], [95, 5, 1, "", "BRK_LOW"], [95, 5, 1, "", "BRK_OFF"], [95, 5, 1, "", "CENTER"], [95, 5, 1, "", "DOWN"], [95, 5, 1, "", "UP"], [95, 2, 1, "", "callback"], [95, 2, 1, "", "channel"], [95, 2, 1, "", "counter"], [95, 2, 1, "", "deinit"], [95, 2, 1, "", "freq"], [95, 2, 1, "", "init"], [95, 2, 1, "", "period"], [95, 2, 1, "", "prescaler"], [95, 2, 1, "", "source_freq"]], "pyb.UART": [[96, 5, 1, "", "CTS"], [96, 5, 1, "", "RTS"], [96, 2, 1, "", "any"], [96, 2, 1, "", "deinit"], [96, 2, 1, "", "init"], [96, 2, 1, "", "read"], [96, 2, 1, "", "readchar"], [96, 2, 1, "", "readinto"], [96, 2, 1, "", "readline"], [96, 2, 1, "", "sendbreak"], [96, 2, 1, "", "write"], [96, 2, 1, "", "writechar"]], "pyb.USB_HID": [[97, 2, 1, "", "recv"], [97, 2, 1, "", "send"]], "pyb.USB_VCP": [[98, 5, 1, "", "CTS"], [98, 5, 1, "", "IRQ_RX"], [98, 5, 1, "", "RTS"], [98, 2, 1, "", "any"], [98, 2, 1, "", "close"], [98, 2, 1, "", "debug_mode_enabled"], [98, 2, 1, "", "init"], [98, 2, 1, "", "irq"], [98, 2, 1, "", "isconnected"], [98, 2, 1, "", "read"], [98, 2, 1, "", "readinto"], [98, 2, 1, "", "readline"], [98, 2, 1, "", "readlines"], [98, 2, 1, "", "recv"], [98, 2, 1, "", "send"], [98, 2, 1, "", "setinterrupt"], [98, 2, 1, "", "write"]], "pyb.pinaf": [[91, 2, 1, "", "__str__"], [91, 2, 1, "", "index"], [91, 2, 1, "", "name"], [91, 2, 1, "", "reg"]], "pyb.pyb": [[83, 5, 1, "", "hid_keyboard"], [83, 5, 1, "", "hid_mouse"]], "pyb.timerchannel": [[95, 2, 1, "", "callback"], [95, 2, 1, "", "capture"], [95, 2, 1, "", "compare"], [95, 2, 1, "", "pulse_width"], [95, 2, 1, "", "pulse_width_percent"]], "random": [[99, 4, 1, "", "choice"], [99, 4, 1, "", "getrandbits"], [99, 4, 1, "", "randint"], [99, 4, 1, "", "random"], [99, 4, 1, "", "randrange"], [99, 4, 1, "", "seed"], [99, 4, 1, "", "uniform"]], "re": [[100, 5, 1, "", "DEBUG"], [100, 4, 1, "", "compile"], [100, 4, 1, "", "match"], [100, 4, 1, "", "search"], [100, 4, 1, "", "sub"]], "re.match": [[100, 2, 1, "", "end"], [100, 2, 1, "", "group"], [100, 2, 1, "", "groups"], [100, 2, 1, "", "span"], [100, 2, 1, "", "start"]], "re.regex": [[100, 2, 1, "", "match"], [100, 2, 1, "", "search"], [100, 2, 1, "", "split"], [100, 2, 1, "", "sub"]], "rpc": [[75, 3, 1, "", "rpc"], [75, 3, 1, "", "rpc_can_master"], [75, 3, 1, "", "rpc_can_slave"], [75, 3, 1, "", "rpc_i2c_master"], [75, 3, 1, "", "rpc_i2c_slave"], [75, 3, 1, "", "rpc_master"], [75, 3, 1, "", "rpc_network_master"], [75, 3, 1, "", "rpc_network_slave"], [75, 3, 1, "", "rpc_slave"], [75, 3, 1, "", "rpc_spi_master"], [75, 3, 1, "", "rpc_spi_slave"], [75, 3, 1, "", "rpc_uart_master"], [75, 3, 1, "", "rpc_uart_slave"], [75, 3, 1, "", "rpc_usb_vcp_master"], [75, 3, 1, "", "rpc_usb_vcp_slave"]], "rpc.rpc": [[75, 2, 1, "", "get_bytes"], [75, 2, 1, "", "put_bytes"], [75, 2, 1, "", "stream_reader"], [75, 2, 1, "", "stream_writer"]], "rpc.rpc_master": [[75, 2, 1, "", "call"]], "rpc.rpc_slave": [[75, 2, 1, "", "loop"], [75, 2, 1, "", "register_callback"], [75, 2, 1, "", "schedule_callback"], [75, 2, 1, "", "setup_loop_callback"]], "rtsp": [[76, 3, 1, "", "rtsp_server"]], "rtsp.rtsp_server": [[76, 2, 1, "", "register_pause_cb"], [76, 2, 1, "", "register_play_cb"], [76, 2, 1, "", "register_setup_cb"], [76, 2, 1, "", "register_teardown_cb"], [76, 2, 1, "", "stream"]], "select": [[101, 4, 1, "", "poll"], [101, 4, 1, "", "select"]], "select.poll": [[101, 2, 1, "", "ipoll"], [101, 2, 1, "", "modify"], [101, 2, 1, "", "poll"], [101, 2, 1, "", "register"], [101, 2, 1, "", "unregister"]], "sensor": [[77, 5, 1, "", "B128X128"], [77, 5, 1, "", "B128X64"], [77, 5, 1, "", "B160X160"], [77, 5, 1, "", "B320X320"], [77, 5, 1, "", "B64X32"], [77, 5, 1, "", "B64X64"], [77, 5, 1, "", "BAYER"], [77, 5, 1, "", "BINARY"], [77, 5, 1, "", "CIF"], [77, 5, 1, "", "DOUBLE_BUFFER"], [77, 5, 1, "", "FHD"], [77, 5, 1, "", "FROGEYE2020"], [77, 5, 1, "", "GC2145"], [77, 5, 1, "", "GRAYSCALE"], [77, 5, 1, "", "HD"], [77, 5, 1, "", "HM01B0"], [77, 5, 1, "", "HM0360"], [77, 5, 1, "", "HQQQQVGA"], [77, 5, 1, "", "HQQQVGA"], [77, 5, 1, "", "HQQVGA"], [77, 5, 1, "", "HQVGA"], [77, 5, 1, "", "HVGA"], [77, 5, 1, "", "IOCTL_GET_FOV_WIDE"], [77, 5, 1, "", "IOCTL_GET_NIGHT_MODE"], [77, 5, 1, "", "IOCTL_GET_READOUT_WINDOW"], [77, 5, 1, "", "IOCTL_GET_TRIGGERED_MODE"], [77, 5, 1, "", "IOCTL_HIMAX_MD_CLEAR"], [77, 5, 1, "", "IOCTL_HIMAX_MD_ENABLE"], [77, 5, 1, "", "IOCTL_HIMAX_MD_THRESHOLD"], [77, 5, 1, "", "IOCTL_HIMAX_MD_WINDOW"], [77, 5, 1, "", "IOCTL_HIMAX_OSC_ENABLE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_ATTRIBUTE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_AUX_TEMPERATURE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_FPA_TEMPERATURE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_HEIGHT"], [77, 5, 1, "", "IOCTL_LEPTON_GET_MEASUREMENT_MODE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_MEASUREMENT_RANGE"], [77, 5, 1, "", "IOCTL_LEPTON_GET_RADIOMETRY"], [77, 5, 1, "", "IOCTL_LEPTON_GET_REFRESH"], [77, 5, 1, "", "IOCTL_LEPTON_GET_RESOLUTION"], [77, 5, 1, "", "IOCTL_LEPTON_GET_WIDTH"], [77, 5, 1, "", "IOCTL_LEPTON_RUN_COMMAND"], [77, 5, 1, "", "IOCTL_LEPTON_SET_ATTRIBUTE"], [77, 5, 1, "", "IOCTL_LEPTON_SET_MEASUREMENT_MODE"], [77, 5, 1, "", "IOCTL_LEPTON_SET_MEASUREMENT_RANGE"], [77, 5, 1, "", "IOCTL_PAUSE_AUTO_FOCUS"], [77, 5, 1, "", "IOCTL_RESET_AUTO_FOCUS"], [77, 5, 1, "", "IOCTL_SET_FOV_WIDE"], [77, 5, 1, "", "IOCTL_SET_NIGHT_MODE"], [77, 5, 1, "", "IOCTL_SET_READOUT_WINDOW"], [77, 5, 1, "", "IOCTL_SET_TRIGGERED_MODE"], [77, 5, 1, "", "IOCTL_TRIGGER_AUTO_FOCUS"], [77, 5, 1, "", "IOCTL_WAIT_ON_AUTO_FOCUS"], [77, 5, 1, "", "JPEG"], [77, 5, 1, "", "LCD"], [77, 5, 1, "", "LEPTON"], [77, 5, 1, "", "MT9M114"], [77, 5, 1, "", "MT9V022"], [77, 5, 1, "", "MT9V024"], [77, 5, 1, "", "MT9V032"], [77, 5, 1, "", "MT9V034"], [77, 5, 1, "", "OV2640"], [77, 5, 1, "", "OV5640"], [77, 5, 1, "", "OV7690"], [77, 5, 1, "", "OV7725"], [77, 5, 1, "", "OV9650"], [77, 5, 1, "", "PAG7920"], [77, 5, 1, "", "PAJ6100"], [77, 5, 1, "", "QCIF"], [77, 5, 1, "", "QHD"], [77, 5, 1, "", "QQCIF"], [77, 5, 1, "", "QQQQVGA"], [77, 5, 1, "", "QQQVGA"], [77, 5, 1, "", "QQSIF"], [77, 5, 1, "", "QQVGA"], [77, 5, 1, "", "QQVGA2"], [77, 5, 1, "", "QSIF"], [77, 5, 1, "", "QVGA"], [77, 5, 1, "", "QXGA"], [77, 5, 1, "", "RGB565"], [77, 5, 1, "", "SIF"], [77, 5, 1, "", "SINGLE_BUFFER"], [77, 5, 1, "", "SVGA"], [77, 5, 1, "", "SXGA"], [77, 5, 1, "", "SXGAM"], [77, 5, 1, "", "TRIPLE_BUFFER"], [77, 5, 1, "", "UXGA"], [77, 5, 1, "", "VGA"], [77, 5, 1, "", "VIDEO_FIFO"], [77, 5, 1, "", "WQXGA"], [77, 5, 1, "", "WQXGA2"], [77, 5, 1, "", "WVGA"], [77, 5, 1, "", "WVGA2"], [77, 5, 1, "", "WXGA"], [77, 5, 1, "", "XGA"], [77, 5, 1, "", "YUV422"], [77, 4, 1, "", "__read_reg"], [77, 4, 1, "", "__write_reg"], [77, 4, 1, "", "alloc_extra_fb"], [77, 4, 1, "", "dealloc_extra_fb"], [77, 4, 1, "", "disable_delays"], [77, 4, 1, "", "disable_full_flush"], [77, 4, 1, "", "flush"], [77, 4, 1, "", "get_auto_rotation"], [77, 4, 1, "", "get_blc_regs"], [77, 4, 1, "", "get_color_palette"], [77, 4, 1, "", "get_exposure_us"], [77, 4, 1, "", "get_fb"], [77, 4, 1, "", "get_frame_available"], [77, 4, 1, "", "get_framebuffers"], [77, 4, 1, "", "get_framerate"], [77, 4, 1, "", "get_framesize"], [77, 4, 1, "", "get_gain_db"], [77, 4, 1, "", "get_hmirror"], [77, 4, 1, "", "get_id"], [77, 4, 1, "", "get_pixformat"], [77, 4, 1, "", "get_rgb_gain_db"], [77, 4, 1, "", "get_transpose"], [77, 4, 1, "", "get_vflip"], [77, 4, 1, "", "get_windowing"], [77, 4, 1, "", "height"], [77, 4, 1, "", "ioctl"], [77, 4, 1, "", "reset"], [77, 4, 1, "", "set_auto_blc"], [77, 4, 1, "", "set_auto_exposure"], [77, 4, 1, "", "set_auto_gain"], [77, 4, 1, "", "set_auto_rotation"], [77, 4, 1, "", "set_auto_whitebal"], [77, 4, 1, "", "set_brightness"], [77, 4, 1, "", "set_color_palette"], [77, 4, 1, "", "set_colorbar"], [77, 4, 1, "", "set_contrast"], [77, 4, 1, "", "set_frame_callback"], [77, 4, 1, "", "set_framebuffers"], [77, 4, 1, "", "set_framerate"], [77, 4, 1, "", "set_framesize"], [77, 4, 1, "", "set_gainceiling"], [77, 4, 1, "", "set_hmirror"], [77, 4, 1, "", "set_lens_correction"], [77, 4, 1, "", "set_pixformat"], [77, 4, 1, "", "set_quality"], [77, 4, 1, "", "set_saturation"], [77, 4, 1, "", "set_transpose"], [77, 4, 1, "", "set_vflip"], [77, 4, 1, "", "set_vsync_callback"], [77, 4, 1, "", "set_windowing"], [77, 4, 1, "", "shutdown"], [77, 4, 1, "", "skip_frames"], [77, 4, 1, "", "sleep"], [77, 4, 1, "", "snapshot"], [77, 4, 1, "", "width"]], "socket": [[102, 5, 1, "", "AF_INET"], [102, 5, 1, "", "AF_INET6"], [102, 5, 1, "", "IPPROTO_SEC"], [102, 5, 1, "", "IPPROTO_TCP"], [102, 5, 1, "", "IPPROTO_UDP"], [102, 5, 1, "", "SOCK_DGRAM"], [102, 5, 1, "", "SOCK_STREAM"], [102, 4, 1, "", "getaddrinfo"], [102, 4, 1, "", "inet_ntop"], [102, 4, 1, "", "inet_pton"], [102, 3, 1, "", "socket"]], "socket.socket": [[102, 2, 1, "", "accept"], [102, 2, 1, "", "bind"], [102, 2, 1, "", "close"], [102, 2, 1, "", "connect"], [102, 0, 1, "", "error"], [102, 2, 1, "", "listen"], [102, 2, 1, "", "makefile"], [102, 2, 1, "", "read"], [102, 2, 1, "", "readinto"], [102, 2, 1, "", "readline"], [102, 2, 1, "", "recv"], [102, 2, 1, "", "recvfrom"], [102, 2, 1, "", "send"], [102, 2, 1, "", "sendall"], [102, 2, 1, "", "sendto"], [102, 2, 1, "", "setblocking"], [102, 2, 1, "", "setsockopt"], [102, 2, 1, "", "settimeout"], [102, 2, 1, "", "write"]], "ssl": [[103, 3, 1, "", "SSLContext"]], "ssl.SSLContext": [[103, 2, 1, "", "get_ciphers"], [103, 2, 1, "", "load_cert_chain"], [103, 2, 1, "", "load_verify_locations"], [103, 2, 1, "", "set_ciphers"], [103, 6, 1, "", "verify_mode"], [103, 2, 1, "", "wrap_socket"]], "ssl.ssl": [[103, 5, 1, "", "CERT_NONE"], [103, 5, 1, "", "CERT_OPTIONAL"], [103, 5, 1, "", "CERT_REQUIRED"], [103, 5, 1, "", "PROTOCOL_TLS_CLIENT"], [103, 5, 1, "", "PROTOCOL_TLS_SERVER"], [103, 5, 1, "", "SSLError"], [103, 4, 1, "", "wrap_socket"]], "stm": [[104, 5, 1, "", "GPIOA"], [104, 5, 1, "", "GPIOB"], [104, 5, 1, "", "GPIO_BSRR"], [104, 5, 1, "", "GPIO_IDR"], [104, 5, 1, "", "GPIO_ODR"], [104, 5, 1, "", "mem16"], [104, 5, 1, "", "mem32"], [104, 5, 1, "", "mem8"], [104, 4, 1, "", "rfcore_fw_version"], [104, 4, 1, "", "rfcore_status"], [104, 4, 1, "", "rfcore_sys_hci"], [104, 4, 1, "", "subghz_cs"], [104, 4, 1, "", "subghz_irq"], [104, 4, 1, "", "subghz_is_busy"]], "struct": [[105, 4, 1, "", "calcsize"], [105, 4, 1, "", "pack"], [105, 4, 1, "", "pack_into"], [105, 4, 1, "", "unpack"], [105, 4, 1, "", "unpack_from"]], "sys": [[106, 5, 1, "", "argv"], [106, 4, 1, "", "atexit"], [106, 5, 1, "", "byteorder"], [106, 4, 1, "", "exit"], [106, 5, 1, "", "implementation"], [106, 5, 1, "", "maxsize"], [106, 5, 1, "", "modules"], [106, 5, 1, "", "path"], [106, 5, 1, "", "platform"], [106, 4, 1, "", "print_exception"], [106, 5, 1, "", "ps1"], [106, 5, 1, "", "ps2"], [106, 4, 1, "", "settrace"], [106, 5, 1, "", "stderr"], [106, 5, 1, "", "stdin"], [106, 5, 1, "", "stdout"], [106, 5, 1, "", "tracebacklimit"], [106, 5, 1, "", "version"], [106, 5, 1, "", "version_info"]], "time": [[107, 3, 1, "", "clock"], [107, 4, 1, "", "gmtime"], [107, 4, 1, "", "localtime"], [107, 4, 1, "", "mktime"], [107, 4, 1, "", "sleep"], [107, 4, 1, "", "sleep_ms"], [107, 4, 1, "", "sleep_us"], [107, 4, 1, "", "ticks_add"], [107, 4, 1, "", "ticks_cpu"], [107, 4, 1, "", "ticks_diff"], [107, 4, 1, "", "ticks_ms"], [107, 4, 1, "", "ticks_us"], [107, 4, 1, "", "time"], [107, 4, 1, "", "time_ns"]], "time.clock": [[107, 2, 1, "", "avg"], [107, 2, 1, "", "fps"], [107, 2, 1, "", "reset"], [107, 2, 1, "", "tick"]], "tv": [[79, 5, 1, "", "TV_NONE"], [79, 5, 1, "", "TV_SHIELD"], [79, 4, 1, "", "channel"], [79, 4, 1, "", "deinit"], [79, 4, 1, "", "display"], [79, 4, 1, "", "height"], [79, 4, 1, "", "init"], [79, 4, 1, "", "refresh"], [79, 4, 1, "", "triple_buffer"], [79, 4, 1, "", "type"], [79, 4, 1, "", "width"]], "uctypes": [[108, 5, 1, "", "ARRAY"], [108, 5, 1, "", "BIG_ENDIAN"], [108, 5, 1, "", "FLOAT32"], [108, 5, 1, "", "FLOAT64"], [108, 5, 1, "", "INT16"], [108, 5, 1, "", "INT32"], [108, 5, 1, "", "INT64"], [108, 5, 1, "", "INT8"], [108, 5, 1, "", "LITTLE_ENDIAN"], [108, 5, 1, "", "NATIVE"], [108, 5, 1, "", "PTR"], [108, 5, 1, "", "UINT16"], [108, 5, 1, "", "UINT32"], [108, 5, 1, "", "UINT64"], [108, 5, 1, "", "UINT8"], [108, 5, 1, "", "VOID"], [108, 4, 1, "", "addressof"], [108, 4, 1, "", "bytearray_at"], [108, 4, 1, "", "bytes_at"], [108, 4, 1, "", "sizeof"], [108, 3, 1, "", "struct"]], "uping": [[109, 4, 1, "", "ping"]], "urequests": [[110, 3, 1, "", "Response"], [110, 4, 1, "", "delete"], [110, 4, 1, "", "get"], [110, 4, 1, "", "head"], [110, 4, 1, "", "patch"], [110, 4, 1, "", "post"], [110, 4, 1, "", "put"], [110, 4, 1, "", "request"]], "urequests.Response": [[110, 4, 1, "", "content"], [110, 4, 1, "", "headers"], [110, 2, 1, "", "json"]], "vfs": [[111, 3, 1, "", "AbstractBlockDev"], [111, 3, 1, "", "VfsFat"], [111, 3, 1, "", "VfsLfs1"], [111, 3, 1, "", "VfsLfs2"], [111, 3, 1, "", "VfsPosix"], [111, 4, 1, "", "mount"], [111, 4, 1, "", "umount"]], "vfs.AbstractBlockDev": [[111, 2, 1, "", "ioctl"], [111, 2, 1, "", "readblocks"], [111, 2, 1, "", "writeblocks"]], "vfs.VfsFat": [[111, 2, 1, "", "mkfs"]], "vfs.VfsLfs1": [[111, 2, 1, "", "mkfs"]], "vfs.VfsLfs2": [[111, 2, 1, "", "mkfs"]], "zlib": [[112, 4, 1, "", "compress"], [112, 4, 1, "", "decompress"]]}, "objtypes": {"0": "py:exception", "1": "py:module", "2": "py:method", "3": "py:class", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "exception", "Python exception"], "1": ["py", "module", "Python module"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"python": [0, 1, 2, 3, 4, 5, 28, 147], "3": [0, 1, 2, 3, 4, 5, 94], "10": 0, "5": 1, "6": 2, "7": 3, "8": 4, "9": 5, "builtin": [6, 9, 18], "type": [6, 7, 18, 20, 105, 134], "except": [6, 9, 18, 103, 147], "all": 6, "have": [6, 7], "readabl": 6, "valu": [6, 7, 9, 143], "errno": [6, 23], "attribut": [6, 7, 9, 70], "just": 6, "stopiter": 6, "oserror": 6, "chain": 6, "implement": [6, 7, 9, 10, 37, 48, 49, 146], "user": [6, 7], "defin": [6, 7, 108, 132], "ar": [6, 7, 10], "support": [6, 7, 9, 12, 80], "while": 6, "loop": [6, 14], "condit": [6, 131], "mai": [6, 7], "unexpect": [6, 7], "line": [6, 67], "number": [6, 10, 19, 99], "__init__": [6, 7], "method": [6, 7, 9, 17, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 107, 110, 134, 147], "doe": [6, 7, 9, 10], "exist": 6, "bytearrai": 6, "arrai": [6, 9, 13, 28, 155], "slice": 6, "assign": [6, 10], "unsupport": [6, 7, 134], "rh": 6, "byte": 6, "object": [6, 7, 9, 47, 67, 84, 90, 100, 108, 147, 155], "format": [6, 9, 102], "keyword": [6, 10], "subscript": [6, 9], "step": [6, 9], "1": [6, 9], "dict": 6, "dictionari": 6, "kei": 6, "view": 6, "behav": 6, "set": [6, 101], "float": [6, 99, 133, 147, 155], "upi": [6, 9, 10], "allow": [6, 10], "implicit": 6, "convers": [6, 7, 15, 32, 67, 84, 86, 115], "math": [6, 45, 67], "oper": [6, 10, 35, 81, 141, 143], "cpython": [6, 7, 8, 9, 10, 24, 29, 101, 102, 103, 105, 106, 107, 149], "output": [6, 29, 117], "differ": [6, 7, 8, 9, 24, 29, 101, 102, 103, 105, 106, 107], "int": 6, "bit_length": 6, "doesn": [6, 7, 10], "t": [6, 7, 10], "No": 6, "deriv": [6, 28], "avail": 6, "list": [6, 7], "delet": [6, 9], "store": [6, 142], "non": [6, 73, 134], "iter": 6, "i": [6, 7, 9, 10, 14, 38, 41, 87, 91, 120], "memoryview": 6, "can": [6, 9, 34, 75, 85], "becom": 6, "invalid": 6, "its": 6, "target": [6, 96], "resiz": 6, "str": 6, "start": 6, "end": 6, "indic": 6, "endswith": 6, "": [6, 82, 96, 102, 134], "subscr": 6, "ljust": 6, "rjust": 6, "none": 6, "first": 6, "argument": [6, 7, 9, 10, 134], "rsplit": 6, "n": [6, 10], "yet": [6, 9], "tupl": 6, "load": [6, 137], "core": [7, 14, 133], "languag": [7, 146], "f": 7, "string": [7, 143], "don": 7, "concaten": 7, "adjac": 7, "liter": [7, 10], "contain": [7, 20, 70], "brace": 7, "cannot": 7, "express": [7, 100], "requir": [7, 10], "pars": 7, "resolv": 7, "unbalanc": 7, "nest": 7, "bracket": 7, "raw": [7, 151, 154], "class": [7, 13, 14, 16, 20, 21, 22, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 65, 67, 69, 70, 71, 72, 73, 75, 76, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 110, 134], "special": [7, 138, 154], "__del__": 7, "resolut": 7, "order": 7, "mro": 7, "compliant": 7, "privat": 7, "member": 7, "name": [7, 10, 134], "mangl": 7, "when": [7, 9], "inherit": 7, "from": [7, 8, 28, 137], "multipl": [7, 130, 134], "super": 7, "onli": [7, 9], "call": 7, "one": 7, "getter": 7, "properti": 7, "subclass": 7, "return": [7, 9, 134, 143], "function": [7, 14, 15, 17, 18, 19, 24, 25, 27, 29, 30, 31, 45, 46, 48, 52, 53, 54, 63, 67, 68, 74, 77, 79, 80, 81, 82, 83, 91, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 136, 148], "error": [7, 9, 23, 114], "messag": 7, "displai": [7, 55, 58, 59, 60, 61, 62, 123], "count": 7, "do": 7, "__module__": 7, "gener": [7, 35, 81, 99, 114, 115, 147], "context": 7, "manag": [7, 152], "__exit__": 7, "which": 7, "run": [7, 123, 153, 154], "complet": [7, 154], "runtim": 7, "local": [7, 114], "variabl": [7, 10, 154], "aren": 7, "includ": 7, "result": 7, "code": [7, 23, 125, 134, 151, 155], "eval": 7, "access": [7, 31, 46, 81, 82, 88, 104, 108, 153, 155], "import": 7, "__all__": 7, "py": [7, 153], "micropython": [7, 8, 10, 11, 28, 46, 113, 134, 143, 146, 147, 148, 149, 150, 151, 154, 155], "__path__": 7, "packag": [7, 152], "ha": 7, "singl": 7, "instead": [7, 9], "namespac": 7, "split": 7, "across": 7, "filesystem": [7, 81, 111, 114, 144, 149, 153], "modul": [9, 37, 47, 49, 52, 70, 102, 103, 108, 115, 120], "posit": 9, "paramet": 9, "exampl": [9, 22, 25, 123, 135, 148, 150], "comparison": [9, 131, 133], "between": [9, 10, 133, 147], "typecod": 9, "overflow": 9, "check": 9, "look": 9, "integ": [9, 99, 133, 134], "second": 9, "next": 9, "dequ": 9, "json": [9, 30], "throw": 9, "serialis": 9, "o": [9, 14, 38, 41, 81, 87, 91, 120, 149], "environ": 9, "getenv": 9, "actual": 9, "cach": [9, 155], "random": [9, 99], "getrandbit": 9, "maximum": [9, 73], "32": 9, "bit": [9, 10, 131], "time": [9, 39, 83, 92, 107, 115], "randint": 9, "an": [9, 10, 49, 117, 147], "most": 9, "nativ": [9, 155], "word": 9, "size": [9, 22], "struct": [9, 105], "pack": [9, 105], "too": 9, "few": 9, "arg": 9, "mani": 9, "whitespac": 9, "ignor": 9, "sy": [9, 106], "overrid": 9, "stdin": 9, "stdout": 9, "stderr": 9, "possibl": 9, "syntax": 10, "unpack": [10, 105], "work": [10, 144], "being": 10, "nth": 10, "greater": 10, "where": 10, "mp_small_int": 10, "us": [10, 75, 76, 134, 147, 152, 153], "comprehens": 10, "rais": 10, "syntaxerror": 10, "space": 10, "cpy": 10, "unicod": 10, "escap": 10, "document": [11, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142], "refer": [11, 115, 135, 155], "_thread": 12, "multithread": 12, "numer": 13, "data": [13, 59, 82, 105, 108, 132, 133, 134], "asyncio": [14, 147], "asynchron": 14, "schedul": [14, 147], "addit": [14, 130], "task": 14, "event": [14, 16, 87, 101], "threadsafeflag": 14, "lock": 14, "tcp": 14, "stream": [14, 29, 101], "connect": [14, 16, 123, 150], "binascii": 15, "binari": [15, 67, 108, 151], "ascii": 15, "bluetooth": 16, "low": [16, 148], "level": [16, 148], "ble": 16, "constructor": [16, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107], "configur": [16, 48, 87], "handl": 16, "broadcast": 16, "role": 16, "advertis": 16, "observ": 16, "scanner": 16, "central": 16, "peripher": [16, 33, 40, 104, 149], "gatt": 16, "server": 16, "client": [16, 110], "l2cap": 16, "orient": 16, "channel": [16, 95], "pair": 16, "bond": 16, "uuid": 16, "btree": 17, "simpl": [17, 100, 111], "databas": 17, "constant": [17, 19, 22, 23, 31, 34, 36, 38, 39, 40, 42, 45, 50, 51, 53, 55, 63, 64, 67, 77, 79, 83, 85, 86, 87, 89, 91, 93, 95, 96, 98, 102, 103, 104, 106, 134, 151], "cmath": 19, "mathemat": [19, 45], "complex": 19, "collect": [20, 143, 155], "cryptolib": 21, "cryptograph": 21, "cipher": 21, "deflat": 22, "compress": [22, 25, 112], "decompress": [22, 25, 112], "window": [22, 127], "system": [23, 81, 106, 128], "gc": [24, 143], "control": [24, 28, 33, 34, 38, 40, 41, 42, 46, 49, 51, 54, 58, 78, 85, 91, 93, 95, 96, 111, 115, 117, 121, 129, 143, 150, 155], "garbag": [24, 143, 155], "collector": 24, "gzip": 25, "hashlib": 26, "hash": 26, "algorithm": [26, 27, 155], "heapq": 27, "heap": [27, 143], "queue": 27, "librari": [28, 75, 76, 153], "standard": [28, 35, 80], "micro": 28, "specif": [28, 37, 48, 49, 104, 106], "openmv": [28, 74, 96, 115, 119, 123, 125, 144], "cam": [28, 74, 96, 115, 119, 123, 125, 144], "third": 28, "parti": 28, "ulab": 28, "numpi": 28, "like": 28, "manipul": 28, "pid": 28, "proport": 28, "integr": 28, "bno055": 28, "imu": [28, 68], "driver": [28, 50, 53, 55, 60, 61, 62, 63, 64, 66, 79, 94, 115], "ssd1306": 28, "ol": 28, "tb6612": 28, "stepper": 28, "motor": 28, "modbu": 28, "protocol": [28, 35, 36, 40, 89, 93], "mqtt": 28, "vl53l1x": 28, "tof": 28, "distanc": 28, "sensor": [28, 63, 68, 77], "extend": [28, 111], "built": [28, 51, 88, 144], "io": [29, 116], "input": [29, 117], "conceptu": 29, "hierarchi": 29, "encod": [30, 151], "decod": 30, "machin": [31, 67, 70, 123], "relat": [31, 83, 107, 110], "hardwar": [31, 42, 88, 115, 118, 149, 155], "memori": [31, 35, 104, 128, 133, 137, 142, 143], "reset": [31, 83, 150, 154], "interrupt": [31, 83, 87, 115, 147, 154], "power": [31, 83], "miscellan": [31, 83, 139], "adc": [32, 33, 84, 115], "analog": [32, 84, 86, 115, 116], "digit": [32, 84, 86, 115], "adcblock": 33, "area": [34, 85], "network": [34, 48, 75, 85], "commun": [34, 43, 85, 96, 147], "bu": [34, 35, 36, 40, 43, 85, 96, 115], "i2c": [35, 75, 89, 115], "two": [35, 89], "wire": [35, 89, 94], "serial": [35, 40, 43, 89, 93, 96, 115, 123], "primit": [35, 105], "i2": 36, "inter": 36, "ic": 36, "sound": 36, "pwm": [37, 57, 115], "puls": [37, 115], "width": [37, 115], "limit": [37, 108, 147], "pin": [38, 87, 91, 115], "rtc": [39, 92, 115], "real": [39, 92, 115], "clock": [39, 92, 115], "spi": [40, 62, 75, 93, 115], "interfac": [40, 48, 51, 75, 97, 111, 147], "side": 40, "signal": 41, "sens": 41, "extern": [41, 87, 115], "devic": [41, 97, 111, 144, 153], "timer": [42, 44, 95, 115], "uart": [43, 75, 96, 115, 129], "duplex": [43, 96], "wdt": 44, "watchdog": 44, "intern": [46, 95], "mutex": 47, "common": 48, "adapt": 48, "lan": 49, "ethernet": 49, "winc": 50, "wifi": [50, 51, 123], "shield": [50, 79], "wlan": 51, "audio": 52, "buzzer": 53, "cpufreq": 54, "cpu": 54, "frequenc": 54, "dacbacklight": 56, "dac": [56, 86, 115], "backlight": [56, 57], "pwmbacklight": 57, "st7701": 58, "displaydata": 59, "dsidisplai": 60, "dsi": 60, "rgbdisplai": 61, "rgb": 61, "spidisplai": 62, "fir": 63, "thermal": 63, "far": 63, "infrar": 63, "ft5x06": 64, "touch": [64, 66], "screen": [64, 66], "gif": 65, "record": [65, 69], "gt911": 66, "imag": [67, 72], "vision": [67, 123], "haarcascad": 67, "featur": 67, "descriptor": [67, 108], "similar": 67, "histogram": [67, 123], "percentil": 67, "threshold": 67, "statist": 67, "blob": 67, "circl": 67, "rect": 67, "rectangl": 67, "qrcode": 67, "apriltag": 67, "datamatrix": 67, "barcod": 67, "displac": 67, "kptmatch": 67, "keypoint": 67, "imageio": 67, "basic": [67, 81], "draw": 67, "mask": 67, "isp": 67, "filter": 67, "geometr": 67, "get": 67, "detect": 67, "mjpeg": 69, "ml": [70, 71, 72, 73], "learn": 70, "sub": 70, "model": 70, "app": 71, "microspeech": 71, "speech": 71, "recognit": 71, "preprocess": 72, "normal": 72, "util": 73, "nm": 73, "soft": [73, 150, 154], "suppress": 73, "omv": 74, "inform": [74, 113, 114, 122], "rpc": 75, "how": [75, 76, 125], "virtual": [75, 98, 111, 115], "rpc_master": 75, "rpc_slave": 75, "rpc_can_mast": 75, "master": 75, "rpc_can_slav": 75, "slave": 75, "rpc_i2c_mast": 75, "rpc_i2c_slav": 75, "rpc_spi_mast": 75, "rpc_spi_slav": 75, "rpc_uart_mast": 75, "rpc_uart_slav": 75, "rpc_usb_vcp_mast": 75, "usb": [75, 97, 98, 118], "vcp": 75, "rpc_usb_vcp_slav": 75, "rpc_network_mast": 75, "rpc_network_slav": 75, "rtsp": 76, "rtsp_server": 76, "camera": 77, "tfp410": 78, "dvi": 78, "hdmi": 78, "tv": 79, "openamp": 80, "provid": 80, "asymmetr": 80, "multiprocess": 80, "amp": 80, "endpoint": 80, "remoteproc": 80, "servic": 81, "termin": [81, 123], "redirect": 81, "duplic": 81, "mount": [81, 111], "platform": 82, "underli": 82, "identifi": [82, 155], "pyb": [83, 120], "board": [83, 115, 148], "The": [84, 120, 131, 143, 147, 151, 153, 154, 155], "adcal": 84, "extint": 87, "flash": [88, 114, 118, 143], "storag": 88, "note": [88, 118], "led": [90, 114, 115, 121], "pinaf": 91, "altern": 91, "driven": 93, "servo": [94, 115], "hobbi": 94, "timerchannel": 95, "setup": [95, 118, 127], "flow": 96, "ct": 96, "transmitt": 96, "rt": 96, "usb_hid": 97, "human": 97, "hid": 97, "usb_vcp": 98, "comm": 98, "port": [98, 152], "other": 99, "re": 100, "regular": 100, "regex": 100, "match": 100, "select": 101, "wait": 101, "poll": 101, "socket": 102, "address": 102, "ssl": 103, "tl": 103, "sslcontext": 103, "stm": 104, "stm32": [104, 115, 144], "mcu": 104, "regist": [104, 131, 133, 137, 140, 142], "stm32wbxx": 104, "stm32wlxx": 104, "uctyp": 108, "structur": [108, 126], "wai": 108, "layout": 108, "content": [108, 114, 144, 155], "instanti": 108, "up": 109, "ping": 109, "anoth": 109, "comput": 109, "urequest": 110, "http": 110, "respons": 110, "vf": [111, 144], "block": [111, 144], "zlib": 112, "licens": 113, "about": 114, "openmvcam": [114, 115], "sd": 114, "card": 114, "boot": 114, "mode": [114, 154], "quick": 115, "delai": 115, "gpio": [115, 117], "softwar": [115, 127], "onewir": 115, "dht": 115, "base": 115, "As": 117, "drive": 118, "tutori": [119, 120], "more": 122, "id": 123, "overview": [123, 124, 149], "file": [123, 148, 151], "menu": 123, "text": 123, "edit": 123, "your": [123, 125], "script": [123, 125, 126, 153], "frame": 123, "buffer": [123, 147, 155], "viewer": 123, "statu": [123, 131], "bar": 123, "tool": [123, 153], "debug": 123, "open": 123, "video": 123, "option": 123, "releas": 125, "product": 125, "freez": [125, 152], "protect": 125, "mac": 127, "linux": 127, "desktop": 127, "raspberrypi": 127, "architectur": [128, 135], "arithmet": [130, 133], "instruct": [130, 131, 133, 134, 135, 136, 138, 139, 140], "convent": [130, 131, 133, 135, 136, 137, 138, 140, 141, 142], "subtract": 130, "negat": 130, "divis": 130, "applic": 131, "program": [131, 147, 154], "apsr": 131, "execut": [131, 143], "assembl": [132, 134, 135], "direct": 132, "label": [132, 136], "inlin": [132, 135], "point": [133, 155], "move": [133, 140], "arm": 133, "fpu": 133, "convert": 133, "hint": 134, "tip": [134, 147], "branch": [134, 136], "subroutin": [134, 136], "pass": 134, "overcom": [134, 147], "restrict": 134, "thumb2": 135, "categori": 135, "usag": 135, "long": 136, "logic": 138, "bitwis": 138, "shift": 138, "rotat": 138, "stack": 141, "push": 141, "pop": 141, "microcontrol": 143, "ram": [143, 155], "compil": 143, "phase": 143, "fragment": 143, "report": 143, "postscript": 143, "footnot": 143, "pyboard": [144, 153], "esp8266": 144, "esp32": 144, "custom": [144, 148], "fat": 144, "littlef": 144, "hybrid": 144, "glossari": 145, "write": [147, 148, 152], "handler": 147, "recommend": 147, "practic": 147, "issu": 147, "emerg": 147, "simplic": 147, "isr": 147, "main": 147, "callback": 147, "creation": 147, "design": [147, 155], "reentranc": 147, "critic": 147, "section": [147, 155], "repl": [147, 154], "manifest": 148, "summari": 148, "build": 148, "ad": 148, "definit": 148, "high": 148, "2": 149, "0": 149, "migrat": 149, "guid": 149, "chang": 149, "compat": [149, 151], "remot": 150, "mpremot": [150, 152], "command": [150, 153], "auto": [150, 154], "shortcut": 150, "mpy": 151, "version": 151, "header": 151, "global": 151, "qstr": 151, "tabl": 151, "element": 151, "instal": 152, "mip": 152, "unix": 152, "manual": 152, "publish": 152, "interact": 154, "interpret": 154, "aka": 154, "indent": 154, "past": 154, "_": 154, "underscor": 154, "maximis": 155, "speed": 155, "alloc": 155, "slowest": 155, "improv": 155, "const": 155, "declar": 155, "emitt": 155, "viper": 155, "directli": 155}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Python 3.10": [[0, "python-3-10"]], "Python 3.5": [[1, "python-3-5"]], "Python 3.6": [[2, "python-3-6"]], "Python 3.7": [[3, "python-3-7"]], "Python 3.8": [[4, "python-3-8"]], "Python 3.9": [[5, "python-3-9"]], "Builtin types": [[6, "builtin-types"]], "Exception": [[6, "exception"]], "All exceptions have readable value and errno attributes, not just StopIteration and OSError.": [[6, "all-exceptions-have-readable-value-and-errno-attributes-not-just-stopiteration-and-oserror"]], "Exception chaining not implemented": [[6, "exception-chaining-not-implemented"]], "User-defined attributes for builtin exceptions are not supported": [[6, "user-defined-attributes-for-builtin-exceptions-are-not-supported"]], "Exception in while loop condition may have unexpected line number": [[6, "exception-in-while-loop-condition-may-have-unexpected-line-number"]], "Exception.__init__ method does not exist.": [[6, "exception-init-method-does-not-exist"]], "bytearray": [[6, "bytearray"]], "Array slice assignment with unsupported RHS": [[6, "array-slice-assignment-with-unsupported-rhs"]], "bytes": [[6, "bytes"]], "bytes objects support .format() method": [[6, "bytes-objects-support-format-method"]], "bytes() with keywords not implemented": [[6, "bytes-with-keywords-not-implemented"]], "Bytes subscription with step != 1 not implemented": [[6, "bytes-subscription-with-step-1-not-implemented"]], "dict": [[6, "dict"]], "Dictionary keys view does not behave as a set.": [[6, "dictionary-keys-view-does-not-behave-as-a-set"]], "float": [[6, "float"]], "uPy allows implicit conversion of objects in maths operations while CPython does not.": [[6, "upy-allows-implicit-conversion-of-objects-in-maths-operations-while-cpython-does-not"]], "uPy and CPython outputs formats may differ": [[6, "upy-and-cpython-outputs-formats-may-differ"]], "int": [[6, "int"]], "bit_length method doesn\u2019t exist.": [[6, "bit-length-method-doesn-t-exist"]], "No int conversion for int-derived types available": [[6, "no-int-conversion-for-int-derived-types-available"]], "list": [[6, "list"]], "List delete with step != 1 not implemented": [[6, "list-delete-with-step-1-not-implemented"]], "List slice-store with non-iterable on RHS is not implemented": [[6, "list-slice-store-with-non-iterable-on-rhs-is-not-implemented"]], "List store with step != 1 not implemented": [[6, "list-store-with-step-1-not-implemented"]], "memoryview": [[6, "memoryview"]], "memoryview can become invalid if its target is resized": [[6, "memoryview-can-become-invalid-if-its-target-is-resized"]], "str": [[6, "str"]], "Start/end indices such as str.endswith(s, start) not implemented": [[6, "start-end-indices-such-as-str-endswith-s-start-not-implemented"]], "Attributes/subscr not implemented": [[6, "attributes-subscr-not-implemented"]], "str(\u2026) with keywords not implemented": [[6, "str-with-keywords-not-implemented"]], "str.ljust() and str.rjust() not implemented": [[6, "str-ljust-and-str-rjust-not-implemented"]], "None as first argument for rsplit such as str.rsplit(None, n) not implemented": [[6, "none-as-first-argument-for-rsplit-such-as-str-rsplit-none-n-not-implemented"]], "Subscript with step != 1 is not yet implemented": [[6, "subscript-with-step-1-is-not-yet-implemented"], [9, "subscript-with-step-1-is-not-yet-implemented"]], "tuple": [[6, "tuple"]], "Tuple load with step != 1 not implemented": [[6, "tuple-load-with-step-1-not-implemented"]], "Core language": [[7, "core-language"]], "f-strings don\u2019t support concatenation with adjacent literals if the adjacent literals contain braces or are f-strings": [[7, "f-strings-don-t-support-concatenation-with-adjacent-literals-if-the-adjacent-literals-contain-braces-or-are-f-strings"]], "f-strings cannot support expressions that require parsing to resolve unbalanced nested braces and brackets": [[7, "f-strings-cannot-support-expressions-that-require-parsing-to-resolve-unbalanced-nested-braces-and-brackets"]], "Raw f-strings are not supported": [[7, "raw-f-strings-are-not-supported"]], "f-strings don\u2019t support !a conversions": [[7, "f-strings-don-t-support-a-conversions"]], "Classes": [[7, "classes"], [13, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [25, "classes"], [29, "classes"], [31, "classes"], [55, "classes"], [83, "classes"]], "Special method __del__ not implemented for user-defined classes": [[7, "special-method-del-not-implemented-for-user-defined-classes"]], "Method Resolution Order (MRO) is not compliant with CPython": [[7, "method-resolution-order-mro-is-not-compliant-with-cpython"]], "Private Class Members name mangling is not implemented": [[7, "private-class-members-name-mangling-is-not-implemented"]], "When inheriting from multiple classes super() only calls one class": [[7, "when-inheriting-from-multiple-classes-super-only-calls-one-class"]], "Calling super() getter property in subclass will return a property object, not the value": [[7, "calling-super-getter-property-in-subclass-will-return-a-property-object-not-the-value"]], "Functions": [[7, "functions"], [15, "functions"], [17, "functions"], [19, "functions"], [24, "functions"], [25, "functions"], [27, "functions"], [29, "functions"], [30, "functions"], [45, "functions"], [46, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [63, "functions"], [67, "functions"], [68, "functions"], [74, "functions"], [77, "functions"], [79, "functions"], [80, "functions"], [82, "functions"], [100, "functions"], [101, "functions"], [102, "functions"], [103, "functions"], [105, "functions"], [106, "functions"], [107, "functions"], [110, "functions"], [112, "functions"]], "Error messages for methods may display unexpected argument counts": [[7, "error-messages-for-methods-may-display-unexpected-argument-counts"]], "Function objects do not have the __module__ attribute": [[7, "function-objects-do-not-have-the-module-attribute"]], "User-defined attributes for functions are not supported": [[7, "user-defined-attributes-for-functions-are-not-supported"]], "Generator": [[7, "generator"]], "Context manager __exit__() not called in a generator which does not run to completion": [[7, "context-manager-exit-not-called-in-a-generator-which-does-not-run-to-completion"]], "Runtime": [[7, "runtime"]], "Local variables aren\u2019t included in locals() result": [[7, "local-variables-aren-t-included-in-locals-result"]], "Code running in eval() function doesn\u2019t have access to local variables": [[7, "code-running-in-eval-function-doesn-t-have-access-to-local-variables"]], "import": [[7, "import"]], "__all__ is unsupported in __init__.py in MicroPython.": [[7, "all-is-unsupported-in-init-py-in-micropython"]], "__path__ attribute of a package has a different type (single string instead of list of strings) in MicroPython": [[7, "path-attribute-of-a-package-has-a-different-type-single-string-instead-of-list-of-strings-in-micropython"]], "MicroPython doesn\u2019t support namespace packages split across filesystem.": [[7, "micropython-doesn-t-support-namespace-packages-split-across-filesystem"]], "MicroPython differences from CPython": [[8, "micropython-differences-from-cpython"]], "Modules": [[9, "modules"]], "Positional-only Parameters": [[9, "positional-only-parameters"]], "Example": [[9, "example"]], "array": [[9, "array"]], "Comparison between different typecodes not supported": [[9, "comparison-between-different-typecodes-not-supported"]], "Overflow checking is not implemented": [[9, "overflow-checking-is-not-implemented"]], "Looking for integer not implemented": [[9, "looking-for-integer-not-implemented"]], "Array deletion not implemented": [[9, "array-deletion-not-implemented"]], "builtins": [[9, "builtins"]], "Second argument to next() is not implemented": [[9, "second-argument-to-next-is-not-implemented"]], "deque": [[9, "deque"]], "Deque not implemented": [[9, "deque-not-implemented"]], "json": [[9, "json"]], "JSON module does not throw exception when object is not serialisable": [[9, "json-module-does-not-throw-exception-when-object-is-not-serialisable"]], "os": [[9, "os"]], "environ attribute is not implemented": [[9, "environ-attribute-is-not-implemented"]], "getenv returns actual value instead of cached value": [[9, "getenv-returns-actual-value-instead-of-cached-value"]], "random": [[9, "random"]], "getrandbits method can only return a maximum of 32 bits at a time.": [[9, "getrandbits-method-can-only-return-a-maximum-of-32-bits-at-a-time"]], "randint method can only return an integer that is at most the native word size.": [[9, "randint-method-can-only-return-an-integer-that-is-at-most-the-native-word-size"]], "struct": [[9, "struct"]], "Struct pack with too few args, not checked by uPy": [[9, "struct-pack-with-too-few-args-not-checked-by-upy"]], "Struct pack with too many args, not checked by uPy": [[9, "struct-pack-with-too-many-args-not-checked-by-upy"]], "Struct pack with whitespace in format, whitespace ignored by CPython, error on uPy": [[9, "struct-pack-with-whitespace-in-format-whitespace-ignored-by-cpython-error-on-upy"]], "sys": [[9, "sys"]], "Overriding sys.stdin, sys.stdout and sys.stderr not possible": [[9, "overriding-sys-stdin-sys-stdout-and-sys-stderr-not-possible"]], "Syntax": [[10, "syntax"]], "Argument unpacking does not work if the argument being unpacked is the nth or greater argument where n is the number of bits in an MP_SMALL_INT.": [[10, "argument-unpacking-does-not-work-if-the-argument-being-unpacked-is-the-nth-or-greater-argument-where-n-is-the-number-of-bits-in-an-mp-small-int"]], "Operators": [[10, "operators"]], "MicroPython allows using := to assign to the variable of a comprehension, CPython raises a SyntaxError.": [[10, "micropython-allows-using-to-assign-to-the-variable-of-a-comprehension-cpython-raises-a-syntaxerror"]], "Spaces": [[10, "spaces"]], "uPy requires spaces between literal numbers and keywords, CPy doesn\u2019t": [[10, "upy-requires-spaces-between-literal-numbers-and-keywords-cpy-doesn-t"]], "Unicode": [[10, "unicode"]], "Unicode name escapes are not implemented": [[10, "unicode-name-escapes-are-not-implemented"]], "MicroPython documentation and references": [[11, "micropython-documentation-and-references"]], "_thread \u2013 multithreading support": [[12, "module-_thread"]], "array \u2013 arrays of numeric data": [[13, "module-array"]], "asyncio \u2014 asynchronous I/O scheduler": [[14, "module-asyncio"]], "Core functions": [[14, "core-functions"]], "Additional functions": [[14, "additional-functions"]], "class Task": [[14, "class-task"]], "class Event": [[14, "class-event"]], "class ThreadSafeFlag": [[14, "class-threadsafeflag"]], "class Lock": [[14, "class-lock"]], "TCP stream connections": [[14, "tcp-stream-connections"]], "Event Loop": [[14, "event-loop"]], "binascii \u2013 binary/ASCII conversions": [[15, "module-binascii"]], "bluetooth \u2014 low-level Bluetooth": [[16, "module-bluetooth"]], "class BLE": [[16, "class-ble"]], "Constructor": [[16, "constructor"], [16, "id1"], [36, "constructor"]], "Configuration": [[16, "configuration"]], "Event Handling": [[16, "event-handling"]], "Broadcaster Role (Advertiser)": [[16, "broadcaster-role-advertiser"]], "Observer Role (Scanner)": [[16, "observer-role-scanner"]], "Central Role": [[16, "central-role"]], "Peripheral Role": [[16, "peripheral-role"]], "Central & Peripheral Roles": [[16, "central-peripheral-roles"]], "GATT Server": [[16, "gatt-server"]], "GATT Client": [[16, "gatt-client"]], "L2CAP connection-oriented-channels": [[16, "l2cap-connection-oriented-channels"]], "Pairing and bonding": [[16, "pairing-and-bonding"]], "class UUID": [[16, "class-uuid"]], "btree \u2013 simple BTree database": [[17, "module-btree"]], "Methods": [[17, "methods"], [26, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [47, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [73, "methods"], [75, "methods"], [75, "id2"], [75, "id4"], [76, "methods"], [78, "methods"], [84, "methods"], [85, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [90, "methods"], [91, "methods"], [91, "id1"], [92, "methods"], [93, "methods"], [94, "methods"], [95, "methods"], [95, "id1"], [96, "methods"], [97, "methods"], [98, "methods"], [101, "methods"], [102, "methods"], [107, "methods"], [110, "methods"]], "Constants": [[17, "constants"], [19, "constants"], [22, "constants"], [23, "constants"], [31, "constants"], [34, "constants"], [36, "constants"], [38, "constants"], [39, "constants"], [40, "constants"], [42, "constants"], [45, "constants"], [50, "constants"], [51, "constants"], [53, "constants"], [55, "constants"], [63, "constants"], [64, "constants"], [67, "constants"], [77, "constants"], [79, "constants"], [83, "constants"], [85, "constants"], [86, "constants"], [87, "constants"], [89, "constants"], [91, "constants"], [93, "constants"], [95, "constants"], [96, "constants"], [98, "constants"], [102, "constants"], [103, "constants"], [106, "constants"]], "builtins \u2013 builtin functions and exceptions": [[18, "builtins-builtin-functions-and-exceptions"]], "Functions and types": [[18, "functions-and-types"]], "Exceptions": [[18, "exceptions"], [103, "exceptions"], [147, "exceptions"]], "cmath \u2013 mathematical functions for complex numbers": [[19, "module-cmath"]], "collections \u2013 collection and container types": [[20, "module-collections"]], "cryptolib \u2013 cryptographic ciphers": [[21, "module-cryptolib"]], "deflate \u2013 deflate compression & decompression": [[22, "module-deflate"]], "Examples": [[22, "examples"], [25, "examples"], [148, "examples"], [150, "examples"]], "Deflate window size": [[22, "deflate-window-size"]], "Decompression": [[22, "decompression"]], "Compression": [[22, "compression"]], "errno \u2013 system error codes": [[23, "module-errno"]], "gc \u2013 control the garbage collector": [[24, "module-gc"]], "Difference to CPython": [[24, null], [24, null], [24, null], [29, null], [29, null], [101, null], [101, null], [102, null], [102, null], [102, null], [102, null], [102, null], [102, null], [103, null], [105, null], [106, null], [106, null], [106, null], [106, null], [106, null], [107, null]], "gzip \u2013 gzip compression & decompression": [[25, "module-gzip"]], "hashlib \u2013 hashing algorithms": [[26, "module-hashlib"]], "Constructors": [[26, "constructors"], [32, "constructors"], [33, "constructors"], [34, "constructors"], [35, "constructors"], [37, "constructors"], [38, "constructors"], [39, "constructors"], [40, "constructors"], [41, "constructors"], [42, "constructors"], [43, "constructors"], [44, "constructors"], [47, "constructors"], [49, "constructors"], [50, "constructors"], [51, "constructors"], [56, "constructors"], [57, "constructors"], [58, "constructors"], [59, "constructors"], [60, "constructors"], [61, "constructors"], [62, "constructors"], [64, "constructors"], [65, "constructors"], [66, "constructors"], [69, "constructors"], [70, "constructors"], [71, "constructors"], [72, "constructors"], [73, "constructors"], [75, "constructors"], [75, "id1"], [75, "id3"], [75, "id5"], [75, "id6"], [75, "id7"], [75, "id8"], [75, "id9"], [76, "constructors"], [78, "constructors"], [84, "constructors"], [85, "constructors"], [86, "constructors"], [87, "constructors"], [88, "constructors"], [89, "constructors"], [90, "constructors"], [91, "constructors"], [92, "constructors"], [93, "constructors"], [94, "constructors"], [95, "constructors"], [96, "constructors"], [97, "constructors"], [98, "constructors"], [107, "constructors"]], "heapq \u2013 heap queue algorithm": [[27, "module-heapq"]], "MicroPython libraries": [[28, "micropython-libraries"]], "Python standard libraries and micro-libraries": [[28, "python-standard-libraries-and-micro-libraries"]], "MicroPython-specific libraries": [[28, "micropython-specific-libraries"]], "Libraries specific to the OpenMV Cam": [[28, "libraries-specific-to-the-openmv-cam"]], "Third-party libraries on the OpenMV Cam": [[28, "third-party-libraries-on-the-openmv-cam"]], "ulab \u2014 numpy-like array manipulation library": [[28, "module-ulab"]], "pid \u2014 Proportional/Integral/Derivative Control": [[28, "module-pid"]], "bno055 \u2014 IMU Driver": [[28, "module-bno055"]], "ssd1306 \u2014 OLED Driver": [[28, "module-ssd1306"]], "tb6612 \u2014 Stepper Motor Driver": [[28, "module-tb6612"]], "modbus \u2014 modbus protocol library": [[28, "module-modbus"]], "mqtt \u2014 mqtt protocol library": [[28, "module-mqtt"]], "vl53l1x \u2014 ToF Distance Sensor Driver": [[28, "module-vl53l1x"]], "Extending built-in libraries from Python": [[28, "extending-built-in-libraries-from-python"]], "io \u2013 input/output streams": [[29, "module-io"]], "Conceptual hierarchy": [[29, "conceptual-hierarchy"]], "json \u2013 JSON encoding and decoding": [[30, "module-json"]], "machine \u2014 functions related to the hardware": [[31, "module-machine"]], "Memory access": [[31, "memory-access"], [104, "memory-access"]], "Reset related functions": [[31, "reset-related-functions"], [83, "reset-related-functions"]], "Interrupt related functions": [[31, "interrupt-related-functions"], [83, "interrupt-related-functions"]], "Power related functions": [[31, "power-related-functions"], [83, "power-related-functions"]], "Miscellaneous functions": [[31, "miscellaneous-functions"], [83, "miscellaneous-functions"]], "class ADC \u2013 analog to digital conversion": [[32, "class-adc-analog-to-digital-conversion"], [84, "class-adc-analog-to-digital-conversion"]], "class ADCBlock \u2013 control ADC peripherals": [[33, "class-adcblock-control-adc-peripherals"]], "class CAN \u2013 controller area network communication bus": [[34, "class-can-controller-area-network-communication-bus"], [85, "class-can-controller-area-network-communication-bus"]], "class I2C \u2013 a two-wire serial protocol": [[35, "class-i2c-a-two-wire-serial-protocol"], [89, "class-i2c-a-two-wire-serial-protocol"]], "General Methods": [[35, "general-methods"]], "Primitive I2C operations": [[35, "primitive-i2c-operations"]], "Standard bus operations": [[35, "standard-bus-operations"]], "Memory operations": [[35, "memory-operations"]], "class I2S \u2013 Inter-IC Sound bus protocol": [[36, "class-i2s-inter-ic-sound-bus-protocol"]], "class PWM \u2013 pulse width modulation": [[37, "class-pwm-pulse-width-modulation"]], "Specific PWM class implementations": [[37, "specific-pwm-class-implementations"]], "Limitations of PWM": [[37, "limitations-of-pwm"]], "class Pin \u2013 control I/O pins": [[38, "class-pin-control-i-o-pins"], [91, "class-pin-control-i-o-pins"]], "class RTC \u2013 real time clock": [[39, "class-rtc-real-time-clock"], [92, "class-rtc-real-time-clock"]], "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)": [[40, "class-spi-a-serial-peripheral-interface-bus-protocol-controller-side"]], "class Signal \u2013 control and sense external I/O devices": [[41, "class-signal-control-and-sense-external-i-o-devices"]], "class Timer \u2013 control hardware timers": [[42, "class-timer-control-hardware-timers"]], "class UART \u2013 duplex serial communication bus": [[43, "class-uart-duplex-serial-communication-bus"], [96, "class-uart-duplex-serial-communication-bus"]], "class WDT \u2013 watchdog timer": [[44, "class-wdt-watchdog-timer"]], "math \u2013 mathematical functions": [[45, "module-math"]], "micropython \u2013 access and control MicroPython internals": [[46, "module-micropython"]], "mutex \u2014 mutex module": [[47, "module-mutex"]], "class Mutex \u2013 mutex object": [[47, "class-mutex-mutex-object"]], "network \u2014 network configuration": [[48, "module-network"]], "Common network adapter interface": [[48, "common-network-adapter-interface"]], "Specific network class implementations": [[48, "specific-network-class-implementations"]], "Network functions": [[48, "network-functions"]], "class LAN \u2013 control an Ethernet module": [[49, "class-lan-control-an-ethernet-module"]], "Specific LAN class implementations": [[49, "specific-lan-class-implementations"]], "class WINC \u2013 wifi shield driver": [[50, "class-winc-wifi-shield-driver"]], "class WLAN \u2013 control built-in WiFi interfaces": [[51, "class-wlan-control-built-in-wifi-interfaces"]], "audio \u2014 Audio Module": [[52, "module-audio"]], "buzzer \u2014 buzzer driver": [[53, "module-buzzer"]], "cpufreq \u2014 CPU Frequency Control": [[54, "module-cpufreq"]], "display \u2014 display driver": [[55, "module-display"]], "class DACBacklight \u2013 DAC Backlight": [[56, "class-dacbacklight-dac-backlight"]], "class PWMBacklight \u2013 PWM Backlight": [[57, "class-pwmbacklight-pwm-backlight"]], "class ST7701 \u2013 Display Controller": [[58, "class-st7701-display-controller"]], "class DisplayData \u2013 Display Data": [[59, "class-displaydata-display-data"]], "class DSIDisplay \u2013 DSI Display Driver": [[60, "class-dsidisplay-dsi-display-driver"]], "class RGBDisplay \u2013 RGB Display Driver": [[61, "class-rgbdisplay-rgb-display-driver"]], "class SPIDisplay \u2013 SPI Display Driver": [[62, "class-spidisplay-spi-display-driver"]], "fir \u2014 thermal sensor driver (fir == far infrared)": [[63, "module-fir"]], "ft5x06 \u2014 Touch Screen Driver": [[64, "module-ft5x06"]], "gif \u2014 gif recording": [[65, "module-gif"]], "class Gif \u2013 Gif recorder": [[65, "class-gif-gif-recorder"]], "gt911 \u2014 Touch Screen Driver": [[66, "module-gt911"]], "image \u2014 machine vision": [[67, "module-image"]], "class HaarCascade \u2013 Feature Descriptor": [[67, "class-haarcascade-feature-descriptor"]], "class Similarity \u2013 Similarity Object": [[67, "class-similarity-similarity-object"]], "class Histogram \u2013 Histogram Object": [[67, "class-histogram-histogram-object"]], "class Percentile \u2013 Percentile Object": [[67, "class-percentile-percentile-object"]], "class Threshold \u2013 Threshold Object": [[67, "class-threshold-threshold-object"]], "class Statistics \u2013 Statistics Object": [[67, "class-statistics-statistics-object"]], "class Blob \u2013 Blob object": [[67, "class-blob-blob-object"]], "class Line \u2013 Line object": [[67, "class-line-line-object"]], "class Circle \u2013 Circle object": [[67, "class-circle-circle-object"]], "class Rect \u2013 Rectangle Object": [[67, "class-rect-rectangle-object"]], "class QRCode \u2013 QRCode object": [[67, "class-qrcode-qrcode-object"]], "class AprilTag \u2013 AprilTag object": [[67, "class-apriltag-apriltag-object"]], "class DataMatrix \u2013 DataMatrix object": [[67, "class-datamatrix-datamatrix-object"]], "class BarCode \u2013 BarCode object": [[67, "class-barcode-barcode-object"]], "class Displacement \u2013 Displacement object": [[67, "class-displacement-displacement-object"]], "class kptmatch \u2013 Keypoint Object": [[67, "class-kptmatch-keypoint-object"]], "class ImageIO  \u2013 ImageIO Object": [[67, "class-imageio-imageio-object"]], "class Image \u2013 Image object": [[67, "class-image-image-object"]], "Basic Methods": [[67, "basic-methods"]], "Conversion Methods": [[67, "conversion-methods"]], "Drawing Methods": [[67, "drawing-methods"]], "Masking Methods": [[67, "masking-methods"]], "Binary Methods": [[67, "binary-methods"]], "ISP Methods": [[67, "isp-methods"]], "Math Methods": [[67, "math-methods"]], "Filtering Methods": [[67, "filtering-methods"]], "Geometric Methods": [[67, "geometric-methods"]], "Get Methods": [[67, "get-methods"]], "Detection Methods": [[67, "detection-methods"]], "imu \u2014 imu sensor": [[68, "module-imu"]], "mjpeg \u2014 mjpeg recording": [[69, "module-mjpeg"]], "class Mjpeg \u2013 Mjpeg recorder": [[69, "class-mjpeg-mjpeg-recorder"]], "ml \u2014 Machine Learning": [[70, "module-ml"]], "Sub Modules": [[70, "sub-modules"]], "class model \u2013 Model Container": [[70, "class-model-model-container"]], "Attributes": [[70, "attributes"]], "ml.apps \u2014 ML Apps": [[71, "module-ml.apps"]], "class MicroSpeech \u2013 Speech Recognition": [[71, "class-microspeech-speech-recognition"]], "ml.preprocessing \u2014 ML Preprocessing": [[72, "module-ml.preprocessing"]], "class Normalization \u2013 Image Normalization": [[72, "class-normalization-image-normalization"]], "ml.utils \u2014 ML Utils": [[73, "module-ml.utils"]], "class NMS - Soft-Non-Maximum Suppression": [[73, "class-nms-soft-non-maximum-suppression"]], "omv \u2014 OpenMV Cam Information": [[74, "module-omv"]], "rpc \u2014 rpc library": [[75, "module-rpc"]], "How to use the Library": [[75, "how-to-use-the-library"], [76, "how-to-use-the-library"]], "class rpc - rpc virtual class": [[75, "class-rpc-rpc-virtual-class"]], "class rpc_master - rpc_master virtual class": [[75, "class-rpc-master-rpc-master-virtual-class"]], "class rpc_slave - rpc_slave virtual class": [[75, "class-rpc-slave-rpc-slave-virtual-class"]], "class rpc_can_master - CAN Master Interface": [[75, "class-rpc-can-master-can-master-interface"]], "class rpc_can_slave - CAN Slave Interface": [[75, "class-rpc-can-slave-can-slave-interface"]], "class rpc_i2c_master - I2C Master Interface": [[75, "class-rpc-i2c-master-i2c-master-interface"]], "class rpc_i2c_slave - I2C Slave Interface": [[75, "class-rpc-i2c-slave-i2c-slave-interface"]], "class rpc_spi_master - SPI Master Interface": [[75, "class-rpc-spi-master-spi-master-interface"]], "class rpc_spi_slave - SPI Slave Interface": [[75, "class-rpc-spi-slave-spi-slave-interface"]], "class rpc_uart_master - UART Master Interface": [[75, "class-rpc-uart-master-uart-master-interface"]], "class rpc_uart_slave - UART Slave Interface": [[75, "class-rpc-uart-slave-uart-slave-interface"]], "class rpc_usb_vcp_master - USB VCP Master Interface": [[75, "class-rpc-usb-vcp-master-usb-vcp-master-interface"]], "class rpc_usb_vcp_slave - USB VCP Slave Interface": [[75, "class-rpc-usb-vcp-slave-usb-vcp-slave-interface"]], "class rpc_network_master - Network Master Interface": [[75, "class-rpc-network-master-network-master-interface"]], "class rpc_network_slave - Network Slave Interface": [[75, "class-rpc-network-slave-network-slave-interface"]], "rtsp \u2014 rtsp library": [[76, "module-rtsp"]], "class rtsp_server - rtsp_server class": [[76, "class-rtsp-server-rtsp-server-class"]], "sensor \u2014 camera sensor": [[77, "module-sensor"]], "tfp410 \u2014 DVI/HDMI Controller": [[78, "module-TFP410"]], "tv \u2014 tv shield driver": [[79, "module-tv"]], "openamp \u2013 provides standard Asymmetric Multiprocessing (AMP) support": [[80, "module-openamp"]], "Endpoint class": [[80, "endpoint-class"]], "RemoteProc class": [[80, "remoteproc-class"]], "os \u2013 basic \u201coperating system\u201d services": [[81, "module-os"]], "General functions": [[81, "general-functions"]], "Filesystem access": [[81, "filesystem-access"], [153, "filesystem-access"]], "Terminal redirection and duplication": [[81, "terminal-redirection-and-duplication"]], "Filesystem mounting": [[81, "filesystem-mounting"], [111, "filesystem-mounting"]], "platform \u2013 access to underlying platform\u2019s identifying data": [[82, "module-platform"]], "pyb \u2014 functions related to the board": [[83, "module-pyb"]], "Time related functions": [[83, "time-related-functions"]], "The ADCAll Object": [[84, "the-adcall-object"]], "class DAC \u2013 digital to analog conversion": [[86, "class-dac-digital-to-analog-conversion"]], "class ExtInt \u2013 configure I/O pins to interrupt on external events": [[87, "class-extint-configure-i-o-pins-to-interrupt-on-external-events"]], "Class methods": [[87, "class-methods"], [91, "class-methods"]], "class Flash \u2013 access to built-in flash storage": [[88, "class-flash-access-to-built-in-flash-storage"]], "Hardware Note": [[88, "hardware-note"]], "class LED \u2013 LED object": [[90, "class-led-led-object"]], "class PinAF \u2013 Pin Alternate Functions": [[91, "class-pinaf-pin-alternate-functions"]], "class SPI \u2013 a controller-driven serial protocol": [[93, "class-spi-a-controller-driven-serial-protocol"]], "class Servo \u2013 3-wire hobby servo driver": [[94, "class-servo-3-wire-hobby-servo-driver"]], "class Timer \u2013 control internal timers": [[95, "class-timer-control-internal-timers"]], "class TimerChannel \u2014 setup a channel for a timer": [[95, "class-timerchannel-setup-a-channel-for-a-timer"]], "Flow Control": [[96, "flow-control"]], "CTS: target controls OpenMV Cam transmitter": [[96, "cts-target-controls-openmv-cam-transmitter"]], "RTS: OpenMV Cam controls target\u2019s transmitter": [[96, "rts-openmv-cam-controls-target-s-transmitter"]], "class USB_HID \u2013 USB Human Interface Device (HID)": [[97, "class-usb-hid-usb-human-interface-device-hid"]], "class USB_VCP \u2013 USB virtual comm port": [[98, "class-usb-vcp-usb-virtual-comm-port"]], "random \u2013 generate random numbers": [[99, "module-random"]], "Functions for integers": [[99, "functions-for-integers"]], "Functions for floats": [[99, "functions-for-floats"]], "Other Functions": [[99, "other-functions"]], "re \u2013 simple regular expressions": [[100, "module-re"]], "Regex objects": [[100, "regex-objects"]], "Match objects": [[100, "match-objects"]], "select \u2013 wait for events on a set of streams": [[101, "module-select"]], "class Poll": [[101, "class-poll"]], "socket \u2013 socket module": [[102, "module-socket"]], "Socket address format(s)": [[102, "socket-address-format-s"]], "class socket": [[102, "class-socket"]], "ssl \u2013 SSL/TLS module": [[103, "module-ssl"]], "class SSLContext": [[103, "class-sslcontext"]], "stm \u2014 functionality specific to STM32 MCUs": [[104, "module-stm"]], "Peripheral register constants": [[104, "peripheral-register-constants"]], "Functions specific to STM32WBxx MCUs": [[104, "functions-specific-to-stm32wbxx-mcus"]], "Functions specific to STM32WLxx MCUs": [[104, "functions-specific-to-stm32wlxx-mcus"]], "struct \u2013 pack and unpack primitive data types": [[105, "module-struct"]], "sys \u2013 system specific functions": [[106, "module-sys"]], "time \u2013 time related functions": [[107, "module-time"]], "uctypes \u2013 access binary data in a structured way": [[108, "module-uctypes"]], "Defining structure layout": [[108, "defining-structure-layout"]], "Module contents": [[108, "module-contents"]], "Structure descriptors and instantiating structure objects": [[108, "structure-descriptors-and-instantiating-structure-objects"]], "Structure objects": [[108, "structure-objects"]], "Limitations": [[108, "limitations"]], "uping \u2014 Ping another computer": [[109, "module-uping"]], "urequests \u2014 Related functions of HTTP client": [[110, "module-urequests"]], "Response class": [[110, "response-class"]], "vfs \u2013 virtual filesystem control": [[111, "module-vfs"]], "Block devices": [[111, "block-devices"], [144, "block-devices"]], "Simple and extended interface": [[111, "simple-and-extended-interface"]], "zlib \u2013 zlib compression & decompression": [[112, "module-zlib"]], "MicroPython license information": [[113, "micropython-license-information"]], "General information about the openmvcam": [[114, "general-information-about-the-openmvcam"]], "Contents": [[114, "contents"], [144, "contents"], [155, "contents"]], "Local filesystem and SD card": [[114, "local-filesystem-and-sd-card"]], "Boot modes": [[114, "boot-modes"]], "Flashing LED Errors": [[114, "flashing-led-errors"]], "Quick reference for the openmvcam": [[115, "quick-reference-for-the-openmvcam"]], "General OpenMV Cams Board Control": [[115, "general-openmv-cams-board-control"]], "Delay and timing": [[115, "delay-and-timing"], [115, "id1"]], "Virtual Timers": [[115, "virtual-timers"]], "Pins and GPIO": [[115, "pins-and-gpio"], [115, "id2"]], "UART (serial bus)": [[115, "uart-serial-bus"], [115, "id5"]], "PWM (pulse width modulation)": [[115, "pwm-pulse-width-modulation"], [115, "id3"]], "ADC (analog to digital conversion)": [[115, "adc-analog-to-digital-conversion"], [115, "id4"]], "Software SPI bus": [[115, "software-spi-bus"]], "Hardware SPI bus": [[115, "hardware-spi-bus"]], "Software I2C bus": [[115, "software-i2c-bus"]], "Hardware I2C bus": [[115, "hardware-i2c-bus"]], "Real time clock (RTC)": [[115, "real-time-clock-rtc"]], "OneWire driver": [[115, "onewire-driver"]], "DHT driver": [[115, "dht-driver"]], "STM32 Based OpenMV Cams General Board Control": [[115, "stm32-based-openmv-cams-general-board-control"]], "LEDs": [[115, "leds"]], "Servo control": [[115, "servo-control"]], "External interrupts": [[115, "external-interrupts"]], "Timers": [[115, "timers"]], "DAC (digital to analog conversion)": [[115, "dac-digital-to-analog-conversion"]], "SPI bus": [[115, "spi-bus"]], "I2C bus": [[115, "i2c-bus"]], "Analog IO": [[116, "analog-io"]], "GPIO Control": [[117, "gpio-control"]], "As an Input": [[117, "as-an-input"]], "As an Output": [[117, "as-an-output"]], "Hardware Setup": [[118, "hardware-setup"]], "USB Flash Drive Notes": [[118, "usb-flash-drive-notes"]], "OpenMV Cam Tutorial": [[119, "openmv-cam-tutorial"]], "I/O Tutorial": [[120, "i-o-tutorial"]], "The PYB Module": [[120, "the-pyb-module"]], "LED Control": [[121, "led-control"]], "More Information": [[122, "more-information"]], "OpenMV IDE Overview": [[123, "openmv-ide-overview"]], "File Menu and Examples": [[123, "file-menu-and-examples"]], "Text Editing": [[123, "text-editing"]], "Connecting to your OpenMV Cam": [[123, "connecting-to-your-openmv-cam"]], "Running scripts": [[123, "running-scripts"]], "Frame Buffer Viewer": [[123, "frame-buffer-viewer"]], "Histogram Display": [[123, "histogram-display"]], "Serial Terminal": [[123, "serial-terminal"]], "Status Bar": [[123, "status-bar"]], "Tools": [[123, "tools"]], "WiFi Debug": [[123, "wifi-debug"]], "Open Terminal": [[123, "open-terminal"]], "Machine Vision": [[123, "machine-vision"]], "Video Tools": [[123, "video-tools"]], "Options": [[123, "options"]], "Overview": [[124, "overview"], [149, "overview"], [149, "id1"], [149, "id3"]], "Releasing your OpenMV Cam Scripts for Production": [[125, "releasing-your-openmv-cam-scripts-for-production"]], "How to freeze your scripts": [[125, "how-to-freeze-your-scripts"]], "How to protect your code": [[125, "how-to-protect-your-code"]], "Script Structure": [[126, "script-structure"]], "Software Setup": [[127, "software-setup"]], "Windows": [[127, "windows"]], "Mac": [[127, "mac"]], "Linux-Desktop": [[127, "linux-desktop"]], "Linux-RaspberryPi": [[127, "linux-raspberrypi"]], "System Architecture": [[128, "system-architecture"]], "Memory Architecture": [[128, "memory-architecture"]], "UART Control": [[129, "uart-control"]], "Arithmetic instructions": [[130, "arithmetic-instructions"]], "Document conventions": [[130, "document-conventions"], [131, "document-conventions"], [133, "document-conventions"], [135, "document-conventions"], [136, "document-conventions"], [137, "document-conventions"], [138, "document-conventions"], [140, "document-conventions"], [141, "document-conventions"], [142, "document-conventions"]], "Addition": [[130, "addition"]], "Subtraction": [[130, "subtraction"]], "Negation": [[130, "negation"]], "Multiplication and division": [[130, "multiplication-and-division"]], "Comparison instructions": [[131, "comparison-instructions"], [131, "id1"]], "The Application Program Status Register (APSR)": [[131, "the-application-program-status-register-apsr"]], "APSR Bits": [[131, "apsr-bits"]], "Conditional execution": [[131, "conditional-execution"]], "Assembler directives": [[132, "assembler-directives"]], "Labels": [[132, "labels"]], "Defining inline data": [[132, "defining-inline-data"]], "Floating point instructions": [[133, "floating-point-instructions"]], "Arithmetic": [[133, "arithmetic"]], "Move between ARM core and FPU registers": [[133, "move-between-arm-core-and-fpu-registers"]], "Move between FPU register and memory": [[133, "move-between-fpu-register-and-memory"]], "Data comparison": [[133, "data-comparison"]], "Convert between integer and float": [[133, "convert-between-integer-and-float"]], "Hints and tips": [[134, "hints-and-tips"]], "Code branches and subroutines": [[134, "code-branches-and-subroutines"]], "Argument passing and return": [[134, "argument-passing-and-return"]], "Multiple arguments": [[134, "multiple-arguments"]], "Non-integer data types": [[134, "non-integer-data-types"]], "Named constants": [[134, "named-constants"]], "Assembler code as class methods": [[134, "assembler-code-as-class-methods"]], "Use of unsupported instructions": [[134, "use-of-unsupported-instructions"]], "Overcoming MicroPython\u2019s integer restriction": [[134, "overcoming-micropython-s-integer-restriction"]], "Inline assembler for Thumb2 architectures": [[135, "inline-assembler-for-thumb2-architectures"]], "Instruction categories": [[135, "instruction-categories"]], "Usage examples": [[135, "usage-examples"]], "References": [[135, "references"]], "Branch instructions": [[136, "branch-instructions"]], "Branch to label": [[136, "branch-to-label"]], "Long branches": [[136, "long-branches"]], "Subroutines (functions)": [[136, "subroutines-functions"]], "Load register from memory": [[137, "load-register-from-memory"]], "Register Load": [[137, "register-load"]], "Logical & bitwise instructions": [[138, "logical-bitwise-instructions"]], "Logical instructions": [[138, "logical-instructions"]], "Shift and rotation instructions": [[138, "shift-and-rotation-instructions"]], "Special instructions": [[138, "special-instructions"]], "Miscellaneous instructions": [[139, "miscellaneous-instructions"]], "Register move instructions": [[140, "register-move-instructions"]], "Register moves": [[140, "register-moves"]], "Stack push and pop": [[141, "stack-push-and-pop"]], "Stack operations": [[141, "stack-operations"]], "Store register to memory": [[142, "store-register-to-memory"]], "Register Store": [[142, "register-store"]], "MicroPython on microcontrollers": [[143, "micropython-on-microcontrollers"]], "Flash memory": [[143, "flash-memory"]], "RAM": [[143, "ram"]], "Compilation phase": [[143, "compilation-phase"]], "Execution phase": [[143, "execution-phase"]], "The heap": [[143, "the-heap"]], "Fragmentation": [[143, "fragmentation"]], "Reporting": [[143, "reporting"]], "Control of garbage collection": [[143, "control-of-garbage-collection"]], "String operations": [[143, "string-operations"]], "Postscript": [[143, "postscript"]], "Footnote: gc.collect() return value": [[143, "footnote-gc-collect-return-value"]], "Working with filesystems": [[144, "working-with-filesystems"]], "VFS": [[144, "vfs"]], "Built-in block devices": [[144, "built-in-block-devices"]], "STM32 / Pyboard / OpenMV Cam": [[144, "stm32-pyboard-openmv-cam"]], "ESP8266": [[144, "esp8266"]], "ESP32": [[144, "esp32"]], "Custom block devices": [[144, "custom-block-devices"]], "Filesystems": [[144, "filesystems"]], "FAT": [[144, "fat"]], "Littlefs": [[144, "littlefs"]], "Hybrid (STM32)": [[144, "hybrid-stm32"]], "Hybrid (ESP32)": [[144, "hybrid-esp32"]], "Glossary": [[145, "glossary"]], "MicroPython language and implementation": [[146, "micropython-language-and-implementation"]], "Writing interrupt handlers": [[147, "writing-interrupt-handlers"]], "Tips and recommended practices": [[147, "tips-and-recommended-practices"]], "MicroPython issues": [[147, "micropython-issues"]], "The emergency exception buffer": [[147, "the-emergency-exception-buffer"]], "Simplicity": [[147, "simplicity"]], "Communication between an ISR and the main program": [[147, "communication-between-an-isr-and-the-main-program"]], "The use of object methods as callbacks": [[147, "the-use-of-object-methods-as-callbacks"]], "Creation of Python objects": [[147, "creation-of-python-objects"]], "Use of Python objects": [[147, "use-of-python-objects"]], "Overcoming the float limitation": [[147, "overcoming-the-float-limitation"]], "Using micropython.schedule": [[147, "using-micropython-schedule"]], "Interfacing to asyncio": [[147, "interfacing-to-asyncio"]], "General issues": [[147, "general-issues"]], "Interrupt handler design": [[147, "interrupt-handler-design"]], "Reentrancy": [[147, "reentrancy"]], "Critical sections": [[147, "critical-sections"]], "Interrupts and the REPL": [[147, "interrupts-and-the-repl"]], "MicroPython manifest files": [[148, "micropython-manifest-files"]], "Summary": [[148, "summary"]], "Writing manifest files": [[148, "writing-manifest-files"]], "Building with a custom manifest": [[148, "building-with-a-custom-manifest"]], "Adding a manifest to a board definition": [[148, "adding-a-manifest-to-a-board-definition"]], "High-level functions": [[148, "high-level-functions"]], "Low-level functions": [[148, "low-level-functions"]], "MicroPython 2.0 Migration Guide": [[149, "micropython-2-0-migration-guide"]], "Hardware and peripherals": [[149, "hardware-and-peripherals"]], "Changes": [[149, "changes"], [149, "id2"], [149, "id4"]], "OS & filesystem": [[149, "os-filesystem"]], "CPython compatibility": [[149, "cpython-compatibility"]], "MicroPython remote control: mpremote": [[150, "micropython-remote-control-mpremote"]], "Commands": [[150, "commands"]], "Auto connection and soft-reset": [[150, "auto-connection-and-soft-reset"]], "Shortcuts": [[150, "shortcuts"]], "MicroPython .mpy files": [[151, "micropython-mpy-files"]], "Versioning and compatibility of .mpy files": [[151, "versioning-and-compatibility-of-mpy-files"]], "Binary encoding of .mpy files": [[151, "binary-encoding-of-mpy-files"]], "The header": [[151, "the-header"]], "The global qstr and constant tables": [[151, "the-global-qstr-and-constant-tables"]], "Raw code elements": [[151, "raw-code-elements"]], "Package management": [[152, "package-management"]], "Installing packages with mip": [[152, "installing-packages-with-mip"]], "Using mip on the Unix port": [[152, "using-mip-on-the-unix-port"]], "Installing packages with mpremote": [[152, "installing-packages-with-mpremote"]], "Installing packages manually": [[152, "installing-packages-manually"]], "Writing & publishing packages": [[152, "writing-publishing-packages"]], "Freezing packages": [[152, "freezing-packages"]], "The pyboard.py tool": [[153, "the-pyboard-py-tool"]], "Running a command on the device": [[153, "running-a-command-on-the-device"]], "Running a script on the device": [[153, "running-a-script-on-the-device"]], "Using the pyboard library": [[153, "using-the-pyboard-library"]], "The MicroPython Interactive Interpreter Mode (aka REPL)": [[154, "the-micropython-interactive-interpreter-mode-aka-repl"]], "Auto-indent": [[154, "auto-indent"]], "Auto-completion": [[154, "auto-completion"]], "Interrupting a running program": [[154, "interrupting-a-running-program"]], "Paste mode": [[154, "paste-mode"]], "Soft reset": [[154, "soft-reset"]], "The special variable _ (underscore)": [[154, "the-special-variable-underscore"]], "Raw mode and raw-paste mode": [[154, "raw-mode-and-raw-paste-mode"]], "Maximising MicroPython speed": [[155, "maximising-micropython-speed"]], "Designing for speed": [[155, "designing-for-speed"]], "Algorithms": [[155, "algorithms"]], "RAM allocation": [[155, "ram-allocation"]], "Buffers": [[155, "buffers"]], "Floating point": [[155, "floating-point"]], "Arrays": [[155, "arrays"]], "Identifying the slowest section of code": [[155, "identifying-the-slowest-section-of-code"]], "MicroPython code improvements": [[155, "micropython-code-improvements"]], "The const() declaration": [[155, "the-const-declaration"]], "Caching object references": [[155, "caching-object-references"]], "Controlling garbage collection": [[155, "controlling-garbage-collection"]], "The Native code emitter": [[155, "the-native-code-emitter"]], "The Viper code emitter": [[155, "the-viper-code-emitter"]], "Accessing hardware directly": [[155, "accessing-hardware-directly"]]}, "indexentries": {"pep 526": [[0, "index-1"]], "pep 618": [[0, "index-0"]], "python enhancement proposals": [[0, "index-0"], [0, "index-1"]], "_thread": [[12, "module-_thread"]], "module": [[12, "module-_thread"], [13, "module-array"], [14, "module-asyncio"], [15, "module-binascii"], [16, "module-bluetooth"], [17, "module-btree"], [19, "module-cmath"], [20, "module-collections"], [21, "module-cryptolib"], [22, "module-deflate"], [23, "module-errno"], [24, "module-gc"], [25, "module-gzip"], [26, "module-hashlib"], [27, "module-heapq"], [28, "module-bno055"], [28, "module-modbus"], [28, "module-mqtt"], [28, "module-pid"], [28, "module-ssd1306"], [28, "module-tb6612"], [28, "module-ulab"], [28, "module-vl53l1x"], [29, "module-io"], [30, "module-json"], [31, "module-machine"], [45, "module-math"], [46, "module-micropython"], [47, "module-mutex"], [48, "module-network"], [52, "module-audio"], [53, "module-buzzer"], [54, "module-cpufreq"], [55, "module-display"], [63, "module-fir"], [64, "module-ft5x06"], [65, "module-gif"], [66, "module-gt911"], [67, "module-image"], [68, "module-imu"], [69, "module-mjpeg"], [70, "module-ml"], [71, "module-ml.apps"], [72, "module-ml.preprocessing"], [73, "module-ml.utils"], [74, "module-omv"], [75, "module-rpc"], [76, "module-rtsp"], [77, "module-sensor"], [78, "module-TFP410"], [79, "module-tv"], [80, "module-openamp"], [81, "module-os"], [82, "module-platform"], [83, "module-pyb"], [99, "module-random"], [100, "module-re"], [101, "module-select"], [102, "module-socket"], [103, "module-ssl"], [104, "module-stm"], [105, "module-struct"], [106, "module-sys"], [107, "module-time"], [108, "module-uctypes"], [109, "module-uping"], [110, "module-urequests"], [111, "module-vfs"], [112, "module-zlib"]], "__add__() (array.array method)": [[13, "array.array.__add__"]], "__getitem__() (array.array method)": [[13, "array.array.__getitem__"]], "__iadd__() (array.array method)": [[13, "array.array.__iadd__"]], "__len__() (array.array method)": [[13, "array.array.__len__"]], "__repr__() (array.array method)": [[13, "array.array.__repr__"]], "__setitem__() (array.array method)": [[13, "array.array.__setitem__"]], "append() (array.array method)": [[13, "array.array.append"]], "array": [[13, "module-array"]], "array (class in array)": [[13, "array.array"]], "extend() (array.array method)": [[13, "array.array.extend"]], "event (class in asyncio)": [[14, "asyncio.Event"]], "lock (class in asyncio)": [[14, "asyncio.Lock"]], "loop (class in asyncio)": [[14, "asyncio.Loop"]], "server (class in asyncio)": [[14, "asyncio.Server"]], "stream (class in asyncio)": [[14, "asyncio.Stream"]], "task (class in asyncio)": [[14, "asyncio.Task"]], "threadsafeflag (class in asyncio)": [[14, "asyncio.ThreadSafeFlag"]], "acquire() (asyncio.lock method)": [[14, "asyncio.Lock.acquire"]], "asyncio": [[14, "module-asyncio"]], "call_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.call_exception_handler"]], "cancel() (asyncio.task method)": [[14, "asyncio.Task.cancel"]], "clear() (asyncio.event method)": [[14, "asyncio.Event.clear"]], "clear() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.clear"]], "close() (asyncio.loop method)": [[14, "asyncio.Loop.close"]], "close() (asyncio.server method)": [[14, "asyncio.Server.close"]], "close() (asyncio.stream method)": [[14, "asyncio.Stream.close"]], "create_task() (asyncio.loop method)": [[14, "asyncio.Loop.create_task"]], "create_task() (in module asyncio)": [[14, "asyncio.create_task"]], "current_task() (in module asyncio)": [[14, "asyncio.current_task"]], "default_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.default_exception_handler"]], "drain() (asyncio.stream method)": [[14, "asyncio.Stream.drain"]], "gather() (in module asyncio)": [[14, "asyncio.gather"]], "get_event_loop() (in module asyncio)": [[14, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.get_exception_handler"]], "get_extra_info() (asyncio.stream method)": [[14, "asyncio.Stream.get_extra_info"]], "is_set() (asyncio.event method)": [[14, "asyncio.Event.is_set"]], "locked() (asyncio.lock method)": [[14, "asyncio.Lock.locked"]], "new_event_loop() (in module asyncio)": [[14, "asyncio.new_event_loop"]], "open_connection() (in module asyncio)": [[14, "asyncio.open_connection"]], "read() (asyncio.stream method)": [[14, "asyncio.Stream.read"]], "readexactly() (asyncio.stream method)": [[14, "asyncio.Stream.readexactly"]], "readinto() (asyncio.stream method)": [[14, "asyncio.Stream.readinto"]], "readline() (asyncio.stream method)": [[14, "asyncio.Stream.readline"]], "release() (asyncio.lock method)": [[14, "asyncio.Lock.release"]], "run() (in module asyncio)": [[14, "asyncio.run"]], "run_forever() (asyncio.loop method)": [[14, "asyncio.Loop.run_forever"]], "run_until_complete() (asyncio.loop method)": [[14, "asyncio.Loop.run_until_complete"]], "set() (asyncio.event method)": [[14, "asyncio.Event.set"]], "set() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.set"]], "set_exception_handler() (asyncio.loop method)": [[14, "asyncio.Loop.set_exception_handler"]], "sleep() (in module asyncio)": [[14, "asyncio.sleep"]], "sleep_ms() (in module asyncio)": [[14, "asyncio.sleep_ms"]], "start_server() (in module asyncio)": [[14, "asyncio.start_server"]], "stop() (asyncio.loop method)": [[14, "asyncio.Loop.stop"]], "wait() (asyncio.event method)": [[14, "asyncio.Event.wait"]], "wait() (asyncio.threadsafeflag method)": [[14, "asyncio.ThreadSafeFlag.wait"]], "wait_closed() (asyncio.server method)": [[14, "asyncio.Server.wait_closed"]], "wait_closed() (asyncio.stream method)": [[14, "asyncio.Stream.wait_closed"]], "wait_for() (in module asyncio)": [[14, "asyncio.wait_for"]], "wait_for_ms() (in module asyncio)": [[14, "asyncio.wait_for_ms"]], "write() (asyncio.stream method)": [[14, "asyncio.Stream.write"]], "a2b_base64() (in module binascii)": [[15, "binascii.a2b_base64"]], "b2a_base64() (in module binascii)": [[15, "binascii.b2a_base64"]], "binascii": [[15, "module-binascii"]], "hexlify() (in module binascii)": [[15, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[15, "binascii.unhexlify"]], "ble (class in bluetooth)": [[16, "bluetooth.BLE"]], "uuid (class in bluetooth)": [[16, "bluetooth.UUID"]], "active() (bluetooth.ble method)": [[16, "bluetooth.BLE.active"]], "bluetooth": [[16, "module-bluetooth"]], "config() (bluetooth.ble method)": [[16, "bluetooth.BLE.config"]], "gap_advertise() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_advertise"]], "gap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_connect"]], "gap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_disconnect"]], "gap_pair() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_pair"]], "gap_passkey() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_passkey"]], "gap_scan() (bluetooth.ble method)": [[16, "bluetooth.BLE.gap_scan"]], "gattc_discover_characteristics() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_characteristics"]], "gattc_discover_descriptors() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_descriptors"]], "gattc_discover_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_discover_services"]], "gattc_exchange_mtu() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_exchange_mtu"]], "gattc_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_read"]], "gattc_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gattc_write"]], "gatts_indicate() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_indicate"]], "gatts_notify() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_notify"]], "gatts_read() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_read"]], "gatts_register_services() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_register_services"]], "gatts_set_buffer() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_set_buffer"]], "gatts_write() (bluetooth.ble method)": [[16, "bluetooth.BLE.gatts_write"]], "irq() (bluetooth.ble method)": [[16, "bluetooth.BLE.irq"]], "l2cap_connect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_connect"]], "l2cap_disconnect() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_disconnect"]], "l2cap_listen() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_listen"]], "l2cap_recvinto() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_recvinto"]], "l2cap_send() (bluetooth.ble method)": [[16, "bluetooth.BLE.l2cap_send"]], "desc (in module btree)": [[17, "btree.DESC"]], "incl (in module btree)": [[17, "btree.INCL"]], "__contains__() (btree.btree method)": [[17, "btree.btree.__contains__"]], "__delitem__() (btree.btree method)": [[17, "btree.btree.__delitem__"]], "__getitem__() (btree.btree method)": [[17, "btree.btree.__getitem__"]], "__iter__() (btree.btree method)": [[17, "btree.btree.__iter__"]], "__setitem__() (btree.btree method)": [[17, "btree.btree.__setitem__"]], "btree": [[17, "module-btree"]], "close() (btree.btree method)": [[17, "btree.btree.close"]], "flush() (btree.btree method)": [[17, "btree.btree.flush"]], "get() (btree.btree method)": [[17, "btree.btree.get"]], "items() (btree.btree method)": [[17, "btree.btree.items"]], "keys() (btree.btree method)": [[17, "btree.btree.keys"]], "open() (in module btree)": [[17, "btree.open"]], "values() (btree.btree method)": [[17, "btree.btree.values"]], "assertionerror": [[18, "AssertionError"]], "attributeerror": [[18, "AttributeError"]], "exception": [[18, "Exception"]], "importerror": [[18, "ImportError"]], "indexerror": [[18, "IndexError"]], "keyerror": [[18, "KeyError"]], "keyboardinterrupt": [[18, "KeyboardInterrupt"]], "memoryerror": [[18, "MemoryError"]], "nameerror": [[18, "NameError"]], "notimplementederror": [[18, "NotImplementedError"]], "oserror": [[18, "OSError"]], "runtimeerror": [[18, "RuntimeError"]], "stopiteration": [[18, "StopIteration"]], "syntaxerror": [[18, "SyntaxError"]], "systemexit": [[18, "SystemExit"]], "typeerror": [[18, "TypeError"]], "valueerror": [[18, "ValueError"]], "zerodivisionerror": [[18, "ZeroDivisionError"]], "abs()": [[18, "abs"]], "all()": [[18, "all"]], "any()": [[18, "any"]], "bin()": [[18, "bin"]], "bool (built-in class)": [[18, "bool"]], "built-in function": [[18, "abs"], [18, "all"], [18, "any"], [18, "bin"], [18, "callable"], [18, "chr"], [18, "classmethod"], [18, "compile"], [18, "delattr"], [18, "dir"], [18, "divmod"], [18, "enumerate"], [18, "eval"], [18, "exec"], [18, "filter"], [18, "getattr"], [18, "globals"], [18, "hasattr"], [18, "hash"], [18, "hex"], [18, "id"], [18, "input"], [18, "isinstance"], [18, "issubclass"], [18, "iter"], [18, "len"], [18, "locals"], [18, "map"], [18, "max"], [18, "min"], [18, "next"], [18, "oct"], [18, "open"], [18, "ord"], [18, "pow"], [18, "print"], [18, "property"], [18, "range"], [18, "repr"], [18, "reversed"], [18, "round"], [18, "setattr"], [18, "sorted"], [18, "staticmethod"], [18, "sum"], [18, "super"], [18, "type"], [18, "zip"], [148, "add_library"], [148, "freeze"], [148, "freeze_as_mpy"], [148, "freeze_as_str"], [148, "freeze_mpy"], [148, "include"], [148, "metadata"], [148, "module"], [148, "package"], [148, "require"]], "bytearray (built-in class)": [[18, "bytearray"]], "bytes (built-in class)": [[18, "bytes"]], "callable()": [[18, "callable"]], "chr()": [[18, "chr"]], "classmethod()": [[18, "classmethod"]], "compile()": [[18, "compile"]], "complex (built-in class)": [[18, "complex"]], "delattr()": [[18, "delattr"]], "dict (built-in class)": [[18, "dict"]], "dir()": [[18, "dir"]], "divmod()": [[18, "divmod"]], "enumerate()": [[18, "enumerate"]], "eval()": [[18, "eval"]], "exec()": [[18, "exec"]], "filter()": [[18, "filter"]], "float (built-in class)": [[18, "float"]], "from_bytes() (int class method)": [[18, "int.from_bytes"]], "frozenset (built-in class)": [[18, "frozenset"]], "getattr()": [[18, "getattr"]], "globals()": [[18, "globals"]], "hasattr()": [[18, "hasattr"]], "hash()": [[18, "hash"]], "hex()": [[18, "hex"]], "id()": [[18, "id"]], "input()": [[18, "input"]], "int (built-in class)": [[18, "int"]], "isinstance()": [[18, "isinstance"]], "issubclass()": [[18, "issubclass"]], "iter()": [[18, "iter"]], "len()": [[18, "len"]], "list (built-in class)": [[18, "list"]], "locals()": [[18, "locals"]], "map()": [[18, "map"]], "max()": [[18, "max"]], "memoryview (built-in class)": [[18, "memoryview"]], "min()": [[18, "min"]], "next()": [[18, "next"]], "object (built-in class)": [[18, "object"]], "oct()": [[18, "oct"]], "open()": [[18, "open"]], "ord()": [[18, "ord"]], "pow()": [[18, "pow"]], "print()": [[18, "print"]], "property()": [[18, "property"]], "range()": [[18, "range"]], "repr()": [[18, "repr"]], "reversed()": [[18, "reversed"]], "round()": [[18, "round"]], "set (built-in class)": [[18, "set"]], "setattr()": [[18, "setattr"]], "slice (built-in class)": [[18, "slice"]], "sorted()": [[18, "sorted"]], "staticmethod()": [[18, "staticmethod"]], "str (built-in class)": [[18, "str"]], "sum()": [[18, "sum"]], "super()": [[18, "super"]], "to_bytes() (int method)": [[18, "int.to_bytes"]], "tuple (built-in class)": [[18, "tuple"]], "type()": [[18, "type"]], "zip()": [[18, "zip"]], "cmath": [[19, "module-cmath"]], "cos() (in module cmath)": [[19, "cmath.cos"]], "e (in module cmath)": [[19, "cmath.e"]], "exp() (in module cmath)": [[19, "cmath.exp"]], "log() (in module cmath)": [[19, "cmath.log"]], "log10() (in module cmath)": [[19, "cmath.log10"]], "phase() (in module cmath)": [[19, "cmath.phase"]], "pi (in module cmath)": [[19, "cmath.pi"]], "polar() (in module cmath)": [[19, "cmath.polar"]], "rect() (in module cmath)": [[19, "cmath.rect"]], "sin() (in module cmath)": [[19, "cmath.sin"]], "sqrt() (in module cmath)": [[19, "cmath.sqrt"]], "ordereddict (class in collections)": [[20, "collections.OrderedDict"]], "append() (collections.deque method)": [[20, "collections.deque.append"]], "appendleft() (collections.deque method)": [[20, "collections.deque.appendleft"]], "collections": [[20, "module-collections"]], "deque (class in collections)": [[20, "collections.deque"]], "extend() (collections.deque method)": [[20, "collections.deque.extend"]], "namedtuple() (in module collections)": [[20, "collections.namedtuple"]], "pop() (collections.deque method)": [[20, "collections.deque.pop"]], "popleft() (collections.deque method)": [[20, "collections.deque.popleft"]], "__init__() (cryptolib.aes class method)": [[21, "cryptolib.aes.__init__"]], "aes (class in cryptolib)": [[21, "cryptolib.aes"]], "cryptolib": [[21, "module-cryptolib"]], "decrypt() (cryptolib.aes method)": [[21, "cryptolib.aes.decrypt"]], "encrypt() (cryptolib.aes method)": [[21, "cryptolib.aes.encrypt"]], "deflateio (class in deflate)": [[22, "deflate.DeflateIO"]], "deflate": [[22, "module-deflate"]], "deflate.auto (in module deflate)": [[22, "deflate.deflate.AUTO"]], "deflate.gzip (in module deflate)": [[22, "deflate.deflate.GZIP"]], "deflate.raw (in module deflate)": [[22, "deflate.deflate.RAW"]], "deflate.zlib (in module deflate)": [[22, "deflate.deflate.ZLIB"]], "errno": [[23, "module-errno"]], "errorcode (in module errno)": [[23, "errno.errorcode"]], "collect() (in module gc)": [[24, "gc.collect"]], "disable() (in module gc)": [[24, "gc.disable"]], "enable() (in module gc)": [[24, "gc.enable"]], "gc": [[24, "module-gc"]], "mem_alloc() (in module gc)": [[24, "gc.mem_alloc"]], "mem_free() (in module gc)": [[24, "gc.mem_free"]], "threshold() (in module gc)": [[24, "gc.threshold"]], "gzipfile (class in gzip)": [[25, "gzip.GzipFile"]], "compress() (in module gzip)": [[25, "gzip.compress"]], "decompress() (in module gzip)": [[25, "gzip.decompress"]], "gzip": [[25, "module-gzip"]], "open() (in module gzip)": [[25, "gzip.open"]], "digest() (hashlib.hash method)": [[26, "hashlib.hash.digest"]], "hashlib": [[26, "module-hashlib"]], "hashlib.md5 (class in hashlib)": [[26, "hashlib.hashlib.md5"]], "hashlib.sha1 (class in hashlib)": [[26, "hashlib.hashlib.sha1"]], "hashlib.sha256 (class in hashlib)": [[26, "hashlib.hashlib.sha256"]], "hexdigest() (hashlib.hash method)": [[26, "hashlib.hash.hexdigest"]], "update() (hashlib.hash method)": [[26, "hashlib.hash.update"]], "heapify() (in module heapq)": [[27, "heapq.heapify"]], "heappop() (in module heapq)": [[27, "heapq.heappop"]], "heappush() (in module heapq)": [[27, "heapq.heappush"]], "heapq": [[27, "module-heapq"]], "bno055": [[28, "module-bno055"]], "modbus": [[28, "module-modbus"]], "mqtt": [[28, "module-mqtt"]], "pid": [[28, "module-pid"]], "ssd1306": [[28, "module-ssd1306"]], "tb6612": [[28, "module-tb6612"]], "ulab": [[28, "module-ulab"]], "vl53l1x": [[28, "module-vl53l1x"]], "bytesio (class in io)": [[29, "io.BytesIO"]], "stringio (class in io)": [[29, "io.StringIO"]], "getvalue() (io.bytesio method)": [[29, "io.BytesIO.getvalue"]], "io": [[29, "module-io"]], "open() (in module io)": [[29, "io.open"]], "dump() (in module json)": [[30, "json.dump"]], "dumps() (in module json)": [[30, "json.dumps"]], "json": [[30, "module-json"]], "load() (in module json)": [[30, "json.load"]], "loads() (in module json)": [[30, "json.loads"]], "bitstream() (in module machine)": [[31, "machine.bitstream"]], "bootloader() (in module machine)": [[31, "machine.bootloader"]], "deepsleep() (in module machine)": [[31, "machine.deepsleep"]], "disable_irq() (in module machine)": [[31, "machine.disable_irq"]], "enable_irq() (in module machine)": [[31, "machine.enable_irq"]], "freq() (in module machine)": [[31, "machine.freq"]], "idle() (in module machine)": [[31, "machine.idle"]], "lightsleep() (in module machine)": [[31, "machine.lightsleep"]], "machine": [[31, "module-machine"]], "machine.deepsleep (in module machine)": [[31, "machine.machine.DEEPSLEEP"]], "machine.deepsleep_reset (in module machine)": [[31, "machine.machine.DEEPSLEEP_RESET"]], "machine.hard_reset (in module machine)": [[31, "machine.machine.HARD_RESET"]], "machine.idle (in module machine)": [[31, "machine.machine.IDLE"]], "machine.pin_wake (in module machine)": [[31, "machine.machine.PIN_WAKE"]], "machine.pwron_reset (in module machine)": [[31, "machine.machine.PWRON_RESET"]], "machine.rtc_wake (in module machine)": [[31, "machine.machine.RTC_WAKE"]], "machine.sleep (in module machine)": [[31, "machine.machine.SLEEP"]], "machine.soft_reset (in module machine)": [[31, "machine.machine.SOFT_RESET"]], "machine.wdt_reset (in module machine)": [[31, "machine.machine.WDT_RESET"]], "machine.wlan_wake (in module machine)": [[31, "machine.machine.WLAN_WAKE"]], "mem16 (in module machine)": [[31, "machine.mem16"]], "mem32 (in module machine)": [[31, "machine.mem32"]], "mem8 (in module machine)": [[31, "machine.mem8"]], "reset() (in module machine)": [[31, "machine.reset"]], "reset_cause() (in module machine)": [[31, "machine.reset_cause"]], "sleep() (in module machine)": [[31, "machine.sleep"]], "soft_reset() (in module machine)": [[31, "machine.soft_reset"]], "time_pulse_us() (in module machine)": [[31, "machine.time_pulse_us"]], "unique_id() (in module machine)": [[31, "machine.unique_id"]], "adc (class in machine)": [[32, "machine.ADC"]], "block() (machine.adc method)": [[32, "machine.ADC.block"]], "init() (machine.adc method)": [[32, "machine.ADC.init"]], "read_u16() (machine.adc method)": [[32, "machine.ADC.read_u16"]], "read_uv() (machine.adc method)": [[32, "machine.ADC.read_uv"]], "adcblock (class in machine)": [[33, "machine.ADCBlock"]], "connect() (machine.adcblock method)": [[33, "machine.ADCBlock.connect"]], "init() (machine.adcblock method)": [[33, "machine.ADCBlock.init"]], "can (class in machine)": [[34, "machine.CAN"]], "can.bus_off (in module machine)": [[34, "machine.CAN.BUS_OFF"]], "can.dual (in module machine)": [[34, "machine.CAN.DUAL"]], "can.error_active (in module machine)": [[34, "machine.CAN.ERROR_ACTIVE"]], "can.error_passive (in module machine)": [[34, "machine.CAN.ERROR_PASSIVE"]], "can.error_warning (in module machine)": [[34, "machine.CAN.ERROR_WARNING"]], "can.list32 (in module machine)": [[34, "machine.CAN.LIST32"]], "can.loopback (in module machine)": [[34, "machine.CAN.LOOPBACK"]], "can.normal (in module machine)": [[34, "machine.CAN.NORMAL"]], "can.silent (in module machine)": [[34, "machine.CAN.SILENT"]], "can.silent_loopback (in module machine)": [[34, "machine.CAN.SILENT_LOOPBACK"]], "can.stopped (in module machine)": [[34, "machine.CAN.STOPPED"]], "any() (machine.can method)": [[34, "machine.CAN.any"]], "clearfilter() (machine.can method)": [[34, "machine.CAN.clearfilter"]], "deinit() (machine.can method)": [[34, "machine.CAN.deinit"]], "info() (machine.can method)": [[34, "machine.CAN.info"]], "init() (machine.can method)": [[34, "machine.CAN.init"]], "recv() (machine.can method)": [[34, "machine.CAN.recv"]], "restart() (machine.can method)": [[34, "machine.CAN.restart"]], "rxcallback() (machine.can method)": [[34, "machine.CAN.rxcallback"]], "send() (machine.can method)": [[34, "machine.CAN.send"]], "setfilter() (machine.can method)": [[34, "machine.CAN.setfilter"]], "state() (machine.can method)": [[34, "machine.CAN.state"]], "i2c (class in machine)": [[35, "machine.I2C"]], "softi2c (class in machine)": [[35, "machine.SoftI2C"]], "init() (machine.i2c method)": [[35, "machine.I2C.init"]], "readfrom() (machine.i2c method)": [[35, "machine.I2C.readfrom"]], "readfrom_into() (machine.i2c method)": [[35, "machine.I2C.readfrom_into"]], "readfrom_mem() (machine.i2c method)": [[35, "machine.I2C.readfrom_mem"]], "readfrom_mem_into() (machine.i2c method)": [[35, "machine.I2C.readfrom_mem_into"]], "readinto() (machine.i2c method)": [[35, "machine.I2C.readinto"]], "scan() (machine.i2c method)": [[35, "machine.I2C.scan"]], "start() (machine.i2c method)": [[35, "machine.I2C.start"]], "stop() (machine.i2c method)": [[35, "machine.I2C.stop"]], "write() (machine.i2c method)": [[35, "machine.I2C.write"]], "writeto() (machine.i2c method)": [[35, "machine.I2C.writeto"]], "writeto_mem() (machine.i2c method)": [[35, "machine.I2C.writeto_mem"]], "writevto() (machine.i2c method)": [[35, "machine.I2C.writevto"]], "i2s (class in machine)": [[36, "machine.I2S"]], "i2s.mono (in module machine)": [[36, "machine.I2S.MONO"]], "i2s.rx (in module machine)": [[36, "machine.I2S.RX"]], "i2s.stereo (in module machine)": [[36, "machine.I2S.STEREO"]], "i2s.tx (in module machine)": [[36, "machine.I2S.TX"]], "deinit() (machine.i2s method)": [[36, "machine.I2S.deinit"]], "init() (machine.i2s method)": [[36, "machine.I2S.init"]], "irq() (machine.i2s method)": [[36, "machine.I2S.irq"]], "readinto() (machine.i2s method)": [[36, "machine.I2S.readinto"]], "shift() (machine.i2s static method)": [[36, "machine.I2S.shift"]], "write() (machine.i2s method)": [[36, "machine.I2S.write"]], "pwm (class in machine)": [[37, "machine.PWM"]], "deinit() (machine.pwm method)": [[37, "machine.PWM.deinit"]], "duty_ns() (machine.pwm method)": [[37, "machine.PWM.duty_ns"]], "duty_u16() (machine.pwm method)": [[37, "machine.PWM.duty_u16"]], "freq() (machine.pwm method)": [[37, "machine.PWM.freq"]], "init() (machine.pwm method)": [[37, "machine.PWM.init"]], "pin (class in machine)": [[38, "machine.Pin"]], "pin.alt (in module machine)": [[38, "machine.Pin.ALT"]], "pin.alt_open_drain (in module machine)": [[38, "machine.Pin.ALT_OPEN_DRAIN"]], "pin.analog (in module machine)": [[38, "machine.Pin.ANALOG"]], "pin.drive_0 (in module machine)": [[38, "machine.Pin.DRIVE_0"]], "pin.drive_1 (in module machine)": [[38, "machine.Pin.DRIVE_1"]], "pin.drive_2 (in module machine)": [[38, "machine.Pin.DRIVE_2"]], "pin.in (in module machine)": [[38, "machine.Pin.IN"]], "pin.irq_falling (in module machine)": [[38, "machine.Pin.IRQ_FALLING"]], "pin.irq_high_level (in module machine)": [[38, "machine.Pin.IRQ_HIGH_LEVEL"]], "pin.irq_low_level (in module machine)": [[38, "machine.Pin.IRQ_LOW_LEVEL"]], "pin.irq_rising (in module machine)": [[38, "machine.Pin.IRQ_RISING"]], "pin.open_drain (in module machine)": [[38, "machine.Pin.OPEN_DRAIN"]], "pin.out (in module machine)": [[38, "machine.Pin.OUT"]], "pin.pull_down (in module machine)": [[38, "machine.Pin.PULL_DOWN"]], "pin.pull_hold (in module machine)": [[38, "machine.Pin.PULL_HOLD"]], "pin.pull_up (in module machine)": [[38, "machine.Pin.PULL_UP"]], "__call__() (machine.pin method)": [[38, "machine.Pin.__call__"]], "drive() (machine.pin method)": [[38, "machine.Pin.drive"]], "high() (machine.pin method)": [[38, "machine.Pin.high"]], "init() (machine.pin method)": [[38, "machine.Pin.init"]], "irq() (machine.pin method)": [[38, "machine.Pin.irq"]], "low() (machine.pin method)": [[38, "machine.Pin.low"]], "mode() (machine.pin method)": [[38, "machine.Pin.mode"]], "off() (machine.pin method)": [[38, "machine.Pin.off"]], "on() (machine.pin method)": [[38, "machine.Pin.on"]], "pull() (machine.pin method)": [[38, "machine.Pin.pull"]], "value() (machine.pin method)": [[38, "machine.Pin.value"]], "rtc (class in machine)": [[39, "machine.RTC"]], "rtc.alarm0 (in module machine)": [[39, "machine.RTC.ALARM0"]], "alarm() (machine.rtc method)": [[39, "machine.RTC.alarm"]], "alarm_left() (machine.rtc method)": [[39, "machine.RTC.alarm_left"]], "cancel() (machine.rtc method)": [[39, "machine.RTC.cancel"]], "datetime() (machine.rtc method)": [[39, "machine.RTC.datetime"]], "deinit() (machine.rtc method)": [[39, "machine.RTC.deinit"]], "init() (machine.rtc method)": [[39, "machine.RTC.init"]], "irq() (machine.rtc method)": [[39, "machine.RTC.irq"]], "memory() (machine.rtc method)": [[39, "machine.RTC.memory"]], "now() (machine.rtc method)": [[39, "machine.RTC.now"]], "spi (class in machine)": [[40, "machine.SPI"]], "spi.controller (in module machine)": [[40, "machine.SPI.CONTROLLER"]], "spi.lsb (in module machine)": [[40, "machine.SPI.LSB"]], "spi.msb (in module machine)": [[40, "machine.SPI.MSB"]], "softspi (class in machine)": [[40, "machine.SoftSPI"]], "softspi.lsb (in module machine)": [[40, "machine.SoftSPI.LSB"]], "softspi.msb (in module machine)": [[40, "machine.SoftSPI.MSB"]], "deinit() (machine.spi method)": [[40, "machine.SPI.deinit"]], "init() (machine.spi method)": [[40, "machine.SPI.init"]], "read() (machine.spi method)": [[40, "machine.SPI.read"]], "readinto() (machine.spi method)": [[40, "machine.SPI.readinto"]], "write() (machine.spi method)": [[40, "machine.SPI.write"]], "write_readinto() (machine.spi method)": [[40, "machine.SPI.write_readinto"]], "signal (class in machine)": [[41, "machine.Signal"]], "off() (machine.signal method)": [[41, "machine.Signal.off"]], "on() (machine.signal method)": [[41, "machine.Signal.on"]], "value() (machine.signal method)": [[41, "machine.Signal.value"]], "timer (class in machine)": [[42, "machine.Timer"]], "timer.one_shot (in module machine)": [[42, "machine.Timer.ONE_SHOT"]], "timer.periodic (in module machine)": [[42, "machine.Timer.PERIODIC"]], "deinit() (machine.timer method)": [[42, "machine.Timer.deinit"]], "init() (machine.timer method)": [[42, "machine.Timer.init"]], "uart (class in machine)": [[43, "machine.UART"]], "any() (machine.uart method)": [[43, "machine.UART.any"]], "deinit() (machine.uart method)": [[43, "machine.UART.deinit"]], "flush() (machine.uart method)": [[43, "machine.UART.flush"]], "init() (machine.uart method)": [[43, "machine.UART.init"]], "read() (machine.uart method)": [[43, "machine.UART.read"]], "readinto() (machine.uart method)": [[43, "machine.UART.readinto"]], "readline() (machine.uart method)": [[43, "machine.UART.readline"]], "sendbreak() (machine.uart method)": [[43, "machine.UART.sendbreak"]], "txdone() (machine.uart method)": [[43, "machine.UART.txdone"]], "write() (machine.uart method)": [[43, "machine.UART.write"]], "wdt (class in machine)": [[44, "machine.WDT"]], "feed() (machine.wdt method)": [[44, "machine.WDT.feed"]], "acos() (in module math)": [[45, "math.acos"]], "acosh() (in module math)": [[45, "math.acosh"]], "asin() (in module math)": [[45, "math.asin"]], "asinh() (in module math)": [[45, "math.asinh"]], "atan() (in module math)": [[45, "math.atan"]], "atan2() (in module math)": [[45, "math.atan2"]], "atanh() (in module math)": [[45, "math.atanh"]], "ceil() (in module math)": [[45, "math.ceil"]], "copysign() (in module math)": [[45, "math.copysign"]], "cos() (in module math)": [[45, "math.cos"]], "cosh() (in module math)": [[45, "math.cosh"]], "degrees() (in module math)": [[45, "math.degrees"]], "e (in module math)": [[45, "math.e"]], "erf() (in module math)": [[45, "math.erf"]], "erfc() (in module math)": [[45, "math.erfc"]], "exp() (in module math)": [[45, "math.exp"]], "expm1() (in module math)": [[45, "math.expm1"]], "fabs() (in module math)": [[45, "math.fabs"]], "floor() (in module math)": [[45, "math.floor"]], "fmod() (in module math)": [[45, "math.fmod"]], "frexp() (in module math)": [[45, "math.frexp"]], "gamma() (in module math)": [[45, "math.gamma"]], "isfinite() (in module math)": [[45, "math.isfinite"]], "isinf() (in module math)": [[45, "math.isinf"]], "isnan() (in module math)": [[45, "math.isnan"]], "ldexp() (in module math)": [[45, "math.ldexp"]], "lgamma() (in module math)": [[45, "math.lgamma"]], "log() (in module math)": [[45, "math.log"]], "log10() (in module math)": [[45, "math.log10"]], "log2() (in module math)": [[45, "math.log2"]], "math": [[45, "module-math"]], "modf() (in module math)": [[45, "math.modf"]], "pi (in module math)": [[45, "math.pi"]], "pow() (in module math)": [[45, "math.pow"]], "radians() (in module math)": [[45, "math.radians"]], "sin() (in module math)": [[45, "math.sin"]], "sinh() (in module math)": [[45, "math.sinh"]], "sqrt() (in module math)": [[45, "math.sqrt"]], "tan() (in module math)": [[45, "math.tan"]], "tanh() (in module math)": [[45, "math.tanh"]], "trunc() (in module math)": [[45, "math.trunc"]], "alloc_emergency_exception_buf() (in module micropython)": [[46, "micropython.alloc_emergency_exception_buf"]], "const() (in module micropython)": [[46, "micropython.const"]], "heap_lock() (in module micropython)": [[46, "micropython.heap_lock"]], "heap_locked() (in module micropython)": [[46, "micropython.heap_locked"]], "heap_unlock() (in module micropython)": [[46, "micropython.heap_unlock"]], "kbd_intr() (in module micropython)": [[46, "micropython.kbd_intr"]], "mem_info() (in module micropython)": [[46, "micropython.mem_info"]], "micropython": [[46, "module-micropython"]], "opt_level() (in module micropython)": [[46, "micropython.opt_level"]], "qstr_info() (in module micropython)": [[46, "micropython.qstr_info"]], "schedule() (in module micropython)": [[46, "micropython.schedule"]], "stack_use() (in module micropython)": [[46, "micropython.stack_use"]], "mutex (class in mutex)": [[47, "mutex.Mutex"]], "mutex": [[47, "module-mutex"]], "release() (mutex.mutex method)": [[47, "mutex.Mutex.release"]], "test() (mutex.mutex method)": [[47, "mutex.Mutex.test"]], "abstractnic (class in network)": [[48, "network.AbstractNIC"]], "active() (network.abstractnic method)": [[48, "network.AbstractNIC.active"]], "config() (network.abstractnic method)": [[48, "network.AbstractNIC.config"]], "connect() (network.abstractnic method)": [[48, "network.AbstractNIC.connect"]], "country() (in module network)": [[48, "network.country"]], "disconnect() (network.abstractnic method)": [[48, "network.AbstractNIC.disconnect"]], "hostname() (in module network)": [[48, "network.hostname"]], "ifconfig() (network.abstractnic method)": [[48, "network.AbstractNIC.ifconfig"]], "isconnected() (network.abstractnic method)": [[48, "network.AbstractNIC.isconnected"]], "network": [[48, "module-network"]], "scan() (network.abstractnic method)": [[48, "network.AbstractNIC.scan"]], "status() (network.abstractnic method)": [[48, "network.AbstractNIC.status"]], "lan (class in network)": [[49, "network.LAN"]], "active() (network.lan method)": [[49, "network.LAN.active"]], "config() (network.lan method)": [[49, "network.LAN.config"]], "ifconfig() (network.lan method)": [[49, "network.LAN.ifconfig"]], "isconnected() (network.lan method)": [[49, "network.LAN.isconnected"]], "status() (network.lan method)": [[49, "network.LAN.status"]], "winc (class in network)": [[50, "network.WINC"]], "winc.802_1x (in module network)": [[50, "network.WINC.802_1X"]], "winc.mode_ap (in module network)": [[50, "network.WINC.MODE_AP"]], "winc.mode_bsp (in module network)": [[50, "network.WINC.MODE_BSP"]], "winc.mode_firmware (in module network)": [[50, "network.WINC.MODE_FIRMWARE"]], "winc.mode_p2p (in module network)": [[50, "network.WINC.MODE_P2P"]], "winc.mode_sta (in module network)": [[50, "network.WINC.MODE_STA"]], "winc.open (in module network)": [[50, "network.WINC.OPEN"]], "winc.wpa_psk (in module network)": [[50, "network.WINC.WPA_PSK"]], "active() (network.winc method)": [[50, "network.WINC.active"]], "connect() (network.winc method)": [[50, "network.WINC.connect"]], "connected_sta() (network.winc method)": [[50, "network.WINC.connected_sta"]], "disconnect() (network.winc method)": [[50, "network.WINC.disconnect"]], "fw_dump() (network.winc method)": [[50, "network.WINC.fw_dump"]], "fw_update() (network.winc method)": [[50, "network.WINC.fw_update"]], "fw_version() (network.winc method)": [[50, "network.WINC.fw_version"]], "ifconfig() (network.winc method)": [[50, "network.WINC.ifconfig"]], "isconnected() (network.winc method)": [[50, "network.WINC.isconnected"]], "netinfo() (network.winc method)": [[50, "network.WINC.netinfo"]], "rssi() (network.winc method)": [[50, "network.WINC.rssi"]], "scan() (network.winc method)": [[50, "network.WINC.scan"]], "start_ap() (network.winc method)": [[50, "network.WINC.start_ap"]], "wait_for_sta() (network.winc method)": [[50, "network.WINC.wait_for_sta"]], "wlan (class in network)": [[51, "network.WLAN"]], "wlan.pm_none (in module network)": [[51, "network.WLAN.PM_NONE"]], "wlan.pm_performance (in module network)": [[51, "network.WLAN.PM_PERFORMANCE"]], "wlan.pm_powersave (in module network)": [[51, "network.WLAN.PM_POWERSAVE"]], "active() (network.wlan method)": [[51, "network.WLAN.active"]], "config() (network.wlan method)": [[51, "network.WLAN.config"]], "connect() (network.wlan method)": [[51, "network.WLAN.connect"]], "disconnect() (network.wlan method)": [[51, "network.WLAN.disconnect"]], "ifconfig() (network.wlan method)": [[51, "network.WLAN.ifconfig"]], "isconnected() (network.wlan method)": [[51, "network.WLAN.isconnected"]], "scan() (network.wlan method)": [[51, "network.WLAN.scan"]], "status() (network.wlan method)": [[51, "network.WLAN.status"]], "audio": [[52, "module-audio"]], "init() (in module audio)": [[52, "audio.init"]], "start_streaming() (in module audio)": [[52, "audio.start_streaming"]], "stop_streaming() (in module audio)": [[52, "audio.stop_streaming"]], "resonant_freq (in module buzzer)": [[53, "buzzer.RESONANT_FREQ"]], "buzzer": [[53, "module-buzzer"]], "duty() (in module buzzer)": [[53, "buzzer.duty"]], "freq() (in module buzzer)": [[53, "buzzer.freq"]], "cpufreq": [[54, "module-cpufreq"]], "get_current_frequencies() (in module cpufreq)": [[54, "cpufreq.get_current_frequencies"]], "get_supported_frequencies() (in module cpufreq)": [[54, "cpufreq.get_supported_frequencies"]], "set_frequency() (in module cpufreq)": [[54, "cpufreq.set_frequency"]], "fhd (in module display)": [[55, "display.FHD"]], "fhvga (in module display)": [[55, "display.FHVGA"]], "fhvga2 (in module display)": [[55, "display.FHVGA2"]], "fwvga (in module display)": [[55, "display.FWVGA"]], "fwvga2 (in module display)": [[55, "display.FWVGA2"]], "hd (in module display)": [[55, "display.HD"]], "qvga (in module display)": [[55, "display.QVGA"]], "svga (in module display)": [[55, "display.SVGA"]], "sxga (in module display)": [[55, "display.SXGA"]], "sxga2 (in module display)": [[55, "display.SXGA2"]], "tfwvga (in module display)": [[55, "display.TFWVGA"]], "tfwvga2 (in module display)": [[55, "display.TFWVGA2"]], "thvga (in module display)": [[55, "display.THVGA"]], "tqvga (in module display)": [[55, "display.TQVGA"]], "uxga (in module display)": [[55, "display.UXGA"]], "vga (in module display)": [[55, "display.VGA"]], "wsvga (in module display)": [[55, "display.WSVGA"]], "xga (in module display)": [[55, "display.XGA"]], "display": [[55, "module-display"]], "backlight() (display.dacbacklight method)": [[56, "display.DACBacklight.backlight"]], "deinit() (display.dacbacklight method)": [[56, "display.DACBacklight.deinit"]], "display.dacbacklight (class in display)": [[56, "display.display.DACBacklight"]], "backlight() (display.pwmbacklight method)": [[57, "display.PWMBacklight.backlight"]], "deinit() (display.pwmbacklight method)": [[57, "display.PWMBacklight.deinit"]], "display.pwmbacklight (class in display)": [[57, "display.display.PWMBacklight"]], "display.st7701 (class in display)": [[58, "display.display.ST7701"]], "init() (display.st7701 method)": [[58, "display.ST7701.init"]], "read_id() (display.st7701 method)": [[58, "display.ST7701.read_id"]], "display.displaydata (class in display)": [[59, "display.display.DisplayData"]], "display_id() (display.display.displaydata method)": [[59, "display.display.DisplayData.display_id"]], "frame_callback() (display.displaydata method)": [[59, "display.DisplayData.frame_callback"]], "receive_frame() (display.displaydata method)": [[59, "display.DisplayData.receive_frame"]], "send_frame() (display.displaydata method)": [[59, "display.DisplayData.send_frame"]], "backlight() (display.dsidisplay method)": [[60, "display.DSIDisplay.backlight"]], "bus_read() (display.dsidisplay method)": [[60, "display.DSIDisplay.bus_read"]], "bus_write() (display.dsidisplay method)": [[60, "display.DSIDisplay.bus_write"]], "clear() (display.dsidisplay method)": [[60, "display.DSIDisplay.clear"]], "deinit() (display.dsidisplay method)": [[60, "display.DSIDisplay.deinit"]], "display.dsidisplay (class in display)": [[60, "display.display.DSIDisplay"]], "height() (display.dsidisplay method)": [[60, "display.DSIDisplay.height"]], "refresh() (display.dsidisplay method)": [[60, "display.DSIDisplay.refresh"]], "width() (display.dsidisplay method)": [[60, "display.DSIDisplay.width"]], "write() (display.dsidisplay method)": [[60, "display.DSIDisplay.write"]], "backlight() (display.rgbdisplay method)": [[61, "display.RGBDisplay.backlight"]], "clear() (display.rgbdisplay method)": [[61, "display.RGBDisplay.clear"]], "deinit() (display.rgbdisplay method)": [[61, "display.RGBDisplay.deinit"]], "display.rgbdisplay (class in display)": [[61, "display.display.RGBDisplay"]], "height() (display.rgbdisplay method)": [[61, "display.RGBDisplay.height"]], "refresh() (display.rgbdisplay method)": [[61, "display.RGBDisplay.refresh"]], "width() (display.rgbdisplay method)": [[61, "display.RGBDisplay.width"]], "write() (display.rgbdisplay method)": [[61, "display.RGBDisplay.write"]], "spidisplay (class in display)": [[62, "display.SPIDisplay"]], "backlight() (display.spidisplay method)": [[62, "display.SPIDisplay.backlight"]], "bgr() (display.spidisplay method)": [[62, "display.SPIDisplay.bgr"]], "bus_write() (display.spidisplay method)": [[62, "display.SPIDisplay.bus_write"]], "byte_swap() (display.spidisplay method)": [[62, "display.SPIDisplay.byte_swap"]], "clear() (display.spidisplay method)": [[62, "display.SPIDisplay.clear"]], "deinit() (display.spidisplay method)": [[62, "display.SPIDisplay.deinit"]], "height() (display.spidisplay method)": [[62, "display.SPIDisplay.height"]], "refresh() (display.spidisplay method)": [[62, "display.SPIDisplay.refresh"]], "triple_buffer() (display.spidisplay method)": [[62, "display.SPIDisplay.triple_buffer"]], "width() (display.spidisplay method)": [[62, "display.SPIDisplay.width"]], "write() (display.spidisplay method)": [[62, "display.SPIDisplay.write"]], "fir_amg8833 (in module fir)": [[63, "fir.FIR_AMG8833"]], "fir_lepton (in module fir)": [[63, "fir.FIR_LEPTON"]], "fir_mlx90621 (in module fir)": [[63, "fir.FIR_MLX90621"]], "fir_mlx90640 (in module fir)": [[63, "fir.FIR_MLX90640"]], "fir_mlx90641 (in module fir)": [[63, "fir.FIR_MLX90641"]], "fir_none (in module fir)": [[63, "fir.FIR_NONE"]], "fir_shield (in module fir)": [[63, "fir.FIR_SHIELD"]], "deinit() (in module fir)": [[63, "fir.deinit"]], "draw_ir() (in module fir)": [[63, "fir.draw_ir"]], "fir": [[63, "module-fir"]], "get_frame_available() (in module fir)": [[63, "fir.get_frame_available"]], "height() (in module fir)": [[63, "fir.height"]], "init() (in module fir)": [[63, "fir.init"]], "radiometric() (in module fir)": [[63, "fir.radiometric"]], "read_ir() (in module fir)": [[63, "fir.read_ir"]], "read_ta() (in module fir)": [[63, "fir.read_ta"]], "refresh() (in module fir)": [[63, "fir.refresh"]], "register_frame_cb() (in module fir)": [[63, "fir.register_frame_cb"]], "register_vsync_cb() (in module fir)": [[63, "fir.register_vsync_cb"]], "resolution() (in module fir)": [[63, "fir.resolution"]], "snapshot() (in module fir)": [[63, "fir.snapshot"]], "trigger_ffc() (in module fir)": [[63, "fir.trigger_ffc"]], "type() (in module fir)": [[63, "fir.type"]], "width() (in module fir)": [[63, "fir.width"]], "lcd_flag_moved (in module ft5x06)": [[64, "ft5x06.LCD_FLAG_MOVED"]], "lcd_flag_pressed (in module ft5x06)": [[64, "ft5x06.LCD_FLAG_PRESSED"]], "lcd_flag_released (in module ft5x06)": [[64, "ft5x06.LCD_FLAG_RELEASED"]], "lcd_gesture_move_down (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_MOVE_DOWN"]], "lcd_gesture_move_left (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_MOVE_LEFT"]], "lcd_gesture_move_right (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_MOVE_RIGHT"]], "lcd_gesture_move_up (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_MOVE_UP"]], "lcd_gesture_none (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_NONE"]], "lcd_gesture_zoom_in (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_ZOOM_IN"]], "lcd_gesture_zoom_out (in module ft5x06)": [[64, "ft5x06.LCD_GESTURE_ZOOM_OUT"]], "ft5x06": [[64, "module-ft5x06"]], "ft5x06.ft5x06 (class in ft5x06)": [[64, "ft5x06.ft5x06.FT5X06"]], "get_gesture() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_gesture"]], "get_point_flag() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_point_flag"]], "get_point_id() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_point_id"]], "get_point_x() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_point_x"]], "get_point_y() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_point_y"]], "get_points() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.get_points"]], "touch_callback() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.touch_callback"]], "update_points() (ft5x06.ft5x06 method)": [[64, "ft5x06.FT5X06.update_points"]], "gif (class in gif)": [[65, "gif.Gif"]], "add_frame() (gif.gif method)": [[65, "gif.Gif.add_frame"]], "close() (gif.gif method)": [[65, "gif.Gif.close"]], "format() (gif.gif method)": [[65, "gif.Gif.format"]], "gif": [[65, "module-gif"]], "height() (gif.gif method)": [[65, "gif.Gif.height"]], "loop() (gif.gif method)": [[65, "gif.Gif.loop"]], "size() (gif.gif method)": [[65, "gif.Gif.size"]], "width() (gif.gif method)": [[65, "gif.Gif.width"]], "_read_reg() (gt911.gt911 method)": [[66, "gt911.GT911._read_reg"]], "_write_reg() (gt911.gt911 method)": [[66, "gt911.GT911._write_reg"]], "gt911": [[66, "module-gt911"]], "gt911.gt911 (class in gt911)": [[66, "gt911.gt911.GT911"]], "read_id() (gt911.gt911 method)": [[66, "gt911.GT911.read_id"]], "read_points() (gt911.gt911 method)": [[66, "gt911.GT911.read_points"]], "reset() (gt911.gt911 method)": [[66, "gt911.GT911.reset"]], "apply_color_palette_first (in module image)": [[67, "image.APPLY_COLOR_PALETTE_FIRST"]], "area (in module image)": [[67, "image.AREA"]], "artoolkit (in module image)": [[67, "image.ARTOOLKIT"]], "bayer (in module image)": [[67, "image.BAYER"]], "bicubic (in module image)": [[67, "image.BICUBIC"]], "bilinear (in module image)": [[67, "image.BILINEAR"]], "binary (in module image)": [[67, "image.BINARY"]], "black_background (in module image)": [[67, "image.BLACK_BACKGROUND"]], "center (in module image)": [[67, "image.CENTER"]], "codabar (in module image)": [[67, "image.CODABAR"]], "code128 (in module image)": [[67, "image.CODE128"]], "code39 (in module image)": [[67, "image.CODE39"]], "code93 (in module image)": [[67, "image.CODE93"]], "corner_agast (in module image)": [[67, "image.CORNER_AGAST"]], "corner_fast (in module image)": [[67, "image.CORNER_FAST"]], "databar (in module image)": [[67, "image.DATABAR"]], "databar_exp (in module image)": [[67, "image.DATABAR_EXP"]], "ean13 (in module image)": [[67, "image.EAN13"]], "ean2 (in module image)": [[67, "image.EAN2"]], "ean5 (in module image)": [[67, "image.EAN5"]], "ean8 (in module image)": [[67, "image.EAN8"]], "edge_canny (in module image)": [[67, "image.EDGE_CANNY"]], "edge_simple (in module image)": [[67, "image.EDGE_SIMPLE"]], "extract_rgb_channel_first (in module image)": [[67, "image.EXTRACT_RGB_CHANNEL_FIRST"]], "grayscale (in module image)": [[67, "image.GRAYSCALE"]], "hmirror (in module image)": [[67, "image.HMIRROR"]], "haarcascade (class in image)": [[67, "image.HaarCascade"]], "i25 (in module image)": [[67, "image.I25"]], "isbn10 (in module image)": [[67, "image.ISBN10"]], "isbn13 (in module image)": [[67, "image.ISBN13"]], "image (class in image)": [[67, "image.Image"]], "imageio (class in image)": [[67, "image.ImageIO"]], "imageio.file_stream (in module image)": [[67, "image.ImageIO.FILE_STREAM"]], "imageio.memory_stream (in module image)": [[67, "image.ImageIO.MEMORY_STREAM"]], "jpeg (in module image)": [[67, "image.JPEG"]], "jpeg_subsampling_420 (in module image)": [[67, "image.JPEG_SUBSAMPLING_420"]], "jpeg_subsampling_422 (in module image)": [[67, "image.JPEG_SUBSAMPLING_422"]], "jpeg_subsampling_444 (in module image)": [[67, "image.JPEG_SUBSAMPLING_444"]], "jpeg_subsampling_auto (in module image)": [[67, "image.JPEG_SUBSAMPLING_AUTO"]], "palette_ironbow (in module image)": [[67, "image.PALETTE_IRONBOW"]], "palette_rainbow (in module image)": [[67, "image.PALETTE_RAINBOW"]], "pdf417 (in module image)": [[67, "image.PDF417"]], "png (in module image)": [[67, "image.PNG"]], "rgb565 (in module image)": [[67, "image.RGB565"]], "rotate_180 (in module image)": [[67, "image.ROTATE_180"]], "rotate_270 (in module image)": [[67, "image.ROTATE_270"]], "rotate_90 (in module image)": [[67, "image.ROTATE_90"]], "scale_aspect_expand (in module image)": [[67, "image.SCALE_ASPECT_EXPAND"]], "scale_aspect_ignore (in module image)": [[67, "image.SCALE_ASPECT_IGNORE"]], "scale_aspect_keep (in module image)": [[67, "image.SCALE_ASPECT_KEEP"]], "search_ds (in module image)": [[67, "image.SEARCH_DS"]], "search_ex (in module image)": [[67, "image.SEARCH_EX"]], "similarity (class in image)": [[67, "image.Similarity"]], "tag16h5 (in module image)": [[67, "image.TAG16H5"]], "tag25h7 (in module image)": [[67, "image.TAG25H7"]], "tag25h9 (in module image)": [[67, "image.TAG25H9"]], "tag36h10 (in module image)": [[67, "image.TAG36H10"]], "tag36h11 (in module image)": [[67, "image.TAG36H11"]], "transpose (in module image)": [[67, "image.TRANSPOSE"]], "upca (in module image)": [[67, "image.UPCA"]], "upce (in module image)": [[67, "image.UPCE"]], "vflip (in module image)": [[67, "image.VFLIP"]], "yuv422 (in module image)": [[67, "image.YUV422"]], "a_bins() (image.histogram method)": [[67, "image.histogram.a_bins"]], "a_lq() (image.statistics method)": [[67, "image.statistics.a_lq"]], "a_max() (image.statistics method)": [[67, "image.statistics.a_max"]], "a_mean() (image.statistics method)": [[67, "image.statistics.a_mean"]], "a_median() (image.statistics method)": [[67, "image.statistics.a_median"]], "a_min() (image.statistics method)": [[67, "image.statistics.a_min"]], "a_mode() (image.statistics method)": [[67, "image.statistics.a_mode"]], "a_stdev() (image.statistics method)": [[67, "image.statistics.a_stdev"]], "a_uq() (image.statistics method)": [[67, "image.statistics.a_uq"]], "a_value() (image.percentile method)": [[67, "image.percentile.a_value"]], "a_value() (image.threshold method)": [[67, "image.threshold.a_value"]], "add() (image.image method)": [[67, "image.Image.add"]], "apriltag (class in image)": [[67, "image.apriltag"]], "area() (image.blob method)": [[67, "image.blob.area"]], "assign() (image.image method)": [[67, "image.Image.assign"]], "awb() (image.image method)": [[67, "image.Image.awb"]], "b_and() (image.image method)": [[67, "image.Image.b_and"]], "b_bins() (image.histogram method)": [[67, "image.histogram.b_bins"]], "b_lq() (image.statistics method)": [[67, "image.statistics.b_lq"]], "b_max() (image.statistics method)": [[67, "image.statistics.b_max"]], "b_mean() (image.statistics method)": [[67, "image.statistics.b_mean"]], "b_median() (image.statistics method)": [[67, "image.statistics.b_median"]], "b_min() (image.statistics method)": [[67, "image.statistics.b_min"]], "b_mode() (image.statistics method)": [[67, "image.statistics.b_mode"]], "b_nand() (image.image method)": [[67, "image.Image.b_nand"]], "b_nor() (image.image method)": [[67, "image.Image.b_nor"]], "b_or() (image.image method)": [[67, "image.Image.b_or"]], "b_stdev() (image.statistics method)": [[67, "image.statistics.b_stdev"]], "b_uq() (image.statistics method)": [[67, "image.statistics.b_uq"]], "b_value() (image.percentile method)": [[67, "image.percentile.b_value"]], "b_value() (image.threshold method)": [[67, "image.threshold.b_value"]], "b_xnor() (image.image method)": [[67, "image.Image.b_xnor"]], "b_xor() (image.image method)": [[67, "image.Image.b_xor"]], "barcode (class in image)": [[67, "image.barcode"]], "bilateral() (image.image method)": [[67, "image.Image.bilateral"]], "binary() (image.image method)": [[67, "image.Image.binary"]], "binary_to_grayscale() (in module image)": [[67, "image.binary_to_grayscale"]], "binary_to_lab() (in module image)": [[67, "image.binary_to_lab"]], "binary_to_rgb() (in module image)": [[67, "image.binary_to_rgb"]], "binary_to_yuv() (in module image)": [[67, "image.binary_to_yuv"]], "bins() (image.histogram method)": [[67, "image.histogram.bins"]], "black_hat() (image.image method)": [[67, "image.Image.black_hat"]], "blend() (image.image method)": [[67, "image.Image.blend"]], "blob (class in image)": [[67, "image.blob"]], "buffer_size() (image.imageio method)": [[67, "image.ImageIO.buffer_size"]], "bytearray() (image.image method)": [[67, "image.Image.bytearray"]], "capacity() (image.datamatrix method)": [[67, "image.datamatrix.capacity"]], "ccm() (image.image method)": [[67, "image.Image.ccm"]], "circle (class in image)": [[67, "image.circle"]], "clear() (image.image method)": [[67, "image.Image.clear"]], "close() (image.image method)": [[67, "image.Image.close"]], "close() (image.imageio method)": [[67, "image.ImageIO.close"]], "code() (image.blob method)": [[67, "image.blob.code"]], "columns() (image.datamatrix method)": [[67, "image.datamatrix.columns"]], "compactness() (image.blob method)": [[67, "image.blob.compactness"]], "compress() (image.image method)": [[67, "image.Image.compress"]], "convexity() (image.blob method)": [[67, "image.blob.convexity"]], "copy() (image.image method)": [[67, "image.Image.copy"]], "corners() (image.apriltag method)": [[67, "image.apriltag.corners"]], "corners() (image.barcode method)": [[67, "image.barcode.corners"]], "corners() (image.blob method)": [[67, "image.blob.corners"]], "corners() (image.datamatrix method)": [[67, "image.datamatrix.corners"]], "corners() (image.qrcode method)": [[67, "image.qrcode.corners"]], "corners() (image.rect method)": [[67, "image.rect.corners"]], "count() (image.imageio method)": [[67, "image.ImageIO.count"]], "count() (image.blob method)": [[67, "image.blob.count"]], "count() (image.kptmatch method)": [[67, "image.kptmatch.count"]], "crop() (image.image method)": [[67, "image.Image.crop"]], "cx() (image.apriltag method)": [[67, "image.apriltag.cx"]], "cx() (image.blob method)": [[67, "image.blob.cx"]], "cx() (image.kptmatch method)": [[67, "image.kptmatch.cx"]], "cxf() (image.apriltag method)": [[67, "image.apriltag.cxf"]], "cxf() (image.blob method)": [[67, "image.blob.cxf"]], "cy() (image.apriltag method)": [[67, "image.apriltag.cy"]], "cy() (image.blob method)": [[67, "image.blob.cy"]], "cy() (image.kptmatch method)": [[67, "image.kptmatch.cy"]], "cyf() (image.apriltag method)": [[67, "image.apriltag.cyf"]], "cyf() (image.blob method)": [[67, "image.blob.cyf"]], "data_type() (image.qrcode method)": [[67, "image.qrcode.data_type"]], "datamatrix (class in image)": [[67, "image.datamatrix"]], "decision_margin() (image.apriltag method)": [[67, "image.apriltag.decision_margin"]], "density() (image.blob method)": [[67, "image.blob.density"]], "difference() (image.image method)": [[67, "image.Image.difference"]], "dilate() (image.image method)": [[67, "image.Image.dilate"]], "displacement (class in image)": [[67, "image.displacement"]], "draw_arrow() (image.image method)": [[67, "image.Image.draw_arrow"]], "draw_circle() (image.image method)": [[67, "image.Image.draw_circle"]], "draw_cross() (image.image method)": [[67, "image.Image.draw_cross"]], "draw_edges() (image.image method)": [[67, "image.Image.draw_edges"]], "draw_ellipse() (image.image method)": [[67, "image.Image.draw_ellipse"]], "draw_image() (image.image method)": [[67, "image.Image.draw_image"]], "draw_keypoints() (image.image method)": [[67, "image.Image.draw_keypoints"]], "draw_line() (image.image method)": [[67, "image.Image.draw_line"]], "draw_rectangle() (image.image method)": [[67, "image.Image.draw_rectangle"]], "draw_string() (image.image method)": [[67, "image.Image.draw_string"]], "ecc_level() (image.qrcode method)": [[67, "image.qrcode.ecc_level"]], "eci() (image.qrcode method)": [[67, "image.qrcode.eci"]], "elongation() (image.blob method)": [[67, "image.blob.elongation"]], "enclosed_ellipse() (image.blob method)": [[67, "image.blob.enclosed_ellipse"]], "enclosing_circle() (image.blob method)": [[67, "image.blob.enclosing_circle"]], "erode() (image.image method)": [[67, "image.Image.erode"]], "extent() (image.blob method)": [[67, "image.blob.extent"]], "family() (image.apriltag method)": [[67, "image.apriltag.family"]], "find_apriltags() (image.image method)": [[67, "image.Image.find_apriltags"]], "find_barcodes() (image.image method)": [[67, "image.Image.find_barcodes"]], "find_blobs() (image.image method)": [[67, "image.Image.find_blobs"]], "find_circles() (image.image method)": [[67, "image.Image.find_circles"]], "find_datamatrices() (image.image method)": [[67, "image.Image.find_datamatrices"]], "find_displacement() (image.image method)": [[67, "image.Image.find_displacement"]], "find_edges() (image.image method)": [[67, "image.Image.find_edges"]], "find_eye() (image.image method)": [[67, "image.Image.find_eye"]], "find_features() (image.image method)": [[67, "image.Image.find_features"]], "find_hog() (image.image method)": [[67, "image.Image.find_hog"]], "find_keypoints() (image.image method)": [[67, "image.Image.find_keypoints"]], "find_lbp() (image.image method)": [[67, "image.Image.find_lbp"]], "find_line_segments() (image.image method)": [[67, "image.Image.find_line_segments"]], "find_lines() (image.image method)": [[67, "image.Image.find_lines"]], "find_qrcodes() (image.image method)": [[67, "image.Image.find_qrcodes"]], "find_rects() (image.image method)": [[67, "image.Image.find_rects"]], "find_template() (image.image method)": [[67, "image.Image.find_template"]], "flood_fill() (image.image method)": [[67, "image.Image.flood_fill"]], "flush() (image.image method)": [[67, "image.Image.flush"]], "format() (image.image method)": [[67, "image.Image.format"]], "gamma() (image.image method)": [[67, "image.Image.gamma"]], "gamma_corr() (image.image method)": [[67, "image.Image.gamma_corr"]], "gaussian() (image.image method)": [[67, "image.Image.gaussian"]], "get_histogram() (image.image method)": [[67, "image.Image.get_histogram"]], "get_percentile() (image.histogram method)": [[67, "image.histogram.get_percentile"]], "get_pixel() (image.image method)": [[67, "image.Image.get_pixel"]], "get_regression() (image.image method)": [[67, "image.Image.get_regression"]], "get_similarity() (image.image method)": [[67, "image.Image.get_similarity"]], "get_statistics() (image.image method)": [[67, "image.Image.get_statistics"]], "get_statistics() (image.histogram method)": [[67, "image.histogram.get_statistics"]], "get_threshold() (image.histogram method)": [[67, "image.histogram.get_threshold"]], "goodness() (image.apriltag method)": [[67, "image.apriltag.goodness"]], "grayscale_to_binary() (in module image)": [[67, "image.grayscale_to_binary"]], "grayscale_to_lab() (in module image)": [[67, "image.grayscale_to_lab"]], "grayscale_to_rgb() (in module image)": [[67, "image.grayscale_to_rgb"]], "grayscale_to_yuv() (in module image)": [[67, "image.grayscale_to_yuv"]], "h() (image.apriltag method)": [[67, "image.apriltag.h"]], "h() (image.barcode method)": [[67, "image.barcode.h"]], "h() (image.blob method)": [[67, "image.blob.h"]], "h() (image.datamatrix method)": [[67, "image.datamatrix.h"]], "h() (image.kptmatch method)": [[67, "image.kptmatch.h"]], "h() (image.qrcode method)": [[67, "image.qrcode.h"]], "h() (image.rect method)": [[67, "image.rect.h"]], "hamming() (image.apriltag method)": [[67, "image.apriltag.hamming"]], "height() (image.image method)": [[67, "image.Image.height"]], "histeq() (image.image method)": [[67, "image.Image.histeq"]], "histogram (class in image)": [[67, "image.histogram"]], "id() (image.apriltag method)": [[67, "image.apriltag.id"]], "image": [[67, "module-image"]], "invert() (image.image method)": [[67, "image.Image.invert"]], "is_alphanumeric() (image.qrcode method)": [[67, "image.qrcode.is_alphanumeric"]], "is_binary() (image.qrcode method)": [[67, "image.qrcode.is_binary"]], "is_closed() (image.imageio method)": [[67, "image.ImageIO.is_closed"]], "is_kanji() (image.qrcode method)": [[67, "image.qrcode.is_kanji"]], "is_numeric() (image.qrcode method)": [[67, "image.qrcode.is_numeric"]], "kptmatch (class in image)": [[67, "image.kptmatch"]], "l_bins() (image.histogram method)": [[67, "image.histogram.l_bins"]], "l_lq() (image.statistics method)": [[67, "image.statistics.l_lq"]], "l_max() (image.statistics method)": [[67, "image.statistics.l_max"]], "l_mean() (image.statistics method)": [[67, "image.statistics.l_mean"]], "l_median() (image.statistics method)": [[67, "image.statistics.l_median"]], "l_min() (image.statistics method)": [[67, "image.statistics.l_min"]], "l_mode() (image.statistics method)": [[67, "image.statistics.l_mode"]], "l_stdev() (image.statistics method)": [[67, "image.statistics.l_stdev"]], "l_uq() (image.statistics method)": [[67, "image.statistics.l_uq"]], "l_value() (image.percentile method)": [[67, "image.percentile.l_value"]], "l_value() (image.threshold method)": [[67, "image.threshold.l_value"]], "lab_to_binary() (in module image)": [[67, "image.lab_to_binary"]], "lab_to_grayscale() (in module image)": [[67, "image.lab_to_grayscale"]], "lab_to_rgb() (in module image)": [[67, "image.lab_to_rgb"]], "lab_to_yuv() (in module image)": [[67, "image.lab_to_yuv"]], "laplacian() (image.image method)": [[67, "image.Image.laplacian"]], "length() (image.line method)": [[67, "image.line.length"]], "lens_corr() (image.image method)": [[67, "image.Image.lens_corr"]], "line (class in image)": [[67, "image.line"]], "line() (image.line method)": [[67, "image.line.line"]], "linpolar() (image.image method)": [[67, "image.Image.linpolar"]], "load_decriptor() (in module image)": [[67, "image.load_decriptor"]], "logpolar() (image.image method)": [[67, "image.Image.logpolar"]], "lq() (image.statistics method)": [[67, "image.statistics.lq"]], "magnitude() (image.circle method)": [[67, "image.circle.magnitude"]], "magnitude() (image.line method)": [[67, "image.line.magnitude"]], "magnitude() (image.rect method)": [[67, "image.rect.magnitude"]], "major_axis_line() (image.blob method)": [[67, "image.blob.major_axis_line"]], "mask() (image.qrcode method)": [[67, "image.qrcode.mask"]], "mask_circle() (image.image method)": [[67, "image.Image.mask_circle"]], "mask_ellipse() (image.image method)": [[67, "image.Image.mask_ellipse"]], "mask_rectange() (image.image method)": [[67, "image.Image.mask_rectange"]], "match() (image.kptmatch method)": [[67, "image.kptmatch.match"]], "match_descriptor() (in module image)": [[67, "image.match_descriptor"]], "max() (image.image method)": [[67, "image.Image.max"]], "max() (image.similarity method)": [[67, "image.Similarity.max"]], "max() (image.statistics method)": [[67, "image.statistics.max"]], "mean() (image.image method)": [[67, "image.Image.mean"]], "mean() (image.similarity method)": [[67, "image.Similarity.mean"]], "mean() (image.statistics method)": [[67, "image.statistics.mean"]], "median() (image.image method)": [[67, "image.Image.median"]], "median() (image.statistics method)": [[67, "image.statistics.median"]], "midpoint() (image.image method)": [[67, "image.Image.midpoint"]], "min() (image.image method)": [[67, "image.Image.min"]], "min() (image.similarity method)": [[67, "image.Similarity.min"]], "min() (image.statistics method)": [[67, "image.statistics.min"]], "min_corners() (image.blob method)": [[67, "image.blob.min_corners"]], "minor_axis_line() (image.blob method)": [[67, "image.blob.minor_axis_line"]], "mode() (image.image method)": [[67, "image.Image.mode"]], "mode() (image.statistics method)": [[67, "image.statistics.mode"]], "morph() (image.image method)": [[67, "image.Image.morph"]], "negate() (image.image method)": [[67, "image.Image.negate"]], "offset() (image.imageio method)": [[67, "image.ImageIO.offset"]], "open() (image.image method)": [[67, "image.Image.open"]], "padding() (image.datamatrix method)": [[67, "image.datamatrix.padding"]], "payload() (image.barcode method)": [[67, "image.barcode.payload"]], "payload() (image.datamatrix method)": [[67, "image.datamatrix.payload"]], "payload() (image.qrcode method)": [[67, "image.qrcode.payload"]], "percentile (class in image)": [[67, "image.percentile"]], "perimeter() (image.blob method)": [[67, "image.blob.perimeter"]], "pixels() (image.blob method)": [[67, "image.blob.pixels"]], "qrcode (class in image)": [[67, "image.qrcode"]], "quality() (image.barcode method)": [[67, "image.barcode.quality"]], "r() (image.circle method)": [[67, "image.circle.r"]], "read() (image.imageio method)": [[67, "image.ImageIO.read"]], "rect (class in image)": [[67, "image.rect"]], "rect() (image.apriltag method)": [[67, "image.apriltag.rect"]], "rect() (image.barcode method)": [[67, "image.barcode.rect"]], "rect() (image.blob method)": [[67, "image.blob.rect"]], "rect() (image.datamatrix method)": [[67, "image.datamatrix.rect"]], "rect() (image.kptmatch method)": [[67, "image.kptmatch.rect"]], "rect() (image.qrcode method)": [[67, "image.qrcode.rect"]], "rect() (image.rect method)": [[67, "image.rect.rect"]], "replace() (image.image method)": [[67, "image.Image.replace"]], "response() (image.displacement method)": [[67, "image.displacement.response"]], "rgb_to_binary() (in module image)": [[67, "image.rgb_to_binary"]], "rgb_to_grayscale() (in module image)": [[67, "image.rgb_to_grayscale"]], "rgb_to_lab() (in module image)": [[67, "image.rgb_to_lab"]], "rgb_to_yuv() (in module image)": [[67, "image.rgb_to_yuv"]], "rho() (image.line method)": [[67, "image.line.rho"]], "rotation() (image.apriltag method)": [[67, "image.apriltag.rotation"]], "rotation() (image.barcode method)": [[67, "image.barcode.rotation"]], "rotation() (image.blob method)": [[67, "image.blob.rotation"]], "rotation() (image.datamatrix method)": [[67, "image.datamatrix.rotation"]], "rotation() (image.displacement method)": [[67, "image.displacement.rotation"]], "rotation_corr() (image.image method)": [[67, "image.Image.rotation_corr"]], "rotation_deg() (image.blob method)": [[67, "image.blob.rotation_deg"]], "rotation_rad() (image.blob method)": [[67, "image.blob.rotation_rad"]], "roundness() (image.blob method)": [[67, "image.blob.roundness"]], "rows() (image.datamatrix method)": [[67, "image.datamatrix.rows"]], "rsub() (image.image method)": [[67, "image.Image.rsub"]], "save() (image.image method)": [[67, "image.Image.save"]], "save_descriptor() (in module image)": [[67, "image.save_descriptor"]], "scale() (image.image method)": [[67, "image.Image.scale"]], "scale() (image.displacement method)": [[67, "image.displacement.scale"]], "seek() (image.imageio method)": [[67, "image.ImageIO.seek"]], "set() (image.image method)": [[67, "image.Image.set"]], "set_pixel() (image.image method)": [[67, "image.Image.set_pixel"]], "size() (image.image method)": [[67, "image.Image.size"]], "size() (image.imageio method)": [[67, "image.ImageIO.size"]], "solidity() (image.blob method)": [[67, "image.blob.solidity"]], "statistics (class in image)": [[67, "image.statistics"]], "stdev() (image.similarity method)": [[67, "image.Similarity.stdev"]], "stdev() (image.statistics method)": [[67, "image.statistics.stdev"]], "stero_disparity() (image.image method)": [[67, "image.Image.stero_disparity"]], "sub() (image.image method)": [[67, "image.Image.sub"]], "sync() (image.imageio method)": [[67, "image.ImageIO.sync"]], "theta() (image.kptmatch method)": [[67, "image.kptmatch.theta"]], "theta() (image.line method)": [[67, "image.line.theta"]], "threshold (class in image)": [[67, "image.threshold"]], "to_bitmap() (image.image method)": [[67, "image.Image.to_bitmap"]], "to_grayscale() (image.image method)": [[67, "image.Image.to_grayscale"]], "to_ironbow() (image.image method)": [[67, "image.Image.to_ironbow"]], "to_jpeg() (image.image method)": [[67, "image.Image.to_jpeg"]], "to_ndarray() (image.image method)": [[67, "image.Image.to_ndarray"]], "to_png() (image.image method)": [[67, "image.Image.to_png"]], "to_rainbow() (image.image method)": [[67, "image.Image.to_rainbow"]], "to_rgb565() (image.image method)": [[67, "image.Image.to_rgb565"]], "top_hat() (image.image method)": [[67, "image.Image.top_hat"]], "type() (image.imageio method)": [[67, "image.ImageIO.type"]], "type() (image.barcode method)": [[67, "image.barcode.type"]], "uq() (image.statistics method)": [[67, "image.statistics.uq"]], "value() (image.percentile method)": [[67, "image.percentile.value"]], "value() (image.threshold method)": [[67, "image.threshold.value"]], "version() (image.imageio method)": [[67, "image.ImageIO.version"]], "version() (image.qrcode method)": [[67, "image.qrcode.version"]], "w() (image.apriltag method)": [[67, "image.apriltag.w"]], "w() (image.barcode method)": [[67, "image.barcode.w"]], "w() (image.blob method)": [[67, "image.blob.w"]], "w() (image.datamatrix method)": [[67, "image.datamatrix.w"]], "w() (image.kptmatch method)": [[67, "image.kptmatch.w"]], "w() (image.qrcode method)": [[67, "image.qrcode.w"]], "w() (image.rect method)": [[67, "image.rect.w"]], "width() (image.image method)": [[67, "image.Image.width"]], "write() (image.imageio method)": [[67, "image.ImageIO.write"]], "x() (image.apriltag method)": [[67, "image.apriltag.x"]], "x() (image.barcode method)": [[67, "image.barcode.x"]], "x() (image.blob method)": [[67, "image.blob.x"]], "x() (image.circle method)": [[67, "image.circle.x"]], "x() (image.datamatrix method)": [[67, "image.datamatrix.x"]], "x() (image.kptmatch method)": [[67, "image.kptmatch.x"]], "x() (image.qrcode method)": [[67, "image.qrcode.x"]], "x() (image.rect method)": [[67, "image.rect.x"]], "x1() (image.line method)": [[67, "image.line.x1"]], "x2() (image.line method)": [[67, "image.line.x2"]], "x_hist_bins() (image.blob method)": [[67, "image.blob.x_hist_bins"]], "x_rotation() (image.apriltag method)": [[67, "image.apriltag.x_rotation"]], "x_translation() (image.apriltag method)": [[67, "image.apriltag.x_translation"]], "x_translation() (image.displacement method)": [[67, "image.displacement.x_translation"]], "y() (image.apriltag method)": [[67, "image.apriltag.y"]], "y() (image.barcode method)": [[67, "image.barcode.y"]], "y() (image.blob method)": [[67, "image.blob.y"]], "y() (image.circle method)": [[67, "image.circle.y"]], "y() (image.datamatrix method)": [[67, "image.datamatrix.y"]], "y() (image.kptmatch method)": [[67, "image.kptmatch.y"]], "y() (image.qrcode method)": [[67, "image.qrcode.y"]], "y() (image.rect method)": [[67, "image.rect.y"]], "y1() (image.line method)": [[67, "image.line.y1"]], "y2() (image.line method)": [[67, "image.line.y2"]], "y_hist_bins() (image.blob method)": [[67, "image.blob.y_hist_bins"]], "y_rotation() (image.apriltag method)": [[67, "image.apriltag.y_rotation"]], "y_translation() (image.apriltag method)": [[67, "image.apriltag.y_translation"]], "y_translation() (image.displacement method)": [[67, "image.displacement.y_translation"]], "yuv_to_binary() (in module image)": [[67, "image.yuv_to_binary"]], "yuv_to_grayscale() (in module image)": [[67, "image.yuv_to_grayscale"]], "yuv_to_lab() (in module image)": [[67, "image.yuv_to_lab"]], "yuv_to_rgb() (in module image)": [[67, "image.yuv_to_rgb"]], "z_rotation() (image.apriltag method)": [[67, "image.apriltag.z_rotation"]], "z_translation() (image.apriltag method)": [[67, "image.apriltag.z_translation"]], "__read_reg() (in module imu)": [[68, "imu.__read_reg"]], "__write_reg() (in module imu)": [[68, "imu.__write_reg"]], "acceleration_mg() (in module imu)": [[68, "imu.acceleration_mg"]], "angular_rate_mdps() (in module imu)": [[68, "imu.angular_rate_mdps"]], "imu": [[68, "module-imu"]], "pitch() (in module imu)": [[68, "imu.pitch"]], "roll() (in module imu)": [[68, "imu.roll"]], "sleep() (in module imu)": [[68, "imu.sleep"]], "temperature_c() (in module imu)": [[68, "imu.temperature_c"]], "mjpeg (class in mjpeg)": [[69, "mjpeg.Mjpeg"]], "add_frame() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.add_frame"]], "close() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.close"]], "count() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.count"]], "height() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.height"]], "is_closed() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.is_closed"]], "mjpeg": [[69, "module-mjpeg"]], "size() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.size"]], "sync() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.sync"]], "width() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.width"]], "write() (mjpeg.mjpeg method)": [[69, "mjpeg.Mjpeg.write"]], "model (class in ml)": [[70, "ml.Model"]], "input_dtype (ml.model attribute)": [[70, "ml.Model.input_dtype"]], "input_scale (ml.model attribute)": [[70, "ml.Model.input_scale"]], "input_shape (ml.model attribute)": [[70, "ml.Model.input_shape"]], "input_zero_point (ml.model attribute)": [[70, "ml.Model.input_zero_point"]], "labels (ml.model attribute)": [[70, "ml.Model.labels"]], "len (ml.model attribute)": [[70, "ml.Model.len"]], "ml": [[70, "module-ml"]], "output_dtype (ml.model attribute)": [[70, "ml.Model.output_dtype"]], "output_scale (ml.model attribute)": [[70, "ml.Model.output_scale"]], "output_shape (ml.model attribute)": [[70, "ml.Model.output_shape"]], "output_zero_point (ml.model attribute)": [[70, "ml.Model.output_zero_point"]], "predict() (ml.model method)": [[70, "ml.Model.predict"]], "ram (ml.model attribute)": [[70, "ml.Model.ram"]], "microspeech (class in ml.apps)": [[71, "ml.apps.MicroSpeech"]], "listen() (ml.apps.microspeech method)": [[71, "ml.apps.MicroSpeech.listen"]], "ml.apps": [[71, "module-ml.apps"]], "normalization (class in ml.preprocessing)": [[72, "ml.preprocessing.Normalization"]], "ml.preprocessing": [[72, "module-ml.preprocessing"]], "nms (class in ml.utils)": [[73, "ml.utils.NMS"]], "add_bounding_boxes() (ml.utils.nms method)": [[73, "ml.utils.NMS.add_bounding_boxes"]], "get_bounding_boxes() (ml.utils.nms method)": [[73, "ml.utils.NMS.get_bounding_boxes"]], "ml.utils": [[73, "module-ml.utils"]], "arch() (in module omv)": [[74, "omv.arch"]], "board_id() (in module omv)": [[74, "omv.board_id"]], "board_type() (in module omv)": [[74, "omv.board_type"]], "disable_fb() (in module omv)": [[74, "omv.disable_fb"]], "omv": [[74, "module-omv"]], "version_major() (in module omv)": [[74, "omv.version_major"]], "version_minor() (in module omv)": [[74, "omv.version_minor"]], "version_patch() (in module omv)": [[74, "omv.version_patch"]], "version_string() (in module omv)": [[74, "omv.version_string"]], "call() (rpc.rpc_master method)": [[75, "rpc.rpc_master.call"]], "get_bytes() (rpc.rpc method)": [[75, "rpc.rpc.get_bytes"]], "loop() (rpc.rpc_slave method)": [[75, "rpc.rpc_slave.loop"]], "put_bytes() (rpc.rpc method)": [[75, "rpc.rpc.put_bytes"]], "register_callback() (rpc.rpc_slave method)": [[75, "rpc.rpc_slave.register_callback"]], "rpc": [[75, "module-rpc"]], "rpc (class in rpc)": [[75, "rpc.rpc"]], "rpc_can_master (class in rpc)": [[75, "rpc.rpc_can_master"]], "rpc_can_slave (class in rpc)": [[75, "rpc.rpc_can_slave"]], "rpc_i2c_master (class in rpc)": [[75, "rpc.rpc_i2c_master"]], "rpc_i2c_slave (class in rpc)": [[75, "rpc.rpc_i2c_slave"]], "rpc_master (class in rpc)": [[75, "rpc.rpc_master"]], "rpc_network_master (class in rpc)": [[75, "rpc.rpc_network_master"]], "rpc_network_slave (class in rpc)": [[75, "rpc.rpc_network_slave"]], "rpc_slave (class in rpc)": [[75, "rpc.rpc_slave"]], "rpc_spi_master (class in rpc)": [[75, "rpc.rpc_spi_master"]], "rpc_spi_slave (class in rpc)": [[75, "rpc.rpc_spi_slave"]], "rpc_uart_master (class in rpc)": [[75, "rpc.rpc_uart_master"]], "rpc_uart_slave (class in rpc)": [[75, "rpc.rpc_uart_slave"]], "rpc_usb_vcp_master (class in rpc)": [[75, "rpc.rpc_usb_vcp_master"]], "rpc_usb_vcp_slave (class in rpc)": [[75, "rpc.rpc_usb_vcp_slave"]], "schedule_callback() (rpc.rpc_slave method)": [[75, "rpc.rpc_slave.schedule_callback"]], "setup_loop_callback() (rpc.rpc_slave method)": [[75, "rpc.rpc_slave.setup_loop_callback"]], "stream_reader() (rpc.rpc method)": [[75, "rpc.rpc.stream_reader"]], "stream_writer() (rpc.rpc method)": [[75, "rpc.rpc.stream_writer"]], "register_pause_cb() (rtsp.rtsp_server method)": [[76, "rtsp.rtsp_server.register_pause_cb"]], "register_play_cb() (rtsp.rtsp_server method)": [[76, "rtsp.rtsp_server.register_play_cb"]], "register_setup_cb() (rtsp.rtsp_server method)": [[76, "rtsp.rtsp_server.register_setup_cb"]], "register_teardown_cb() (rtsp.rtsp_server method)": [[76, "rtsp.rtsp_server.register_teardown_cb"]], "rtsp": [[76, "module-rtsp"]], "rtsp_server (class in rtsp)": [[76, "rtsp.rtsp_server"]], "stream() (rtsp.rtsp_server method)": [[76, "rtsp.rtsp_server.stream"]], "b128x128 (in module sensor)": [[77, "sensor.B128X128"]], "b128x64 (in module sensor)": [[77, "sensor.B128X64"]], "b160x160 (in module sensor)": [[77, "sensor.B160X160"]], "b320x320 (in module sensor)": [[77, "sensor.B320X320"]], "b64x32 (in module sensor)": [[77, "sensor.B64X32"]], "b64x64 (in module sensor)": [[77, "sensor.B64X64"]], "bayer (in module sensor)": [[77, "sensor.BAYER"]], "binary (in module sensor)": [[77, "sensor.BINARY"]], "cif (in module sensor)": [[77, "sensor.CIF"]], "double_buffer (in module sensor)": [[77, "sensor.DOUBLE_BUFFER"]], "fhd (in module sensor)": [[77, "sensor.FHD"]], "frogeye2020 (in module sensor)": [[77, "sensor.FROGEYE2020"]], "gc2145 (in module sensor)": [[77, "sensor.GC2145"]], "grayscale (in module sensor)": [[77, "sensor.GRAYSCALE"]], "hd (in module sensor)": [[77, "sensor.HD"]], "hm01b0 (in module sensor)": [[77, "sensor.HM01B0"]], "hm0360 (in module sensor)": [[77, "sensor.HM0360"]], "hqqqqvga (in module sensor)": [[77, "sensor.HQQQQVGA"]], "hqqqvga (in module sensor)": [[77, "sensor.HQQQVGA"]], "hqqvga (in module sensor)": [[77, "sensor.HQQVGA"]], "hqvga (in module sensor)": [[77, "sensor.HQVGA"]], "hvga (in module sensor)": [[77, "sensor.HVGA"]], "ioctl_get_fov_wide (in module sensor)": [[77, "sensor.IOCTL_GET_FOV_WIDE"]], "ioctl_get_night_mode (in module sensor)": [[77, "sensor.IOCTL_GET_NIGHT_MODE"]], "ioctl_get_readout_window (in module sensor)": [[77, "sensor.IOCTL_GET_READOUT_WINDOW"]], "ioctl_get_triggered_mode (in module sensor)": [[77, "sensor.IOCTL_GET_TRIGGERED_MODE"]], "ioctl_himax_md_clear (in module sensor)": [[77, "sensor.IOCTL_HIMAX_MD_CLEAR"]], "ioctl_himax_md_enable (in module sensor)": [[77, "sensor.IOCTL_HIMAX_MD_ENABLE"]], "ioctl_himax_md_threshold (in module sensor)": [[77, "sensor.IOCTL_HIMAX_MD_THRESHOLD"]], "ioctl_himax_md_window (in module sensor)": [[77, "sensor.IOCTL_HIMAX_MD_WINDOW"]], "ioctl_himax_osc_enable (in module sensor)": [[77, "sensor.IOCTL_HIMAX_OSC_ENABLE"]], "ioctl_lepton_get_attribute (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_ATTRIBUTE"]], "ioctl_lepton_get_aux_temperature (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_AUX_TEMPERATURE"]], "ioctl_lepton_get_fpa_temperature (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_FPA_TEMPERATURE"]], "ioctl_lepton_get_height (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_HEIGHT"]], "ioctl_lepton_get_measurement_mode (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_MEASUREMENT_MODE"]], "ioctl_lepton_get_measurement_range (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_MEASUREMENT_RANGE"]], "ioctl_lepton_get_radiometry (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_RADIOMETRY"]], "ioctl_lepton_get_refresh (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_REFRESH"]], "ioctl_lepton_get_resolution (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_RESOLUTION"]], "ioctl_lepton_get_width (in module sensor)": [[77, "sensor.IOCTL_LEPTON_GET_WIDTH"]], "ioctl_lepton_run_command (in module sensor)": [[77, "sensor.IOCTL_LEPTON_RUN_COMMAND"]], "ioctl_lepton_set_attribute (in module sensor)": [[77, "sensor.IOCTL_LEPTON_SET_ATTRIBUTE"]], "ioctl_lepton_set_measurement_mode (in module sensor)": [[77, "sensor.IOCTL_LEPTON_SET_MEASUREMENT_MODE"]], "ioctl_lepton_set_measurement_range (in module sensor)": [[77, "sensor.IOCTL_LEPTON_SET_MEASUREMENT_RANGE"]], "ioctl_pause_auto_focus (in module sensor)": [[77, "sensor.IOCTL_PAUSE_AUTO_FOCUS"]], "ioctl_reset_auto_focus (in module sensor)": [[77, "sensor.IOCTL_RESET_AUTO_FOCUS"]], "ioctl_set_fov_wide (in module sensor)": [[77, "sensor.IOCTL_SET_FOV_WIDE"]], "ioctl_set_night_mode (in module sensor)": [[77, "sensor.IOCTL_SET_NIGHT_MODE"]], "ioctl_set_readout_window (in module sensor)": [[77, "sensor.IOCTL_SET_READOUT_WINDOW"]], "ioctl_set_triggered_mode (in module sensor)": [[77, "sensor.IOCTL_SET_TRIGGERED_MODE"]], "ioctl_trigger_auto_focus (in module sensor)": [[77, "sensor.IOCTL_TRIGGER_AUTO_FOCUS"]], "ioctl_wait_on_auto_focus (in module sensor)": [[77, "sensor.IOCTL_WAIT_ON_AUTO_FOCUS"]], "jpeg (in module sensor)": [[77, "sensor.JPEG"]], "lcd (in module sensor)": [[77, "sensor.LCD"]], "lepton (in module sensor)": [[77, "sensor.LEPTON"]], "mt9m114 (in module sensor)": [[77, "sensor.MT9M114"]], "mt9v022 (in module sensor)": [[77, "sensor.MT9V022"]], "mt9v024 (in module sensor)": [[77, "sensor.MT9V024"]], "mt9v032 (in module sensor)": [[77, "sensor.MT9V032"]], "mt9v034 (in module sensor)": [[77, "sensor.MT9V034"]], "ov2640 (in module sensor)": [[77, "sensor.OV2640"]], "ov5640 (in module sensor)": [[77, "sensor.OV5640"]], "ov7690 (in module sensor)": [[77, "sensor.OV7690"]], "ov7725 (in module sensor)": [[77, "sensor.OV7725"]], "ov9650 (in module sensor)": [[77, "sensor.OV9650"]], "pag7920 (in module sensor)": [[77, "sensor.PAG7920"]], "paj6100 (in module sensor)": [[77, "sensor.PAJ6100"]], "qcif (in module sensor)": [[77, "sensor.QCIF"]], "qhd (in module sensor)": [[77, "sensor.QHD"]], "qqcif (in module sensor)": [[77, "sensor.QQCIF"]], "qqqqvga (in module sensor)": [[77, "sensor.QQQQVGA"]], "qqqvga (in module sensor)": [[77, "sensor.QQQVGA"]], "qqsif (in module sensor)": [[77, "sensor.QQSIF"]], "qqvga (in module sensor)": [[77, "sensor.QQVGA"]], "qqvga2 (in module sensor)": [[77, "sensor.QQVGA2"]], "qsif (in module sensor)": [[77, "sensor.QSIF"]], "qvga (in module sensor)": [[77, "sensor.QVGA"]], "qxga (in module sensor)": [[77, "sensor.QXGA"]], "rgb565 (in module sensor)": [[77, "sensor.RGB565"]], "sif (in module sensor)": [[77, "sensor.SIF"]], "single_buffer (in module sensor)": [[77, "sensor.SINGLE_BUFFER"]], "svga (in module sensor)": [[77, "sensor.SVGA"]], "sxga (in module sensor)": [[77, "sensor.SXGA"]], "sxgam (in module sensor)": [[77, "sensor.SXGAM"]], "triple_buffer (in module sensor)": [[77, "sensor.TRIPLE_BUFFER"]], "uxga (in module sensor)": [[77, "sensor.UXGA"]], "vga (in module sensor)": [[77, "sensor.VGA"]], "video_fifo (in module sensor)": [[77, "sensor.VIDEO_FIFO"]], "wqxga (in module sensor)": [[77, "sensor.WQXGA"]], "wqxga2 (in module sensor)": [[77, "sensor.WQXGA2"]], "wvga (in module sensor)": [[77, "sensor.WVGA"]], "wvga2 (in module sensor)": [[77, "sensor.WVGA2"]], "wxga (in module sensor)": [[77, "sensor.WXGA"]], "xga (in module sensor)": [[77, "sensor.XGA"]], "yuv422 (in module sensor)": [[77, "sensor.YUV422"]], "__read_reg() (in module sensor)": [[77, "sensor.__read_reg"]], "__write_reg() (in module sensor)": [[77, "sensor.__write_reg"]], "alloc_extra_fb() (in module sensor)": [[77, "sensor.alloc_extra_fb"]], "dealloc_extra_fb() (in module sensor)": [[77, "sensor.dealloc_extra_fb"]], "disable_delays() (in module sensor)": [[77, "sensor.disable_delays"]], "disable_full_flush() (in module sensor)": [[77, "sensor.disable_full_flush"]], "flush() (in module sensor)": [[77, "sensor.flush"]], "get_auto_rotation() (in module sensor)": [[77, "sensor.get_auto_rotation"]], "get_blc_regs() (in module sensor)": [[77, "sensor.get_blc_regs"]], "get_color_palette() (in module sensor)": [[77, "sensor.get_color_palette"]], "get_exposure_us() (in module sensor)": [[77, "sensor.get_exposure_us"]], "get_fb() (in module sensor)": [[77, "sensor.get_fb"]], "get_frame_available() (in module sensor)": [[77, "sensor.get_frame_available"]], "get_framebuffers() (in module sensor)": [[77, "sensor.get_framebuffers"]], "get_framerate() (in module sensor)": [[77, "sensor.get_framerate"]], "get_framesize() (in module sensor)": [[77, "sensor.get_framesize"]], "get_gain_db() (in module sensor)": [[77, "sensor.get_gain_db"]], "get_hmirror() (in module sensor)": [[77, "sensor.get_hmirror"]], "get_id() (in module sensor)": [[77, "sensor.get_id"]], "get_pixformat() (in module sensor)": [[77, "sensor.get_pixformat"]], "get_rgb_gain_db() (in module sensor)": [[77, "sensor.get_rgb_gain_db"]], "get_transpose() (in module sensor)": [[77, "sensor.get_transpose"]], "get_vflip() (in module sensor)": [[77, "sensor.get_vflip"]], "get_windowing() (in module sensor)": [[77, "sensor.get_windowing"]], "height() (in module sensor)": [[77, "sensor.height"]], "ioctl() (in module sensor)": [[77, "sensor.ioctl"]], "reset() (in module sensor)": [[77, "sensor.reset"]], "sensor": [[77, "module-sensor"]], "set_auto_blc() (in module sensor)": [[77, "sensor.set_auto_blc"]], "set_auto_exposure() (in module sensor)": [[77, "sensor.set_auto_exposure"]], "set_auto_gain() (in module sensor)": [[77, "sensor.set_auto_gain"]], "set_auto_rotation() (in module sensor)": [[77, "sensor.set_auto_rotation"]], "set_auto_whitebal() (in module sensor)": [[77, "sensor.set_auto_whitebal"]], "set_brightness() (in module sensor)": [[77, "sensor.set_brightness"]], "set_color_palette() (in module sensor)": [[77, "sensor.set_color_palette"]], "set_colorbar() (in module sensor)": [[77, "sensor.set_colorbar"]], "set_contrast() (in module sensor)": [[77, "sensor.set_contrast"]], "set_frame_callback() (in module sensor)": [[77, "sensor.set_frame_callback"]], "set_framebuffers() (in module sensor)": [[77, "sensor.set_framebuffers"]], "set_framerate() (in module sensor)": [[77, "sensor.set_framerate"]], "set_framesize() (in module sensor)": [[77, "sensor.set_framesize"]], "set_gainceiling() (in module sensor)": [[77, "sensor.set_gainceiling"]], "set_hmirror() (in module sensor)": [[77, "sensor.set_hmirror"]], "set_lens_correction() (in module sensor)": [[77, "sensor.set_lens_correction"]], "set_pixformat() (in module sensor)": [[77, "sensor.set_pixformat"]], "set_quality() (in module sensor)": [[77, "sensor.set_quality"]], "set_saturation() (in module sensor)": [[77, "sensor.set_saturation"]], "set_transpose() (in module sensor)": [[77, "sensor.set_transpose"]], "set_vflip() (in module sensor)": [[77, "sensor.set_vflip"]], "set_vsync_callback() (in module sensor)": [[77, "sensor.set_vsync_callback"]], "set_windowing() (in module sensor)": [[77, "sensor.set_windowing"]], "shutdown() (in module sensor)": [[77, "sensor.shutdown"]], "skip_frames() (in module sensor)": [[77, "sensor.skip_frames"]], "sleep() (in module sensor)": [[77, "sensor.sleep"]], "snapshot() (in module sensor)": [[77, "sensor.snapshot"]], "width() (in module sensor)": [[77, "sensor.width"]], "tfp410": [[78, "module-TFP410"]], "hotplug_callback() (tfp410.tfp410 method)": [[78, "TFP410.TFP410.hotplug_callback"]], "isconnected() (tfp410.tfp410 method)": [[78, "TFP410.TFP410.isconnected"]], "tfp410.tfp410 (class in tfp410)": [[78, "TFP410.tfp410.TFP410"]], "tv_none (in module tv)": [[79, "tv.TV_NONE"]], "tv_shield (in module tv)": [[79, "tv.TV_SHIELD"]], "channel() (in module tv)": [[79, "tv.channel"]], "deinit() (in module tv)": [[79, "tv.deinit"]], "display() (in module tv)": [[79, "tv.display"]], "height() (in module tv)": [[79, "tv.height"]], "init() (in module tv)": [[79, "tv.init"]], "refresh() (in module tv)": [[79, "tv.refresh"]], "triple_buffer() (in module tv)": [[79, "tv.triple_buffer"]], "tv": [[79, "module-tv"]], "type() (in module tv)": [[79, "tv.type"]], "width() (in module tv)": [[79, "tv.width"]], "endpoint (class in openamp)": [[80, "openamp.Endpoint"]], "remoteproc (class in openamp)": [[80, "openamp.RemoteProc"]], "deinit() (openamp.endpoint method)": [[80, "openamp.Endpoint.deinit"]], "is_ready() (openamp.endpoint method)": [[80, "openamp.Endpoint.is_ready"]], "new_service_callback() (in module openamp)": [[80, "openamp.new_service_callback"]], "openamp": [[80, "module-openamp"]], "send() (openamp.endpoint method)": [[80, "openamp.Endpoint.send"]], "shutdown() (openamp.remoteproc method)": [[80, "openamp.RemoteProc.shutdown"]], "start() (openamp.remoteproc method)": [[80, "openamp.RemoteProc.start"]], "stop() (openamp.remoteproc method)": [[80, "openamp.RemoteProc.stop"]], "vfsfat (class in os)": [[81, "os.VfsFat"]], "vfslfs1 (class in os)": [[81, "os.VfsLfs1"]], "vfslfs2 (class in os)": [[81, "os.VfsLfs2"]], "vfsposix (class in os)": [[81, "os.VfsPosix"]], "chdir() (in module os)": [[81, "os.chdir"]], "dupterm() (in module os)": [[81, "os.dupterm"]], "getcwd() (in module os)": [[81, "os.getcwd"]], "ilistdir() (in module os)": [[81, "os.ilistdir"]], "listdir() (in module os)": [[81, "os.listdir"]], "mkdir() (in module os)": [[81, "os.mkdir"]], "mount() (in module os)": [[81, "os.mount"]], "os": [[81, "module-os"]], "remove() (in module os)": [[81, "os.remove"]], "rename() (in module os)": [[81, "os.rename"]], "rmdir() (in module os)": [[81, "os.rmdir"]], "stat() (in module os)": [[81, "os.stat"]], "statvfs() (in module os)": [[81, "os.statvfs"]], "sync() (in module os)": [[81, "os.sync"]], "umount() (in module os)": [[81, "os.umount"]], "uname() (in module os)": [[81, "os.uname"]], "urandom() (in module os)": [[81, "os.urandom"]], "libc_ver() (in module platform)": [[82, "platform.libc_ver"]], "platform": [[82, "module-platform"]], "platform() (in module platform)": [[82, "platform.platform"]], "python_compiler() (in module platform)": [[82, "platform.python_compiler"]], "bootloader() (in module pyb)": [[83, "pyb.bootloader"]], "delay() (in module pyb)": [[83, "pyb.delay"]], "disable_irq() (in module pyb)": [[83, "pyb.disable_irq"]], "elapsed_micros() (in module pyb)": [[83, "pyb.elapsed_micros"]], "elapsed_millis() (in module pyb)": [[83, "pyb.elapsed_millis"]], "enable_irq() (in module pyb)": [[83, "pyb.enable_irq"]], "fault_debug() (in module pyb)": [[83, "pyb.fault_debug"]], "hard_reset() (in module pyb)": [[83, "pyb.hard_reset"]], "have_cdc() (in module pyb)": [[83, "pyb.have_cdc"]], "hid() (in module pyb)": [[83, "pyb.hid"]], "info() (in module pyb)": [[83, "pyb.info"]], "main() (in module pyb)": [[83, "pyb.main"]], "micros() (in module pyb)": [[83, "pyb.micros"]], "millis() (in module pyb)": [[83, "pyb.millis"]], "mount() (in module pyb)": [[83, "pyb.mount"]], "pyb": [[83, "module-pyb"]], "pyb.hid_keyboard (in module pyb)": [[83, "pyb.pyb.hid_keyboard"]], "pyb.hid_mouse (in module pyb)": [[83, "pyb.pyb.hid_mouse"]], "repl_uart() (in module pyb)": [[83, "pyb.repl_uart"]], "rng() (in module pyb)": [[83, "pyb.rng"]], "standby() (in module pyb)": [[83, "pyb.standby"]], "stop() (in module pyb)": [[83, "pyb.stop"]], "sync() (in module pyb)": [[83, "pyb.sync"]], "udelay() (in module pyb)": [[83, "pyb.udelay"]], "unique_id() (in module pyb)": [[83, "pyb.unique_id"]], "usb_mode() (in module pyb)": [[83, "pyb.usb_mode"]], "wfi() (in module pyb)": [[83, "pyb.wfi"]], "adc (class in pyb)": [[84, "pyb.ADC"]], "read() (pyb.adc method)": [[84, "pyb.ADC.read"]], "read_timed() (pyb.adc method)": [[84, "pyb.ADC.read_timed"]], "can (class in pyb)": [[85, "pyb.CAN"]], "can.bus_off (in module pyb)": [[85, "pyb.CAN.BUS_OFF"]], "can.dual (in module pyb)": [[85, "pyb.CAN.DUAL"]], "can.error_active (in module pyb)": [[85, "pyb.CAN.ERROR_ACTIVE"]], "can.error_passive (in module pyb)": [[85, "pyb.CAN.ERROR_PASSIVE"]], "can.error_warning (in module pyb)": [[85, "pyb.CAN.ERROR_WARNING"]], "can.list16 (in module pyb)": [[85, "pyb.CAN.LIST16"]], "can.list32 (in module pyb)": [[85, "pyb.CAN.LIST32"]], "can.loopback (in module pyb)": [[85, "pyb.CAN.LOOPBACK"]], "can.mask (in module pyb)": [[85, "pyb.CAN.MASK"]], "can.mask16 (in module pyb)": [[85, "pyb.CAN.MASK16"]], "can.mask32 (in module pyb)": [[85, "pyb.CAN.MASK32"]], "can.normal (in module pyb)": [[85, "pyb.CAN.NORMAL"]], "can.range (in module pyb)": [[85, "pyb.CAN.RANGE"]], "can.silent (in module pyb)": [[85, "pyb.CAN.SILENT"]], "can.silent_loopback (in module pyb)": [[85, "pyb.CAN.SILENT_LOOPBACK"]], "can.stopped (in module pyb)": [[85, "pyb.CAN.STOPPED"]], "any() (pyb.can method)": [[85, "pyb.CAN.any"]], "clearfilter() (pyb.can method)": [[85, "pyb.CAN.clearfilter"]], "deinit() (pyb.can method)": [[85, "pyb.CAN.deinit"]], "info() (pyb.can method)": [[85, "pyb.CAN.info"]], "recv() (pyb.can method)": [[85, "pyb.CAN.recv"]], "restart() (pyb.can method)": [[85, "pyb.CAN.restart"]], "rxcallback() (pyb.can method)": [[85, "pyb.CAN.rxcallback"]], "send() (pyb.can method)": [[85, "pyb.CAN.send"]], "setfilter() (pyb.can method)": [[85, "pyb.CAN.setfilter"]], "state() (pyb.can method)": [[85, "pyb.CAN.state"]], "dac (class in pyb)": [[86, "pyb.DAC"]], "dac.circular (in module pyb)": [[86, "pyb.DAC.CIRCULAR"]], "dac.normal (in module pyb)": [[86, "pyb.DAC.NORMAL"]], "deinit() (pyb.dac method)": [[86, "pyb.DAC.deinit"]], "init() (pyb.dac method)": [[86, "pyb.DAC.init"]], "noise() (pyb.dac method)": [[86, "pyb.DAC.noise"]], "triangle() (pyb.dac method)": [[86, "pyb.DAC.triangle"]], "write() (pyb.dac method)": [[86, "pyb.DAC.write"]], "write_timed() (pyb.dac method)": [[86, "pyb.DAC.write_timed"]], "extint (class in pyb)": [[87, "pyb.ExtInt"]], "extint.irq_falling (in module pyb)": [[87, "pyb.ExtInt.IRQ_FALLING"]], "extint.irq_rising (in module pyb)": [[87, "pyb.ExtInt.IRQ_RISING"]], "extint.irq_rising_falling (in module pyb)": [[87, "pyb.ExtInt.IRQ_RISING_FALLING"]], "disable() (pyb.extint method)": [[87, "pyb.ExtInt.disable"]], "enable() (pyb.extint method)": [[87, "pyb.ExtInt.enable"]], "line() (pyb.extint method)": [[87, "pyb.ExtInt.line"]], "regs() (pyb.extint class method)": [[87, "pyb.ExtInt.regs"]], "swint() (pyb.extint method)": [[87, "pyb.ExtInt.swint"]], "flash (class in pyb)": [[88, "pyb.Flash"]], "ioctl() (pyb.flash method)": [[88, "pyb.Flash.ioctl"]], "readblocks() (pyb.flash method)": [[88, "pyb.Flash.readblocks"]], "writeblocks() (pyb.flash method)": [[88, "pyb.Flash.writeblocks"]], "i2c (class in pyb)": [[89, "pyb.I2C"]], "i2c.controller (in module pyb)": [[89, "pyb.I2C.CONTROLLER"]], "i2c.peripheral (in module pyb)": [[89, "pyb.I2C.PERIPHERAL"]], "deinit() (pyb.i2c method)": [[89, "pyb.I2C.deinit"]], "init() (pyb.i2c method)": [[89, "pyb.I2C.init"]], "is_ready() (pyb.i2c method)": [[89, "pyb.I2C.is_ready"]], "mem_read() (pyb.i2c method)": [[89, "pyb.I2C.mem_read"]], "mem_write() (pyb.i2c method)": [[89, "pyb.I2C.mem_write"]], "recv() (pyb.i2c method)": [[89, "pyb.I2C.recv"]], "scan() (pyb.i2c method)": [[89, "pyb.I2C.scan"]], "send() (pyb.i2c method)": [[89, "pyb.I2C.send"]], "led (class in pyb)": [[90, "pyb.LED"]], "off() (pyb.led method)": [[90, "pyb.LED.off"]], "on() (pyb.led method)": [[90, "pyb.LED.on"]], "toggle() (pyb.led method)": [[90, "pyb.LED.toggle"]], "pin (class in pyb)": [[91, "pyb.Pin"]], "pin.af_od (in module pyb)": [[91, "pyb.Pin.AF_OD"]], "pin.af_pp (in module pyb)": [[91, "pyb.Pin.AF_PP"]], "pin.alt (in module pyb)": [[91, "pyb.Pin.ALT"]], "pin.analog (in module pyb)": [[91, "pyb.Pin.ANALOG"]], "pin.in (in module pyb)": [[91, "pyb.Pin.IN"]], "pin.out_od (in module pyb)": [[91, "pyb.Pin.OUT_OD"]], "pin.out_pp (in module pyb)": [[91, "pyb.Pin.OUT_PP"]], "pin.pull_down (in module pyb)": [[91, "pyb.Pin.PULL_DOWN"]], "pin.pull_none (in module pyb)": [[91, "pyb.Pin.PULL_NONE"]], "pin.pull_up (in module pyb)": [[91, "pyb.Pin.PULL_UP"]], "__str__() (pyb.pin method)": [[91, "pyb.Pin.__str__"]], "__str__() (pyb.pinaf method)": [[91, "pyb.pinaf.__str__"]], "af() (pyb.pin method)": [[91, "pyb.Pin.af"]], "af_list() (pyb.pin method)": [[91, "pyb.Pin.af_list"]], "debug() (pyb.pin class method)": [[91, "pyb.Pin.debug"]], "dict() (pyb.pin class method)": [[91, "pyb.Pin.dict"]], "gpio() (pyb.pin method)": [[91, "pyb.Pin.gpio"]], "index() (pyb.pinaf method)": [[91, "pyb.pinaf.index"]], "init() (pyb.pin method)": [[91, "pyb.Pin.init"]], "mapper() (pyb.pin class method)": [[91, "pyb.Pin.mapper"]], "mode() (pyb.pin method)": [[91, "pyb.Pin.mode"]], "name() (pyb.pin method)": [[91, "pyb.Pin.name"]], "name() (pyb.pinaf method)": [[91, "pyb.pinaf.name"]], "names() (pyb.pin method)": [[91, "pyb.Pin.names"]], "pin() (pyb.pin method)": [[91, "pyb.Pin.pin"]], "port() (pyb.pin method)": [[91, "pyb.Pin.port"]], "pull() (pyb.pin method)": [[91, "pyb.Pin.pull"]], "reg() (pyb.pinaf method)": [[91, "pyb.pinaf.reg"]], "value() (pyb.pin method)": [[91, "pyb.Pin.value"]], "rtc (class in pyb)": [[92, "pyb.RTC"]], "calibration() (pyb.rtc method)": [[92, "pyb.RTC.calibration"]], "datetime() (pyb.rtc method)": [[92, "pyb.RTC.datetime"]], "info() (pyb.rtc method)": [[92, "pyb.RTC.info"]], "wakeup() (pyb.rtc method)": [[92, "pyb.RTC.wakeup"]], "spi (class in pyb)": [[93, "pyb.SPI"]], "spi.controller (in module pyb)": [[93, "pyb.SPI.CONTROLLER"]], "spi.lsb (in module pyb)": [[93, "pyb.SPI.LSB"]], "spi.msb (in module pyb)": [[93, "pyb.SPI.MSB"]], "spi.peripheral (in module pyb)": [[93, "pyb.SPI.PERIPHERAL"]], "deinit() (pyb.spi method)": [[93, "pyb.SPI.deinit"]], "init() (pyb.spi method)": [[93, "pyb.SPI.init"]], "recv() (pyb.spi method)": [[93, "pyb.SPI.recv"]], "send() (pyb.spi method)": [[93, "pyb.SPI.send"]], "send_recv() (pyb.spi method)": [[93, "pyb.SPI.send_recv"]], "servo (class in pyb)": [[94, "pyb.Servo"]], "angle() (pyb.servo method)": [[94, "pyb.Servo.angle"]], "calibration() (pyb.servo method)": [[94, "pyb.Servo.calibration"]], "pulse_width() (pyb.servo method)": [[94, "pyb.Servo.pulse_width"]], "speed() (pyb.servo method)": [[94, "pyb.Servo.speed"]], "timer (class in pyb)": [[95, "pyb.Timer"]], "timer.brk_high (in module pyb)": [[95, "pyb.Timer.BRK_HIGH"]], "timer.brk_low (in module pyb)": [[95, "pyb.Timer.BRK_LOW"]], "timer.brk_off (in module pyb)": [[95, "pyb.Timer.BRK_OFF"]], "timer.center (in module pyb)": [[95, "pyb.Timer.CENTER"]], "timer.down (in module pyb)": [[95, "pyb.Timer.DOWN"]], "timer.up (in module pyb)": [[95, "pyb.Timer.UP"]], "callback() (pyb.timer method)": [[95, "pyb.Timer.callback"]], "callback() (pyb.timerchannel method)": [[95, "pyb.timerchannel.callback"]], "capture() (pyb.timerchannel method)": [[95, "pyb.timerchannel.capture"]], "channel() (pyb.timer method)": [[95, "pyb.Timer.channel"]], "compare() (pyb.timerchannel method)": [[95, "pyb.timerchannel.compare"]], "counter() (pyb.timer method)": [[95, "pyb.Timer.counter"]], "deinit() (pyb.timer method)": [[95, "pyb.Timer.deinit"]], "freq() (pyb.timer method)": [[95, "pyb.Timer.freq"]], "init() (pyb.timer method)": [[95, "pyb.Timer.init"]], "period() (pyb.timer method)": [[95, "pyb.Timer.period"]], "prescaler() (pyb.timer method)": [[95, "pyb.Timer.prescaler"]], "pulse_width() (pyb.timerchannel method)": [[95, "pyb.timerchannel.pulse_width"]], "pulse_width_percent() (pyb.timerchannel method)": [[95, "pyb.timerchannel.pulse_width_percent"]], "source_freq() (pyb.timer method)": [[95, "pyb.Timer.source_freq"]], "uart (class in pyb)": [[96, "pyb.UART"]], "uart.cts (in module pyb)": [[96, "pyb.UART.CTS"]], "uart.rts (in module pyb)": [[96, "pyb.UART.RTS"]], "any() (pyb.uart method)": [[96, "pyb.UART.any"]], "deinit() (pyb.uart method)": [[96, "pyb.UART.deinit"]], "init() (pyb.uart method)": [[96, "pyb.UART.init"]], "read() (pyb.uart method)": [[96, "pyb.UART.read"]], "readchar() (pyb.uart method)": [[96, "pyb.UART.readchar"]], "readinto() (pyb.uart method)": [[96, "pyb.UART.readinto"]], "readline() (pyb.uart method)": [[96, "pyb.UART.readline"]], "sendbreak() (pyb.uart method)": [[96, "pyb.UART.sendbreak"]], "write() (pyb.uart method)": [[96, "pyb.UART.write"]], "writechar() (pyb.uart method)": [[96, "pyb.UART.writechar"]], "usb_hid (class in pyb)": [[97, "pyb.USB_HID"]], "recv() (pyb.usb_hid method)": [[97, "pyb.USB_HID.recv"]], "send() (pyb.usb_hid method)": [[97, "pyb.USB_HID.send"]], "usb_vcp (class in pyb)": [[98, "pyb.USB_VCP"]], "usb_vcp.cts (in module pyb)": [[98, "pyb.USB_VCP.CTS"]], "usb_vcp.irq_rx (in module pyb)": [[98, "pyb.USB_VCP.IRQ_RX"]], "usb_vcp.rts (in module pyb)": [[98, "pyb.USB_VCP.RTS"]], "any() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.any"]], "close() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.close"]], "debug_mode_enabled() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.debug_mode_enabled"]], "init() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.init"]], "irq() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.irq"]], "isconnected() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.isconnected"]], "read() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.read"]], "readinto() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.readinto"]], "readline() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.readline"]], "readlines() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.readlines"]], "recv() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.recv"]], "send() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.send"]], "setinterrupt() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.setinterrupt"]], "write() (pyb.usb_vcp method)": [[98, "pyb.USB_VCP.write"]], "choice() (in module random)": [[99, "random.choice"]], "getrandbits() (in module random)": [[99, "random.getrandbits"]], "randint() (in module random)": [[99, "random.randint"]], "random": [[99, "module-random"]], "random() (in module random)": [[99, "random.random"]], "randrange() (in module random)": [[99, "random.randrange"]], "seed() (in module random)": [[99, "random.seed"]], "uniform() (in module random)": [[99, "random.uniform"]], "debug (in module re)": [[100, "re.DEBUG"]], "compile() (in module re)": [[100, "re.compile"]], "end() (re.match method)": [[100, "re.match.end"]], "group() (re.match method)": [[100, "re.match.group"]], "groups() (re.match method)": [[100, "re.match.groups"]], "match() (in module re)": [[100, "re.match"]], "match() (re.regex method)": [[100, "re.regex.match"]], "re": [[100, "module-re"]], "search() (in module re)": [[100, "re.search"]], "search() (re.regex method)": [[100, "re.regex.search"]], "span() (re.match method)": [[100, "re.match.span"]], "split() (re.regex method)": [[100, "re.regex.split"]], "start() (re.match method)": [[100, "re.match.start"]], "sub() (in module re)": [[100, "re.sub"]], "sub() (re.regex method)": [[100, "re.regex.sub"]], "ipoll() (select.poll method)": [[101, "select.poll.ipoll"]], "modify() (select.poll method)": [[101, "select.poll.modify"]], "poll() (in module select)": [[101, "select.poll"]], "poll() (select.poll method)": [[101, "select.poll.poll"]], "register() (select.poll method)": [[101, "select.poll.register"]], "select": [[101, "module-select"]], "select() (in module select)": [[101, "select.select"]], "unregister() (select.poll method)": [[101, "select.poll.unregister"]], "af_inet (in module socket)": [[102, "socket.AF_INET"]], "af_inet6 (in module socket)": [[102, "socket.AF_INET6"]], "ipproto_tcp (in module socket)": [[102, "socket.IPPROTO_TCP"]], "ipproto_udp (in module socket)": [[102, "socket.IPPROTO_UDP"]], "sock_dgram (in module socket)": [[102, "socket.SOCK_DGRAM"]], "sock_stream (in module socket)": [[102, "socket.SOCK_STREAM"]], "accept() (socket.socket method)": [[102, "socket.socket.accept"]], "bind() (socket.socket method)": [[102, "socket.socket.bind"]], "close() (socket.socket method)": [[102, "socket.socket.close"]], "connect() (socket.socket method)": [[102, "socket.socket.connect"]], "getaddrinfo() (in module socket)": [[102, "socket.getaddrinfo"]], "inet_ntop() (in module socket)": [[102, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[102, "socket.inet_pton"]], "listen() (socket.socket method)": [[102, "socket.socket.listen"]], "makefile() (socket.socket method)": [[102, "socket.socket.makefile"]], "read() (socket.socket method)": [[102, "socket.socket.read"]], "readinto() (socket.socket method)": [[102, "socket.socket.readinto"]], "readline() (socket.socket method)": [[102, "socket.socket.readline"]], "recv() (socket.socket method)": [[102, "socket.socket.recv"]], "recvfrom() (socket.socket method)": [[102, "socket.socket.recvfrom"]], "send() (socket.socket method)": [[102, "socket.socket.send"]], "sendall() (socket.socket method)": [[102, "socket.socket.sendall"]], "sendto() (socket.socket method)": [[102, "socket.socket.sendto"]], "setblocking() (socket.socket method)": [[102, "socket.socket.setblocking"]], "setsockopt() (socket.socket method)": [[102, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[102, "socket.socket.settimeout"]], "socket": [[102, "module-socket"]], "socket (class in socket)": [[102, "socket.socket"]], "socket.error": [[102, "socket.socket.error"]], "write() (socket.socket method)": [[102, "socket.socket.write"]], "sslcontext (class in ssl)": [[103, "ssl.SSLContext"]], "get_ciphers() (ssl.sslcontext method)": [[103, "ssl.SSLContext.get_ciphers"]], "load_cert_chain() (ssl.sslcontext method)": [[103, "ssl.SSLContext.load_cert_chain"]], "load_verify_locations() (ssl.sslcontext method)": [[103, "ssl.SSLContext.load_verify_locations"]], "set_ciphers() (ssl.sslcontext method)": [[103, "ssl.SSLContext.set_ciphers"]], "ssl": [[103, "module-ssl"]], "ssl.cert_none (in module ssl)": [[103, "ssl.ssl.CERT_NONE"]], "ssl.cert_optional (in module ssl)": [[103, "ssl.ssl.CERT_OPTIONAL"]], "ssl.cert_required (in module ssl)": [[103, "ssl.ssl.CERT_REQUIRED"]], "ssl.protocol_tls_client (in module ssl)": [[103, "ssl.ssl.PROTOCOL_TLS_CLIENT"]], "ssl.protocol_tls_server (in module ssl)": [[103, "ssl.ssl.PROTOCOL_TLS_SERVER"]], "ssl.sslerror (in module ssl)": [[103, "ssl.ssl.SSLError"]], "ssl.wrap_socket() (in module ssl)": [[103, "ssl.ssl.wrap_socket"]], "verify_mode (ssl.sslcontext attribute)": [[103, "ssl.SSLContext.verify_mode"]], "wrap_socket() (ssl.sslcontext method)": [[103, "ssl.SSLContext.wrap_socket"]], "gpioa (in module stm)": [[104, "stm.GPIOA"]], "gpiob (in module stm)": [[104, "stm.GPIOB"]], "gpio_bsrr (in module stm)": [[104, "stm.GPIO_BSRR"]], "gpio_idr (in module stm)": [[104, "stm.GPIO_IDR"]], "gpio_odr (in module stm)": [[104, "stm.GPIO_ODR"]], "mem16 (in module stm)": [[104, "stm.mem16"]], "mem32 (in module stm)": [[104, "stm.mem32"]], "mem8 (in module stm)": [[104, "stm.mem8"]], "rfcore_fw_version() (in module stm)": [[104, "stm.rfcore_fw_version"]], "rfcore_status() (in module stm)": [[104, "stm.rfcore_status"]], "rfcore_sys_hci() (in module stm)": [[104, "stm.rfcore_sys_hci"]], "stm": [[104, "module-stm"]], "subghz_cs() (in module stm)": [[104, "stm.subghz_cs"]], "subghz_irq() (in module stm)": [[104, "stm.subghz_irq"]], "subghz_is_busy() (in module stm)": [[104, "stm.subghz_is_busy"]], "calcsize() (in module struct)": [[105, "struct.calcsize"]], "pack() (in module struct)": [[105, "struct.pack"]], "pack_into() (in module struct)": [[105, "struct.pack_into"]], "struct": [[105, "module-struct"]], "unpack() (in module struct)": [[105, "struct.unpack"]], "unpack_from() (in module struct)": [[105, "struct.unpack_from"]], "argv (in module sys)": [[106, "sys.argv"]], "atexit() (in module sys)": [[106, "sys.atexit"]], "byteorder (in module sys)": [[106, "sys.byteorder"]], "exit() (in module sys)": [[106, "sys.exit"]], "implementation (in module sys)": [[106, "sys.implementation"]], "maxsize (in module sys)": [[106, "sys.maxsize"]], "modules (in module sys)": [[106, "sys.modules"]], "path (in module sys)": [[106, "sys.path"]], "platform (in module sys)": [[106, "sys.platform"]], "print_exception() (in module sys)": [[106, "sys.print_exception"]], "ps1 (in module sys)": [[106, "sys.ps1"]], "ps2 (in module sys)": [[106, "sys.ps2"]], "settrace() (in module sys)": [[106, "sys.settrace"]], "stderr (in module sys)": [[106, "sys.stderr"]], "stdin (in module sys)": [[106, "sys.stdin"]], "stdout (in module sys)": [[106, "sys.stdout"]], "sys": [[106, "module-sys"]], "tracebacklimit (in module sys)": [[106, "sys.tracebacklimit"]], "version (in module sys)": [[106, "sys.version"]], "version_info (in module sys)": [[106, "sys.version_info"]], "avg() (time.clock method)": [[107, "time.clock.avg"]], "clock (class in time)": [[107, "time.clock"]], "fps() (time.clock method)": [[107, "time.clock.fps"]], "gmtime() (in module time)": [[107, "time.gmtime"]], "localtime() (in module time)": [[107, "time.localtime"]], "mktime() (in module time)": [[107, "time.mktime"]], "reset() (time.clock method)": [[107, "time.clock.reset"]], "sleep() (in module time)": [[107, "time.sleep"]], "sleep_ms() (in module time)": [[107, "time.sleep_ms"]], "sleep_us() (in module time)": [[107, "time.sleep_us"]], "tick() (time.clock method)": [[107, "time.clock.tick"]], "ticks_add() (in module time)": [[107, "time.ticks_add"]], "ticks_cpu() (in module time)": [[107, "time.ticks_cpu"]], "ticks_diff() (in module time)": [[107, "time.ticks_diff"]], "ticks_ms() (in module time)": [[107, "time.ticks_ms"]], "ticks_us() (in module time)": [[107, "time.ticks_us"]], "time": [[107, "module-time"]], "time() (in module time)": [[107, "time.time"]], "time_ns() (in module time)": [[107, "time.time_ns"]], "array (in module uctypes)": [[108, "uctypes.ARRAY"]], "big_endian (in module uctypes)": [[108, "uctypes.BIG_ENDIAN"]], "float32 (in module uctypes)": [[108, "uctypes.FLOAT32"]], "float64 (in module uctypes)": [[108, "uctypes.FLOAT64"]], "int16 (in module uctypes)": [[108, "uctypes.INT16"]], "int32 (in module uctypes)": [[108, "uctypes.INT32"]], "int64 (in module uctypes)": [[108, "uctypes.INT64"]], "int8 (in module uctypes)": [[108, "uctypes.INT8"]], "little_endian (in module uctypes)": [[108, "uctypes.LITTLE_ENDIAN"]], "native (in module uctypes)": [[108, "uctypes.NATIVE"]], "ptr (in module uctypes)": [[108, "uctypes.PTR"]], "uint16 (in module uctypes)": [[108, "uctypes.UINT16"]], "uint32 (in module uctypes)": [[108, "uctypes.UINT32"]], "uint64 (in module uctypes)": [[108, "uctypes.UINT64"]], "uint8 (in module uctypes)": [[108, "uctypes.UINT8"]], "void (in module uctypes)": [[108, "uctypes.VOID"]], "addressof() (in module uctypes)": [[108, "uctypes.addressof"]], "bytearray_at() (in module uctypes)": [[108, "uctypes.bytearray_at"]], "bytes_at() (in module uctypes)": [[108, "uctypes.bytes_at"]], "sizeof() (in module uctypes)": [[108, "uctypes.sizeof"]], "struct (class in uctypes)": [[108, "uctypes.struct"]], "uctypes": [[108, "module-uctypes"]], "ping() (in module uping)": [[109, "uping.ping"]], "uping": [[109, "module-uping"]], "response (class in urequests)": [[110, "urequests.Response"]], "response.content() (in module urequests)": [[110, "urequests.Response.content"]], "response.headers() (in module urequests)": [[110, "urequests.Response.headers"]], "delete() (in module urequests)": [[110, "urequests.delete"]], "get() (in module urequests)": [[110, "urequests.get"]], "head() (in module urequests)": [[110, "urequests.head"]], "json() (urequests.response method)": [[110, "urequests.Response.json"]], "patch() (in module urequests)": [[110, "urequests.patch"]], "post() (in module urequests)": [[110, "urequests.post"]], "put() (in module urequests)": [[110, "urequests.put"]], "request() (in module urequests)": [[110, "urequests.request"]], "urequests": [[110, "module-urequests"]], "abstractblockdev (class in vfs)": [[111, "vfs.AbstractBlockDev"]], "vfsfat (class in vfs)": [[111, "vfs.VfsFat"]], "vfslfs1 (class in vfs)": [[111, "vfs.VfsLfs1"]], "vfslfs2 (class in vfs)": [[111, "vfs.VfsLfs2"]], "vfsposix (class in vfs)": [[111, "vfs.VfsPosix"]], "ioctl() (vfs.abstractblockdev method)": [[111, "vfs.AbstractBlockDev.ioctl"]], "mkfs() (vfs.vfsfat static method)": [[111, "vfs.VfsFat.mkfs"]], "mkfs() (vfs.vfslfs1 static method)": [[111, "vfs.VfsLfs1.mkfs"]], "mkfs() (vfs.vfslfs2 static method)": [[111, "vfs.VfsLfs2.mkfs"]], "mount() (in module vfs)": [[111, "vfs.mount"]], "readblocks() (vfs.abstractblockdev method)": [[111, "vfs.AbstractBlockDev.readblocks"]], "umount() (in module vfs)": [[111, "vfs.umount"]], "vfs": [[111, "module-vfs"]], "writeblocks() (vfs.abstractblockdev method)": [[111, "vfs.AbstractBlockDev.writeblocks"]], "compress() (in module zlib)": [[112, "zlib.compress"]], "decompress() (in module zlib)": [[112, "zlib.decompress"]], "zlib": [[112, "module-zlib"]], ".mpy file": [[145, "term-.mpy-file"]], ".py file": [[145, "term-.py-file"]], "cpython": [[145, "term-CPython"]], "circuitpython": [[145, "term-CircuitPython"]], "ffi": [[145, "term-FFI"]], "gpio": [[145, "term-GPIO"]], "gpio port": [[145, "term-GPIO-port"]], "garbage collector": [[145, "term-Garbage-Collector"]], "mcu": [[145, "term-MCU"]], "micropython unix port": [[145, "term-MicroPython-Unix-port"]], "micropython port": [[145, "term-MicroPython-port"]], "repl": [[145, "term-REPL"]], "uart": [[145, "term-UART"]], "baremetal": [[145, "term-baremetal"]], "board": [[145, "term-board"]], "buffer protocol": [[145, "term-buffer-protocol"]], "bytecode": [[145, "term-bytecode"]], "callee-owned tuple": [[145, "term-callee-owned-tuple"]], "cross-compiler": [[145, "term-cross-compiler"]], "driver": [[145, "term-driver"]], "filesystem": [[145, "term-filesystem"]], "frozen module": [[145, "term-frozen-module"]], "heap": [[145, "term-heap"]], "interned string": [[145, "term-interned-string"]], "micropython-lib": [[145, "term-micropython-lib"]], "mip": [[145, "term-mip"]], "mpremote": [[145, "term-mpremote"]], "native": [[145, "term-native"]], "port": [[145, "term-port"]], "stream": [[145, "term-stream"]], "upip": [[145, "term-upip"]], "webrepl": [[145, "term-webrepl"]], "add_library()": [[148, "add_library"]], "freeze()": [[148, "freeze"]], "freeze_as_mpy()": [[148, "freeze_as_mpy"]], "freeze_as_str()": [[148, "freeze_as_str"]], "freeze_mpy()": [[148, "freeze_mpy"]], "include()": [[148, "include"]], "metadata()": [[148, "metadata"]], "module()": [[148, "module"]], "package()": [[148, "package"]], "require()": [[148, "require"]]}})