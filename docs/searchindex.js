Search.setIndex({"docnames": ["develop/cmodules", "develop/compiler", "develop/extendingmicropython", "develop/gettingstarted", "develop/index", "develop/library", "develop/maps", "develop/memorymgt", "develop/natmod", "develop/optimizations", "develop/porting", "develop/publiccapi", "develop/qstr", "develop/writingtests", "differences/python_310", "differences/python_35", "differences/python_36", "differences/python_37", "differences/python_38", "differences/python_39", "esp32/general", "esp32/quickref", "esp32/tutorial/index", "esp32/tutorial/intro", "esp32/tutorial/peripheral_access", "esp32/tutorial/pwm", "esp8266/general", "esp8266/quickref", "esp8266/tutorial/adc", "esp8266/tutorial/apa102", "esp8266/tutorial/dht", "esp8266/tutorial/filesystem", "esp8266/tutorial/index", "esp8266/tutorial/intro", "esp8266/tutorial/neopixel", "esp8266/tutorial/network_basics", "esp8266/tutorial/network_tcp", "esp8266/tutorial/nextsteps", "esp8266/tutorial/onewire", "esp8266/tutorial/pins", "esp8266/tutorial/powerctrl", "esp8266/tutorial/pwm", "esp8266/tutorial/repl", "esp8266/tutorial/ssd1306", "genrst/builtin_types", "genrst/core_language", "genrst/index", "genrst/modules", "genrst/syntax", "index", "library/_thread", "library/array", "library/asyncio", "library/binascii", "library/bluetooth", "library/btree", "library/builtins", "library/cmath", "library/collections", "library/cryptolib", "library/deflate", "library/errno", "library/esp", "library/esp32", "library/espnow", "library/framebuf", "library/gc", "library/gzip", "library/hashlib", "library/heapq", "library/index", "library/io", "library/json", "library/lcd160cr", "library/machine", "library/machine.ADC", "library/machine.ADCBlock", "library/machine.ADCWiPy", "library/machine.CAN", "library/machine.I2C", "library/machine.I2S", "library/machine.PWM", "library/machine.Pin", "library/machine.RTC", "library/machine.SD", "library/machine.SDCard", "library/machine.SPI", "library/machine.Signal", "library/machine.Timer", "library/machine.TimerWiPy", "library/machine.UART", "library/machine.WDT", "library/math", "library/micropython", "library/mutex", "library/neopixel", "library/network", "library/network.LAN", "library/network.WINC", "library/network.WIZNET5K", "library/network.WLAN", "library/network.WLANWiPy", "library/omv.audio", "library/omv.buzzer", "library/omv.cpufreq", "library/omv.display", "library/omv.display.DACBacklight", "library/omv.display.PWMBacklight", "library/omv.display.ST7701", "library/omv.display.displaydata", "library/omv.display.dsidisplay", "library/omv.display.rgbdisplay", "library/omv.display.spidisplay", "library/omv.fir", "library/omv.ft5x06", "library/omv.gif", "library/omv.gt911", "library/omv.image", "library/omv.imu", "library/omv.micro_speech", "library/omv.mjpeg", "library/omv.omv", "library/omv.rpc", "library/omv.rtsp", "library/omv.sensor", "library/omv.tf", "library/omv.tfp410", "library/omv.tv", "library/os", "library/platform", "library/pyb", "library/pyb.ADC", "library/pyb.Accel", "library/pyb.CAN", "library/pyb.DAC", "library/pyb.ExtInt", "library/pyb.Flash", "library/pyb.I2C", "library/pyb.LCD", "library/pyb.LED", "library/pyb.Pin", "library/pyb.RTC", "library/pyb.SPI", "library/pyb.Servo", "library/pyb.Switch", "library/pyb.Timer", "library/pyb.UART", "library/pyb.USB_HID", "library/pyb.USB_VCP", "library/random", "library/re", "library/rp2", "library/rp2.Flash", "library/rp2.PIO", "library/rp2.StateMachine", "library/select", "library/socket", "library/ssl", "library/stm", "library/struct", "library/sys", "library/time", "library/uctypes", "library/uping", "library/urequests", "library/wipy", "library/wm8960", "library/zephyr", "library/zephyr.DiskAccess", "library/zephyr.FlashArea", "library/zephyr.zsensor", "library/zlib", "license", "mimxrt/general", "mimxrt/pinout", "mimxrt/quickref", "mimxrt/tutorial/intro", "openmvcam/general", "openmvcam/quickref", "openmvcam/tutorial/analog_io", "openmvcam/tutorial/gpio_control", "openmvcam/tutorial/hardware_setup", "openmvcam/tutorial/index", "openmvcam/tutorial/io_tutorial", "openmvcam/tutorial/led_control", "openmvcam/tutorial/more_information", "openmvcam/tutorial/openmvide_overview", "openmvcam/tutorial/overview", "openmvcam/tutorial/production", "openmvcam/tutorial/script_structure", "openmvcam/tutorial/software_setup", "openmvcam/tutorial/system_architecture", "openmvcam/tutorial/uart_control", "pyboard/general", "pyboard/hardware/index", "pyboard/quickref", "pyboard/tutorial/accel", "pyboard/tutorial/amp_skin", "pyboard/tutorial/assembler", "pyboard/tutorial/debounce", "pyboard/tutorial/fading_led", "pyboard/tutorial/index", "pyboard/tutorial/intro", "pyboard/tutorial/lcd160cr_skin", "pyboard/tutorial/lcd_skin", "pyboard/tutorial/leds", "pyboard/tutorial/pass_through", "pyboard/tutorial/power_ctrl", "pyboard/tutorial/repl", "pyboard/tutorial/reset", "pyboard/tutorial/script", "pyboard/tutorial/servo", "pyboard/tutorial/switch", "pyboard/tutorial/timer", "pyboard/tutorial/usb_mouse", "reference/asm_thumb2_arith", "reference/asm_thumb2_compare", "reference/asm_thumb2_directives", "reference/asm_thumb2_float", "reference/asm_thumb2_hints_tips", "reference/asm_thumb2_index", "reference/asm_thumb2_label_branch", "reference/asm_thumb2_ldr", "reference/asm_thumb2_logical_bit", "reference/asm_thumb2_misc", "reference/asm_thumb2_mov", "reference/asm_thumb2_stack", "reference/asm_thumb2_str", "reference/constrained", "reference/filesystem", "reference/glossary", "reference/index", "reference/isr_rules", "reference/manifest", "reference/micropython2_migration", "reference/mpremote", "reference/mpyfiles", "reference/packages", "reference/pyboard.py", "reference/repl", "reference/speed_python", "renesas-ra/general", "renesas-ra/quickref", "renesas-ra/tutorial/index", "renesas-ra/tutorial/intro", "renesas-ra/tutorial/program_in_flash", "renesas-ra/tutorial/reset", "renesas-ra/tutorial/troubleshooting", "renesas-ra/tutorial/using_peripheral", "rp2/general", "rp2/quickref", "rp2/tutorial/intro", "rp2/tutorial/pio", "samd/general", "samd/pinout", "samd/quickref", "samd/tutorial/intro", "unix/quickref", "wipy/general", "wipy/quickref", "wipy/tutorial/blynk", "wipy/tutorial/index", "wipy/tutorial/intro", "wipy/tutorial/repl", "wipy/tutorial/reset", "wipy/tutorial/timer", "wipy/tutorial/wlan", "zephyr/general", "zephyr/quickref", "zephyr/tutorial/index", "zephyr/tutorial/intro", "zephyr/tutorial/pins", "zephyr/tutorial/repl", "zephyr/tutorial/storage"], "filenames": ["develop/cmodules.rst", "develop/compiler.rst", "develop/extendingmicropython.rst", "develop/gettingstarted.rst", "develop/index.rst", "develop/library.rst", "develop/maps.rst", "develop/memorymgt.rst", "develop/natmod.rst", "develop/optimizations.rst", "develop/porting.rst", "develop/publiccapi.rst", "develop/qstr.rst", "develop/writingtests.rst", "differences/python_310.rst", "differences/python_35.rst", "differences/python_36.rst", "differences/python_37.rst", "differences/python_38.rst", "differences/python_39.rst", "esp32/general.rst", "esp32/quickref.rst", "esp32/tutorial/index.rst", "esp32/tutorial/intro.rst", "esp32/tutorial/peripheral_access.rst", "esp32/tutorial/pwm.rst", "esp8266/general.rst", "esp8266/quickref.rst", "esp8266/tutorial/adc.rst", "esp8266/tutorial/apa102.rst", "esp8266/tutorial/dht.rst", "esp8266/tutorial/filesystem.rst", "esp8266/tutorial/index.rst", "esp8266/tutorial/intro.rst", "esp8266/tutorial/neopixel.rst", "esp8266/tutorial/network_basics.rst", "esp8266/tutorial/network_tcp.rst", "esp8266/tutorial/nextsteps.rst", "esp8266/tutorial/onewire.rst", "esp8266/tutorial/pins.rst", "esp8266/tutorial/powerctrl.rst", "esp8266/tutorial/pwm.rst", "esp8266/tutorial/repl.rst", "esp8266/tutorial/ssd1306.rst", "genrst/builtin_types.rst", "genrst/core_language.rst", "genrst/index.rst", "genrst/modules.rst", "genrst/syntax.rst", "index.rst", "library/_thread.rst", "library/array.rst", "library/asyncio.rst", "library/binascii.rst", "library/bluetooth.rst", "library/btree.rst", "library/builtins.rst", "library/cmath.rst", "library/collections.rst", "library/cryptolib.rst", "library/deflate.rst", "library/errno.rst", "library/esp.rst", "library/esp32.rst", "library/espnow.rst", "library/framebuf.rst", "library/gc.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/index.rst", "library/io.rst", "library/json.rst", "library/lcd160cr.rst", "library/machine.rst", "library/machine.ADC.rst", "library/machine.ADCBlock.rst", "library/machine.ADCWiPy.rst", "library/machine.CAN.rst", "library/machine.I2C.rst", "library/machine.I2S.rst", "library/machine.PWM.rst", "library/machine.Pin.rst", "library/machine.RTC.rst", "library/machine.SD.rst", "library/machine.SDCard.rst", "library/machine.SPI.rst", "library/machine.Signal.rst", "library/machine.Timer.rst", "library/machine.TimerWiPy.rst", "library/machine.UART.rst", "library/machine.WDT.rst", "library/math.rst", "library/micropython.rst", "library/mutex.rst", "library/neopixel.rst", "library/network.rst", "library/network.LAN.rst", "library/network.WINC.rst", "library/network.WIZNET5K.rst", "library/network.WLAN.rst", "library/network.WLANWiPy.rst", "library/omv.audio.rst", "library/omv.buzzer.rst", "library/omv.cpufreq.rst", "library/omv.display.rst", "library/omv.display.DACBacklight.rst", "library/omv.display.PWMBacklight.rst", "library/omv.display.ST7701.rst", "library/omv.display.displaydata.rst", "library/omv.display.dsidisplay.rst", "library/omv.display.rgbdisplay.rst", "library/omv.display.spidisplay.rst", "library/omv.fir.rst", "library/omv.ft5x06.rst", "library/omv.gif.rst", "library/omv.gt911.rst", "library/omv.image.rst", "library/omv.imu.rst", "library/omv.micro_speech.rst", "library/omv.mjpeg.rst", "library/omv.omv.rst", "library/omv.rpc.rst", "library/omv.rtsp.rst", "library/omv.sensor.rst", "library/omv.tf.rst", "library/omv.tfp410.rst", "library/omv.tv.rst", "library/os.rst", "library/platform.rst", "library/pyb.rst", "library/pyb.ADC.rst", "library/pyb.Accel.rst", "library/pyb.CAN.rst", "library/pyb.DAC.rst", "library/pyb.ExtInt.rst", "library/pyb.Flash.rst", "library/pyb.I2C.rst", "library/pyb.LCD.rst", "library/pyb.LED.rst", "library/pyb.Pin.rst", "library/pyb.RTC.rst", "library/pyb.SPI.rst", "library/pyb.Servo.rst", "library/pyb.Switch.rst", "library/pyb.Timer.rst", "library/pyb.UART.rst", "library/pyb.USB_HID.rst", "library/pyb.USB_VCP.rst", "library/random.rst", "library/re.rst", "library/rp2.rst", "library/rp2.Flash.rst", "library/rp2.PIO.rst", "library/rp2.StateMachine.rst", "library/select.rst", "library/socket.rst", "library/ssl.rst", "library/stm.rst", "library/struct.rst", "library/sys.rst", "library/time.rst", "library/uctypes.rst", "library/uping.rst", "library/urequests.rst", "library/wipy.rst", "library/wm8960.rst", "library/zephyr.rst", "library/zephyr.DiskAccess.rst", "library/zephyr.FlashArea.rst", "library/zephyr.zsensor.rst", "library/zlib.rst", "license.rst", "mimxrt/general.rst", "mimxrt/pinout.rst", "mimxrt/quickref.rst", "mimxrt/tutorial/intro.rst", "openmvcam/general.rst", "openmvcam/quickref.rst", "openmvcam/tutorial/analog_io.rst", "openmvcam/tutorial/gpio_control.rst", "openmvcam/tutorial/hardware_setup.rst", "openmvcam/tutorial/index.rst", "openmvcam/tutorial/io_tutorial.rst", "openmvcam/tutorial/led_control.rst", "openmvcam/tutorial/more_information.rst", "openmvcam/tutorial/openmvide_overview.rst", "openmvcam/tutorial/overview.rst", "openmvcam/tutorial/production.rst", "openmvcam/tutorial/script_structure.rst", "openmvcam/tutorial/software_setup.rst", "openmvcam/tutorial/system_architecture.rst", "openmvcam/tutorial/uart_control.rst", "pyboard/general.rst", "pyboard/hardware/index.rst", "pyboard/quickref.rst", "pyboard/tutorial/accel.rst", "pyboard/tutorial/amp_skin.rst", "pyboard/tutorial/assembler.rst", "pyboard/tutorial/debounce.rst", "pyboard/tutorial/fading_led.rst", "pyboard/tutorial/index.rst", "pyboard/tutorial/intro.rst", "pyboard/tutorial/lcd160cr_skin.rst", "pyboard/tutorial/lcd_skin.rst", "pyboard/tutorial/leds.rst", "pyboard/tutorial/pass_through.rst", "pyboard/tutorial/power_ctrl.rst", "pyboard/tutorial/repl.rst", "pyboard/tutorial/reset.rst", "pyboard/tutorial/script.rst", "pyboard/tutorial/servo.rst", "pyboard/tutorial/switch.rst", "pyboard/tutorial/timer.rst", "pyboard/tutorial/usb_mouse.rst", "reference/asm_thumb2_arith.rst", "reference/asm_thumb2_compare.rst", "reference/asm_thumb2_directives.rst", "reference/asm_thumb2_float.rst", "reference/asm_thumb2_hints_tips.rst", "reference/asm_thumb2_index.rst", "reference/asm_thumb2_label_branch.rst", "reference/asm_thumb2_ldr.rst", "reference/asm_thumb2_logical_bit.rst", "reference/asm_thumb2_misc.rst", "reference/asm_thumb2_mov.rst", "reference/asm_thumb2_stack.rst", "reference/asm_thumb2_str.rst", "reference/constrained.rst", "reference/filesystem.rst", "reference/glossary.rst", "reference/index.rst", "reference/isr_rules.rst", "reference/manifest.rst", "reference/micropython2_migration.rst", "reference/mpremote.rst", "reference/mpyfiles.rst", "reference/packages.rst", "reference/pyboard.py.rst", "reference/repl.rst", "reference/speed_python.rst", "renesas-ra/general.rst", "renesas-ra/quickref.rst", "renesas-ra/tutorial/index.rst", "renesas-ra/tutorial/intro.rst", "renesas-ra/tutorial/program_in_flash.rst", "renesas-ra/tutorial/reset.rst", "renesas-ra/tutorial/troubleshooting.rst", "renesas-ra/tutorial/using_peripheral.rst", "rp2/general.rst", "rp2/quickref.rst", "rp2/tutorial/intro.rst", "rp2/tutorial/pio.rst", "samd/general.rst", "samd/pinout.rst", "samd/quickref.rst", "samd/tutorial/intro.rst", "unix/quickref.rst", "wipy/general.rst", "wipy/quickref.rst", "wipy/tutorial/blynk.rst", "wipy/tutorial/index.rst", "wipy/tutorial/intro.rst", "wipy/tutorial/repl.rst", "wipy/tutorial/reset.rst", "wipy/tutorial/timer.rst", "wipy/tutorial/wlan.rst", "zephyr/general.rst", "zephyr/quickref.rst", "zephyr/tutorial/index.rst", "zephyr/tutorial/intro.rst", "zephyr/tutorial/pins.rst", "zephyr/tutorial/repl.rst", "zephyr/tutorial/storage.rst"], "titles": ["MicroPython external C modules", "The Compiler", "Extending MicroPython in C", "Getting Started", "MicroPython Internals", "Implementing a Module", "Maps and Dictionaries", "Memory Management", "Native machine code in .mpy files", "Optimizations", "Porting MicroPython", "The public C API", "MicroPython string interning", "Writing tests", "Python 3.10", "Python 3.5", "Python 3.6", "Python 3.7", "Python 3.8", "Python 3.9", "General information about the ESP32 port", "Quick reference for the ESP32", "MicroPython tutorial for ESP32", "<span class=\"section-number\">1. </span>Getting started with MicroPython on the ESP32", "<span class=\"section-number\">3. </span>Accessing peripherals directly via registers", "<span class=\"section-number\">2. </span>Pulse Width Modulation", "General information about the ESP8266 port", "Quick reference for the ESP8266", "<span class=\"section-number\">8. </span>Analog to Digital Conversion", "<span class=\"section-number\">12. </span>Controlling APA102 LEDs", "<span class=\"section-number\">13. </span>Temperature and Humidity", "<span class=\"section-number\">3. </span>The internal filesystem", "MicroPython tutorial for ESP8266", "<span class=\"section-number\">1. </span>Getting started with MicroPython on the ESP8266", "<span class=\"section-number\">11. </span>Controlling NeoPixels", "<span class=\"section-number\">4. </span>Network basics", "<span class=\"section-number\">5. </span>Network - TCP sockets", "<span class=\"section-number\">15. </span>Next steps", "<span class=\"section-number\">10. </span>Controlling 1-wire devices", "<span class=\"section-number\">6. </span>GPIO Pins", "<span class=\"section-number\">9. </span>Power control", "<span class=\"section-number\">7. </span>Pulse Width Modulation", "<span class=\"section-number\">2. </span>Getting a MicroPython REPL prompt", "<span class=\"section-number\">14. </span>Using a SSD1306 OLED display", "Builtin types", "Core language", "MicroPython differences from CPython", "Modules", "Syntax", "MicroPython documentation and references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2013 multithreading support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2013 arrays of numeric data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 asynchronous I/O scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2013 binary/ASCII conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bluetooth</span></code> \u2014 low-level Bluetooth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">btree</span></code> \u2013 simple BTree database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2013 builtin functions and exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2013 mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2013 collection and container types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cryptolib</span></code> \u2013 cryptographic ciphers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">deflate</span></code> \u2013 deflate compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2013 system error codes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">esp</span></code> \u2014 functions related to the ESP8266 and ESP32", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">esp32</span></code> \u2014 functionality specific to the ESP32", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">espnow</span></code> \u2014 support for the ESP-NOW wireless protocol", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">framebuf</span></code> \u2014 frame buffer manipulation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2013 control the garbage collector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2013 gzip compression &amp; decompression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2013 hashing algorithms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2013 heap queue algorithm", "MicroPython libraries", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2013 input/output streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2013 JSON encoding and decoding", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lcd160cr</span></code> \u2014 control of LCD160CR display", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">machine</span></code> \u2014 functions related to the hardware", "class ADC \u2013 analog to digital conversion", "class ADCBlock \u2013 control ADC peripherals", "class ADCWiPy \u2013 analog to digital conversion", "class CAN \u2013 controller area network communication bus", "class I2C \u2013 a two-wire serial protocol", "class I2S \u2013 Inter-IC Sound bus protocol", "class PWM \u2013 pulse width modulation", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SD \u2013 secure digital memory card (cc3200 port only)", "class SDCard \u2013 secure digital memory card", "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)", "class Signal \u2013 control and sense external I/O devices", "class Timer \u2013 control hardware timers", "class TimerWiPy \u2013 control hardware timers", "class UART \u2013 duplex serial communication bus", "class WDT \u2013 watchdog timer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2013 mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">micropython</span></code> \u2013 access and control MicroPython internals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mutex</span></code> \u2014 mutex module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neopixel</span></code> \u2014 control of WS2812 / NeoPixel LEDs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">network</span></code> \u2014 network configuration", "class LAN \u2013 control an Ethernet module", "class WINC \u2013 wifi shield driver", "class WIZNET5K \u2013 control WIZnet5x00 Ethernet modules", "class WLAN \u2013 control built-in WiFi interfaces", "class WLANWiPy \u2013 WiPy specific WiFi control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audio</span></code> \u2014 Audio Module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">buzzer</span></code> \u2014 buzzer driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cpufreq</span></code> \u2014 CPU Frequency Control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">display</span></code> \u2014 display driver", "class DACBacklight \u2013 DAC Backlight", "class PWMBacklight \u2013 PWM Backlight", "class ST7701 \u2013 Display Controller", "class DisplayData \u2013 Display Data", "class DSIDisplay \u2013 DSI Display Driver", "class RGBDisplay \u2013 RGB Display Driver", "class SPIDisplay \u2013 SPI Display Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fir</span></code> \u2014 thermal sensor driver (fir == far infrared)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ft5x06</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gif</span></code> \u2014 gif recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gt911</span></code> \u2014 Touch Screen Driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">image</span></code> \u2014 machine vision", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imu</span></code> \u2014 imu sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">micro_speech</span></code> \u2014 Micro Speech Audio Module Example", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mjpeg</span></code> \u2014 mjpeg recording", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">omv</span></code> \u2014 OpenMV Cam Information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rpc</span></code> \u2014 rpc library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rtsp</span></code> \u2014 rtsp library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sensor</span></code> \u2014 camera sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tf</span></code> \u2014 Tensor Flow", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfp410</span></code> \u2014 DVI/HDMI Controller", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tv</span></code> \u2014 tv shield driver", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2013 basic \u201coperating system\u201d services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2013 access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyb</span></code> \u2014 functions related to the board", "class ADC \u2013 analog to digital conversion", "class Accel \u2013 accelerometer control", "class CAN \u2013 controller area network communication bus", "class DAC \u2013 digital to analog conversion", "class ExtInt \u2013 configure I/O pins to interrupt on external events", "class Flash \u2013 access to built-in flash storage", "class I2C \u2013 a two-wire serial protocol", "class LCD \u2013 LCD control for the LCD touch-sensor pyskin", "class LED \u2013 LED object", "class Pin \u2013 control I/O pins", "class RTC \u2013 real time clock", "class SPI \u2013 a controller-driven serial protocol", "class Servo \u2013 3-wire hobby servo driver", "class Switch \u2013 switch object", "class Timer \u2013 control internal timers", "class UART \u2013 duplex serial communication bus", "class USB_HID \u2013 USB Human Interface Device (HID)", "class USB_VCP \u2013 USB virtual comm port", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2013 generate random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2013 simple regular expressions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rp2</span></code> \u2014 functionality specific to the RP2040", "class Flash \u2013 access to built-in flash storage", "class PIO \u2013 advanced PIO usage", "class StateMachine \u2013 access to the RP2040\u2019s programmable I/O interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2013 wait for events on a set of streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2013 socket module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2013 SSL/TLS module", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stm</span></code> \u2014 functionality specific to STM32 MCUs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2013 pack and unpack primitive data types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2013 system specific functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2013 time related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uctypes</span></code> \u2013 access binary data in a structured way", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uping</span></code> \u2014 Ping another computer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urequests</span></code> \u2014 Related functions of HTTP client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wipy</span></code> \u2013 WiPy specific features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">WM8960</span></code> \u2013 Driver for the WM8960 codec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zephyr</span></code> \u2014 functionality specific to the Zephyr port", "class DiskAccess \u2013 access to disk storage", "class FlashArea \u2013 access to built-in flash storage", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zsensor</span></code> \u2014 Zephyr sensor bindings", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2013 zlib compression &amp; decompression", "MicroPython license information", "General information about the MIMXRT port", "Pinout for the i.MXRT machine modules", "Quick reference for the i.MXRT family", "Getting started with MicroPython on the i.MXRT", "General information about the openmvcam", "Quick reference for the openmvcam", "<span class=\"section-number\">6.1.3. </span>Analog IO", "<span class=\"section-number\">6.1.2. </span>GPIO Control", "<span class=\"section-number\">3. </span>Hardware Setup", "OpenMV Cam Tutorial", "<span class=\"section-number\">6. </span>I/O Tutorial", "<span class=\"section-number\">6.1.1. </span>LED Control", "<span class=\"section-number\">9. </span>More Information", "<span class=\"section-number\">4. </span>OpenMV IDE Overview", "<span class=\"section-number\">1. </span>Overview", "<span class=\"section-number\">8. </span>Releasing your OpenMV Cam Scripts for Production", "<span class=\"section-number\">5. </span>Script Structure", "<span class=\"section-number\">2. </span>Software Setup", "<span class=\"section-number\">7. </span>System Architecture", "<span class=\"section-number\">6.1.4. </span>UART Control", "General information about the pyboard", "The pyboard hardware", "Quick reference for the pyboard", "<span class=\"section-number\">6. </span>The accelerometer", "<span class=\"section-number\">4. </span>The AMP audio skin", "<span class=\"section-number\">10. </span>Inline assembler", "<span class=\"section-number\">1. </span>Debouncing a pin input", "<span class=\"section-number\">2. </span>Fading LEDs", "MicroPython tutorial for the pyboard", "<span class=\"section-number\">1. </span>Introduction to the pyboard", "<span class=\"section-number\">5. </span>The LCD160CR skin", "<span class=\"section-number\">3. </span>The LCD and touch-sensor skin", "<span class=\"section-number\">4. </span>Turning on LEDs and basic Python concepts", "<span class=\"section-number\">2. </span>Making a UART - USB pass through", "<span class=\"section-number\">11. </span>Power control", "<span class=\"section-number\">3. </span>Getting a MicroPython REPL prompt", "<span class=\"section-number\">7. </span>Safe mode and factory reset", "<span class=\"section-number\">2. </span>Running your first script", "<span class=\"section-number\">1. </span>Controlling hobby servo motors", "<span class=\"section-number\">5. </span>Switches, callbacks and interrupts", "<span class=\"section-number\">9. </span>The Timers", "<span class=\"section-number\">8. </span>Making the pyboard act as a USB mouse", "<span class=\"section-number\">5. </span>Arithmetic instructions", "<span class=\"section-number\">6. </span>Comparison instructions", "<span class=\"section-number\">11. </span>Assembler directives", "<span class=\"section-number\">10. </span>Floating point instructions", "<span class=\"section-number\">1. </span>Hints and tips", "Inline assembler for Thumb2 architectures", "<span class=\"section-number\">7. </span>Branch instructions", "<span class=\"section-number\">2. </span>Load register from memory", "<span class=\"section-number\">4. </span>Logical &amp; bitwise instructions", "<span class=\"section-number\">9. </span>Miscellaneous instructions", "<span class=\"section-number\">1. </span>Register move instructions", "<span class=\"section-number\">8. </span>Stack push and pop", "<span class=\"section-number\">3. </span>Store register to memory", "MicroPython on microcontrollers", "Working with filesystems", "Glossary", "MicroPython language and implementation", "Writing interrupt handlers", "MicroPython manifest files", "MicroPython 2.0 Migration Guide", "MicroPython remote control: mpremote", "MicroPython .mpy files", "Package management", "The pyboard.py tool", "The MicroPython Interactive Interpreter Mode (aka REPL)", "Maximising MicroPython speed", "General information about Renesas RA port", "Quick reference for the Renesas RA", "MicroPython tutorial for Renesas RA port", "<span class=\"section-number\">1. </span>Getting started with MicroPython on the Renesas RA", "<span class=\"section-number\">3. </span>Write a program in internal file system", "<span class=\"section-number\">4. </span>Reset and boot mode", "<span class=\"section-number\">5. </span>Trouble Shooting", "<span class=\"section-number\">2. </span>Using peripherals", "General information about the RP2xxx port", "Quick reference for the RP2", "Getting started with MicroPython on the RP2xxx", "Programmable IO", "General information about the SAMD port", "Pinout for the SAMD machine modules", "Quick reference for the SAMD21/SAMD51 family", "Getting started with MicroPython on the SAMD", "Quick reference for the UNIX and Windows ports", "General information about the WiPy", "Quick reference for the WiPy", "<span class=\"section-number\">3. </span>Getting started with Blynk and the WiPy", "WiPy tutorials and examples", "<span class=\"section-number\">1. </span>Introduction to the WiPy", "<span class=\"section-number\">2. </span>Getting a MicroPython REPL prompt", "<span class=\"section-number\">6. </span>Reset and boot modes", "<span class=\"section-number\">5. </span>Hardware timers", "<span class=\"section-number\">4. </span>WLAN step by step", "General information about the Zephyr port", "Quick reference for the Zephyr port", "MicroPython tutorial for the Zephyr port", "<span class=\"section-number\">1. </span>Getting started with MicroPython on the Zephyr port", "<span class=\"section-number\">4. </span>GPIO Pins", "<span class=\"section-number\">2. </span>Getting a MicroPython REPL prompt", "<span class=\"section-number\">3. </span>Filesystems and Storage"], "terms": {"when": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 46, 49, 52, 54, 58, 60, 62, 63, 64, 65, 66, 67, 70, 71, 73, 77, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 132, 133, 134, 135, 137, 140, 144, 145, 146, 148, 149, 150, 156, 157, 159, 162, 166, 171, 175, 176, 177, 181, 184, 186, 187, 189, 191, 193, 196, 198, 199, 200, 202, 205, 208, 210, 211, 212, 213, 214, 216, 218, 219, 221, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 245, 250, 254, 256, 257, 258, 262, 263, 265, 268, 270, 271], "develop": [0, 3, 4, 7, 10, 20, 21, 23, 26, 33, 54, 71, 87, 161, 173, 176, 186, 188, 230, 233, 234, 235, 237, 238, 240, 250, 253, 256, 267, 270], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 205, 207, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 225, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 242, 243, 244, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 270, 271, 273], "you": [0, 1, 3, 5, 8, 10, 13, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 55, 60, 64, 70, 72, 73, 74, 77, 78, 79, 81, 85, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 136, 137, 138, 140, 142, 143, 145, 147, 148, 151, 152, 154, 156, 160, 161, 162, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 250, 253, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 272], "mai": [0, 1, 7, 9, 10, 14, 20, 21, 23, 26, 27, 30, 33, 39, 42, 46, 49, 52, 54, 55, 60, 63, 64, 65, 68, 70, 71, 74, 75, 76, 79, 80, 81, 82, 86, 87, 90, 93, 94, 96, 98, 100, 102, 109, 110, 111, 112, 113, 114, 117, 121, 122, 123, 124, 125, 128, 130, 131, 137, 145, 146, 150, 155, 156, 157, 159, 160, 161, 162, 171, 173, 174, 175, 176, 177, 178, 181, 186, 187, 190, 195, 200, 208, 210, 212, 215, 216, 218, 219, 223, 224, 228, 229, 230, 232, 235, 236, 239, 240, 242, 250, 253, 254, 255, 256, 257, 258, 263, 270, 272], "find": [0, 6, 8, 12, 16, 20, 21, 23, 26, 27, 33, 42, 63, 64, 70, 117, 161, 173, 175, 176, 181, 185, 186, 203, 205, 208, 229, 235, 242, 250, 253, 255, 256], "run": [0, 1, 4, 5, 8, 13, 18, 19, 20, 21, 22, 23, 26, 27, 31, 32, 33, 35, 36, 39, 40, 42, 46, 49, 52, 54, 59, 63, 64, 66, 80, 83, 88, 89, 90, 91, 93, 94, 98, 102, 117, 119, 122, 123, 124, 125, 130, 131, 148, 151, 154, 158, 160, 161, 162, 166, 167, 173, 175, 176, 177, 181, 182, 187, 188, 189, 190, 191, 193, 196, 198, 201, 203, 205, 208, 211, 212, 213, 214, 216, 217, 228, 230, 232, 235, 236, 237, 240, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 270, 271, 272], "limit": [0, 2, 4, 15, 20, 21, 33, 39, 41, 49, 54, 60, 70, 85, 88, 89, 96, 98, 113, 117, 122, 124, 125, 131, 145, 149, 153, 156, 158, 166, 172, 173, 175, 191, 197, 219, 228, 230, 240, 253, 255, 258], "python": [0, 1, 2, 3, 8, 9, 10, 12, 21, 22, 23, 27, 31, 32, 33, 36, 39, 42, 46, 49, 54, 63, 64, 66, 71, 72, 74, 87, 93, 122, 125, 128, 136, 145, 148, 150, 151, 152, 158, 159, 160, 162, 166, 175, 176, 181, 183, 186, 187, 189, 190, 192, 193, 196, 197, 198, 201, 208, 210, 212, 219, 220, 223, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 250, 254, 255, 256, 257, 258, 263, 265, 272], "environ": [0, 3, 10, 15, 17, 26, 45, 49, 188, 235, 238], "often": [0, 79, 135, 200, 237, 238, 258], "due": [0, 14, 15, 18, 19, 20, 21, 26, 54, 63, 64, 66, 70, 78, 81, 85, 100, 117, 133, 150, 156, 158, 160, 173, 181, 186, 211, 230, 258], "inabl": 0, "access": [0, 1, 2, 5, 8, 9, 11, 16, 19, 21, 22, 23, 26, 27, 33, 35, 39, 42, 46, 49, 54, 55, 58, 61, 63, 64, 70, 71, 75, 76, 82, 85, 87, 94, 96, 98, 100, 101, 113, 117, 123, 124, 125, 130, 131, 134, 150, 151, 153, 156, 157, 167, 170, 175, 176, 177, 178, 181, 183, 186, 205, 208, 209, 214, 218, 219, 222, 227, 228, 229, 230, 232, 233, 235, 237, 242, 244, 245, 248, 250, 255, 256, 263, 264, 266, 272], "certain": [0, 3, 7, 13, 20, 29, 42, 65, 82, 128, 145, 156, 166, 196, 220, 229, 233, 240, 250, 252, 258], "hardwar": [0, 3, 10, 20, 23, 26, 33, 43, 49, 63, 64, 70, 71, 79, 81, 82, 83, 85, 86, 87, 90, 96, 97, 98, 100, 127, 128, 130, 133, 137, 142, 146, 149, 158, 161, 162, 166, 173, 176, 182, 186, 195, 197, 202, 204, 212, 213, 228, 230, 232, 241, 242, 244, 252, 254, 256, 258, 260, 261, 264], "resourc": [0, 4, 70, 71, 73, 113, 123, 156, 187, 228, 230, 267], "speed": [0, 9, 16, 21, 23, 33, 49, 64, 73, 85, 117, 122, 131, 141, 143, 154, 171, 178, 183, 191, 195, 211, 213, 228, 231, 232, 239], "If": [0, 3, 6, 7, 8, 10, 13, 14, 21, 22, 23, 26, 27, 29, 31, 32, 33, 36, 39, 41, 42, 44, 47, 51, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 96, 97, 98, 100, 101, 109, 110, 111, 112, 113, 114, 117, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 160, 161, 162, 163, 164, 166, 171, 175, 176, 177, 178, 180, 181, 185, 186, 188, 189, 190, 191, 193, 195, 196, 198, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 214, 216, 219, 223, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 250, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 270, 272], "your": [0, 2, 3, 5, 8, 10, 12, 13, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 49, 54, 60, 64, 70, 74, 87, 93, 96, 100, 101, 103, 113, 117, 122, 123, 124, 125, 136, 143, 145, 152, 156, 160, 161, 168, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 192, 193, 195, 196, 197, 201, 203, 204, 208, 209, 211, 212, 213, 229, 230, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246, 250, 253, 255, 256, 258, 259, 260, 263, 264, 267, 268, 270, 271, 272], "can": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 52, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 110, 111, 112, 113, 115, 117, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 167, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 221, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 272, 273], "t": [0, 12, 13, 16, 21, 26, 27, 33, 36, 41, 42, 46, 47, 49, 52, 54, 55, 63, 64, 71, 73, 78, 79, 86, 87, 88, 89, 98, 117, 122, 128, 131, 133, 140, 145, 150, 151, 153, 155, 156, 161, 162, 175, 177, 178, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 205, 208, 209, 210, 211, 213, 214, 216, 218, 220, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 246, 250, 255, 258, 259, 263, 264, 265, 268, 271], "resolv": [0, 6, 42, 46, 49, 52, 54, 64, 156, 233, 236], "suggest": [0, 18, 55, 162, 176], "maximis": [0, 9, 49, 228, 231], "write": [0, 3, 4, 8, 10, 14, 15, 21, 24, 27, 29, 31, 34, 43, 48, 49, 51, 52, 54, 60, 62, 63, 65, 67, 71, 72, 73, 74, 79, 80, 82, 85, 86, 90, 95, 110, 111, 112, 116, 117, 120, 122, 124, 128, 130, 134, 137, 138, 145, 146, 148, 154, 156, 157, 158, 171, 175, 177, 178, 179, 181, 186, 187, 188, 189, 192, 195, 198, 202, 204, 205, 206, 208, 210, 211, 212, 225, 229, 230, 231, 234, 235, 239, 240, 242, 243, 250, 252, 255, 259, 262, 263, 268, 273], "some": [0, 1, 2, 3, 7, 8, 9, 12, 18, 20, 21, 23, 26, 31, 33, 35, 41, 42, 43, 46, 54, 55, 57, 62, 63, 64, 70, 71, 74, 79, 81, 82, 85, 86, 88, 89, 92, 96, 98, 117, 122, 124, 125, 128, 130, 140, 155, 156, 157, 158, 160, 161, 162, 166, 173, 175, 176, 178, 181, 186, 187, 189, 191, 192, 196, 200, 205, 208, 209, 211, 212, 213, 215, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 252, 253, 255, 256, 259, 263, 272], "all": [0, 1, 3, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 36, 38, 39, 40, 41, 42, 45, 49, 52, 54, 55, 56, 60, 61, 62, 64, 65, 68, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 90, 93, 95, 96, 99, 103, 109, 113, 117, 118, 122, 123, 124, 125, 128, 130, 131, 133, 135, 136, 137, 140, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 171, 172, 173, 175, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 198, 201, 203, 204, 205, 209, 210, 219, 226, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 242, 246, 247, 250, 252, 253, 255, 258, 259, 260, 262, 264, 267], "implement": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "port": [0, 4, 5, 11, 12, 13, 21, 23, 27, 33, 35, 36, 44, 45, 47, 48, 49, 52, 54, 55, 60, 61, 62, 70, 71, 74, 75, 79, 80, 81, 82, 85, 86, 88, 90, 93, 95, 96, 97, 98, 100, 105, 122, 123, 128, 130, 134, 135, 140, 149, 150, 155, 156, 157, 160, 161, 175, 176, 181, 186, 190, 198, 208, 214, 228, 229, 230, 233, 234, 235, 236, 238, 240, 242, 244, 247, 250, 255, 256, 258, 263, 271], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273], "viabl": 0, "option": [0, 1, 2, 8, 14, 15, 16, 17, 18, 23, 33, 49, 54, 55, 58, 60, 63, 64, 65, 68, 71, 74, 78, 82, 85, 89, 96, 98, 99, 101, 117, 128, 130, 133, 145, 149, 151, 153, 154, 155, 156, 160, 161, 162, 166, 174, 175, 178, 181, 182, 200, 208, 210, 229, 232, 233, 234, 235, 237, 238, 239, 249, 252, 254, 255, 258, 263], "design": [0, 20, 26, 49, 63, 85, 119, 122, 128, 161, 169, 173, 174, 175, 187, 191, 228, 229, 230, 253], "work": [0, 3, 8, 12, 14, 15, 16, 17, 21, 23, 26, 27, 30, 33, 38, 41, 42, 45, 46, 47, 49, 51, 52, 54, 55, 57, 60, 64, 67, 74, 82, 87, 92, 96, 98, 99, 100, 113, 117, 123, 124, 125, 128, 145, 148, 149, 156, 161, 162, 171, 175, 176, 177, 178, 181, 186, 187, 188, 189, 190, 191, 193, 195, 202, 203, 208, 210, 212, 214, 219, 223, 228, 230, 231, 232, 234, 235, 238, 240, 242, 246, 250, 252, 255, 256, 258, 259, 262, 263, 267, 268, 270, 272], "commonli": [0, 60, 82, 86, 100, 169, 171, 230, 232, 239], "avail": [0, 3, 6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 33, 36, 39, 42, 49, 54, 56, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 93, 96, 98, 100, 101, 113, 117, 124, 125, 128, 129, 130, 133, 134, 135, 140, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 160, 161, 171, 173, 174, 175, 176, 177, 183, 186, 191, 193, 195, 197, 198, 203, 205, 220, 228, 229, 230, 233, 234, 235, 237, 238, 239, 242, 244, 248, 250, 253, 254, 255, 256, 257, 258, 259, 268, 272], "librari": [0, 2, 3, 4, 5, 8, 9, 10, 14, 15, 16, 19, 26, 49, 54, 55, 60, 71, 117, 124, 171, 183, 188, 228, 230, 231, 232, 233, 237, 240, 255, 257, 260], "pleas": [0, 2, 3, 20, 22, 23, 26, 27, 28, 31, 32, 33, 70, 79, 84, 102, 117, 119, 122, 123, 125, 173, 175, 176, 178, 181, 183, 185, 186, 189, 195, 208, 241, 242, 244, 245, 246, 247, 248, 249, 253, 256, 258, 259, 267, 268, 270], "consid": [0, 21, 26, 27, 60, 63, 65, 68, 73, 74, 117, 125, 139, 162, 178, 195, 211, 228, 232, 240, 259, 268], "insid": [0, 15, 26, 45, 88, 89, 110, 111, 112, 113, 114, 117, 120, 122, 124, 125, 127, 136, 190, 191, 202, 233, 258, 263], "sourc": [0, 1, 4, 8, 10, 12, 20, 21, 23, 26, 33, 60, 63, 65, 67, 74, 75, 76, 82, 83, 90, 93, 109, 113, 117, 120, 135, 141, 145, 161, 162, 171, 173, 174, 176, 178, 181, 183, 184, 186, 188, 211, 213, 220, 228, 230, 232, 233, 236, 237, 252, 253, 256, 257, 258, 267], "tree": [0, 1, 169, 228], "alongsid": [0, 8, 64, 237], "similar": [0, 1, 3, 23, 52, 55, 66, 68, 71, 73, 74, 85, 117, 130, 142, 150, 157, 160, 161, 162, 189, 209, 218, 230, 235, 236, 237, 240, 258], "submit": 0, "pull": [0, 3, 21, 27, 30, 33, 39, 49, 73, 79, 82, 87, 122, 135, 140, 145, 151, 154, 175, 178, 180, 198, 242, 248, 250, 252, 255, 258, 259, 268], "request": [0, 6, 21, 26, 49, 54, 74, 78, 79, 86, 96, 125, 130, 131, 133, 137, 142, 156, 164], "howev": [0, 9, 14, 15, 21, 23, 26, 27, 30, 33, 51, 54, 63, 64, 70, 74, 113, 117, 122, 124, 125, 156, 161, 169, 175, 180, 181, 186, 188, 191, 228, 229, 230, 232, 233, 235, 237, 240, 242, 252], "re": [0, 15, 16, 17, 26, 49, 54, 64, 70, 74, 77, 82, 87, 101, 117, 120, 124, 151, 154, 156, 158, 180, 181, 183, 184, 186, 189, 191, 192, 213, 228, 232, 233, 235, 239, 247], "target": [0, 3, 7, 8, 10, 13, 14, 49, 64, 68, 79, 102, 162, 166, 176, 186, 221, 230, 235, 237, 240, 254], "obscur": [0, 263], "proprietari": 0, "system": [0, 3, 5, 7, 8, 10, 14, 15, 16, 20, 22, 26, 32, 45, 49, 62, 64, 70, 71, 74, 79, 82, 83, 84, 85, 86, 91, 101, 117, 121, 124, 129, 130, 136, 152, 154, 156, 161, 162, 166, 177, 181, 182, 183, 186, 187, 188, 190, 208, 229, 230, 232, 235, 236, 238, 242, 243, 244, 246, 250, 253, 255, 266, 267, 273], "make": [0, 1, 3, 8, 10, 11, 12, 13, 15, 16, 20, 23, 26, 30, 31, 33, 34, 36, 39, 40, 42, 44, 54, 55, 58, 60, 64, 73, 79, 82, 83, 93, 100, 112, 113, 115, 117, 120, 122, 123, 124, 127, 129, 130, 131, 134, 138, 157, 162, 173, 176, 177, 180, 181, 186, 187, 190, 191, 199, 200, 201, 204, 205, 208, 209, 210, 211, 212, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 250, 252, 253, 256, 258, 259, 260, 261, 263, 264, 267, 272], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "sens": [0, 26, 44, 49, 63, 74, 101, 117, 130, 162, 183, 191, 258], "keep": [0, 6, 10, 26, 33, 45, 83, 111, 117, 119, 120, 122, 124, 125, 141, 161, 177, 180, 186, 191, 196, 205, 209, 214, 232, 233, 236, 238, 240, 252, 258], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "main": [0, 1, 2, 3, 8, 9, 10, 12, 23, 26, 31, 33, 49, 52, 64, 74, 93, 94, 124, 130, 142, 175, 176, 177, 186, 188, 191, 192, 193, 205, 208, 209, 214, 229, 233, 235, 236, 237, 238, 245, 246, 252, 256, 258, 263, 264], "repositori": [0, 2, 3, 5, 8, 10, 21, 27, 42, 203, 228, 233, 236, 270], "chapter": [0, 2, 4, 5, 6, 9, 70, 175, 231], "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "how": [0, 1, 3, 5, 8, 9, 10, 18, 21, 23, 24, 25, 33, 35, 36, 37, 38, 41, 42, 49, 60, 62, 63, 73, 74, 75, 88, 89, 110, 111, 112, 113, 117, 120, 124, 125, 127, 140, 145, 151, 156, 176, 179, 182, 183, 186, 189, 192, 196, 197, 198, 200, 202, 203, 204, 205, 208, 211, 212, 214, 219, 229, 230, 232, 234, 235, 250, 252, 256, 258, 260, 261, 262, 266], "execut": [0, 1, 8, 9, 10, 14, 21, 26, 27, 31, 34, 36, 38, 39, 42, 47, 49, 62, 63, 74, 88, 89, 93, 94, 113, 119, 122, 123, 124, 125, 130, 141, 151, 154, 158, 160, 167, 177, 186, 187, 188, 190, 191, 193, 205, 209, 210, 211, 212, 213, 214, 217, 218, 219, 221, 223, 224, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 252, 258, 264, 266, 272], "firmwar": [0, 2, 3, 4, 8, 9, 12, 31, 54, 60, 62, 63, 67, 70, 74, 98, 99, 117, 124, 136, 158, 160, 171, 175, 177, 181, 186, 188, 190, 193, 203, 219, 228, 229, 230, 233, 234, 237, 244, 249, 261], "imag": [0, 8, 9, 21, 24, 27, 49, 63, 65, 70, 73, 98, 110, 111, 112, 113, 115, 120, 121, 122, 123, 124, 125, 127, 178, 181, 186, 187, 188, 189, 191, 230, 247, 250, 258], "both": [0, 4, 6, 8, 9, 10, 12, 14, 21, 23, 26, 27, 29, 30, 33, 37, 39, 40, 44, 45, 51, 52, 53, 54, 55, 60, 62, 64, 73, 74, 76, 78, 79, 80, 85, 86, 87, 88, 89, 90, 92, 93, 100, 117, 122, 124, 128, 133, 134, 137, 141, 143, 145, 146, 151, 156, 157, 161, 162, 166, 175, 177, 186, 209, 211, 228, 229, 230, 232, 234, 250, 252, 254, 258], "cmake": [0, 233], "build": [0, 2, 4, 5, 8, 12, 14, 19, 23, 26, 33, 36, 44, 45, 47, 48, 49, 52, 54, 60, 70, 96, 128, 160, 173, 176, 187, 188, 191, 205, 228, 229, 234, 236, 237, 250, 253, 256, 260, 267, 270, 272], "tool": [0, 3, 8, 12, 14, 23, 31, 33, 49, 117, 175, 176, 181, 182, 187, 188, 229, 230, 231, 235, 236, 237, 239, 240, 255, 258], "ar": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 46, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 186, 188, 189, 191, 193, 196, 197, 198, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272], "support": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 30, 31, 33, 41, 42, 43, 46, 49, 51, 54, 55, 58, 59, 60, 63, 67, 70, 71, 73, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 96, 98, 99, 100, 104, 110, 111, 117, 125, 128, 130, 131, 133, 137, 142, 145, 146, 149, 150, 151, 156, 157, 159, 160, 162, 166, 168, 171, 175, 176, 178, 181, 184, 186, 190, 191, 195, 198, 203, 218, 219, 220, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 252, 253, 255, 256, 257, 267, 268, 270, 271, 273], "": [0, 1, 3, 5, 7, 8, 10, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 33, 36, 39, 40, 41, 42, 45, 47, 49, 52, 53, 54, 55, 57, 60, 63, 64, 65, 70, 71, 73, 78, 79, 88, 89, 92, 96, 98, 106, 107, 113, 117, 118, 119, 122, 123, 124, 125, 128, 131, 133, 136, 137, 138, 145, 150, 151, 152, 153, 155, 157, 159, 160, 161, 162, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 198, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 223, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 241, 242, 245, 247, 248, 249, 250, 251, 254, 256, 258, 259, 262, 263, 264, 267, 270, 271, 272], "good": [0, 23, 33, 37, 40, 42, 49, 93, 106, 117], "idea": [0, 26, 162, 186, 235], "add": [0, 1, 3, 5, 10, 12, 13, 14, 16, 18, 23, 26, 33, 49, 54, 55, 58, 64, 70, 87, 115, 117, 120, 124, 140, 151, 153, 180, 186, 188, 190, 198, 210, 215, 219, 220, 229, 232, 233, 263], "file": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 26, 27, 33, 35, 44, 47, 48, 49, 55, 60, 67, 70, 71, 72, 84, 87, 98, 115, 117, 120, 128, 130, 136, 148, 152, 156, 157, 158, 160, 162, 164, 171, 172, 176, 177, 181, 182, 188, 190, 193, 197, 203, 205, 209, 210, 214, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 243, 244, 246, 248, 253, 256, 257, 264, 266, 268, 273], "so": [0, 6, 8, 9, 10, 12, 13, 16, 18, 20, 21, 22, 26, 27, 29, 32, 33, 35, 39, 41, 42, 44, 47, 54, 55, 60, 62, 63, 64, 68, 71, 73, 74, 76, 79, 81, 85, 88, 89, 93, 94, 99, 113, 115, 117, 119, 120, 124, 130, 135, 140, 145, 148, 154, 155, 156, 160, 161, 162, 168, 171, 172, 173, 179, 181, 183, 184, 186, 188, 190, 191, 196, 197, 198, 202, 205, 209, 210, 211, 213, 214, 228, 229, 230, 232, 235, 238, 239, 240, 244, 245, 248, 250, 252, 253, 254, 255, 256, 258, 262, 263, 264, 266], "But": [0, 26, 71, 87, 117, 161, 162, 176, 186, 187, 191, 192, 211, 212, 255], "particular": [0, 3, 18, 21, 23, 26, 33, 61, 62, 63, 68, 70, 71, 74, 75, 79, 80, 82, 86, 96, 99, 117, 122, 124, 125, 140, 156, 157, 161, 162, 172, 176, 181, 184, 186, 211, 228, 230, 232, 236, 240, 252, 256], "onli": [0, 1, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 33, 39, 44, 46, 49, 52, 54, 55, 59, 60, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 104, 110, 111, 112, 113, 117, 119, 124, 125, 128, 130, 131, 133, 135, 137, 142, 145, 146, 149, 150, 151, 153, 156, 157, 158, 160, 161, 166, 167, 170, 171, 175, 177, 178, 181, 186, 188, 191, 193, 196, 202, 205, 209, 210, 211, 214, 220, 228, 229, 230, 232, 233, 235, 236, 238, 240, 242, 246, 255, 257, 258, 259, 265, 268], "need": [0, 1, 3, 8, 10, 12, 15, 21, 23, 25, 27, 29, 33, 35, 36, 38, 39, 40, 42, 44, 47, 48, 54, 55, 60, 62, 63, 64, 65, 70, 71, 73, 79, 85, 87, 89, 90, 98, 99, 101, 116, 117, 122, 123, 124, 125, 126, 128, 140, 145, 147, 154, 156, 159, 160, 161, 162, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 213, 214, 216, 219, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 250, 255, 256, 258, 262, 263, 265, 270, 272], "one": [0, 1, 3, 5, 6, 7, 10, 12, 13, 14, 15, 16, 20, 21, 26, 27, 29, 35, 38, 42, 43, 46, 49, 52, 54, 55, 62, 63, 64, 65, 71, 73, 78, 79, 81, 82, 85, 87, 88, 89, 90, 96, 97, 98, 100, 102, 109, 110, 111, 112, 114, 117, 119, 122, 124, 125, 128, 130, 133, 135, 140, 141, 145, 146, 148, 149, 150, 151, 154, 155, 157, 160, 162, 166, 170, 173, 174, 175, 177, 178, 179, 183, 184, 186, 188, 189, 191, 193, 195, 197, 200, 202, 204, 210, 211, 212, 214, 215, 216, 218, 219, 221, 223, 228, 230, 232, 233, 235, 236, 237, 239, 240, 250, 252, 254, 255, 257, 258, 263, 265], "method": [0, 1, 6, 14, 15, 16, 17, 18, 19, 21, 27, 29, 31, 34, 41, 42, 46, 49, 51, 52, 54, 58, 60, 63, 67, 70, 71, 74, 93, 96, 113, 117, 119, 124, 127, 128, 150, 157, 176, 178, 180, 184, 186, 191, 192, 196, 197, 200, 203, 205, 211, 228, 229, 230, 236, 239, 240, 242, 247, 250, 258, 265], "either": [0, 1, 3, 15, 16, 18, 23, 26, 33, 39, 42, 43, 45, 54, 58, 59, 62, 64, 71, 73, 78, 83, 85, 89, 91, 95, 97, 101, 113, 117, 122, 128, 133, 137, 138, 142, 145, 150, 151, 154, 161, 162, 166, 171, 175, 181, 186, 190, 197, 203, 204, 208, 211, 228, 230, 232, 235, 236, 237, 240, 249, 255, 258, 263, 270, 273], "altern": [0, 3, 6, 21, 27, 42, 44, 49, 64, 77, 82, 84, 86, 89, 96, 117, 124, 125, 128, 130, 145, 162, 175, 186, 193, 195, 228, 233, 238, 240, 255, 258], "approach": [0, 2, 117, 187, 228, 232, 237, 240], "nativ": [0, 2, 3, 4, 18, 26, 44, 49, 62, 63, 117, 128, 156, 159, 160, 162, 230, 236, 257, 258], "machin": [0, 1, 2, 4, 7, 10, 21, 24, 25, 27, 28, 29, 30, 34, 36, 38, 39, 40, 41, 42, 43, 49, 52, 62, 63, 64, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 116, 124, 128, 145, 151, 153, 154, 158, 160, 161, 162, 166, 175, 178, 182, 183, 192, 195, 212, 219, 228, 230, 232, 234, 235, 236, 239, 240, 242, 245, 248, 249, 250, 252, 253, 255, 259, 263, 264, 265, 266, 268, 271, 272], "code": [0, 2, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 31, 33, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 52, 54, 59, 62, 63, 64, 66, 68, 70, 73, 86, 93, 94, 96, 117, 122, 124, 128, 135, 148, 151, 154, 156, 158, 160, 161, 166, 173, 175, 177, 178, 179, 182, 186, 187, 189, 191, 192, 198, 202, 203, 204, 205, 208, 209, 210, 212, 214, 216, 217, 218, 220, 221, 223, 228, 229, 230, 232, 233, 234, 235, 238, 239, 242, 250, 252, 255, 257, 258, 262, 263, 266, 272], "mpy": [0, 2, 3, 4, 9, 12, 49, 160, 208, 228, 230, 231, 233, 234, 237, 239, 245, 246, 263], "which": [0, 1, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 26, 27, 28, 30, 33, 35, 36, 39, 40, 42, 44, 46, 49, 52, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 200, 203, 204, 205, 208, 209, 210, 211, 212, 213, 216, 218, 219, 221, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 262, 263, 266, 273], "allow": [0, 1, 8, 12, 14, 15, 16, 17, 18, 20, 21, 26, 42, 46, 49, 54, 55, 58, 60, 63, 64, 67, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 98, 99, 100, 110, 111, 112, 113, 114, 117, 120, 122, 123, 124, 125, 127, 128, 130, 131, 136, 137, 140, 143, 147, 148, 156, 157, 161, 162, 168, 169, 171, 175, 177, 181, 184, 186, 187, 191, 198, 200, 204, 212, 213, 229, 230, 233, 235, 238, 239, 252, 255, 258, 263], "custom": [0, 2, 8, 10, 13, 15, 16, 26, 27, 30, 49, 52, 124, 151, 160, 164, 188, 237, 252, 273], "place": [0, 6, 7, 12, 30, 51, 59, 60, 62, 69, 70, 71, 78, 86, 91, 117, 133, 146, 161, 215, 228, 232, 236, 258, 263], "import": [0, 3, 5, 7, 8, 9, 10, 11, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 47, 49, 52, 54, 55, 58, 60, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 115, 116, 120, 124, 127, 131, 133, 134, 137, 142, 143, 145, 146, 150, 160, 162, 166, 175, 176, 178, 179, 180, 183, 184, 186, 189, 192, 195, 197, 198, 199, 200, 203, 204, 205, 206, 210, 212, 214, 219, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 250, 252, 254, 255, 256, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273], "dynam": [0, 5, 8, 9, 17, 96, 102, 124, 128, 166, 228, 230], "without": [0, 1, 3, 8, 14, 18, 21, 23, 26, 27, 30, 33, 54, 62, 63, 64, 66, 74, 78, 79, 85, 90, 96, 97, 101, 117, 122, 124, 127, 128, 130, 133, 134, 160, 161, 162, 172, 174, 177, 183, 184, 186, 188, 191, 193, 211, 216, 229, 230, 232, 234, 235, 238, 246, 255, 258, 266], "recompil": [0, 62, 236], "A": [0, 1, 3, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 21, 27, 30, 35, 39, 42, 44, 45, 48, 52, 54, 55, 58, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 78, 79, 82, 89, 90, 93, 94, 96, 98, 110, 111, 112, 113, 117, 120, 122, 124, 125, 127, 128, 130, 133, 134, 135, 137, 140, 144, 146, 150, 154, 156, 157, 160, 162, 166, 167, 169, 170, 171, 172, 174, 175, 176, 181, 186, 187, 198, 199, 204, 208, 211, 223, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 250, 255, 256, 258, 259, 262, 263, 264, 265], "user": [0, 3, 5, 9, 14, 21, 23, 26, 27, 33, 46, 49, 54, 55, 62, 70, 71, 73, 74, 80, 85, 86, 87, 128, 140, 146, 156, 161, 174, 175, 176, 186, 188, 193, 195, 202, 205, 210, 213, 228, 230, 232, 235, 237, 238, 246, 250, 255, 256, 258, 259, 267, 270], "directori": [0, 3, 5, 8, 10, 11, 13, 17, 19, 21, 31, 45, 61, 128, 160, 164, 175, 177, 186, 190, 193, 197, 203, 204, 228, 229, 233, 235, 236, 237, 238, 245, 257, 258, 268, 273], "follow": [0, 1, 3, 5, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 36, 38, 40, 42, 53, 54, 55, 58, 64, 65, 70, 71, 73, 74, 78, 79, 81, 82, 83, 85, 87, 89, 93, 96, 99, 100, 109, 113, 117, 124, 125, 128, 129, 130, 133, 140, 141, 145, 146, 149, 150, 151, 156, 157, 159, 160, 161, 162, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 181, 185, 188, 190, 192, 193, 195, 197, 198, 199, 201, 204, 205, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 225, 226, 228, 229, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266, 268, 270, 272], "cpp": 0, "h": [0, 1, 5, 7, 8, 10, 11, 12, 49, 51, 65, 73, 85, 110, 111, 112, 113, 117, 120, 124, 125, 127, 130, 134, 135, 154, 159, 175, 186, 192, 203, 228, 238, 257], "These": [0, 7, 9, 10, 21, 36, 54, 55, 63, 65, 71, 73, 79, 82, 86, 93, 96, 100, 117, 136, 152, 153, 158, 168, 169, 174, 175, 186, 205, 211, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 227, 228, 232, 233, 236, 240, 252, 254, 255], "typic": [0, 7, 10, 21, 26, 27, 54, 60, 62, 63, 64, 65, 67, 70, 74, 80, 81, 94, 96, 103, 106, 107, 108, 117, 122, 124, 136, 151, 157, 160, 161, 216, 221, 229, 230, 232, 233, 237, 240], "includ": [0, 3, 4, 5, 8, 10, 12, 17, 20, 21, 23, 26, 27, 33, 39, 40, 46, 49, 54, 55, 60, 62, 63, 64, 67, 68, 70, 73, 74, 79, 87, 93, 95, 96, 100, 122, 128, 136, 146, 147, 148, 149, 150, 151, 154, 156, 158, 160, 161, 162, 171, 172, 173, 175, 176, 186, 188, 189, 193, 198, 203, 219, 221, 228, 229, 230, 232, 233, 237, 238, 239, 240, 242, 249, 250, 253, 255, 256, 258], "low": [0, 3, 11, 21, 23, 25, 26, 27, 30, 33, 39, 41, 49, 64, 70, 73, 74, 79, 82, 87, 89, 90, 97, 113, 117, 122, 124, 136, 140, 145, 146, 151, 152, 158, 167, 171, 173, 175, 176, 178, 180, 183, 187, 191, 195, 199, 212, 224, 237, 242, 250, 252, 255, 256, 268, 273], "level": [0, 1, 3, 8, 10, 11, 14, 16, 21, 26, 27, 29, 49, 60, 62, 63, 64, 70, 71, 73, 74, 78, 79, 80, 82, 85, 86, 87, 89, 90, 93, 96, 97, 100, 110, 111, 112, 113, 117, 120, 122, 124, 127, 133, 136, 137, 140, 142, 146, 150, 152, 156, 158, 161, 166, 167, 171, 175, 178, 197, 204, 230, 231, 235, 236, 239, 242, 250, 255, 257, 267, 273], "function": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 49, 54, 58, 64, 70, 77, 78, 79, 82, 83, 84, 87, 89, 91, 101, 114, 122, 123, 126, 131, 132, 133, 135, 137, 143, 144, 145, 146, 148, 162, 166, 173, 175, 178, 183, 186, 189, 191, 197, 198, 199, 200, 205, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 228, 230, 232, 234, 235, 236, 237, 240, 241, 242, 252, 253, 254, 255, 265, 267], "being": [0, 1, 7, 9, 15, 17, 19, 26, 33, 39, 41, 46, 49, 52, 54, 62, 63, 64, 65, 71, 74, 77, 82, 83, 85, 87, 90, 92, 93, 94, 97, 102, 110, 111, 112, 113, 117, 120, 122, 123, 124, 126, 127, 128, 132, 141, 145, 148, 151, 158, 162, 166, 175, 177, 181, 183, 186, 187, 188, 203, 216, 224, 228, 232, 233, 234, 235, 258, 265], "bind": [0, 17, 36, 49, 123, 156, 167, 263], "expos": [0, 11, 16, 19, 20, 26, 74, 130, 140, 158, 161, 173, 174, 175, 221, 229, 255], "current": [0, 5, 6, 8, 14, 15, 16, 17, 21, 23, 27, 33, 40, 41, 42, 43, 45, 46, 52, 54, 55, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 80, 81, 82, 83, 85, 93, 95, 96, 98, 100, 113, 114, 117, 124, 128, 130, 132, 137, 140, 141, 143, 145, 151, 154, 157, 160, 161, 162, 167, 175, 177, 178, 181, 186, 187, 193, 195, 199, 200, 203, 205, 211, 212, 213, 219, 224, 228, 232, 233, 234, 235, 238, 240, 242, 250, 254, 255, 258, 259, 262, 266], "best": [0, 10, 14, 19, 23, 33, 37, 70, 74, 93, 115, 117, 120, 123, 124, 176, 186, 188, 202, 212, 213, 228, 231, 232, 240, 256, 262, 263], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273], "within": [0, 8, 9, 14, 18, 21, 26, 52, 54, 65, 73, 78, 88, 89, 93, 96, 117, 119, 122, 124, 125, 128, 130, 131, 133, 137, 145, 146, 162, 166, 175, 177, 193, 213, 219, 233, 236, 239, 258, 264], "them": [0, 1, 7, 8, 12, 14, 20, 21, 23, 24, 26, 28, 31, 33, 34, 37, 39, 40, 42, 52, 54, 55, 63, 64, 71, 74, 79, 82, 85, 86, 87, 96, 99, 117, 121, 124, 125, 128, 137, 148, 151, 156, 161, 162, 173, 186, 198, 202, 205, 211, 213, 216, 219, 223, 226, 230, 231, 232, 233, 234, 235, 240, 242, 250, 253, 258, 262], "mk": [0, 8, 10, 233], "contain": [0, 3, 7, 8, 9, 10, 12, 14, 16, 17, 19, 22, 26, 31, 32, 36, 46, 49, 51, 52, 54, 55, 62, 63, 64, 65, 70, 71, 73, 74, 78, 79, 80, 86, 90, 96, 98, 113, 116, 117, 122, 125, 128, 130, 133, 134, 140, 146, 148, 150, 151, 154, 155, 156, 157, 161, 162, 163, 164, 165, 167, 170, 191, 197, 210, 216, 223, 224, 226, 228, 230, 233, 235, 236, 257], "makefil": [0, 8, 10, 12, 36, 49, 156, 233, 236], "fragment": [0, 8, 9, 26, 49, 64, 66, 71, 124, 128, 171, 191, 230, 232, 234, 240], "usermod_dir": 0, "path": [0, 3, 8, 10, 13, 15, 16, 17, 19, 36, 45, 49, 70, 98, 110, 111, 112, 115, 117, 119, 120, 125, 128, 157, 160, 164, 166, 190, 205, 233, 235, 236, 237, 238, 257, 258], "As": [0, 7, 9, 26, 27, 33, 36, 39, 49, 54, 58, 61, 64, 73, 82, 85, 97, 98, 117, 122, 128, 133, 150, 156, 162, 164, 171, 176, 181, 183, 184, 186, 191, 202, 205, 212, 226, 228, 229, 232, 234, 235, 236, 237, 240, 245, 248, 262], "redefin": 0, "each": [0, 1, 7, 9, 10, 12, 15, 17, 21, 25, 26, 27, 29, 30, 35, 36, 54, 55, 62, 63, 64, 65, 66, 70, 71, 73, 79, 80, 86, 87, 102, 113, 116, 117, 124, 125, 128, 131, 140, 141, 142, 145, 146, 148, 150, 153, 154, 158, 161, 162, 163, 170, 175, 178, 181, 183, 184, 196, 200, 204, 205, 212, 213, 218, 219, 220, 228, 232, 233, 235, 236, 237, 242, 250, 252, 254, 255, 258, 260, 265, 268], "should": [0, 1, 3, 5, 8, 10, 12, 13, 16, 20, 21, 23, 26, 30, 33, 36, 39, 42, 44, 47, 48, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 70, 71, 72, 73, 74, 78, 79, 81, 86, 87, 89, 90, 91, 93, 95, 96, 100, 106, 107, 108, 110, 111, 112, 114, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 138, 146, 148, 149, 150, 151, 156, 157, 158, 160, 161, 162, 175, 176, 180, 181, 185, 186, 187, 188, 189, 196, 197, 198, 202, 203, 205, 208, 209, 210, 212, 213, 214, 219, 221, 228, 229, 230, 232, 233, 235, 236, 239, 240, 255, 256, 257, 262, 263, 267, 272], "expand": [0, 12, 17, 18, 19, 93, 117, 150, 239], "local": [0, 1, 3, 9, 15, 16, 17, 21, 26, 27, 42, 46, 49, 54, 56, 64, 117, 156, 161, 212, 219, 235, 237, 238, 240], "variabl": [0, 1, 3, 4, 8, 12, 14, 16, 17, 19, 46, 49, 54, 70, 93, 94, 122, 151, 189, 191, 200, 204, 211, 212, 219, 228, 229, 232, 233, 235, 236, 238, 240], "eg": [0, 8, 13, 21, 23, 27, 30, 33, 42, 44, 64, 74, 93, 128, 131, 175, 176, 178, 193, 195, 202, 208, 211, 238, 242, 250, 255, 258, 262, 263, 272], "example_mod_dir": 0, "must": [0, 1, 3, 8, 10, 14, 16, 17, 21, 24, 26, 27, 28, 30, 38, 39, 40, 41, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 73, 74, 76, 78, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 96, 98, 99, 100, 101, 102, 108, 113, 115, 117, 120, 122, 124, 125, 128, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 145, 146, 148, 150, 155, 156, 157, 160, 161, 166, 171, 175, 177, 178, 197, 198, 199, 202, 203, 205, 208, 212, 213, 214, 217, 218, 219, 220, 221, 223, 228, 229, 232, 233, 235, 236, 237, 238, 240, 242, 247, 250, 254, 255, 257, 258, 259, 262, 263, 265, 266, 273], "src_usermod_c": 0, "src_usermod_lib_c": 0, "The": [0, 2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 195, 198, 199, 200, 201, 202, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 224, 226, 227, 229, 230, 231, 233, 234, 235, 237, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273], "former": [0, 93], "process": [0, 1, 3, 9, 12, 14, 18, 19, 40, 54, 55, 64, 74, 76, 94, 113, 117, 122, 124, 128, 131, 155, 156, 161, 166, 186, 187, 188, 205, 210, 216, 219, 221, 224, 228, 230, 232, 233, 240, 249, 252], "mp_qstr_": 0, "mp_register_modul": [0, 5, 10], "definit": [0, 1, 5, 10, 12, 16, 49, 85, 161, 162, 215, 228, 237, 253, 254], "latter": [0, 23, 51, 161, 171, 218], "e": [0, 1, 3, 6, 7, 10, 12, 13, 14, 16, 21, 23, 27, 33, 42, 44, 45, 49, 53, 54, 55, 57, 60, 61, 63, 64, 65, 66, 70, 71, 73, 80, 81, 92, 95, 96, 98, 101, 110, 111, 112, 113, 117, 119, 121, 124, 125, 129, 130, 133, 136, 145, 150, 151, 154, 155, 156, 157, 160, 161, 162, 175, 178, 181, 191, 195, 203, 208, 215, 216, 223, 228, 229, 230, 233, 235, 237, 238, 239, 240, 242, 250, 254, 255, 257, 263], "g": [0, 1, 3, 7, 10, 12, 14, 16, 21, 23, 27, 29, 33, 44, 45, 54, 55, 60, 63, 65, 67, 70, 71, 73, 80, 96, 101, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 127, 129, 133, 136, 140, 150, 151, 156, 157, 160, 161, 162, 191, 215, 216, 228, 229, 230, 233, 235, 237, 238, 240, 250, 257, 258], "helper": [0, 8, 14, 29, 71, 189], "isn": [0, 88, 117, 153, 181, 187, 191, 196, 205, 208, 233, 240, 246, 263], "specif": [0, 2, 3, 5, 7, 8, 10, 11, 13, 14, 16, 19, 21, 27, 30, 35, 49, 52, 54, 55, 58, 62, 71, 74, 79, 80, 82, 88, 89, 100, 113, 122, 124, 128, 130, 134, 137, 161, 162, 166, 168, 171, 175, 178, 195, 211, 213, 228, 230, 232, 234, 235, 240, 242, 250, 254, 255, 257, 258, 259], "copi": [0, 3, 8, 12, 14, 15, 16, 17, 23, 33, 42, 49, 54, 67, 78, 95, 117, 122, 124, 130, 162, 171, 172, 176, 181, 186, 203, 204, 224, 228, 230, 233, 234, 235, 237, 238, 239, 240, 256], "modexampl": 0, "util": [0, 47, 60, 167, 235, 237, 238], "algorithm": [0, 6, 7, 26, 33, 49, 60, 67, 70, 117, 124, 125, 171, 191, 232], "similarli": [0, 5, 7, 10, 71, 130, 145, 219, 232, 233, 238], "src_usermod_cxx": 0, "src_usermod_lib_cxx": 0, "have": [0, 1, 3, 7, 10, 12, 14, 15, 16, 17, 18, 20, 21, 23, 26, 27, 30, 33, 34, 36, 37, 38, 42, 43, 46, 47, 48, 49, 54, 56, 58, 60, 63, 64, 65, 66, 70, 72, 73, 78, 79, 81, 85, 86, 87, 92, 98, 99, 102, 113, 117, 122, 124, 125, 128, 130, 131, 133, 135, 137, 140, 145, 154, 155, 156, 157, 158, 161, 162, 163, 166, 170, 173, 174, 175, 176, 177, 178, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 197, 199, 200, 202, 203, 205, 208, 209, 210, 211, 212, 214, 215, 216, 219, 222, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 240, 246, 250, 253, 254, 255, 256, 258, 262, 263, 264, 267, 272], "like": [0, 1, 3, 5, 7, 8, 9, 10, 12, 16, 18, 19, 21, 23, 24, 26, 27, 29, 33, 42, 49, 54, 55, 58, 59, 60, 64, 67, 71, 74, 81, 87, 90, 111, 113, 117, 122, 123, 124, 125, 128, 130, 146, 148, 150, 155, 156, 157, 158, 160, 161, 162, 175, 176, 177, 181, 184, 186, 187, 188, 189, 190, 191, 192, 196, 198, 199, 202, 205, 208, 210, 211, 214, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 252, 254, 255, 256, 262, 263, 267, 270], "search": [0, 6, 10, 12, 26, 45, 49, 54, 117, 150, 160, 177, 185, 186, 193, 203, 233, 235, 236, 237, 257], "header": [0, 7, 8, 11, 49, 60, 67, 109, 158, 162, 164, 171, 189, 197, 204, 211, 262], "ad": [0, 4, 5, 8, 9, 12, 14, 15, 16, 17, 18, 19, 23, 49, 54, 58, 60, 63, 71, 90, 114, 115, 117, 120, 124, 128, 141, 151, 154, 158, 160, 166, 188, 191, 216, 218, 222, 227, 229, 232, 234, 235, 237, 240], "cflags_usermod": 0, "cxxflags_usermod": 0, "configur": [0, 3, 4, 8, 14, 16, 18, 21, 23, 24, 26, 27, 29, 30, 33, 34, 39, 40, 41, 42, 49, 63, 70, 73, 74, 75, 76, 78, 79, 82, 84, 85, 87, 88, 89, 98, 100, 101, 128, 130, 131, 133, 136, 137, 140, 145, 146, 148, 149, 151, 152, 153, 154, 160, 166, 167, 171, 175, 186, 193, 210, 214, 229, 234, 235, 252, 255, 258, 259, 265, 266, 268, 273], "In": [0, 1, 3, 5, 6, 7, 8, 10, 12, 14, 17, 18, 21, 24, 26, 30, 33, 34, 36, 42, 52, 54, 56, 62, 64, 70, 71, 74, 78, 79, 81, 84, 85, 86, 87, 89, 90, 93, 94, 100, 101, 102, 117, 122, 124, 125, 128, 131, 133, 136, 145, 146, 149, 151, 152, 155, 156, 158, 161, 162, 166, 174, 175, 178, 181, 186, 190, 198, 200, 202, 205, 208, 209, 211, 212, 213, 214, 215, 219, 220, 222, 223, 227, 228, 232, 233, 234, 235, 239, 240, 248, 252, 258, 262, 263, 264, 266], "cmake_current_list_dir": 0, "defin": [0, 1, 2, 4, 10, 11, 14, 15, 18, 19, 21, 24, 25, 36, 39, 41, 42, 46, 49, 54, 60, 62, 63, 65, 78, 82, 85, 88, 89, 93, 96, 100, 117, 122, 125, 128, 130, 133, 136, 151, 152, 156, 158, 164, 166, 168, 169, 170, 175, 187, 189, 197, 213, 219, 220, 221, 228, 229, 232, 233, 235, 236, 237, 240, 254, 255, 257, 258], "interfac": [0, 16, 20, 21, 26, 27, 30, 35, 43, 49, 54, 55, 63, 64, 67, 73, 74, 75, 85, 97, 98, 123, 130, 136, 151, 152, 153, 156, 157, 162, 166, 168, 171, 173, 175, 214, 228, 229, 230, 235, 240, 242, 244, 250, 253, 260, 273], "associ": [0, 1, 8, 25, 41, 52, 64, 75, 77, 79, 82, 94, 131, 135, 139, 140, 145, 156, 162, 172, 186, 205, 212, 232, 235, 252], "link": [0, 3, 8, 10, 12, 73, 96, 97, 99, 100, 129, 156, 176, 186, 193, 194, 219, 220, 221, 226, 235, 236, 252, 267], "usermod": 0, "add_librari": 0, "usermod_cexampl": 0, "target_sourc": 0, "examplemodul": 0, "target_include_directori": 0, "target_link_librari": 0, "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "below": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "full": [0, 7, 8, 12, 16, 17, 26, 29, 34, 37, 47, 58, 60, 64, 66, 74, 78, 80, 90, 93, 97, 131, 133, 134, 146, 151, 154, 158, 161, 175, 205, 219, 228, 230, 235, 258, 267], "cexampl": 0, "provid": [0, 3, 8, 10, 12, 13, 14, 15, 16, 20, 21, 22, 26, 29, 30, 32, 33, 36, 40, 42, 43, 51, 52, 54, 57, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 75, 76, 78, 79, 81, 82, 85, 92, 93, 94, 95, 96, 97, 98, 100, 101, 108, 117, 128, 130, 133, 137, 151, 153, 155, 156, 157, 158, 160, 161, 162, 164, 166, 171, 172, 173, 174, 175, 176, 178, 186, 198, 203, 210, 216, 218, 220, 221, 224, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 250, 253, 255, 256, 260], "class": [0, 7, 9, 10, 14, 15, 16, 17, 18, 21, 27, 34, 42, 44, 46, 49, 56, 63, 68, 70, 93, 114, 116, 119, 126, 128, 150, 161, 162, 166, 174, 175, 178, 183, 184, 195, 205, 210, 229, 230, 232, 234, 236, 240, 242, 248, 250, 252, 255, 258, 268, 273], "add_int": 0, "b": [0, 1, 3, 21, 27, 29, 36, 42, 44, 45, 47, 48, 51, 54, 55, 58, 64, 71, 73, 78, 79, 86, 89, 96, 110, 111, 112, 113, 117, 120, 127, 133, 135, 137, 142, 149, 150, 154, 156, 159, 162, 174, 175, 178, 192, 198, 204, 217, 219, 221, 223, 228, 235, 238, 239, 240, 242, 250, 255, 265, 268, 272], "two": [0, 1, 6, 7, 8, 12, 14, 15, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 33, 35, 39, 41, 42, 45, 49, 52, 54, 55, 63, 64, 74, 78, 81, 85, 87, 92, 96, 100, 102, 109, 113, 117, 123, 124, 125, 128, 130, 133, 146, 151, 153, 154, 161, 166, 171, 173, 175, 176, 181, 184, 186, 191, 195, 208, 216, 217, 218, 219, 223, 228, 232, 236, 237, 239, 240, 246, 250, 252, 254, 255, 256, 263, 265, 266], "integ": [0, 1, 7, 8, 14, 18, 35, 49, 52, 54, 62, 63, 64, 65, 73, 75, 76, 78, 79, 81, 82, 90, 92, 93, 100, 117, 124, 128, 130, 131, 133, 134, 135, 137, 140, 141, 142, 145, 146, 147, 148, 151, 154, 156, 158, 159, 160, 161, 162, 169, 170, 175, 195, 196, 198, 216, 220, 228, 232, 236, 239, 240, 255, 268, 273], "arg": [0, 8, 11, 18, 45, 48, 49, 63, 64, 93, 110, 112, 128, 136, 140, 152, 155, 156, 168, 169, 229, 235, 240, 257], "togeth": [0, 8, 29, 35, 55, 73, 76, 82, 117, 151, 176, 186, 193, 204, 211, 265], "return": [0, 1, 5, 6, 8, 10, 14, 15, 16, 18, 19, 21, 23, 27, 28, 29, 30, 33, 35, 36, 39, 44, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 175, 178, 180, 186, 189, 191, 195, 196, 203, 211, 212, 218, 220, 221, 223, 229, 230, 232, 235, 236, 239, 240, 242, 250, 254, 255, 258, 259], "result": [0, 1, 8, 13, 14, 15, 18, 21, 23, 30, 33, 42, 46, 47, 49, 54, 59, 63, 70, 72, 81, 82, 85, 96, 102, 106, 107, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 124, 127, 130, 131, 146, 150, 156, 158, 161, 175, 178, 191, 198, 203, 215, 216, 218, 219, 221, 228, 232, 233, 235, 239, 240, 248, 255], "timer": [0, 25, 49, 64, 73, 74, 81, 94, 107, 122, 130, 131, 132, 134, 141, 143, 161, 184, 200, 201, 232, 241, 257, 261], "type": [0, 1, 3, 7, 10, 12, 14, 15, 17, 18, 19, 21, 33, 36, 42, 46, 49, 51, 54, 55, 62, 63, 64, 65, 70, 71, 73, 78, 82, 96, 97, 98, 100, 101, 112, 113, 117, 121, 122, 123, 124, 125, 127, 128, 133, 146, 148, 154, 156, 157, 160, 162, 164, 166, 181, 186, 188, 203, 205, 208, 210, 211, 212, 214, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 244, 246, 258, 263, 272], "creat": [0, 1, 3, 5, 8, 9, 10, 12, 13, 14, 15, 21, 26, 27, 29, 34, 35, 36, 37, 38, 39, 41, 42, 51, 52, 54, 55, 58, 63, 65, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 106, 107, 108, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 156, 157, 162, 166, 175, 177, 178, 180, 181, 183, 184, 185, 186, 189, 192, 193, 195, 196, 197, 200, 203, 205, 210, 212, 213, 217, 228, 229, 232, 235, 238, 239, 240, 242, 245, 246, 250, 252, 255, 259, 263, 265, 268, 271, 273], "measur": [0, 21, 26, 27, 28, 30, 66, 74, 81, 113, 117, 124, 130, 131, 145, 161, 170, 175, 178, 196, 211, 222, 227, 232, 240, 250, 255, 268], "elaps": [0, 130, 146, 156, 161, 258], "time": [0, 1, 4, 6, 8, 9, 10, 13, 15, 16, 17, 18, 19, 22, 25, 29, 30, 32, 33, 34, 38, 40, 41, 42, 49, 52, 54, 60, 62, 63, 64, 66, 70, 71, 74, 75, 78, 79, 80, 81, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 116, 117, 119, 120, 123, 124, 125, 128, 131, 132, 133, 134, 135, 137, 142, 143, 145, 146, 155, 156, 157, 158, 166, 177, 181, 186, 189, 197, 198, 199, 200, 201, 205, 209, 211, 212, 213, 214, 219, 228, 232, 233, 234, 235, 237, 239, 240, 245, 246, 248, 252, 256, 257, 258, 267, 272], "sinc": [0, 6, 12, 52, 63, 64, 66, 85, 89, 101, 117, 130, 151, 156, 161, 171, 175, 181, 186, 187, 189, 191, 198, 205, 211, 213, 218, 252, 255, 258], "object": [0, 1, 4, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 21, 23, 26, 27, 28, 29, 30, 34, 35, 38, 41, 42, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 122, 123, 124, 125, 126, 128, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 169, 170, 171, 174, 175, 178, 180, 184, 187, 189, 191, 192, 195, 196, 197, 198, 200, 203, 204, 205, 212, 213, 219, 228, 229, 230, 233, 236, 242, 250, 255, 258, 265, 266, 268, 271, 273], "instanti": [0, 17, 49, 96, 131, 158, 228, 232, 240], "found": [0, 3, 6, 8, 12, 14, 16, 18, 19, 23, 38, 44, 45, 47, 48, 54, 70, 98, 117, 128, 160, 167, 168, 204, 208, 213, 219, 228, 229, 232, 236, 240, 253, 258, 262, 263, 266], "ha": [0, 1, 3, 5, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 36, 39, 40, 41, 42, 44, 46, 47, 49, 52, 54, 60, 63, 64, 66, 68, 69, 74, 76, 78, 80, 81, 82, 83, 85, 86, 88, 90, 97, 98, 100, 101, 116, 117, 119, 124, 125, 128, 130, 131, 133, 134, 137, 140, 141, 142, 146, 151, 153, 154, 156, 157, 158, 160, 161, 166, 175, 176, 178, 179, 180, 181, 184, 186, 191, 192, 193, 195, 196, 197, 198, 200, 204, 205, 210, 211, 212, 213, 216, 218, 228, 230, 232, 233, 235, 236, 237, 239, 240, 242, 244, 248, 250, 252, 254, 255, 256, 257, 258, 270, 272], "content": [0, 12, 21, 23, 31, 33, 43, 49, 51, 65, 71, 73, 78, 133, 154, 164, 175, 186, 190, 215, 219, 222, 223, 225, 226, 227, 232, 235, 236, 237, 238, 254, 268, 273], "abov": [0, 3, 6, 7, 8, 10, 17, 21, 23, 24, 26, 27, 33, 42, 44, 45, 46, 54, 61, 62, 63, 64, 70, 71, 73, 74, 75, 78, 81, 82, 85, 87, 93, 96, 97, 99, 100, 116, 117, 119, 124, 128, 131, 133, 134, 150, 155, 157, 160, 161, 162, 166, 172, 175, 177, 178, 179, 181, 184, 186, 191, 192, 193, 196, 198, 203, 204, 208, 211, 212, 214, 220, 221, 228, 232, 233, 235, 236, 237, 238, 240, 250, 253, 254, 255, 257, 258, 263, 272], "usercmodul": 0, "comment": [0, 12, 186, 189, 210, 214], "addit": [0, 2, 7, 9, 10, 12, 15, 21, 23, 26, 33, 38, 49, 53, 55, 64, 66, 70, 71, 75, 76, 78, 82, 86, 87, 90, 96, 100, 124, 133, 137, 140, 142, 145, 146, 151, 161, 166, 171, 173, 175, 178, 180, 186, 190, 200, 208, 216, 228, 229, 233, 235, 237, 239, 240, 242, 248, 250, 253, 255, 257, 263, 272], "explan": [0, 135, 250, 254, 258], "next": [0, 1, 3, 6, 10, 14, 19, 32, 33, 35, 36, 39, 41, 42, 45, 49, 52, 56, 63, 64, 65, 73, 81, 117, 122, 124, 125, 146, 160, 175, 179, 181, 186, 189, 191, 197, 203, 205, 208, 210, 213, 216, 228, 232, 234, 235, 236, 239, 258, 263, 264, 270], "also": [0, 1, 3, 5, 7, 8, 9, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 26, 27, 29, 32, 33, 34, 35, 36, 38, 41, 42, 44, 54, 55, 56, 58, 59, 63, 64, 74, 79, 82, 85, 87, 90, 93, 94, 98, 100, 106, 110, 111, 112, 113, 117, 122, 124, 125, 128, 130, 131, 135, 137, 140, 145, 151, 157, 161, 162, 171, 174, 175, 176, 186, 190, 191, 195, 197, 198, 199, 200, 203, 204, 205, 208, 210, 211, 212, 214, 220, 221, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 250, 252, 255, 256, 257, 258, 263, 265, 271, 272], "cppexampl": 0, "same": [0, 1, 6, 7, 8, 10, 12, 16, 21, 24, 27, 29, 30, 33, 36, 41, 42, 45, 54, 59, 64, 67, 70, 72, 74, 78, 79, 81, 82, 85, 86, 87, 90, 92, 93, 94, 96, 98, 101, 113, 115, 116, 117, 123, 125, 128, 133, 134, 135, 137, 140, 142, 143, 145, 150, 155, 156, 161, 162, 171, 174, 175, 177, 178, 186, 188, 193, 196, 200, 211, 212, 213, 228, 230, 232, 233, 235, 237, 238, 239, 248, 250, 252, 254, 255, 256, 257, 258, 264, 268], "wai": [0, 1, 3, 6, 10, 13, 15, 22, 23, 25, 27, 31, 32, 33, 35, 37, 39, 40, 41, 42, 49, 52, 54, 55, 60, 63, 65, 69, 70, 78, 79, 82, 86, 87, 91, 93, 94, 96, 117, 122, 125, 130, 131, 133, 153, 155, 156, 160, 161, 171, 174, 175, 176, 177, 180, 186, 188, 191, 202, 208, 210, 211, 212, 218, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 255, 256, 262, 263, 266], "show": [0, 8, 17, 24, 27, 29, 34, 36, 38, 43, 54, 73, 85, 96, 110, 111, 112, 113, 117, 127, 131, 138, 142, 145, 156, 174, 175, 178, 181, 186, 197, 203, 204, 210, 229, 235, 236, 238, 239, 250, 255, 262], "mix": [0, 97, 117, 166, 174, 175], "To": [0, 3, 6, 10, 14, 16, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 52, 54, 58, 63, 64, 70, 72, 73, 96, 97, 99, 100, 113, 117, 122, 124, 130, 131, 134, 137, 140, 145, 146, 150, 154, 156, 161, 164, 173, 176, 177, 180, 181, 184, 186, 187, 188, 190, 191, 192, 196, 197, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 219, 229, 232, 233, 235, 236, 237, 240, 248, 253, 260, 261, 262, 263, 264, 270, 271, 272, 273], "get": [0, 4, 8, 10, 15, 16, 17, 18, 19, 21, 22, 25, 27, 30, 32, 40, 41, 43, 47, 49, 52, 54, 55, 62, 63, 64, 65, 71, 72, 73, 74, 78, 81, 82, 83, 87, 88, 89, 96, 97, 99, 100, 101, 104, 109, 110, 111, 112, 113, 117, 118, 121, 122, 124, 125, 128, 130, 131, 132, 133, 138, 140, 141, 143, 144, 145, 152, 153, 154, 157, 158, 161, 162, 164, 165, 166, 168, 169, 175, 178, 180, 181, 183, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 201, 202, 204, 205, 209, 210, 211, 212, 213, 214, 229, 230, 232, 234, 235, 242, 243, 248, 250, 252, 255, 258, 259, 261, 262, 264, 265, 266, 268, 269], "start": [0, 4, 6, 9, 10, 14, 17, 18, 21, 22, 26, 27, 32, 35, 36, 42, 49, 52, 54, 55, 61, 62, 63, 64, 65, 70, 73, 74, 79, 83, 91, 93, 98, 110, 111, 112, 113, 117, 122, 123, 124, 127, 128, 130, 134, 136, 137, 141, 149, 150, 151, 159, 160, 161, 162, 168, 169, 174, 175, 178, 188, 190, 191, 195, 196, 198, 200, 201, 203, 204, 205, 210, 212, 213, 219, 229, 232, 233, 235, 237, 238, 239, 240, 242, 243, 245, 246, 250, 252, 255, 258, 259, 261, 265, 268, 269, 272], "appli": [0, 1, 3, 7, 12, 21, 39, 62, 63, 70, 75, 81, 96, 102, 110, 111, 112, 113, 116, 117, 120, 122, 124, 125, 127, 134, 150, 151, 166, 173, 175, 181, 211, 228, 230, 232, 233, 239, 240, 254, 255], "2": [0, 1, 3, 6, 7, 8, 9, 14, 15, 16, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 58, 59, 60, 63, 64, 65, 73, 74, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 100, 102, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 143, 145, 146, 149, 150, 155, 156, 158, 159, 161, 162, 164, 166, 169, 170, 171, 173, 174, 175, 177, 178, 181, 184, 186, 193, 194, 195, 196, 197, 198, 202, 204, 205, 208, 210, 211, 212, 213, 217, 219, 220, 221, 228, 231, 232, 235, 236, 237, 238, 239, 240, 242, 245, 246, 249, 250, 254, 255, 258, 259, 263, 265, 271, 272], "modif": [0, 3, 5, 26, 113, 117, 128, 232], "set": [0, 1, 3, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 21, 23, 24, 26, 27, 29, 31, 33, 34, 35, 39, 40, 41, 42, 43, 49, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 133, 134, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 160, 161, 165, 166, 171, 175, 176, 177, 178, 181, 186, 188, 189, 193, 195, 197, 198, 200, 203, 204, 205, 207, 209, 211, 212, 213, 214, 216, 218, 219, 220, 221, 223, 224, 225, 226, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 250, 252, 254, 255, 256, 257, 259, 260, 264, 265, 266, 268], "flag": [0, 14, 16, 48, 52, 54, 55, 58, 64, 110, 111, 112, 113, 117, 120, 121, 127, 128, 150, 151, 155, 156, 162, 212, 215, 216, 218, 221, 222, 223, 224, 225, 227, 232, 235, 236, 238, 252, 257], "user_c_modul": 0, "point": [0, 3, 6, 8, 10, 12, 18, 19, 21, 27, 33, 35, 42, 49, 51, 54, 64, 74, 77, 89, 92, 93, 96, 98, 100, 101, 113, 114, 116, 117, 118, 122, 124, 125, 130, 131, 133, 145, 149, 156, 159, 160, 161, 162, 181, 187, 211, 213, 219, 220, 228, 229, 232, 235, 237, 239], "want": [0, 1, 6, 21, 26, 27, 31, 33, 36, 39, 42, 54, 55, 60, 87, 113, 115, 117, 120, 122, 123, 124, 125, 136, 148, 151, 152, 161, 162, 175, 178, 180, 181, 184, 186, 187, 188, 189, 190, 192, 193, 200, 208, 210, 214, 229, 233, 235, 238, 239, 242, 245, 248, 250, 255, 263, 266], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "automat": [0, 1, 7, 21, 23, 26, 27, 33, 35, 42, 52, 54, 60, 62, 63, 64, 66, 71, 73, 78, 84, 89, 102, 110, 111, 112, 113, 115, 117, 120, 122, 124, 125, 128, 130, 131, 133, 135, 140, 151, 155, 156, 168, 171, 175, 178, 181, 186, 188, 190, 210, 228, 229, 230, 233, 235, 237, 245, 263, 266], "detail": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 14, 18, 19, 20, 21, 22, 23, 32, 33, 45, 54, 63, 81, 82, 93, 117, 128, 130, 133, 135, 151, 156, 160, 162, 171, 174, 175, 176, 186, 195, 203, 219, 220, 221, 228, 229, 232, 233, 235, 240, 242, 249, 250, 254, 256, 262, 264, 270], "enabl": [0, 5, 7, 10, 16, 19, 20, 21, 24, 26, 27, 42, 49, 54, 58, 60, 62, 63, 64, 65, 66, 67, 73, 74, 77, 82, 84, 90, 91, 93, 94, 96, 98, 100, 101, 109, 111, 112, 114, 117, 118, 124, 127, 128, 130, 133, 134, 135, 140, 145, 146, 149, 151, 156, 157, 158, 160, 164, 165, 166, 168, 169, 171, 174, 175, 178, 186, 188, 191, 203, 204, 214, 218, 219, 220, 221, 222, 224, 227, 229, 232, 234, 235, 239, 240, 242, 250, 255, 257, 258, 259, 263, 265, 266, 268], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "preprocessor": [0, 12], "macro": [0, 1, 5, 8, 11, 12, 85, 235], "1": [0, 1, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 43, 45, 48, 49, 52, 54, 55, 58, 59, 63, 64, 65, 66, 73, 74, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 116, 117, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 166, 169, 170, 173, 174, 175, 178, 179, 180, 184, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 210, 211, 212, 213, 216, 217, 219, 223, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 244, 245, 248, 249, 250, 252, 253, 254, 255, 258, 259, 263, 265, 266, 268, 272], "come": [0, 23, 26, 43, 85, 87, 117, 135, 140, 162, 181, 190, 228, 236, 240, 252, 258, 262], "here": [0, 1, 7, 8, 16, 23, 25, 33, 35, 38, 39, 42, 47, 56, 63, 70, 74, 93, 96, 110, 111, 112, 117, 122, 125, 156, 162, 170, 176, 179, 186, 188, 189, 192, 196, 197, 198, 203, 204, 205, 208, 210, 211, 214, 216, 219, 220, 230, 232, 235, 239, 240, 256, 262, 263, 264, 267, 272], "unix": [0, 4, 7, 13, 15, 44, 45, 47, 48, 49, 52, 54, 129, 156, 161, 228, 229, 230, 233, 235, 255, 258], "cd": [0, 3, 10, 13, 85, 233], "clean": [0, 26, 117, 181, 186, 235], "onc": [0, 8, 21, 23, 25, 26, 27, 30, 31, 33, 35, 42, 54, 55, 58, 73, 78, 79, 87, 88, 89, 91, 96, 100, 115, 117, 120, 122, 123, 125, 128, 130, 156, 161, 176, 180, 181, 183, 186, 188, 189, 192, 196, 202, 203, 205, 208, 228, 229, 235, 240, 256, 258, 263], "new": [0, 1, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 31, 33, 51, 52, 54, 55, 58, 63, 64, 66, 68, 74, 78, 79, 81, 86, 88, 89, 90, 113, 117, 119, 122, 123, 124, 125, 126, 128, 130, 133, 134, 137, 140, 142, 143, 145, 146, 147, 148, 150, 155, 156, 157, 158, 175, 176, 177, 178, 181, 184, 186, 188, 191, 193, 197, 198, 199, 205, 210, 228, 230, 232, 234, 239, 240, 255, 256, 258, 259, 268, 273], "output": [0, 3, 4, 12, 13, 21, 24, 25, 27, 29, 33, 34, 39, 41, 42, 45, 47, 48, 49, 52, 58, 60, 62, 63, 65, 70, 73, 79, 80, 81, 82, 89, 90, 105, 106, 107, 111, 117, 124, 125, 127, 128, 134, 140, 143, 145, 146, 151, 154, 158, 160, 166, 171, 174, 175, 178, 179, 183, 186, 190, 195, 197, 200, 208, 212, 228, 230, 235, 238, 239, 240, 242, 250, 252, 254, 255, 258, 259, 263, 265], "from": [0, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 38, 39, 40, 41, 42, 43, 47, 49, 51, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 100, 101, 102, 106, 107, 110, 111, 112, 113, 116, 117, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 183, 186, 188, 191, 192, 193, 195, 196, 197, 199, 200, 203, 205, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273], "base": [0, 1, 3, 5, 10, 14, 16, 17, 18, 19, 20, 21, 26, 27, 49, 54, 55, 57, 60, 61, 71, 73, 80, 81, 85, 92, 96, 98, 99, 102, 106, 110, 111, 112, 113, 117, 120, 122, 124, 127, 130, 140, 157, 158, 162, 171, 173, 175, 191, 195, 203, 214, 224, 228, 229, 230, 233, 235, 236, 250, 253, 255], "rp2": [0, 82, 90, 95, 152, 153, 154, 233, 249, 252], "look": [0, 1, 6, 9, 10, 14, 20, 26, 42, 49, 70, 85, 87, 117, 122, 151, 160, 161, 173, 177, 181, 183, 186, 188, 208, 210, 214, 235, 236, 237, 239, 240, 253, 263, 267], "littl": [0, 3, 33, 80, 98, 117, 146, 159, 160, 162, 166, 187, 192, 210, 217, 219, 228, 239, 255, 273], "differ": [0, 1, 3, 6, 7, 9, 10, 20, 21, 26, 27, 29, 30, 33, 36, 40, 49, 55, 63, 64, 65, 74, 79, 85, 86, 87, 88, 89, 90, 93, 96, 117, 121, 123, 125, 128, 133, 142, 162, 166, 170, 173, 175, 177, 178, 181, 183, 186, 187, 191, 195, 196, 200, 205, 211, 214, 219, 230, 231, 232, 234, 242, 250, 252, 253, 254, 255, 258, 267, 268], "note": [0, 1, 3, 9, 12, 14, 15, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 33, 38, 40, 41, 42, 49, 51, 52, 54, 55, 59, 60, 62, 63, 64, 67, 71, 74, 78, 79, 82, 85, 91, 92, 93, 94, 101, 106, 107, 110, 111, 112, 113, 115, 116, 117, 120, 122, 123, 124, 125, 127, 128, 130, 133, 135, 137, 142, 145, 146, 150, 155, 156, 157, 160, 161, 162, 166, 171, 173, 175, 177, 178, 179, 182, 183, 186, 189, 192, 193, 195, 196, 197, 198, 204, 210, 211, 212, 214, 216, 218, 219, 223, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 247, 250, 252, 254, 255, 258], "actual": [0, 7, 12, 15, 19, 20, 21, 26, 27, 33, 36, 49, 60, 63, 71, 76, 78, 79, 82, 86, 87, 96, 117, 128, 131, 133, 136, 137, 150, 157, 160, 161, 162, 166, 173, 186, 211, 228, 230, 238, 240, 253, 255, 258], "invok": [0, 7, 64, 117, 186, 228, 235, 240], "again": [0, 14, 33, 42, 54, 81, 83, 87, 90, 93, 122, 124, 155, 158, 161, 162, 179, 181, 186, 191, 200, 205, 208, 209, 213, 214, 228, 235, 239, 240, 246, 255, 258, 263], "first": [0, 2, 3, 4, 5, 8, 9, 10, 16, 18, 19, 21, 22, 23, 26, 27, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 45, 49, 54, 55, 63, 64, 69, 73, 74, 78, 86, 90, 96, 102, 115, 117, 122, 123, 124, 128, 133, 137, 142, 146, 149, 150, 154, 156, 157, 158, 160, 161, 162, 166, 175, 176, 178, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 208, 209, 212, 213, 214, 217, 218, 219, 223, 228, 229, 232, 233, 234, 235, 236, 237, 239, 242, 245, 246, 250, 252, 255, 256, 258, 259, 263, 264, 266, 268, 270], "pick": [0, 8, 33, 42, 186, 189], "up": [0, 1, 3, 6, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 23, 26, 27, 30, 33, 34, 35, 39, 42, 49, 52, 54, 63, 64, 65, 70, 71, 73, 74, 75, 76, 79, 82, 83, 85, 87, 91, 93, 96, 97, 98, 99, 100, 102, 113, 114, 117, 118, 120, 122, 123, 124, 125, 130, 131, 133, 134, 135, 140, 141, 145, 150, 151, 156, 161, 162, 171, 173, 175, 176, 177, 178, 180, 181, 183, 186, 187, 188, 189, 191, 192, 193, 195, 197, 198, 203, 205, 209, 210, 211, 212, 213, 214, 216, 229, 232, 235, 236, 237, 239, 240, 242, 244, 249, 250, 253, 254, 255, 256, 258, 259, 262, 264, 266, 267, 268], "list": [0, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 26, 27, 36, 42, 46, 47, 49, 51, 52, 54, 56, 58, 63, 64, 65, 69, 78, 79, 85, 93, 96, 98, 100, 101, 113, 114, 117, 125, 128, 130, 133, 137, 147, 148, 149, 150, 155, 156, 157, 160, 164, 166, 167, 174, 175, 178, 185, 195, 198, 205, 208, 210, 212, 221, 228, 232, 233, 234, 235, 236, 238, 240, 242, 248, 250, 253, 255, 257, 258, 259, 267, 270], "name": [0, 1, 3, 8, 9, 10, 12, 14, 16, 17, 18, 19, 23, 26, 30, 33, 42, 45, 46, 49, 54, 56, 58, 64, 70, 71, 77, 82, 85, 89, 93, 96, 97, 100, 101, 116, 117, 122, 123, 128, 129, 135, 140, 145, 150, 156, 157, 158, 160, 161, 162, 164, 168, 169, 170, 174, 175, 176, 186, 188, 195, 198, 208, 211, 212, 228, 229, 230, 232, 233, 235, 237, 238, 239, 240, 242, 248, 254, 256, 258, 263, 265, 268, 272], "usermod_cppexampl": 0, "top": [0, 1, 3, 8, 10, 20, 35, 43, 65, 73, 74, 87, 110, 111, 112, 113, 117, 124, 127, 181, 186, 187, 191, 197, 202, 203, 204, 225, 236, 252, 262], "control": [0, 4, 10, 16, 18, 23, 24, 31, 32, 33, 37, 39, 49, 54, 60, 62, 63, 74, 75, 79, 80, 85, 90, 94, 96, 98, 103, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 120, 122, 124, 125, 127, 128, 130, 137, 139, 143, 144, 148, 151, 162, 165, 166, 168, 173, 176, 181, 182, 183, 186, 197, 200, 201, 203, 204, 205, 210, 212, 213, 216, 219, 230, 231, 232, 233, 239, 249, 252, 254, 256, 260, 271, 273], "own": [0, 2, 3, 5, 9, 12, 21, 26, 27, 35, 60, 117, 125, 140, 143, 150, 155, 203, 230, 233, 235, 240, 258], "project": [0, 2, 3, 5, 8, 10, 23, 33, 70, 117, 191, 230, 233, 234, 260, 267], "conveni": [0, 20, 21, 23, 26, 42, 67, 79, 162, 171, 173, 176, 198, 203, 235, 253, 256], "out": [0, 18, 21, 23, 24, 25, 26, 27, 33, 34, 36, 39, 41, 42, 44, 49, 51, 52, 62, 64, 66, 71, 79, 82, 86, 87, 93, 97, 114, 117, 122, 124, 125, 130, 131, 146, 151, 154, 156, 161, 172, 175, 176, 178, 181, 184, 186, 198, 202, 204, 208, 214, 216, 220, 228, 232, 235, 236, 239, 242, 248, 250, 252, 255, 256, 258, 259, 262, 263, 265, 268, 271, 272], "my_project": 0, "example1": 0, "example2": 0, "stm32": [0, 4, 7, 12, 49, 54, 70, 74, 78, 82, 90, 95, 106, 183, 191, 228, 233, 235, 238], "directli": [0, 1, 7, 9, 10, 21, 22, 23, 26, 33, 42, 44, 45, 49, 51, 52, 55, 65, 73, 87, 93, 95, 117, 122, 125, 131, 140, 144, 145, 156, 160, 161, 166, 176, 183, 203, 205, 208, 211, 214, 228, 230, 233, 234, 235, 237, 256, 260, 263, 270, 272], "Then": [0, 1, 3, 8, 12, 13, 27, 28, 30, 31, 34, 35, 36, 39, 40, 41, 42, 55, 73, 117, 133, 138, 161, 176, 184, 197, 203, 205, 228, 233, 239, 244, 246, 256, 258, 263], "esp32": [0, 7, 8, 24, 49, 54, 74, 80, 90, 95, 233, 238], "extra": [0, 7, 12, 21, 52, 60, 73, 75, 78, 79, 86, 93, 124, 133, 137, 142, 146, 202, 233, 262], "rel": [0, 15, 18, 19, 21, 30, 113, 117, 151, 158, 161, 162, 202, 212, 221, 230, 232, 233, 252, 262], "locat": [0, 5, 6, 8, 13, 62, 65, 70, 73, 110, 111, 112, 113, 117, 127, 128, 130, 133, 137, 151, 186, 198, 203, 217, 221, 228, 232, 233, 235, 237, 240, 258, 272], "its": [0, 1, 7, 9, 11, 12, 21, 23, 24, 27, 28, 33, 38, 39, 40, 41, 50, 54, 55, 57, 58, 62, 64, 65, 66, 69, 70, 73, 74, 76, 78, 79, 81, 86, 92, 93, 98, 113, 115, 117, 122, 128, 129, 130, 131, 133, 134, 137, 143, 144, 151, 154, 155, 157, 160, 162, 166, 175, 176, 177, 178, 182, 190, 193, 198, 203, 209, 211, 212, 213, 215, 219, 221, 223, 228, 229, 230, 232, 233, 235, 236, 237, 240, 242, 250, 255, 258], "cmakelist": 0, "txt": [0, 3, 31, 190, 209, 210, 229, 254, 268, 273], "specifi": [0, 1, 3, 8, 10, 16, 18, 19, 21, 25, 26, 31, 33, 36, 39, 54, 55, 58, 60, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 100, 102, 106, 107, 110, 111, 112, 113, 117, 119, 120, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 140, 142, 143, 145, 146, 148, 150, 151, 155, 156, 157, 161, 162, 166, 169, 174, 175, 195, 211, 217, 218, 221, 222, 226, 227, 228, 229, 233, 235, 236, 237, 242, 244, 248, 250, 252, 255, 257, 258, 272], "absolut": [0, 17, 19, 21, 77, 81, 87, 92, 93, 117, 151, 158, 161, 171, 188, 233], "via": [0, 1, 3, 5, 8, 12, 16, 18, 20, 21, 22, 26, 27, 42, 52, 54, 56, 60, 64, 73, 76, 79, 85, 86, 89, 96, 99, 110, 111, 112, 113, 117, 122, 124, 126, 128, 129, 131, 136, 152, 167, 168, 173, 175, 178, 181, 186, 195, 197, 202, 211, 212, 230, 232, 233, 235, 236, 237, 239, 242, 244, 250, 252, 255, 259, 260, 262, 263, 266, 268, 272, 273], "those": [0, 22, 27, 32, 54, 64, 75, 79, 82, 93, 94, 96, 117, 119, 125, 132, 137, 150, 167, 175, 184, 186, 198, 219, 231, 232, 240, 253, 255], "usual": [0, 1, 3, 4, 7, 20, 21, 26, 27, 29, 33, 39, 40, 54, 55, 58, 61, 66, 71, 75, 79, 81, 82, 86, 93, 94, 96, 97, 99, 100, 101, 117, 128, 131, 149, 151, 157, 160, 161, 162, 166, 173, 175, 191, 203, 211, 221, 228, 229, 230, 232, 236, 239, 240, 250], "default": [0, 1, 3, 10, 14, 15, 16, 18, 19, 20, 21, 26, 27, 31, 39, 40, 42, 43, 52, 54, 55, 60, 63, 64, 65, 67, 72, 73, 75, 76, 78, 79, 85, 93, 95, 96, 97, 98, 101, 102, 106, 110, 111, 112, 113, 117, 118, 120, 123, 124, 125, 127, 128, 130, 131, 133, 134, 136, 145, 148, 150, 151, 154, 155, 156, 160, 162, 166, 169, 171, 174, 175, 178, 186, 190, 192, 203, 209, 211, 214, 228, 229, 232, 233, 235, 237, 238, 240, 242, 250, 252, 254, 255, 257, 259, 263, 264, 268, 273], "decid": [0, 54, 176], "case": [0, 1, 8, 18, 19, 21, 23, 26, 27, 33, 36, 39, 42, 48, 54, 55, 59, 60, 62, 67, 70, 71, 74, 78, 79, 81, 86, 87, 89, 90, 93, 100, 101, 117, 120, 128, 131, 133, 136, 145, 149, 152, 155, 156, 157, 160, 161, 162, 174, 175, 178, 186, 191, 193, 202, 205, 212, 213, 214, 215, 220, 222, 223, 227, 228, 232, 233, 234, 235, 236, 239, 240, 242, 250, 255, 258, 262, 265], "noth": [0, 10, 127, 148, 186, 189, 240], "do": [0, 1, 3, 5, 7, 8, 10, 14, 16, 21, 23, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 55, 63, 64, 70, 73, 74, 76, 84, 90, 93, 101, 109, 110, 111, 112, 113, 114, 117, 120, 122, 124, 125, 126, 127, 135, 137, 149, 151, 157, 161, 163, 166, 172, 173, 175, 177, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 227, 228, 229, 232, 233, 235, 240, 247, 252, 254, 258, 259, 262, 263, 264, 266, 270], "than": [0, 1, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 29, 30, 33, 34, 36, 47, 52, 54, 60, 62, 63, 64, 66, 70, 73, 78, 79, 81, 82, 85, 86, 87, 90, 96, 110, 111, 112, 113, 117, 120, 121, 122, 124, 127, 128, 130, 132, 133, 134, 137, 149, 151, 155, 156, 159, 160, 161, 171, 174, 181, 186, 187, 196, 211, 212, 215, 217, 219, 221, 228, 230, 232, 233, 237, 239, 240, 250, 252, 254, 258], "line": [0, 3, 10, 12, 14, 16, 19, 21, 27, 31, 36, 38, 41, 43, 47, 48, 49, 52, 65, 73, 78, 79, 80, 86, 87, 90, 93, 124, 133, 135, 137, 142, 146, 148, 151, 156, 175, 178, 186, 187, 203, 204, 205, 208, 210, 211, 214, 228, 232, 233, 235, 238, 239, 242, 248, 250, 255, 263, 266], "appear": [0, 12, 13, 16, 65, 138, 160, 181, 186, 187, 203, 209, 210, 214], "end": [0, 8, 21, 26, 27, 29, 33, 36, 37, 38, 42, 49, 51, 52, 55, 58, 62, 63, 64, 67, 71, 72, 73, 79, 90, 91, 117, 124, 134, 146, 150, 151, 156, 159, 166, 175, 188, 200, 204, 208, 219, 228, 232, 235, 236, 237, 239, 246, 254, 258, 262, 263, 270], "surround": [0, 21, 30], "x": [0, 7, 8, 9, 12, 14, 17, 19, 33, 43, 44, 45, 47, 49, 58, 65, 69, 73, 82, 85, 87, 92, 110, 111, 112, 113, 114, 116, 117, 118, 120, 124, 125, 127, 130, 132, 135, 138, 149, 151, 162, 170, 174, 175, 186, 190, 195, 196, 203, 204, 214, 216, 219, 228, 232, 234, 235, 236, 237, 239, 240, 250, 252, 255, 257, 268, 272], "endif": [0, 5], "pair": [0, 49, 52, 58, 63, 71, 73, 82, 102, 133, 156, 170, 175, 178, 230, 250, 254], "cflags_extra": 0, "mp_qstr_cexampl": 0, "example_user_cmodul": 0, "disabl": [0, 7, 10, 12, 14, 21, 24, 26, 27, 30, 35, 49, 62, 63, 64, 66, 73, 74, 77, 78, 81, 84, 88, 89, 93, 100, 109, 114, 121, 124, 126, 128, 130, 133, 134, 135, 141, 144, 145, 146, 148, 151, 158, 160, 162, 165, 166, 174, 186, 212, 213, 224, 232, 235, 250, 255, 258, 259, 263], "select": [0, 1, 3, 8, 20, 21, 27, 43, 46, 49, 63, 64, 68, 70, 77, 79, 80, 82, 85, 86, 90, 99, 101, 117, 122, 130, 131, 134, 137, 145, 146, 148, 150, 156, 157, 175, 178, 181, 186, 193, 206, 208, 231, 233, 242, 244, 250, 255, 258, 263, 265], "through": [0, 3, 5, 7, 12, 21, 22, 23, 29, 32, 33, 39, 42, 52, 68, 85, 98, 117, 122, 134, 135, 140, 141, 143, 145, 157, 173, 176, 178, 181, 185, 186, 201, 202, 205, 211, 212, 213, 228, 232, 233, 240, 244, 254, 256, 258, 270, 272], "would": [0, 13, 15, 20, 23, 26, 27, 29, 33, 60, 64, 65, 70, 71, 89, 93, 117, 125, 131, 132, 140, 162, 168, 176, 187, 191, 198, 205, 207, 210, 211, 218, 226, 228, 229, 230, 232, 233, 235, 239, 240, 256, 258, 270], "module_cexample_en": 0, "dmodule_cexample_en": 0, "command": [0, 3, 10, 14, 19, 21, 22, 23, 26, 27, 31, 32, 33, 43, 49, 122, 124, 138, 158, 167, 176, 186, 190, 197, 203, 205, 208, 210, 211, 212, 214, 228, 230, 233, 239, 246, 258, 263, 266, 272], "edit": [0, 1, 10, 26, 49, 122, 177, 182, 188, 193, 209, 214, 235, 260, 264], "mpconfigport": [0, 10], "mpconfigboard": [0, 85, 233], "exact": [0, 23, 33, 68, 85, 117, 124, 156, 161, 162, 176, 186, 196], "depend": [0, 1, 4, 10, 12, 14, 21, 23, 33, 39, 42, 45, 51, 54, 60, 61, 62, 64, 65, 68, 71, 73, 74, 78, 79, 82, 83, 86, 87, 88, 89, 90, 93, 96, 98, 100, 117, 122, 128, 131, 133, 137, 140, 150, 155, 156, 157, 158, 161, 162, 166, 173, 174, 176, 183, 186, 196, 203, 208, 210, 211, 216, 228, 232, 233, 237, 238, 255, 257, 273], "thei": [0, 7, 8, 9, 12, 14, 20, 21, 26, 29, 30, 33, 34, 36, 39, 41, 42, 47, 54, 55, 56, 58, 62, 64, 70, 71, 73, 75, 76, 79, 82, 85, 86, 93, 98, 115, 117, 120, 124, 125, 128, 132, 137, 140, 145, 151, 155, 156, 157, 160, 161, 173, 177, 196, 198, 205, 208, 211, 212, 213, 219, 224, 228, 229, 232, 233, 235, 236, 253, 255, 256, 258, 263, 273], "done": [0, 23, 33, 75, 90, 109, 117, 122, 124, 146, 157, 161, 181, 186, 187, 191, 202, 211, 218, 219, 228, 232, 234, 235, 237, 240, 263], "correctli": [0, 3, 10, 14, 16, 27, 33, 72, 74, 91, 204], "fail": [0, 15, 17, 21, 45, 51, 54, 60, 63, 64, 93, 100, 122, 124, 128, 156, 171, 181, 190, 228, 229, 232, 236, 240], "built": [0, 3, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 23, 24, 31, 33, 35, 42, 49, 54, 67, 79, 85, 93, 96, 117, 125, 130, 151, 160, 167, 171, 176, 181, 186, 187, 191, 228, 230, 232, 235, 240, 250, 255, 256], "now": [0, 3, 5, 8, 10, 12, 14, 15, 16, 17, 18, 19, 21, 23, 27, 30, 33, 36, 37, 42, 49, 54, 55, 63, 70, 83, 87, 90, 96, 97, 99, 100, 101, 117, 122, 124, 135, 140, 156, 161, 175, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 203, 208, 209, 210, 213, 214, 230, 239, 242, 255, 258, 259, 263, 264, 266, 272], "just": [0, 1, 5, 8, 12, 23, 26, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 54, 58, 64, 65, 71, 73, 79, 85, 98, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 131, 156, 160, 161, 162, 166, 176, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 199, 203, 205, 210, 211, 213, 214, 230, 232, 233, 235, 238, 240, 256, 258], "ani": [0, 1, 3, 8, 11, 12, 13, 14, 19, 20, 21, 22, 23, 26, 27, 32, 33, 39, 42, 49, 52, 54, 55, 56, 58, 60, 63, 64, 67, 68, 73, 74, 76, 78, 79, 82, 85, 86, 87, 90, 91, 93, 94, 96, 98, 103, 106, 107, 113, 117, 120, 122, 123, 124, 125, 128, 130, 131, 133, 135, 137, 140, 142, 145, 146, 148, 149, 150, 151, 153, 155, 157, 161, 172, 173, 176, 181, 186, 188, 189, 190, 191, 192, 193, 197, 203, 205, 206, 208, 209, 210, 212, 217, 218, 219, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 252, 253, 255, 256, 257, 258, 259, 260, 263, 264], "other": [0, 1, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 33, 35, 39, 41, 44, 49, 51, 52, 54, 55, 60, 62, 63, 64, 70, 71, 73, 74, 75, 79, 80, 81, 82, 85, 87, 88, 89, 93, 94, 95, 96, 98, 99, 100, 101, 113, 117, 122, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 142, 145, 150, 151, 153, 155, 156, 158, 160, 161, 162, 166, 172, 173, 174, 175, 183, 184, 186, 187, 189, 191, 195, 199, 200, 202, 205, 208, 210, 211, 212, 213, 218, 219, 228, 229, 232, 233, 234, 235, 240, 241, 252, 253, 254, 255, 258, 262, 263, 267], "builtin": [0, 5, 10, 13, 14, 45, 46, 49, 70, 71, 156, 160, 230, 244], "print": [0, 3, 8, 12, 13, 21, 24, 25, 27, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 61, 63, 64, 73, 78, 79, 82, 83, 86, 93, 96, 97, 99, 100, 101, 113, 116, 123, 130, 131, 132, 133, 135, 137, 138, 141, 142, 145, 160, 161, 162, 163, 167, 175, 178, 179, 186, 189, 195, 198, 203, 204, 208, 212, 219, 228, 229, 230, 232, 235, 236, 238, 239, 240, 242, 245, 248, 250, 252, 254, 255, 257, 258, 259, 263, 266, 268, 271, 272, 273], "3": [0, 1, 3, 8, 12, 20, 21, 23, 24, 25, 27, 29, 30, 33, 34, 36, 42, 44, 45, 46, 47, 48, 49, 54, 55, 58, 63, 64, 73, 74, 77, 79, 80, 84, 85, 86, 89, 90, 93, 95, 98, 100, 107, 113, 116, 117, 119, 122, 124, 125, 128, 130, 131, 132, 133, 134, 137, 142, 145, 146, 148, 151, 153, 156, 158, 162, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 191, 192, 193, 195, 196, 198, 200, 202, 203, 205, 208, 211, 213, 217, 228, 231, 232, 235, 236, 239, 246, 250, 254, 255, 257, 258, 259, 262, 263, 265, 271, 272], "displai": [0, 8, 17, 18, 27, 32, 36, 46, 49, 65, 70, 106, 107, 113, 114, 115, 117, 120, 124, 126, 127, 150, 181, 182, 193, 194, 230, 235, 238, 245, 247, 248, 259], "4": [0, 1, 3, 6, 14, 15, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 48, 54, 63, 64, 65, 76, 79, 85, 86, 95, 96, 97, 98, 99, 100, 101, 113, 117, 124, 125, 128, 129, 130, 132, 133, 134, 137, 139, 141, 142, 145, 146, 151, 154, 156, 159, 162, 163, 166, 169, 173, 174, 175, 178, 184, 193, 195, 196, 198, 199, 202, 204, 205, 209, 210, 211, 213, 214, 217, 219, 221, 228, 229, 231, 232, 235, 236, 239, 242, 246, 248, 249, 250, 254, 255, 258, 263, 268, 271, 273], "sleep_m": [0, 21, 27, 29, 34, 38, 41, 42, 49, 52, 101, 116, 123, 161, 175, 178, 195, 242, 250, 255, 268], "watch": [0, 212], "1000": [0, 21, 25, 27, 41, 88, 96, 109, 117, 119, 122, 123, 125, 130, 137, 145, 146, 156, 160, 175, 178, 192, 195, 197, 203, 205, 211, 232, 240, 250, 252, 255, 259], "approxim": [0, 15, 21], "cpython": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "document": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "subset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "inform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273], "origin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "micropython": [1, 5, 6, 7, 9, 11, 13, 15, 18, 19, 20, 24, 26, 31, 36, 37, 43, 44, 47, 52, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 78, 80, 85, 87, 88, 89, 94, 95, 96, 100, 113, 117, 124, 125, 128, 129, 130, 136, 145, 146, 150, 151, 153, 155, 156, 157, 158, 160, 161, 162, 166, 168, 169, 171, 173, 184, 186, 187, 190, 191, 192, 195, 198, 202, 204, 205, 210, 218, 220, 225, 229, 230, 237, 238, 241, 245, 246, 247, 248, 252, 253, 257, 258, 261, 264, 267, 273], "involv": [1, 4, 5, 15, 17, 181, 186, 187, 228, 240], "step": [1, 3, 10, 12, 23, 26, 32, 33, 42, 49, 65, 110, 111, 112, 117, 145, 149, 161, 176, 188, 200, 205, 208, 209, 212, 228, 239, 240, 261, 263, 270], "lexer": 1, "convert": [1, 8, 14, 16, 19, 23, 28, 29, 33, 42, 44, 49, 53, 63, 64, 69, 72, 75, 78, 82, 87, 92, 100, 117, 120, 125, 133, 140, 156, 161, 164, 173, 176, 186, 197, 198, 200, 211, 220, 228, 230, 240, 253, 255, 256, 263, 272], "stream": [1, 10, 15, 26, 36, 49, 55, 60, 67, 70, 72, 90, 93, 102, 117, 119, 121, 122, 123, 128, 146, 148, 156, 157, 160, 171, 186, 192, 228, 230, 240], "text": [1, 3, 8, 27, 31, 36, 42, 43, 45, 49, 71, 117, 138, 182, 203, 204, 205, 208, 210, 214, 228, 239, 263, 272], "program": [1, 7, 9, 18, 20, 26, 33, 42, 49, 54, 71, 74, 83, 98, 128, 131, 145, 151, 153, 154, 160, 173, 177, 181, 186, 188, 189, 193, 203, 208, 209, 210, 214, 219, 220, 221, 228, 230, 234, 235, 236, 237, 238, 240, 243, 244, 246, 247, 248, 252, 253, 263, 264, 272], "parser": [1, 15, 19, 93], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 42, 45, 46, 49, 51, 52, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 109, 110, 111, 112, 113, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 203, 204, 205, 207, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 242, 250, 253, 256, 257, 258, 259, 263, 265, 267, 268, 270, 272, 273], "abstract": [1, 10, 16, 21, 27, 54, 71, 87, 96, 136, 152, 175, 178, 230], "syntax": [1, 12, 14, 15, 16, 18, 46, 49, 54, 58, 64, 96, 100, 150, 151, 162, 220, 231, 240], "purpos": [1, 3, 7, 27, 68, 73, 82, 93, 117, 134, 143, 166, 172, 180, 183, 184, 203, 226, 230, 232, 240], "discuss": [1, 5, 9, 14, 21, 33, 35, 88, 89, 93, 161, 191, 228, 240], "we": [1, 3, 5, 6, 7, 10, 12, 23, 26, 33, 36, 38, 39, 41, 54, 55, 64, 71, 117, 119, 124, 145, 161, 177, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 196, 198, 200, 205, 210, 211, 212, 213, 214, 265, 266], "go": [1, 8, 21, 23, 26, 27, 33, 64, 73, 78, 79, 110, 111, 112, 117, 119, 122, 133, 135, 140, 146, 176, 179, 180, 183, 187, 189, 191, 193, 208, 209, 210, 211, 212, 214, 240, 256, 258, 259, 263], "simpl": [1, 8, 14, 39, 49, 63, 64, 70, 85, 87, 117, 122, 136, 152, 168, 169, 175, 187, 191, 199, 203, 204, 206, 212, 219, 220, 228, 229, 232, 237, 248, 252], "languag": [1, 7, 8, 14, 15, 16, 17, 18, 19, 22, 32, 46, 49, 160, 162, 189, 198, 205, 220, 230, 232, 240], "featur": [1, 2, 4, 10, 14, 16, 17, 18, 19, 21, 23, 26, 27, 30, 33, 37, 40, 41, 46, 49, 54, 60, 62, 63, 64, 70, 73, 85, 93, 101, 119, 145, 148, 176, 181, 186, 188, 191, 203, 210, 211, 212, 230, 231, 233, 236, 239, 240, 242, 249, 256, 266, 267], "add1": 1, "statement": [1, 3, 5, 13, 16, 18, 42, 52, 93, 94, 186, 189, 205, 217, 219, 228, 232, 239, 240, 248, 257], "take": [1, 3, 7, 8, 12, 14, 24, 26, 34, 39, 45, 52, 54, 55, 64, 71, 73, 75, 78, 82, 85, 86, 88, 89, 93, 98, 102, 108, 113, 117, 122, 123, 124, 130, 131, 132, 133, 141, 143, 146, 148, 150, 151, 157, 160, 161, 183, 186, 189, 198, 200, 202, 205, 209, 211, 212, 213, 219, 228, 232, 235, 236, 240, 252, 258, 259, 262], "argument": [1, 3, 12, 14, 15, 16, 17, 18, 19, 21, 31, 39, 41, 46, 49, 52, 53, 54, 55, 56, 58, 63, 64, 65, 66, 67, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 93, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 117, 121, 122, 123, 124, 126, 127, 128, 130, 133, 135, 137, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 166, 175, 180, 186, 192, 212, 213, 214, 215, 216, 217, 223, 224, 226, 228, 229, 232, 233, 235, 237, 238, 240, 242, 254, 255, 257], "py": [1, 3, 5, 7, 8, 10, 11, 12, 13, 19, 21, 23, 26, 27, 31, 33, 35, 46, 49, 70, 93, 130, 175, 177, 181, 186, 188, 190, 192, 193, 205, 208, 209, 214, 229, 230, 231, 233, 235, 236, 237, 239, 242, 245, 246, 252, 258, 260, 263, 264, 266], "what": [1, 7, 14, 18, 19, 21, 24, 27, 33, 36, 39, 42, 54, 63, 74, 75, 87, 117, 122, 123, 132, 145, 161, 162, 175, 177, 178, 180, 181, 186, 187, 188, 191, 192, 198, 200, 205, 210, 211, 212, 213, 230, 232, 239, 240, 242, 250, 255], "There": [1, 3, 6, 7, 10, 13, 15, 20, 21, 23, 25, 26, 27, 31, 33, 35, 37, 41, 42, 63, 73, 84, 87, 93, 96, 98, 100, 117, 128, 130, 135, 151, 155, 173, 175, 176, 177, 178, 181, 189, 193, 196, 202, 203, 204, 210, 211, 212, 218, 219, 228, 229, 230, 232, 234, 240, 242, 246, 250, 252, 253, 254, 255, 256, 258, 262, 264, 266, 267], "know": [1, 22, 24, 32, 33, 42, 60, 73, 117, 176, 181, 183, 186, 189, 191, 198, 203, 208, 228, 240, 263, 272], "def_rul": 1, "def_rule_nc": 1, "while": [1, 7, 18, 21, 24, 25, 27, 29, 35, 36, 40, 42, 45, 49, 52, 54, 63, 64, 71, 73, 79, 80, 85, 86, 87, 90, 94, 96, 98, 101, 110, 111, 112, 113, 116, 117, 120, 121, 122, 123, 124, 125, 127, 130, 138, 146, 160, 161, 166, 171, 175, 178, 179, 180, 181, 186, 187, 189, 191, 193, 196, 199, 200, 203, 205, 206, 207, 209, 212, 213, 214, 216, 217, 219, 228, 230, 232, 235, 236, 238, 239, 240, 245, 248, 250, 252, 255, 256, 259, 266, 268, 271, 272], "nc": [1, 30], "our": [1, 5, 6, 112, 117, 124, 145, 181, 184, 185, 186, 187, 188, 190, 191, 198, 200, 205, 210, 213, 214, 258], "add1_stmt": 1, "c": [1, 3, 4, 5, 7, 8, 9, 10, 12, 15, 17, 18, 19, 21, 27, 36, 41, 42, 43, 44, 45, 48, 61, 65, 73, 85, 86, 93, 120, 122, 135, 148, 150, 158, 159, 162, 166, 172, 174, 175, 178, 189, 205, 216, 218, 220, 221, 228, 235, 236, 238, 239, 240, 242, 245, 248, 254, 255, 257], "tok": 1, "kw_add1": 1, "testlist": 1, "turn": [1, 21, 24, 27, 29, 42, 60, 64, 73, 78, 79, 86, 90, 110, 111, 112, 117, 124, 133, 137, 138, 139, 142, 146, 151, 175, 178, 181, 184, 186, 187, 196, 198, 200, 201, 204, 208, 209, 210, 211, 212, 214, 228, 233, 235, 239, 246, 250, 252, 255, 256, 263], "requir": [1, 4, 7, 8, 10, 14, 18, 21, 24, 26, 29, 30, 34, 36, 41, 46, 49, 54, 60, 63, 64, 71, 73, 74, 79, 81, 82, 86, 87, 90, 93, 96, 97, 98, 99, 100, 117, 122, 123, 124, 125, 128, 130, 131, 134, 135, 137, 142, 145, 146, 156, 157, 158, 159, 160, 161, 162, 166, 171, 175, 177, 178, 181, 186, 187, 203, 213, 219, 224, 228, 229, 230, 232, 233, 234, 236, 240, 252, 253, 258, 265], "number": [1, 5, 12, 14, 15, 17, 18, 20, 21, 26, 27, 29, 30, 31, 34, 35, 39, 42, 46, 47, 49, 51, 52, 54, 55, 62, 63, 64, 65, 66, 68, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 86, 89, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 128, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 163, 166, 168, 169, 173, 174, 175, 181, 186, 196, 198, 205, 208, 210, 211, 213, 214, 216, 219, 223, 224, 228, 229, 232, 234, 235, 236, 239, 240, 242, 250, 252, 253, 254, 255, 257, 258, 262, 263, 268, 271, 272], "node": [1, 55, 272], "exampl": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 20, 21, 24, 25, 26, 34, 36, 39, 40, 41, 42, 48, 49, 52, 54, 55, 58, 61, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 115, 116, 117, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 149, 150, 151, 152, 156, 158, 161, 162, 170, 171, 173, 175, 178, 181, 182, 183, 187, 189, 191, 192, 196, 198, 203, 208, 209, 211, 212, 215, 216, 219, 223, 226, 228, 229, 230, 232, 236, 237, 238, 239, 240, 245, 248, 250, 253, 254, 255, 258, 259, 260, 263, 265, 271, 272, 273], "assembli": [1, 175, 198, 220, 250], "It": [1, 3, 4, 5, 7, 8, 10, 12, 13, 16, 19, 21, 24, 25, 26, 27, 33, 36, 40, 41, 42, 52, 54, 55, 60, 63, 64, 65, 67, 68, 74, 75, 76, 77, 82, 89, 90, 96, 99, 101, 117, 122, 129, 130, 131, 134, 136, 138, 140, 142, 145, 146, 147, 148, 153, 155, 157, 160, 161, 166, 171, 174, 175, 178, 180, 183, 186, 191, 197, 198, 199, 200, 202, 203, 206, 208, 209, 210, 212, 213, 214, 219, 224, 225, 228, 229, 230, 232, 235, 237, 239, 240, 242, 250, 252, 255, 258, 262, 264, 267, 272], "numer": [1, 16, 49, 54, 58, 61, 64, 70, 114, 117, 150, 156, 161, 240], "therefor": [1, 6, 9, 14, 60, 81, 85, 89, 93, 132, 134, 166, 167, 173, 200, 230, 232, 255, 258, 266], "One": [1, 8, 26, 27, 63, 65, 73, 110, 111, 133, 189, 205, 232, 242, 253], "itself": [1, 22, 23, 32, 33, 54, 55, 60, 67, 70, 117, 122, 134, 150, 176, 177, 214, 215, 228, 232, 236, 240, 256, 257], "liter": [1, 12, 14, 16, 18, 46, 49, 117, 150, 162, 228, 252], "express": [1, 12, 14, 15, 16, 17, 18, 19, 46, 48, 49, 70, 93, 156, 161, 169, 172, 186, 211, 235, 253, 255], "part": [1, 5, 8, 9, 12, 19, 20, 26, 33, 35, 36, 41, 42, 54, 68, 73, 82, 84, 92, 93, 96, 117, 125, 130, 138, 141, 157, 161, 162, 170, 181, 189, 210, 228, 232, 233, 236, 237, 246, 250, 252], "standard": [1, 3, 4, 5, 14, 15, 16, 19, 23, 26, 31, 44, 45, 46, 47, 48, 49, 55, 60, 61, 67, 68, 73, 77, 78, 84, 85, 88, 89, 90, 96, 100, 101, 110, 111, 117, 133, 136, 143, 146, 151, 152, 156, 157, 159, 160, 161, 162, 181, 186, 192, 193, 200, 211, 221, 228, 229, 230, 231, 239, 240, 250, 252, 255, 258, 267], "achiev": [1, 25, 41, 68, 71, 74, 81, 117, 134, 146, 171, 175, 187, 200, 203, 219, 228, 232, 240], "omit": [1, 33, 82, 87, 142, 143, 156, 230, 232, 238, 240], "remain": [1, 10, 21, 26, 52, 64, 79, 82, 117, 128, 135, 136, 146, 151, 157, 228, 239], "mean": [1, 9, 12, 21, 26, 27, 49, 54, 55, 60, 64, 66, 71, 72, 73, 83, 87, 93, 96, 102, 113, 117, 119, 124, 125, 128, 130, 131, 134, 145, 149, 156, 158, 161, 162, 175, 177, 178, 186, 188, 191, 192, 196, 203, 205, 209, 210, 211, 212, 213, 214, 216, 219, 221, 224, 228, 230, 232, 234, 235, 239, 240, 248, 250, 255, 257, 258, 264, 266], "handl": [1, 7, 8, 10, 15, 18, 19, 26, 30, 44, 45, 49, 87, 113, 117, 122, 124, 131, 137, 150, 175, 178, 191, 219, 221, 228, 232, 271], "explicitli": [1, 8, 12, 16, 26, 33, 44, 47, 54, 55, 60, 115, 120, 156, 161, 195, 232, 235], "Such": [1, 8, 74, 93, 151, 210, 228, 232, 258], "sub": [1, 15, 45, 49, 55, 117, 124, 128, 150, 161, 162, 198, 215, 219, 235, 236], "complic": [1, 177, 198, 212], "structur": [1, 2, 4, 7, 9, 14, 26, 49, 64, 70, 122, 124, 156, 182, 191, 219, 228, 229, 232, 240, 254], "cannot": [1, 14, 16, 39, 46, 48, 49, 51, 52, 54, 66, 68, 70, 79, 86, 91, 104, 117, 120, 132, 177, 188, 193, 212, 214, 219, 228, 232, 235, 240, 258], "singl": [1, 5, 8, 10, 12, 25, 26, 27, 28, 36, 38, 39, 41, 46, 49, 51, 52, 54, 73, 75, 81, 85, 86, 87, 90, 93, 96, 102, 117, 123, 124, 133, 134, 137, 146, 150, 151, 154, 157, 161, 166, 175, 186, 187, 203, 205, 217, 218, 219, 228, 229, 230, 232, 233, 235, 236, 237, 240, 252, 255, 258], "depth": [1, 4, 45, 93, 117, 125], "understand": [1, 37, 186, 202, 211, 212, 228, 232, 239, 240, 252, 262], "paramet": [1, 14, 17, 18, 19, 25, 26, 27, 33, 34, 41, 44, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 96, 97, 100, 101, 124, 128, 130, 131, 133, 134, 137, 142, 146, 151, 156, 157, 161, 164, 171, 175, 204, 205, 211, 242, 255, 258], "everi": [1, 12, 15, 26, 30, 33, 54, 63, 64, 65, 73, 117, 122, 130, 134, 135, 141, 156, 161, 162, 166, 173, 175, 197, 200, 205, 214, 230, 235, 254, 255, 258, 265], "_mp_token_kind_t": 1, "enum": [1, 12, 64, 117, 124], "typedef": [1, 10], "mp_token_kw_or": 1, "mp_token_kw_pass": 1, "mp_token_kw_rais": 1, "mp_token_kw_return": 1, "mp_token_kw_tri": 1, "mp_token_kw_whil": 1, "mp_token_kw_with": 1, "mp_token_kw_yield": 1, "mp_token_kw_add1": 1, "mp_token_kind_t": 1, "keyword": [1, 15, 16, 17, 18, 21, 46, 49, 54, 55, 63, 64, 67, 75, 76, 80, 88, 89, 90, 96, 100, 124, 130, 137, 145, 157, 174, 175, 178, 186, 223, 228, 233, 242, 255], "static": [1, 5, 8, 10, 11, 12, 14, 54, 63, 80, 98, 101, 128, 202, 219, 237, 262], "const": [1, 5, 9, 10, 12, 24, 49, 54, 74, 93, 219, 228, 232], "char": [1, 10, 27, 47, 146, 159, 192], "tok_kw": 1, "rais": [1, 10, 14, 15, 16, 19, 21, 42, 44, 46, 49, 52, 54, 58, 62, 63, 64, 69, 71, 72, 79, 81, 88, 89, 90, 93, 96, 98, 117, 122, 128, 145, 146, 148, 149, 151, 153, 155, 156, 160, 161, 228, 232, 235, 236, 239, 240, 252], "try": [1, 16, 21, 23, 25, 26, 31, 33, 36, 41, 42, 44, 45, 47, 48, 52, 55, 61, 64, 68, 70, 78, 86, 87, 93, 94, 117, 122, 123, 124, 125, 133, 135, 138, 151, 156, 176, 181, 186, 193, 196, 198, 203, 204, 205, 208, 209, 210, 212, 214, 236, 239, 244, 247, 254, 256, 258, 260, 263, 264, 272], "yield": [1, 14, 18, 45, 128, 155], "notic": [1, 41, 172, 186, 200, 212, 266], "consist": [1, 7, 8, 14, 19, 21, 30, 78, 79, 80, 86, 90, 133, 137, 145, 146, 156, 162, 169, 213, 230, 232, 234, 236, 265], "maintain": [1, 3, 4, 5, 13, 26, 45, 64, 110, 111, 112, 113, 117, 122, 124, 127, 161, 175, 187, 219, 230, 232, 234, 235], "accordingli": [1, 155, 228], "order": [1, 16, 17, 18, 21, 22, 26, 29, 32, 46, 47, 49, 54, 55, 58, 70, 74, 80, 84, 85, 90, 117, 125, 128, 129, 140, 158, 159, 160, 161, 174, 201, 212, 226, 232, 234, 235, 236, 240, 250, 255, 258, 263, 264, 266], "match": [1, 12, 14, 15, 16, 17, 21, 23, 33, 49, 54, 63, 64, 78, 89, 96, 97, 110, 111, 112, 113, 117, 122, 125, 127, 133, 138, 140, 145, 156, 175, 176, 186, 234, 236, 255, 262, 265, 266], "stage": [1, 9, 10, 12, 117, 240], "produc": [1, 15, 46, 71, 110, 111, 112, 113, 117, 120, 127, 143, 161, 162, 186, 191, 215, 221, 228, 232, 239, 240], "ast": 1, "tabl": [1, 5, 6, 7, 8, 12, 14, 36, 49, 77, 78, 84, 110, 111, 112, 113, 117, 118, 120, 127, 133, 134, 136, 158, 173, 174, 228, 229, 253, 258], "constant": [1, 8, 9, 14, 15, 16, 21, 49, 54, 62, 93, 96, 155, 162, 189, 198, 228, 233, 240], "aspect": [1, 9, 10, 26, 37, 75, 110, 111, 112, 113, 117, 120, 124, 127, 240, 267], "symbol": [1, 8, 14, 45, 58, 61, 117, 156, 174, 228, 235], "doe": [1, 7, 14, 19, 21, 22, 25, 26, 32, 40, 42, 46, 49, 51, 52, 54, 55, 60, 62, 63, 64, 82, 85, 93, 96, 113, 117, 122, 123, 125, 128, 130, 131, 134, 137, 148, 151, 156, 157, 161, 166, 175, 177, 181, 188, 191, 196, 199, 202, 205, 208, 209, 210, 212, 213, 225, 228, 232, 235, 236, 237, 238, 239, 240, 252, 255, 257, 262, 263, 264], "sever": [1, 5, 6, 9, 10, 84, 101, 129, 162, 228, 235, 240], "optim": [1, 4, 26, 44, 45, 55, 66, 117, 124, 161, 162, 186, 191, 230, 257, 267], "fold": 1, "most": [1, 9, 11, 15, 23, 26, 30, 33, 36, 39, 44, 45, 49, 54, 55, 60, 63, 70, 72, 73, 74, 81, 85, 86, 88, 89, 90, 93, 95, 96, 97, 98, 100, 125, 130, 131, 136, 142, 146, 148, 151, 152, 156, 161, 162, 173, 176, 181, 187, 191, 202, 203, 211, 213, 219, 220, 221, 228, 230, 231, 233, 234, 236, 237, 239, 240, 248, 249, 256, 258, 262, 265, 270], "oper": [1, 3, 7, 12, 14, 15, 16, 18, 19, 20, 29, 30, 45, 46, 49, 54, 55, 59, 63, 69, 70, 71, 74, 78, 80, 82, 84, 85, 88, 89, 93, 117, 122, 124, 125, 130, 131, 133, 149, 150, 155, 156, 161, 162, 166, 173, 175, 177, 181, 187, 205, 208, 214, 216, 220, 221, 224, 229, 230, 232, 238, 240, 252, 253, 259, 265, 267], "logic": [1, 21, 26, 27, 49, 73, 78, 82, 87, 90, 110, 111, 112, 113, 117, 120, 123, 127, 133, 140, 145, 151, 155, 216, 219, 220, 230, 252], "binari": [1, 3, 14, 15, 16, 31, 49, 60, 63, 67, 68, 70, 71, 87, 98, 100, 117, 124, 131, 156, 161, 171, 176, 186, 192, 193, 223, 230, 244, 258], "unari": 1, "etc": [1, 5, 8, 9, 10, 20, 23, 26, 33, 55, 60, 61, 67, 74, 82, 86, 87, 96, 117, 122, 123, 124, 140, 146, 150, 156, 157, 160, 161, 173, 176, 181, 186, 187, 189, 208, 216, 229, 230, 233, 235, 237, 246, 253, 263, 272], "enhanc": [1, 64, 81], "parenthesi": 1, "around": [1, 4, 21, 42, 62, 67, 73, 78, 88, 89, 93, 114, 117, 122, 133, 134, 145, 151, 161, 170, 186, 196, 202, 213, 214, 219, 232, 252, 258, 262, 266], "perform": [1, 3, 6, 8, 10, 15, 16, 19, 20, 26, 55, 63, 71, 73, 74, 79, 80, 82, 85, 86, 100, 101, 104, 117, 122, 124, 125, 128, 130, 145, 150, 160, 161, 173, 186, 191, 198, 208, 213, 215, 216, 221, 223, 228, 232, 235, 237, 238, 239, 240, 246, 252, 253, 258, 263, 264], "dure": [1, 12, 15, 16, 21, 23, 26, 33, 44, 54, 60, 62, 63, 70, 74, 80, 93, 96, 101, 113, 117, 122, 127, 128, 131, 145, 171, 176, 181, 186, 195, 229, 232, 233, 235, 250, 256, 258, 263, 266], "phase": [1, 7, 14, 21, 27, 43, 49, 57, 86, 117, 133, 142, 175, 178, 195, 250, 255, 259, 268], "along": [1, 22, 23, 32, 57, 84, 93, 110, 111, 112, 117, 122, 132, 135, 183, 186, 190, 192, 219, 232, 252, 258], "string": [1, 4, 7, 8, 9, 10, 15, 16, 17, 18, 19, 29, 46, 47, 49, 51, 53, 54, 56, 58, 61, 63, 64, 71, 72, 73, 74, 76, 82, 90, 93, 96, 98, 100, 101, 117, 121, 122, 125, 128, 129, 130, 138, 140, 146, 150, 151, 154, 156, 157, 159, 160, 175, 180, 192, 230, 233, 235, 238, 239, 255, 257, 258], "worth": [1, 197, 239], "docstr": [1, 15], "discard": [1, 58, 64, 216, 239], "even": [1, 3, 7, 14, 16, 21, 23, 26, 30, 33, 63, 64, 65, 70, 71, 79, 87, 90, 117, 120, 124, 128, 146, 155, 156, 161, 162, 175, 178, 187, 191, 196, 212, 228, 232, 235, 238, 250, 255, 266], "intern": [1, 7, 9, 10, 16, 20, 21, 25, 26, 27, 32, 47, 49, 54, 55, 63, 64, 70, 73, 80, 82, 101, 113, 117, 119, 122, 124, 125, 127, 130, 131, 133, 135, 136, 151, 154, 158, 166, 170, 173, 175, 177, 178, 181, 188, 191, 193, 209, 211, 213, 228, 229, 230, 232, 236, 242, 243, 244, 246, 249, 250, 253, 254, 255, 256, 258, 264, 268, 273], "mani": [1, 3, 7, 8, 17, 20, 21, 26, 27, 35, 37, 41, 42, 45, 49, 62, 63, 64, 70, 71, 74, 87, 90, 110, 111, 112, 113, 117, 122, 124, 125, 146, 150, 151, 156, 161, 162, 168, 173, 187, 230, 236, 242, 253, 256], "relev": [1, 8, 14, 15, 19, 23, 33, 128, 146, 160, 164, 220, 228, 240, 265], "about": [1, 3, 8, 10, 14, 15, 21, 22, 27, 31, 32, 33, 37, 41, 42, 49, 52, 54, 60, 63, 78, 79, 81, 86, 93, 100, 102, 109, 117, 119, 124, 125, 128, 130, 133, 137, 140, 141, 150, 158, 160, 162, 171, 175, 178, 181, 183, 184, 186, 187, 189, 195, 198, 202, 205, 210, 211, 212, 213, 228, 232, 235, 242, 244, 250, 255, 259, 262, 268, 270], "mp_obj_t": [1, 5, 7, 8, 10, 11], "mp_compil": 1, "mp_parse_tree_t": 1, "parse_tre": 1, "qstr": [1, 4, 10, 49, 228], "source_fil": 1, "bool": [1, 18, 49, 56, 58, 63, 97, 124, 158, 240], "is_repl": 1, "context": [1, 14, 15, 16, 17, 46, 49, 52, 74, 80, 94, 113, 124, 157, 218, 230, 232, 240], "modul": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "global": [1, 5, 8, 9, 10, 15, 16, 45, 49, 54, 56, 70, 73, 93, 94, 117, 124, 169, 189, 191, 212, 228, 229, 232, 242, 250, 265], "dict": [1, 7, 8, 9, 14, 16, 17, 18, 19, 46, 49, 55, 56, 58, 64, 140, 164, 228], "mp_module_context_t": 1, "m_new_obj": 1, "mp_globals_get": 1, "input": [1, 4, 8, 12, 15, 16, 21, 24, 26, 27, 28, 39, 44, 49, 53, 56, 60, 63, 70, 73, 74, 75, 77, 82, 90, 110, 111, 112, 117, 125, 127, 128, 131, 133, 134, 135, 140, 145, 146, 151, 154, 155, 156, 158, 160, 171, 175, 178, 179, 183, 201, 202, 203, 211, 228, 230, 232, 233, 238, 242, 248, 249, 250, 252, 255, 259, 262, 268], "raw": [1, 10, 15, 21, 23, 33, 42, 46, 49, 55, 60, 63, 74, 75, 117, 124, 132, 143, 148, 150, 158, 171, 176, 186, 229, 235, 238, 242, 252, 256, 258], "mp_compiled_module_t": 1, "cm": 1, "mp_compile_to_raw_cod": 1, "outer": [1, 219, 221, 236], "mp_make_function_from_raw_cod": 1, "rc": 1, "null": [1, 6, 85, 151], "four": [1, 7, 21, 30, 42, 65, 74, 78, 117, 119, 133, 153, 171, 175, 178, 186, 216, 217, 218, 228, 236, 250, 252, 254, 255], "scope": [1, 16, 156, 189, 219, 221, 228, 232, 236], "stack": [1, 9, 17, 26, 49, 54, 63, 64, 93, 124, 125, 130, 167, 191, 212, 220, 221, 232], "size": [1, 7, 8, 10, 12, 16, 20, 26, 33, 43, 44, 45, 48, 49, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 79, 80, 85, 90, 93, 102, 112, 115, 116, 117, 120, 122, 124, 125, 128, 131, 132, 133, 136, 155, 156, 159, 162, 163, 167, 168, 169, 171, 173, 181, 186, 189, 191, 211, 217, 228, 229, 235, 236, 239, 240, 245, 253, 257, 258, 268], "over": [1, 3, 10, 15, 21, 23, 27, 30, 31, 33, 55, 58, 63, 64, 74, 75, 76, 79, 116, 117, 121, 122, 124, 125, 128, 131, 141, 142, 145, 147, 148, 158, 162, 176, 177, 186, 187, 193, 200, 202, 203, 211, 212, 228, 229, 230, 235, 236, 239, 249, 250, 256, 260, 266], "data": [1, 3, 6, 7, 8, 9, 12, 14, 15, 17, 18, 20, 21, 26, 27, 29, 30, 31, 36, 38, 43, 47, 49, 52, 53, 54, 55, 59, 60, 63, 67, 68, 70, 71, 72, 73, 74, 78, 79, 80, 85, 86, 90, 94, 95, 96, 97, 98, 105, 115, 117, 119, 120, 122, 123, 124, 128, 130, 131, 133, 134, 136, 137, 138, 142, 143, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 164, 166, 168, 169, 170, 171, 173, 175, 178, 181, 183, 187, 191, 192, 193, 197, 204, 216, 220, 228, 229, 230, 232, 236, 239, 240, 242, 244, 250, 252, 255, 258, 268, 273], "thing": [1, 8, 12, 23, 33, 36, 37, 42, 64, 74, 117, 122, 140, 176, 177, 181, 186, 187, 189, 191, 193, 202, 205, 209, 211, 212, 213, 239, 256, 262, 264], "comput": [1, 6, 8, 18, 21, 27, 33, 42, 49, 70, 81, 93, 117, 119, 122, 124, 142, 154, 175, 178, 181, 186, 187, 191, 193, 195, 198, 208, 228, 239, 240, 242, 250, 255, 268], "previou": [1, 16, 42, 54, 64, 65, 66, 68, 74, 75, 76, 82, 89, 115, 117, 124, 128, 130, 131, 132, 145, 150, 160, 161, 186, 205, 208, 232, 238, 239, 246, 258, 263], "learn": [1, 3, 22, 32, 37, 79, 189, 196, 198, 214], "known": [1, 8, 14, 21, 29, 33, 34, 42, 54, 55, 64, 66, 71, 82, 96, 100, 117, 125, 157, 161, 181, 184, 210, 218, 221, 228, 230, 232, 235, 240], "identifi": [1, 9, 12, 21, 49, 54, 63, 64, 70, 74, 75, 76, 78, 79, 80, 82, 89, 96, 98, 128, 133, 156, 160, 162, 195, 230, 258, 272], "close": [1, 16, 19, 21, 23, 26, 31, 33, 36, 49, 52, 55, 60, 65, 67, 71, 81, 87, 96, 115, 117, 120, 131, 148, 149, 155, 156, 170, 175, 176, 196, 208, 210, 212, 220, 230, 245, 256], "emitt": [1, 49, 63, 257], "label": [1, 49, 63, 117, 119, 125, 151, 175, 181, 186, 198, 211, 212, 216, 219, 229, 250, 252, 254, 255, 262], "comp": 1, "emit_bc": 1, "emit_method_t": 1, "emit_bc_method_t": 1, "uint": [1, 219, 240], "max_num_label": 1, "0": [1, 3, 6, 8, 10, 14, 15, 16, 17, 18, 19, 21, 24, 25, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 60, 62, 63, 64, 65, 70, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 166, 171, 173, 174, 175, 178, 179, 180, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 211, 213, 214, 219, 222, 223, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244, 250, 252, 254, 255, 258, 259, 263, 266, 268, 272], "scope_t": 1, "scope_head": 1, "compile_error": 1, "mp_obj_nul": [1, 6], "emit_opt": 1, "mp_emit_opt_asm": 1, "compile_scope_inline_asm": 1, "mp_pass_scop": 1, "els": [1, 6, 7, 14, 23, 25, 26, 33, 34, 36, 40, 64, 78, 94, 133, 148, 156, 160, 186, 188, 196, 199, 216, 254, 260], "compile_scop": 1, "check": [1, 3, 14, 15, 16, 19, 21, 27, 33, 35, 40, 44, 48, 49, 58, 64, 77, 79, 84, 117, 121, 137, 146, 151, 154, 157, 160, 191, 211, 228, 235, 236, 239, 240, 258, 259, 260, 266], "implicitli": [1, 128, 148, 233, 235, 237], "declar": [1, 10, 49, 93, 219, 228, 232], "size_t": [1, 8, 11], "id_info_len": 1, "id_info_t": 1, "id": [1, 21, 27, 49, 54, 56, 58, 62, 63, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 101, 108, 114, 116, 117, 121, 122, 123, 124, 130, 133, 139, 140, 143, 145, 148, 151, 153, 154, 158, 167, 169, 174, 177, 181, 182, 189, 190, 195, 235, 242, 250, 255, 258, 259, 271], "id_info": 1, "kind": [1, 88, 89, 96, 117, 156, 172, 193, 258], "id_info_kind_global_implicit": 1, "scope_check_to_close_ov": 1, "after": [1, 3, 5, 10, 12, 19, 21, 23, 26, 27, 31, 33, 39, 40, 42, 52, 54, 59, 62, 63, 64, 66, 68, 78, 79, 81, 88, 89, 90, 91, 93, 98, 110, 111, 112, 113, 115, 117, 120, 122, 123, 124, 125, 127, 128, 130, 131, 133, 137, 145, 146, 150, 151, 158, 161, 175, 176, 177, 181, 184, 186, 187, 188, 191, 193, 208, 210, 211, 214, 217, 218, 220, 221, 223, 228, 229, 232, 233, 234, 235, 238, 239, 244, 245, 246, 248, 249, 252, 255, 256, 257, 258, 259, 263, 264, 266, 272], "chang": [1, 3, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 33, 39, 42, 49, 54, 55, 62, 63, 64, 65, 73, 74, 75, 79, 80, 82, 86, 91, 96, 98, 104, 106, 107, 116, 117, 123, 124, 125, 126, 128, 131, 134, 143, 145, 156, 162, 166, 175, 176, 177, 186, 187, 195, 196, 199, 200, 205, 209, 211, 212, 213, 214, 216, 229, 232, 233, 236, 237, 239, 240, 246, 250, 255, 256, 258, 259, 264, 265, 266, 268, 271], "otherwis": [1, 3, 10, 21, 22, 23, 30, 32, 33, 42, 52, 54, 59, 62, 63, 64, 65, 73, 74, 78, 79, 82, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 117, 123, 124, 125, 128, 130, 133, 134, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 161, 166, 172, 175, 176, 177, 181, 186, 193, 196, 216, 220, 233, 236, 238, 239, 255, 256, 258, 270], "jump": [1, 117, 133, 151, 154, 210, 221, 252], "incorrect": [1, 23, 26, 33, 100, 161], "mp_pass_stack_s": 1, "mp_pass_code_s": 1, "befor": [1, 3, 16, 21, 23, 24, 26, 33, 36, 38, 42, 44, 52, 54, 62, 63, 64, 74, 80, 81, 83, 96, 102, 110, 111, 112, 113, 115, 117, 120, 122, 123, 124, 127, 140, 147, 151, 154, 156, 158, 161, 175, 177, 181, 183, 186, 187, 188, 190, 193, 196, 211, 212, 213, 219, 220, 221, 223, 228, 232, 233, 235, 239, 240, 260, 261], "choos": [1, 64, 67, 96, 122, 149, 177, 190, 191, 193], "switch": [1, 17, 21, 23, 24, 26, 33, 42, 81, 87, 124, 128, 133, 135, 166, 175, 176, 184, 193, 199, 201, 202, 208, 209, 210, 213, 214, 248, 258, 263, 264, 268, 271], "mp_emit_opt_native_python": 1, "mp_emit_opt_vip": 1, "emit_n": 1, "native_emitt": 1, "next_label": 1, "native_emitter_t": 1, "break": [1, 3, 36, 42, 64, 90, 122, 145, 146, 148, 181, 186, 202, 209, 234, 239, 262, 264, 266], "someth": [1, 12, 23, 33, 40, 42, 54, 71, 117, 122, 135, 181, 192, 198, 199, 205, 208, 209, 212, 213, 214, 235, 239, 246, 263, 264], "uniqu": [1, 12, 64, 74, 116, 117, 130, 169, 230, 259], "anoth": [1, 7, 8, 12, 14, 16, 26, 33, 43, 44, 49, 54, 55, 60, 64, 65, 70, 71, 74, 79, 93, 98, 117, 121, 122, 124, 146, 151, 154, 158, 160, 161, 174, 177, 186, 211, 212, 219, 228, 232, 233, 235, 252, 267, 272], "viper": [1, 49, 62, 236, 257], "section": [1, 2, 3, 6, 8, 21, 22, 23, 27, 31, 32, 42, 46, 49, 70, 71, 94, 96, 109, 130, 175, 178, 195, 220, 221, 228, 235, 239, 242, 250, 255, 258, 259, 268], "annot": [1, 14, 16, 17, 19], "inlin": [1, 10, 11, 49, 201, 219, 231, 232, 240], "where": [1, 3, 7, 14, 18, 21, 23, 26, 33, 46, 49, 51, 54, 61, 63, 64, 65, 71, 73, 74, 83, 89, 94, 96, 100, 106, 107, 117, 124, 128, 129, 130, 131, 133, 134, 135, 138, 151, 156, 162, 171, 186, 190, 200, 215, 216, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 232, 235, 239, 240, 252, 255, 272], "instruct": [1, 3, 21, 23, 27, 33, 42, 49, 125, 130, 135, 138, 153, 154, 176, 198, 203, 208, 212, 214, 217, 222, 226, 227, 228, 232, 240, 250, 252, 260, 261, 262, 264, 266], "written": [1, 2, 8, 12, 31, 54, 59, 67, 71, 73, 79, 80, 90, 93, 128, 134, 146, 148, 151, 154, 155, 156, 162, 186, 210, 232, 239, 240], "call": [1, 6, 7, 8, 10, 12, 15, 16, 18, 19, 21, 26, 27, 30, 39, 41, 42, 44, 46, 47, 49, 51, 52, 54, 62, 63, 64, 66, 68, 73, 74, 78, 79, 80, 82, 83, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 137, 140, 144, 145, 146, 148, 149, 151, 154, 155, 156, 157, 158, 160, 161, 162, 166, 170, 175, 176, 178, 181, 184, 186, 189, 191, 192, 193, 196, 198, 205, 208, 210, 211, 212, 219, 220, 221, 228, 230, 232, 233, 239, 240, 242, 244, 248, 250, 252, 255, 258, 265, 266], "assembl": [1, 49, 151, 153, 154, 201, 218, 221, 225, 231, 232, 240, 252], "three": [1, 12, 18, 21, 30, 34, 42, 54, 55, 63, 74, 78, 85, 94, 117, 124, 133, 158, 160, 175, 184, 189, 205, 217, 219, 223, 226, 228, 236, 238, 239, 240, 254], "tutori": [1, 14, 21, 23, 27, 31, 33, 35, 36, 37, 49, 175, 176, 178, 185, 186, 187, 195, 198, 200, 203, 205, 210, 213, 214, 219, 228, 229, 232, 234, 240, 242, 244, 250, 255, 256, 259, 268], "final": [1, 8, 12, 14, 18, 19, 25, 26, 39, 52, 70, 71, 86, 113, 115, 117, 120, 122, 125, 161, 179, 180, 181, 184, 186, 189, 190, 191, 192, 205, 208, 211, 228, 236, 239, 240, 247, 258, 263], "virtual": [1, 3, 15, 21, 27, 49, 64, 74, 88, 89, 110, 128, 130, 136, 175, 177, 186, 214, 228, 229, 232, 264, 273], "cpu": [1, 10, 20, 21, 26, 27, 49, 70, 74, 128, 140, 158, 161, 162, 167, 173, 174, 175, 195, 207, 213, 240, 242, 245, 248, 250, 252, 253, 255, 259], "mp_pass_emit": 1, "gener": [1, 4, 5, 6, 9, 10, 15, 16, 17, 18, 19, 23, 24, 29, 33, 44, 46, 47, 48, 49, 52, 54, 55, 60, 63, 65, 68, 70, 73, 74, 77, 81, 82, 85, 89, 96, 100, 101, 113, 117, 122, 123, 124, 125, 130, 133, 134, 135, 137, 145, 156, 157, 158, 162, 176, 179, 180, 181, 183, 184, 186, 187, 188, 190, 192, 203, 205, 212, 218, 219, 224, 226, 228, 230, 233, 236, 238, 240, 244, 256, 257, 265, 268, 270], "push": [1, 3, 49, 69, 74, 130, 135, 140, 144, 151, 154, 175, 176, 212, 219, 220, 244, 246, 252, 256, 258], "op": [1, 71, 128, 134, 156, 229, 240], "anyth": [1, 5, 26, 36, 42, 54, 82, 87, 110, 111, 112, 113, 117, 120, 122, 127, 140, 146, 181, 187, 188, 202, 203, 210, 212, 214, 228, 240, 260, 262, 272], "instead": [1, 6, 14, 15, 19, 22, 23, 25, 26, 29, 32, 33, 34, 42, 44, 46, 49, 52, 55, 60, 63, 64, 67, 70, 74, 82, 86, 87, 100, 110, 111, 112, 113, 117, 124, 125, 130, 142, 150, 151, 155, 156, 157, 160, 161, 162, 171, 177, 181, 186, 190, 192, 195, 203, 208, 214, 223, 229, 230, 233, 235, 237, 238, 240, 248, 257, 258, 263, 272], "affect": [1, 7, 9, 16, 64, 81, 96, 117, 130, 160, 175, 215, 222, 223, 225, 227, 230, 232, 255, 258], "void": [1, 5, 10, 11, 49, 159, 162], "mp_emit_bc_unary_op": 1, "emit_t": 1, "mp_unary_op_t": 1, "emit_write_bytecode_byt": 1, "mp_bc_unary_op_multi": 1, "wrapper": [1, 15, 67, 233], "emit_get_cur_to_write_bytecod": 1, "emitn": 1, "emit_native_unary_op": 1, "vtype_kind_t": 1, "vtype": 1, "emit_pre_pop_reg": 1, "reg_arg_2": 1, "vtype_pyobj": 1, "emit_call_with_imm_arg": 1, "mp_f_unary_op": 1, "reg_arg_1": 1, "emit_post_push_reg": 1, "reg_ret": 1, "adjust_stack": 1, "emit_native_viper_type_error": 1, "mp_error_text": 1, "q": [1, 10, 12, 51, 117, 159, 228, 263], "mp_unary_op_method_nam": 1, "u": [1, 37, 54, 70, 117, 124, 130, 161, 181, 185, 200, 213, 238, 240, 253, 259], "By": [1, 3, 15, 19, 21, 27, 40, 54, 55, 67, 87, 93, 102, 110, 111, 112, 113, 117, 120, 123, 124, 130, 145, 151, 161, 175, 191, 200, 216, 229, 235, 258, 265], "pointer": [1, 7, 8, 10, 162, 210, 220, 240], "thought": [1, 186], "superset": 1, "normal": [1, 7, 8, 10, 26, 27, 33, 36, 42, 43, 49, 66, 71, 78, 82, 84, 85, 87, 90, 93, 117, 124, 133, 134, 140, 157, 161, 162, 166, 181, 193, 198, 205, 209, 210, 218, 219, 228, 229, 232, 235, 236, 239, 246, 258, 268], "optimis": [1, 9, 44, 45, 47, 48, 54, 93, 228, 230, 233, 240], "direct": [1, 21, 24, 49, 53, 54, 55, 60, 64, 73, 74, 98, 110, 111, 112, 113, 116, 117, 118, 127, 131, 134, 136, 151, 154, 158, 161, 196, 211, 214, 219, 220, 221, 240, 252], "equival": [1, 16, 17, 21, 45, 51, 54, 55, 70, 77, 82, 150, 151, 155, 156, 186, 212, 228, 233, 235, 238, 268], "becaus": [1, 7, 12, 23, 36, 60, 64, 71, 87, 93, 94, 96, 100, 101, 104, 116, 117, 122, 155, 156, 157, 169, 177, 181, 186, 191, 192, 196, 200, 202, 208, 213, 214, 216, 219, 220, 223, 228, 232, 235, 237, 239, 240, 242, 252, 258, 262], "becom": [1, 12, 42, 52, 66, 74, 78, 80, 82, 93, 98, 110, 111, 112, 113, 117, 120, 127, 133, 146, 154, 155, 167, 186, 193, 228, 235, 238], "overflow": [1, 49, 54, 58, 64, 78, 80, 133, 161, 215, 216, 221], "unlik": [1, 6, 7, 26, 54, 87, 117, 122, 150, 156, 160, 162, 184, 218, 230, 239, 264], "extend": [1, 4, 5, 16, 21, 49, 51, 63, 64, 78, 117, 133, 136, 150, 152, 168, 169, 216, 219, 222, 225, 229, 250], "arbitrari": [1, 8, 21, 60, 65, 73, 82, 86, 96, 128, 135, 138, 151, 161, 162, 219, 229, 230, 232], "precis": [1, 8, 14, 16, 34, 74, 92, 110, 111, 112, 113, 117, 120, 124, 127, 131, 137, 142, 161, 218, 219, 228, 232, 257], "outsid": [2, 13, 23, 33, 52, 81, 93, 117, 122, 125, 161, 176, 228, 235, 256], "second": [2, 4, 18, 21, 23, 26, 27, 30, 31, 33, 40, 42, 49, 52, 54, 64, 65, 73, 78, 83, 86, 115, 117, 118, 122, 124, 128, 131, 133, 137, 141, 142, 149, 156, 158, 161, 162, 166, 175, 176, 177, 178, 181, 192, 195, 197, 200, 203, 204, 205, 209, 210, 211, 213, 214, 217, 218, 228, 232, 235, 236, 238, 239, 242, 245, 248, 250, 255, 258, 259, 265, 268], "load": [2, 9, 12, 15, 16, 23, 33, 47, 49, 60, 63, 70, 72, 73, 110, 111, 112, 117, 125, 131, 134, 145, 157, 160, 176, 186, 187, 219, 220, 230, 232, 233, 236, 238, 240, 249, 256], "runtim": [2, 3, 4, 5, 10, 11, 12, 14, 15, 18, 49, 93, 167, 228, 230, 236, 237, 240], "core": [2, 3, 4, 10, 11, 17, 20, 46, 49, 68, 70, 71, 74, 82, 151, 158, 173, 230, 241, 249, 252, 253], "live": [2, 7, 9, 128, 233, 240], "extern": [2, 4, 5, 8, 20, 23, 26, 33, 45, 49, 55, 74, 82, 101, 109, 122, 126, 127, 130, 136, 137, 141, 151, 173, 175, 176, 186, 212, 229, 249, 253, 255, 256, 258, 267], "basic": [2, 3, 4, 8, 10, 13, 32, 42, 43, 49, 57, 70, 73, 92, 116, 117, 133, 137, 140, 162, 164, 175, 178, 186, 201, 202, 203, 208, 210, 213, 232, 255, 262, 263, 272], "compil": [2, 4, 9, 10, 17, 18, 33, 44, 49, 56, 62, 93, 99, 129, 150, 158, 186, 187, 188, 219, 230, 232, 233, 237, 239, 240, 257], "cmodul": [2, 4], "usag": [2, 4, 14, 21, 26, 44, 45, 49, 54, 55, 60, 61, 63, 65, 68, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 91, 93, 94, 97, 98, 99, 100, 101, 110, 111, 112, 113, 115, 116, 117, 120, 124, 125, 127, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 151, 155, 161, 162, 167, 170, 171, 175, 178, 228, 232, 235, 238, 240, 255, 257, 265, 273], "minim": [2, 3, 4, 13, 45, 60, 160], "further": [2, 3, 4, 9, 18, 21, 23, 31, 33, 60, 63, 65, 70, 73, 82, 96, 145, 151, 155, 160, 162, 171, 176, 220, 221, 228, 232, 233, 234, 236, 240, 256, 258, 265, 270], "guid": [3, 4, 20, 23, 33, 49, 79, 87, 109, 119, 125, 176, 208, 231, 237, 240, 244, 256], "cover": [3, 4, 37, 117, 162, 182, 186, 203, 219, 228, 232, 239, 240], "version": [3, 14, 15, 16, 21, 23, 26, 27, 33, 42, 49, 55, 64, 70, 73, 98, 117, 121, 125, 128, 129, 136, 146, 150, 155, 158, 160, 176, 181, 186, 193, 195, 203, 220, 231, 233, 237, 238, 256, 258], "obtain": [3, 15, 21, 54, 81, 98, 170, 172, 200, 218, 222, 227, 228, 268], "descript": [3, 14, 18, 19, 80, 86, 100, 117, 220, 233, 240, 254], "host": [3, 10, 21, 23, 27, 33, 36, 42, 52, 64, 85, 130, 148, 156, 163, 229, 230, 235, 237, 267], "github": [3, 21, 23, 27, 33, 42, 45, 176, 188, 203, 230, 235, 237, 238, 241, 258], "workflow": [3, 235], "instal": [3, 8, 26, 35, 42, 45, 49, 67, 95, 96, 122, 124, 156, 171, 181, 188, 190, 203, 208, 229, 230, 235, 238, 244, 263], "respect": [3, 7, 14, 21, 27, 54, 65, 73, 79, 81, 82, 84, 85, 86, 117, 119, 124, 130, 131, 133, 137, 140, 142, 162, 169, 175, 215, 220, 231, 233, 250, 254, 255], "rest": [3, 26, 82, 117, 125, 133, 188, 233, 236, 258], "handbook": 3, "internet": [3, 23, 27, 33, 35, 36, 37, 68, 187, 230, 260], "blame": 3, "ignor": [3, 15, 17, 19, 42, 49, 52, 53, 73, 78, 88, 90, 117, 123, 128, 130, 133, 145, 150, 156, 166, 177, 181, 224, 236, 237, 242, 255], "rev": [3, 104], "avoid": [3, 7, 9, 12, 15, 21, 26, 33, 44, 45, 63, 64, 71, 94, 124, 131, 161, 162, 176, 177, 181, 191, 213, 219, 228, 230, 232, 233, 235, 240], "clutter": [3, 240], "commit": [3, 63, 236], "format": [3, 12, 15, 16, 17, 21, 29, 31, 49, 51, 53, 60, 65, 67, 72, 73, 74, 80, 83, 96, 98, 113, 115, 117, 120, 124, 128, 133, 141, 157, 159, 160, 161, 166, 167, 171, 175, 178, 181, 186, 189, 192, 195, 217, 228, 229, 230, 232, 236, 240, 250, 255, 258, 264, 268, 273], "recommend": [3, 13, 16, 21, 22, 23, 26, 32, 33, 45, 49, 52, 54, 60, 64, 68, 71, 96, 117, 145, 150, 155, 156, 160, 162, 176, 184, 188, 201, 208, 229, 233, 256, 258, 270, 272, 273], "fork": [3, 188], "http": [3, 20, 21, 22, 23, 26, 27, 32, 33, 35, 42, 44, 49, 70, 96, 117, 135, 161, 162, 173, 176, 230, 237, 241, 244, 253, 258], "com": [3, 20, 21, 23, 26, 27, 33, 42, 122, 130, 173, 176, 208, 214, 237, 241, 244, 253, 258, 263, 272], "clone": [3, 228, 270], "remot": [3, 27, 35, 49, 54, 63, 78, 122, 123, 133, 156, 186, 203, 221, 230, 231, 238], "abl": [3, 8, 10, 23, 26, 27, 33, 36, 40, 42, 47, 54, 60, 63, 70, 90, 122, 124, 181, 183, 186, 188, 191, 230, 237, 266, 272], "collabor": [3, 267], "upstream": [3, 98, 100], "common": [3, 6, 9, 15, 19, 21, 23, 27, 33, 35, 49, 54, 64, 85, 122, 130, 176, 200, 232, 235, 237, 240, 252, 256, 265], "assist": [3, 228, 240], "share": [3, 5, 10, 26, 54, 64, 81, 85, 86, 87, 111, 115, 117, 120, 122, 124, 145, 175, 176, 186, 195, 219, 232, 255], "map": [3, 4, 7, 9, 12, 14, 21, 26, 27, 49, 56, 61, 62, 65, 82, 117, 124, 135, 140, 161, 169, 191, 219, 232, 236, 240, 242, 250, 273], "setup": [3, 6, 26, 34, 42, 49, 98, 101, 110, 111, 112, 113, 115, 117, 120, 122, 123, 124, 127, 130, 161, 182, 186, 187, 189, 235, 260, 266], "v": [3, 16, 52, 58, 71, 77, 87, 104, 117, 124, 131, 160, 176, 216, 218, 221, 257], "fetch": [3, 63, 237], "master": [3, 49, 64, 80, 137, 142, 176, 178, 258], "branch": [3, 49, 57, 198, 216, 217, 220, 235, 237], "prepar": [3, 14, 64], "checkout": [3, 122, 123], "dev": [3, 13, 15, 23, 33, 42, 166, 208, 210, 229, 235, 238, 244, 263, 272], "give": [3, 10, 14, 36, 54, 63, 79, 84, 87, 88, 89, 93, 131, 137, 145, 152, 153, 154, 160, 181, 186, 193, 198, 208, 209, 213, 238, 260, 263, 264], "whenev": [3, 15, 71, 113, 124, 126, 128, 148, 186], "board": [3, 10, 13, 24, 39, 40, 41, 42, 49, 52, 54, 55, 60, 64, 68, 70, 73, 74, 78, 79, 80, 85, 87, 88, 89, 95, 96, 97, 99, 112, 118, 121, 128, 136, 140, 145, 151, 160, 161, 166, 168, 170, 174, 183, 184, 186, 187, 188, 191, 193, 196, 200, 202, 203, 205, 210, 214, 229, 230, 232, 235, 237, 238, 239, 241, 244, 245, 247, 248, 249, 254, 258, 264, 270, 271, 272, 273], "successfulli": [3, 26, 235, 258], "linux": [3, 14, 15, 16, 19, 42, 49, 94, 160, 177, 181, 182, 186, 187, 193, 210, 230, 235, 244, 258, 267, 272], "later": [3, 33, 71, 79, 93, 113, 117, 124, 137, 162, 186, 193, 231, 232, 258], "sudo": [3, 190, 208, 263, 272], "apt": 3, "essenti": [3, 69, 175, 211, 232, 239], "libffi": 3, "pkg": 3, "config": [3, 21, 27, 35, 49, 54, 60, 64, 67, 87, 96, 97, 100, 101, 234, 235, 259, 266], "arm": [3, 8, 49, 173, 215, 216, 217, 219, 220, 221, 222, 223, 225, 227, 230, 232, 241, 249, 253], "gcc": 3, "none": [3, 7, 14, 16, 20, 21, 26, 27, 39, 42, 45, 47, 49, 52, 54, 55, 62, 63, 64, 65, 72, 73, 78, 79, 80, 82, 83, 85, 86, 88, 89, 90, 93, 96, 98, 100, 101, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 133, 134, 137, 140, 141, 142, 144, 145, 146, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 164, 166, 170, 212, 213, 229, 232, 233, 234, 236, 257, 258, 259], "eabi": 3, "libnewlib": 3, "toolchain": [3, 10, 228], "latest": [3, 42, 124, 237, 238, 258, 260, 261], "python3": [3, 19, 228], "5": [3, 7, 18, 21, 25, 27, 29, 36, 39, 41, 42, 43, 44, 46, 48, 49, 52, 54, 58, 60, 64, 65, 73, 81, 85, 92, 98, 113, 114, 116, 117, 122, 124, 125, 128, 134, 141, 143, 145, 146, 151, 156, 158, 166, 171, 174, 175, 178, 179, 195, 200, 205, 208, 211, 213, 228, 229, 232, 235, 236, 239, 242, 248, 250, 252, 254, 255, 258, 259, 262, 265, 272], "jul": 3, "17": [3, 15, 21, 24, 48, 54, 85, 113, 117, 130, 131, 166, 174, 213, 250, 254, 272], "2020": [3, 19, 83], "14": [3, 18, 21, 25, 27, 36, 39, 41, 43, 44, 48, 54, 64, 80, 85, 113, 117, 133, 145, 174, 198, 213, 240, 250, 254, 271], "04": [3, 244], "10": [3, 8, 12, 18, 21, 25, 27, 38, 40, 41, 43, 44, 45, 46, 48, 49, 54, 57, 60, 64, 65, 71, 79, 83, 85, 90, 92, 113, 115, 117, 124, 131, 132, 146, 149, 156, 163, 166, 171, 174, 175, 178, 179, 180, 183, 187, 195, 200, 203, 204, 213, 214, 219, 236, 239, 242, 250, 254, 255, 263, 265, 268], "20160609": 3, "help": [3, 18, 23, 33, 70, 124, 125, 176, 185, 186, 198, 208, 228, 238, 239, 244, 246, 248, 256, 257, 259, 263, 272], "copyright": [3, 172], "credit": [3, 54], "licens": [3, 26, 49, 176, 233], "readm": [3, 190, 209, 210, 228, 270], "almost": [3, 26, 202, 205, 209, 230, 234, 262, 264], "pre": [3, 9, 12, 117, 124, 160, 228, 230, 232, 233, 235, 240], "architectur": [3, 7, 8, 10, 20, 26, 49, 87, 121, 129, 173, 182, 219, 228, 231, 236, 253, 267], "messag": [3, 21, 26, 27, 42, 46, 49, 52, 62, 64, 78, 122, 133, 186, 195, 205, 208, 232, 238, 245, 246, 248, 257, 263, 271, 272], "bss": [3, 8, 124], "dec": 3, "hex": [3, 24, 49, 56, 162, 176, 219, 235, 244], "filenam": [3, 10, 16, 19, 23, 33, 67, 115, 120, 128, 130, 197, 233, 238, 258], "279328": 3, "776": 3, "880": 3, "280984": 3, "44998": 3, "move": [3, 14, 42, 49, 73, 114, 117, 122, 143, 151, 178, 180, 181, 186, 191, 195, 197, 198, 211, 214, 220, 221, 234, 252], "maco": [3, 14, 230, 257], "extrem": [3, 74, 124, 125, 134, 162, 187], "deploi": [3, 5, 186, 235, 238], "devic": [3, 5, 10, 13, 21, 23, 26, 27, 31, 32, 33, 35, 36, 37, 40, 42, 49, 54, 62, 63, 64, 70, 74, 79, 80, 85, 86, 90, 91, 94, 96, 111, 122, 130, 132, 136, 137, 146, 148, 152, 157, 158, 166, 168, 169, 170, 173, 175, 176, 177, 178, 181, 183, 190, 195, 197, 199, 208, 210, 214, 228, 230, 232, 233, 235, 237, 239, 240, 242, 244, 250, 253, 254, 255, 256, 258, 263, 267, 268, 272, 273], "lot": [3, 64, 117, 122, 130, 186, 191, 199, 202, 262], "sure": [3, 8, 20, 21, 26, 27, 36, 39, 55, 62, 64, 117, 123, 131, 156, 173, 175, 177, 178, 181, 186, 190, 199, 202, 204, 205, 208, 211, 235, 236, 242, 250, 253, 255, 258, 260, 261, 262, 263, 267, 272], "relat": [3, 5, 14, 33, 49, 70, 92, 117, 128, 166, 169, 216, 230, 232, 253], "gnu": [3, 8], "ubuntu": [3, 181, 210], "20": [3, 18, 21, 33, 41, 43, 44, 48, 54, 63, 64, 117, 129, 141, 166, 167, 174, 199, 205, 208, 211, 213, 214, 219, 232, 236, 240, 244, 254, 263, 265], "been": [3, 14, 15, 16, 18, 19, 24, 54, 63, 64, 66, 70, 78, 85, 90, 98, 117, 124, 133, 135, 153, 154, 166, 186, 191, 211, 212, 228, 230, 235, 237, 239, 240, 258], "ought": 3, "9": [3, 21, 23, 26, 31, 43, 44, 46, 47, 48, 49, 54, 65, 81, 85, 90, 113, 117, 119, 146, 149, 150, 162, 166, 174, 175, 178, 180, 183, 236, 239, 250, 254, 259, 272], "10ubuntu2": 3, "2019": [3, 18], "free": [3, 6, 7, 22, 32, 33, 63, 64, 87, 93, 94, 113, 117, 123, 125, 128, 142, 155, 172, 181, 191, 202, 208, 228, 232, 235, 237, 262, 263], "softwar": [3, 23, 33, 43, 49, 64, 78, 79, 86, 87, 133, 135, 172, 173, 176, 182, 187, 195, 202, 240, 242, 244, 245, 256, 258, 260, 262, 263, 272], "foundat": [3, 71, 249, 250, 267], "inc": 3, "condit": [3, 12, 15, 49, 66, 74, 79, 90, 93, 131, 146, 151, 154, 155, 172, 198, 215, 218, 221, 222, 223, 225, 227, 232], "NO": [3, 172], "warranti": [3, 33, 172], "merchant": [3, 172], "fit": [3, 64, 70, 96, 110, 111, 112, 113, 117, 120, 124, 125, 127, 172, 186, 191, 197, 202, 228, 255, 258], "FOR": [3, 78, 172], "submodul": [3, 17, 174, 175, 178, 233], "412033": 3, "5680": 3, "2496": 3, "420209": 3, "66971": 3, "v1": [3, 10, 21, 23, 33, 60, 70, 128, 146, 159, 171, 193, 194, 195, 208, 229, 236, 239, 244, 246, 263, 272], "13": [3, 10, 21, 25, 27, 36, 39, 41, 43, 44, 48, 54, 80, 81, 85, 117, 141, 146, 161, 174, 198, 250, 254], "38": [3, 48, 133, 254], "gc67012d": 3, "dirti": [3, 239, 246], "09": 3, "ctrl": [3, 10, 18, 21, 27, 36, 41, 42, 64, 93, 148, 175, 186, 203, 205, 208, 228, 232, 235, 238, 239, 242, 245, 246, 248, 250, 255, 263, 264], "d": [3, 10, 13, 21, 25, 27, 30, 33, 36, 38, 42, 45, 47, 51, 58, 60, 64, 117, 136, 150, 159, 175, 176, 178, 186, 187, 191, 192, 203, 205, 208, 214, 228, 229, 232, 235, 238, 239, 242, 245, 246, 250, 254, 255, 263, 264], "exit": [3, 10, 18, 19, 45, 49, 52, 93, 130, 160, 177, 205, 208, 235, 238, 239, 257, 263, 264], "past": [3, 21, 27, 49, 117, 175, 186, 203, 205, 228, 242, 250, 255], "mode": [3, 10, 15, 16, 17, 20, 23, 24, 25, 26, 30, 31, 33, 34, 35, 39, 41, 49, 54, 55, 59, 62, 63, 67, 71, 77, 78, 80, 82, 83, 85, 86, 88, 89, 93, 96, 97, 98, 100, 101, 102, 113, 115, 116, 117, 123, 124, 127, 128, 130, 131, 133, 134, 135, 137, 140, 142, 145, 147, 148, 151, 156, 157, 162, 166, 171, 173, 175, 178, 179, 195, 197, 201, 203, 213, 214, 228, 229, 231, 235, 242, 243, 244, 247, 248, 250, 253, 255, 257, 261, 262, 263, 265, 266], "hello": [3, 21, 27, 42, 43, 45, 64, 73, 138, 175, 178, 189, 192, 195, 204, 208, 229, 242, 250, 255, 259, 263, 268, 272, 273], "world": [3, 23, 27, 33, 39, 43, 45, 64, 117, 138, 175, 176, 178, 180, 189, 192, 229, 255, 256, 268, 272, 273], "visual": [3, 117, 186], "studio": 3, "vcxproj": 3, "ex": [3, 19, 168, 170, 181, 208, 263], "open": [3, 4, 10, 26, 31, 49, 52, 55, 56, 60, 67, 71, 82, 87, 98, 100, 117, 120, 128, 140, 149, 162, 176, 180, 181, 182, 187, 190, 197, 205, 208, 228, 229, 230, 235, 245, 256, 258, 263, 267, 268, 272, 273], "msbuild": 3, "mingw": 3, "cygwin": 3, "flash": [3, 20, 21, 23, 24, 26, 27, 31, 33, 49, 55, 62, 64, 73, 85, 125, 128, 130, 131, 151, 167, 173, 176, 182, 186, 187, 188, 196, 197, 198, 202, 204, 205, 208, 209, 210, 213, 214, 229, 230, 232, 233, 235, 237, 245, 246, 249, 253, 256, 258, 260, 263, 264, 266, 272], "manual": [3, 20, 26, 33, 45, 49, 54, 62, 66, 73, 87, 117, 124, 161, 173, 175, 181, 208, 210, 214, 219, 220, 230, 241, 242, 253, 258], "cross_compil": 3, "pybv11": [3, 233], "nucleo_wb55": 3, "sphinx": 3, "alreadi": [3, 7, 21, 42, 52, 61, 64, 71, 74, 79, 101, 117, 124, 128, 130, 131, 134, 153, 154, 156, 175, 178, 186, 188, 198, 208, 214, 228, 232, 235, 237, 238, 255, 263, 272], "pip": [3, 8, 23, 33, 190, 230, 235, 237], "m": [3, 17, 18, 65, 90, 91, 92, 120, 124, 130, 137, 150, 161, 170, 174, 175, 179, 200, 204, 219, 220, 228, 232, 236, 237, 239, 240, 250, 255, 257], "venv": 3, "env": 3, "bin": [3, 23, 33, 44, 45, 47, 48, 49, 56, 117, 176, 183, 186, 190, 258], "activ": [3, 14, 21, 26, 27, 35, 42, 49, 54, 64, 73, 78, 82, 87, 93, 96, 97, 98, 100, 101, 122, 123, 124, 125, 130, 131, 133, 145, 146, 154, 155, 158, 166, 175, 176, 178, 199, 232, 235, 250, 252, 258], "r": [3, 10, 16, 21, 27, 29, 36, 49, 55, 57, 63, 71, 73, 96, 110, 111, 112, 113, 117, 120, 127, 150, 197, 235, 239, 245, 250, 258], "doc": [3, 64, 231, 258], "navig": [3, 208], "html": [3, 36], "index": [3, 6, 12, 14, 15, 16, 44, 49, 51, 54, 58, 64, 74, 78, 95, 114, 117, 119, 128, 133, 140, 150, 151, 158, 160, 192, 232, 237], "browser": [3, 31, 42, 181, 230], "view": [3, 14, 15, 21, 49, 82, 113, 117, 124, 145, 187, 195, 216, 240], "read": [3, 8, 10, 15, 21, 24, 27, 28, 30, 37, 38, 39, 42, 47, 49, 51, 52, 54, 60, 62, 63, 64, 67, 71, 73, 74, 75, 76, 79, 80, 82, 86, 87, 90, 102, 110, 113, 114, 116, 117, 118, 124, 125, 128, 130, 131, 132, 137, 138, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 162, 168, 171, 175, 177, 178, 179, 186, 187, 188, 191, 192, 195, 196, 197, 204, 206, 208, 228, 229, 230, 232, 235, 239, 240, 242, 245, 250, 255, 258, 259, 263, 268, 272, 273], "suit": [3, 14, 16, 29, 34, 157, 211], "connect": [3, 16, 20, 21, 23, 24, 26, 27, 30, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 62, 64, 68, 73, 74, 76, 77, 78, 79, 80, 95, 96, 97, 98, 99, 100, 101, 117, 122, 123, 126, 130, 133, 138, 146, 148, 156, 157, 166, 172, 175, 176, 181, 182, 187, 189, 193, 197, 201, 202, 203, 204, 205, 208, 209, 211, 212, 214, 228, 230, 237, 238, 239, 242, 244, 246, 247, 250, 252, 255, 256, 258, 259, 262, 263, 270, 272], "usb": [3, 23, 33, 42, 49, 74, 130, 136, 173, 174, 175, 176, 177, 182, 186, 193, 201, 202, 203, 208, 209, 211, 229, 230, 234, 235, 237, 238, 239, 241, 242, 244, 247, 249, 250, 253, 255, 256, 262, 263, 266, 270, 272], "ttyacm0": [3, 13, 208, 235, 238, 244, 272], "coupl": 3, "term": [3, 26, 94, 146, 156, 219, 228, 232, 239, 244], "down": [3, 15, 21, 23, 33, 40, 42, 49, 54, 62, 64, 82, 96, 98, 100, 114, 117, 118, 120, 122, 123, 124, 131, 134, 135, 140, 141, 144, 145, 180, 181, 191, 193, 209, 212, 214, 232, 233, 239, 259], "script": [3, 8, 12, 13, 19, 26, 40, 49, 70, 74, 90, 93, 98, 117, 121, 122, 123, 124, 130, 175, 176, 177, 178, 181, 182, 183, 184, 187, 190, 193, 196, 198, 201, 204, 205, 208, 211, 212, 214, 233, 235, 257, 258, 263, 264, 266], "bytecod": [3, 4, 8, 12, 93, 160, 228, 230, 232, 233, 236, 237, 240, 257], "lib": [3, 10, 12, 47, 67, 70, 95, 117, 129, 156, 160, 171, 203, 204, 228, 230, 233, 235, 237, 238, 257, 260], "mostli": [3, 17, 22, 32, 229, 231], "3rd": [3, 30, 64], "parti": [3, 12, 49, 233, 235, 237], "driver": [3, 10, 49, 54, 63, 71, 86, 95, 96, 97, 99, 100, 101, 117, 124, 128, 130, 135, 138, 142, 145, 170, 181, 186, 190, 192, 204, 208, 210, 213, 229, 230, 232, 233, 235, 240, 263, 273], "intend": [3, 22, 32, 54, 70, 81, 160, 161, 198, 201, 211, 230, 239, 243, 269], "across": [3, 5, 12, 21, 23, 33, 46, 49, 73, 87, 117, 161, 175, 178, 186, 230, 234, 250, 255, 267], "multipl": [3, 5, 8, 10, 12, 14, 15, 18, 19, 21, 23, 26, 33, 46, 49, 54, 62, 73, 82, 86, 90, 93, 96, 100, 111, 113, 117, 124, 125, 128, 130, 135, 136, 140, 150, 155, 156, 162, 170, 177, 186, 212, 216, 218, 228, 232, 235, 239, 257, 258, 267], "extmod": [3, 5, 10, 12, 13], "non": [3, 8, 12, 15, 19, 21, 45, 49, 54, 60, 64, 70, 71, 77, 78, 80, 81, 84, 85, 87, 88, 89, 91, 93, 94, 101, 112, 117, 120, 122, 127, 128, 133, 139, 148, 150, 151, 156, 157, 161, 162, 167, 186, 235, 236, 240, 252, 257, 259], "org": [3, 14, 21, 22, 27, 32, 36, 42, 44, 96, 156, 161, 162, 230, 231, 235, 237], "ci": 3, "well": [3, 8, 14, 26, 29, 41, 42, 54, 55, 58, 64, 66, 70, 78, 133, 151, 156, 158, 162, 173, 174, 175, 176, 186, 187, 205, 230, 233, 237, 255, 258, 260, 262], "pyboard": [3, 49, 52, 73, 74, 80, 81, 92, 95, 131, 133, 136, 140, 141, 146, 160, 177, 190, 191, 192, 196, 197, 198, 200, 203, 204, 208, 209, 211, 212, 213, 218, 219, 228, 231, 232, 239, 240], "mpremot": [3, 49, 157, 175, 203, 230, 231, 255], "tour": 4, "perspect": [4, 9, 117, 124], "contribut": [4, 79], "act": [4, 21, 54, 64, 75, 79, 90, 146, 148, 155, 166, 175, 183, 201, 239, 242, 252], "comprehens": [4, 14, 16, 18, 19, 25, 46, 49, 205, 208, 236], "novic": 4, "expert": 4, "contributor": 4, "modifi": [4, 5, 8, 10, 16, 26, 49, 54, 64, 71, 81, 94, 117, 123, 151, 155, 172, 186, 196, 200, 229, 232, 236, 252], "great": [4, 23, 33, 117, 145, 176, 191, 256, 265], "platform": [4, 14, 19, 23, 33, 49, 70, 79, 81, 85, 86, 128, 137, 155, 160, 176, 218, 228, 232, 240, 256], "git": [4, 33, 236, 270], "cross": [4, 8, 9, 117, 228, 230, 233, 236, 244, 247], "window": [4, 8, 16, 19, 42, 49, 54, 67, 73, 117, 119, 124, 125, 129, 171, 181, 182, 186, 210, 228, 230, 235, 239, 244, 258, 272], "test": [4, 15, 17, 20, 23, 24, 26, 33, 36, 42, 44, 45, 49, 94, 110, 111, 112, 117, 125, 135, 161, 173, 175, 176, 178, 181, 186, 197, 208, 216, 218, 221, 230, 232, 234, 235, 236, 238, 239, 240, 253, 256, 263, 267, 272], "folder": [4, 13, 70, 186, 188, 190, 210, 258], "grammar": [4, 19], "rule": [4, 8, 10, 79, 176, 240, 254], "lexic": 4, "token": [4, 12], "pars": [4, 9, 46, 49, 72, 109, 117, 186], "pass": [4, 12, 13, 14, 15, 17, 18, 21, 25, 27, 35, 44, 45, 49, 52, 54, 55, 63, 65, 68, 70, 73, 74, 77, 83, 84, 85, 87, 88, 89, 93, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 135, 137, 138, 140, 142, 145, 148, 149, 150, 157, 158, 161, 162, 180, 184, 195, 201, 211, 212, 213, 218, 224, 228, 232, 233, 238, 240, 254, 257, 258, 259, 271], "third": [4, 12, 49, 117, 149, 162, 192, 203, 204, 228, 233, 235, 236, 237, 239], "fourth": [4, 117], "emit": [4, 26, 62, 139, 217, 225, 228, 236, 240, 252, 257], "memori": [4, 5, 8, 10, 15, 26, 39, 40, 43, 44, 45, 47, 49, 55, 60, 62, 63, 64, 66, 67, 71, 78, 82, 88, 89, 93, 96, 117, 122, 124, 125, 128, 130, 131, 133, 137, 145, 151, 152, 153, 154, 156, 162, 168, 169, 171, 173, 177, 178, 182, 186, 193, 195, 198, 212, 217, 219, 220, 229, 230, 232, 233, 234, 237, 240, 242, 249, 250, 253, 258, 259, 268], "manag": [4, 5, 14, 16, 26, 40, 46, 49, 55, 60, 63, 67, 70, 86, 94, 100, 171, 186, 190, 191, 208, 230, 231, 235, 238, 240, 256, 258], "model": [4, 26, 49, 82, 88, 89, 103, 118, 119, 140, 142, 183], "alloc": [4, 6, 8, 10, 12, 26, 39, 49, 54, 55, 59, 63, 64, 66, 78, 82, 88, 89, 93, 113, 117, 124, 125, 131, 133, 145, 155, 161, 162, 191, 212, 228, 230, 232, 236, 245], "frozen": [4, 26, 67, 160, 171, 228, 230, 233, 242], "dictionari": [4, 9, 14, 26, 45, 49, 52, 55, 60, 61, 67, 123, 140, 160, 162, 164, 171, 228, 232, 235, 240], "address": [4, 7, 14, 15, 16, 21, 24, 27, 29, 33, 34, 35, 36, 42, 43, 49, 52, 54, 64, 73, 74, 79, 96, 97, 98, 99, 100, 101, 109, 113, 116, 122, 124, 137, 140, 158, 162, 166, 169, 175, 176, 178, 195, 197, 198, 204, 218, 219, 221, 222, 227, 228, 230, 235, 238, 240, 242, 250, 255, 258, 259, 263, 268], "linear": [4, 21, 106, 107, 117, 200], "probe": [4, 176], "public": [4, 54], "api": [4, 8, 10, 14, 16, 17, 18, 21, 26, 50, 54, 64, 74, 80, 82, 129, 134, 135, 136, 145, 152, 161, 162, 166, 168, 169, 195, 230, 234, 250, 273], "privat": [5, 16, 54, 157, 258], "codebas": 5, "mirror": [5, 70, 110, 111, 112, 113, 117, 120, 124, 127], "gc": [5, 7, 10, 12, 14, 17, 18, 19, 45, 49, 63, 70, 240], "io": [5, 15, 21, 37, 49, 54, 55, 60, 67, 70, 101, 117, 128, 180, 182, 183, 230, 251, 258, 260], "arrai": [5, 8, 14, 16, 45, 46, 49, 65, 73, 78, 80, 87, 102, 113, 116, 117, 124, 125, 128, 131, 133, 134, 140, 154, 162, 217, 218, 219, 228, 232], "hypothet": 5, "subsystem": [5, 74, 131, 228, 259], "modsubsystem": 5, "micropy_py_subsystem": 5, "info": [5, 10, 49, 63, 64, 77, 78, 84, 101, 124, 130, 133, 141, 158, 239, 254, 258], "py_subsystem_info": 5, "mp_obj_new_small_int": 5, "42": [5, 44, 47, 48, 79, 146, 174, 198, 254], "mp_define_const_fun_obj_0": [5, 10], "subsystem_info_obj": 5, "mp_rom_map_elem_t": [5, 10], "mp_module_subsystem_globals_t": 5, "mp_rom_qstr": [5, 10], "mp_qstr___name__": [5, 10], "mp_qstr_subsystem": 5, "mp_qstr_info": [5, 10], "mp_rom_ptr": [5, 10], "mp_define_const_dict": [5, 10], "mp_module_subsystem_glob": 5, "mp_obj_module_t": [5, 10], "mp_module_subsystem": 5, "mp_type_modul": [5, 10], "mp_obj_dict_t": [5, 10], "regist": [5, 22, 49, 54, 64, 74, 78, 79, 90, 99, 109, 113, 114, 116, 118, 122, 123, 124, 126, 130, 132, 133, 135, 140, 144, 145, 148, 151, 154, 155, 156, 160, 162, 176, 198, 199, 212, 213, 215, 219, 220, 221, 223, 224, 226, 230, 240, 242, 252], "wider": 5, "techniqu": [6, 7, 135, 200, 228, 232, 240, 252, 258], "collis": [6, 14, 191], "veri": [6, 11, 12, 23, 26, 33, 36, 38, 42, 44, 62, 63, 93, 113, 117, 122, 123, 124, 131, 142, 160, 161, 162, 166, 176, 181, 187, 189, 191, 196, 202, 205, 210, 212, 230, 232, 235, 248, 254, 262, 264], "occurr": 6, "happen": [6, 12, 26, 44, 54, 64, 86, 90, 98, 113, 114, 117, 125, 150, 155, 156, 166, 186, 210, 212, 232, 235, 252], "item": [6, 7, 11, 14, 15, 49, 51, 55, 58, 69, 149, 232, 233, 234, 240, 254, 258], "hash": [6, 12, 14, 16, 49, 56, 70, 228, 236, 258], "slot": [6, 9, 21, 27, 45, 78, 85, 117, 128, 133, 181, 193, 202, 228], "given": [6, 10, 11, 14, 20, 21, 23, 27, 33, 35, 42, 43, 45, 51, 52, 54, 55, 56, 59, 60, 63, 64, 65, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89, 90, 91, 93, 96, 97, 99, 100, 101, 102, 122, 124, 128, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 156, 157, 159, 160, 161, 162, 166, 167, 168, 170, 173, 175, 176, 178, 191, 199, 205, 208, 211, 229, 232, 233, 235, 236, 238, 240, 250, 254, 255, 256, 257, 258, 263, 272], "fill": [6, 21, 29, 43, 49, 65, 73, 78, 80, 85, 95, 102, 110, 111, 112, 113, 117, 119, 120, 122, 124, 127, 133, 137, 138, 142, 147, 148, 168, 175, 186, 195, 204, 240, 250], "70": [6, 117, 254], "empti": [6, 12, 14, 15, 17, 19, 51, 52, 54, 58, 63, 64, 69, 71, 78, 80, 117, 122, 133, 150, 151, 154, 155, 186, 193, 228, 257], "servic": [6, 14, 26, 36, 49, 54, 70, 94, 96, 98, 156, 232, 240, 258], "sequenti": [6, 79, 230, 235], "sequenc": [6, 14, 16, 58, 63, 73, 149, 150, 156, 193, 205, 212, 219, 235, 256, 258], "assum": [6, 22, 32, 33, 41, 42, 55, 60, 79, 117, 125, 128, 135, 146, 155, 156, 161, 181, 189, 203, 216, 220, 235], "fix": [6, 8, 15, 26, 27, 63, 64, 79, 85, 86, 117, 122, 124, 125, 145, 166, 169, 174, 175, 177, 181, 186, 190, 191, 193, 202, 205, 209, 214, 221, 228, 240, 242, 259, 262, 264, 265, 266], "interv": [6, 26, 54, 74, 130, 149, 161, 163, 213, 228, 232], "between": [6, 14, 16, 18, 20, 21, 23, 26, 27, 28, 33, 34, 36, 38, 41, 45, 46, 49, 53, 54, 63, 64, 65, 72, 73, 74, 79, 80, 81, 82, 85, 87, 90, 93, 101, 113, 117, 120, 122, 124, 125, 127, 130, 131, 132, 133, 134, 137, 138, 139, 143, 145, 146, 149, 161, 163, 166, 168, 171, 173, 175, 178, 179, 180, 186, 192, 195, 196, 200, 202, 205, 211, 214, 219, 228, 231, 236, 253, 262], "33": [6, 21, 24, 25, 48, 174, 219, 228, 254], "valu": [6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 24, 27, 28, 30, 33, 35, 36, 38, 39, 41, 42, 46, 49, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 170, 171, 175, 178, 179, 180, 192, 195, 196, 199, 200, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 229, 230, 232, 235, 236, 239, 240, 242, 250, 252, 254, 255, 257, 258, 259, 268, 271, 272, 273], "reveal": 6, "true": [6, 7, 21, 24, 25, 27, 33, 35, 36, 42, 43, 44, 45, 52, 53, 54, 55, 60, 63, 64, 65, 73, 74, 78, 79, 81, 82, 83, 87, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 125, 127, 128, 130, 133, 134, 138, 140, 142, 144, 146, 148, 149, 151, 154, 156, 157, 161, 163, 165, 166, 167, 169, 175, 178, 179, 189, 195, 196, 199, 200, 203, 204, 205, 206, 207, 212, 216, 228, 232, 233, 240, 245, 248, 255, 258, 259, 271, 272], "quit": [6, 26, 62, 117, 177, 183, 258, 263], "wa": [6, 14, 16, 18, 19, 27, 42, 54, 55, 60, 63, 64, 74, 86, 89, 94, 109, 113, 117, 120, 122, 124, 127, 128, 130, 137, 140, 142, 146, 150, 156, 160, 161, 176, 177, 181, 184, 186, 187, 191, 193, 212, 214, 221, 228, 236, 239, 240, 248, 257, 258], "insert": [6, 15, 17, 18, 151, 181, 193, 232], "hold": [6, 7, 21, 36, 55, 58, 64, 71, 73, 92, 93, 117, 124, 160, 161, 166, 193, 204, 209, 212, 214, 218, 230, 232, 236, 258], "44": [6, 48, 174, 254], "simpli": [6, 8, 21, 30, 77, 87, 89, 101, 181, 188, 190, 200, 205, 219, 229, 258, 260, 264], "fals": [6, 7, 21, 35, 43, 47, 52, 54, 55, 60, 63, 64, 73, 78, 82, 83, 87, 90, 93, 94, 96, 97, 99, 100, 101, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 124, 125, 127, 130, 133, 134, 137, 138, 140, 142, 144, 146, 148, 151, 153, 154, 156, 157, 158, 163, 165, 166, 175, 195, 203, 212, 228, 233, 237, 240, 255, 258, 259, 263], "until": [6, 10, 16, 19, 21, 26, 41, 52, 54, 55, 62, 63, 64, 65, 72, 74, 78, 80, 88, 89, 90, 93, 94, 109, 110, 111, 112, 113, 114, 117, 119, 120, 124, 126, 127, 130, 131, 133, 146, 151, 154, 155, 156, 157, 158, 181, 189, 209, 212, 214, 224, 232, 235, 239, 252], "encount": [6, 52, 72, 122, 190, 232], "yet": [6, 49, 50, 124, 208, 213, 214, 234, 241, 242, 252, 255], "po": [6, 15], "start_po": 6, "got": [6, 8, 124, 186, 188, 192], "back": [6, 12, 14, 21, 27, 29, 31, 40, 42, 60, 64, 117, 118, 122, 123, 124, 145, 161, 171, 175, 176, 178, 181, 186, 188, 208, 209, 212, 213, 214, 229, 232, 235, 239, 250, 255, 258, 264, 268, 273], "posit": [6, 8, 18, 19, 24, 44, 56, 63, 64, 65, 73, 80, 89, 90, 92, 114, 116, 117, 124, 130, 133, 137, 138, 143, 150, 156, 160, 161, 162, 171, 178, 195, 196, 197, 202, 203, 204, 211, 221, 238, 262, 265], "lookup_kind": 6, "mp_map_lookup_add_if_not_found": 6, "avail_slot": 6, "enough": [6, 26, 55, 60, 62, 64, 65, 73, 78, 102, 106, 124, 125, 133, 153, 154, 184, 186, 197, 230], "room": [6, 58, 62, 78, 124, 133, 161, 186], "rehash": 6, "mp_set_rehash": 6, "restart": [6, 49, 62, 73, 78, 91, 133, 154, 186, 205, 212, 235, 250], "element": [6, 12, 15, 18, 47, 49, 51, 54, 64, 69, 78, 117, 131, 133, 150, 155, 162, 175, 219, 228, 240], "hide": 7, "applic": [7, 15, 26, 33, 45, 49, 54, 55, 64, 65, 66, 68, 71, 80, 82, 87, 89, 91, 95, 101, 117, 136, 152, 156, 161, 186, 187, 188, 190, 221, 228, 229, 232, 233, 237, 240, 252, 270, 273], "dealloc": [7, 64, 124, 125, 191], "elimin": [7, 15, 72, 117, 199, 228, 240], "challeng": [7, 232], "forget": [7, 55, 131], "critic": [7, 8, 49, 74, 93, 94, 130, 240], "issu": [7, 14, 27, 33, 49, 54, 64, 71, 117, 122, 128, 130, 177, 181, 186, 190, 217, 219, 221, 228, 229, 235, 240], "releas": [7, 14, 16, 18, 19, 21, 26, 33, 49, 52, 67, 94, 110, 111, 112, 114, 124, 125, 128, 135, 156, 182, 199, 209, 214, 234, 236, 246, 258], "form": [7, 16, 18, 33, 53, 57, 62, 64, 72, 73, 82, 83, 85, 96, 100, 117, 128, 149, 150, 151, 156, 164, 218, 228, 230, 235, 236, 237, 255, 258, 265], "garbag": [7, 10, 19, 49, 70, 156, 191, 230, 257], "collect": [7, 10, 12, 15, 16, 19, 26, 45, 47, 49, 66, 70, 156, 191, 237], "collector": [7, 19, 49, 70, 191, 230, 257], "respons": [7, 26, 36, 49, 54, 64, 117, 122, 128, 158, 161, 185, 232], "unus": [7, 21, 43, 55, 62, 78, 117, 128, 132, 133, 167, 191, 230, 255], "mark": [7, 21, 27, 74, 156, 228], "sweep": 7, "polici": [7, 55, 71, 124, 156], "travers": 7, "heap": [7, 9, 10, 12, 14, 49, 63, 66, 70, 74, 78, 93, 113, 117, 122, 124, 125, 131, 133, 161, 191, 230, 232, 235, 240, 257], "goe": [7, 39, 42, 64, 110, 111, 112, 117, 119, 145, 196, 208, 209, 212, 228, 239, 246, 258, 263, 264], "reclaim": [7, 55, 228, 230, 240], "unmark": 7, "mem_alloc": [7, 49, 66, 228], "1312": 7, "mem_fre": [7, 49, 63, 66, 228], "2071392": 7, "19": [7, 21, 25, 48, 54, 85, 113, 117, 166, 174, 176, 236, 254, 272], "trigger": [7, 27, 39, 40, 66, 73, 74, 78, 82, 83, 89, 90, 101, 113, 117, 124, 131, 133, 134, 135, 141, 145, 148, 151, 153, 154, 212, 213, 228, 232, 235, 240, 242, 258, 259, 265, 271], "word": [7, 42, 49, 55, 80, 87, 134, 142, 150, 151, 154, 158, 162, 166, 198, 217, 218, 222, 227, 228, 232, 239, 240, 252, 257], "32": [7, 8, 16, 20, 21, 24, 25, 43, 48, 49, 60, 63, 73, 74, 78, 80, 83, 89, 92, 95, 96, 113, 117, 122, 124, 125, 128, 132, 133, 141, 142, 149, 151, 158, 160, 162, 166, 171, 191, 198, 213, 215, 218, 219, 220, 222, 223, 225, 227, 240, 241, 250, 252, 253, 254, 255, 265], "bit": [7, 8, 14, 19, 20, 21, 22, 24, 27, 32, 44, 46, 49, 54, 63, 65, 73, 74, 76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 92, 102, 105, 106, 111, 113, 115, 117, 118, 122, 124, 126, 130, 131, 133, 134, 137, 141, 142, 146, 149, 151, 154, 158, 159, 160, 162, 166, 171, 173, 175, 178, 179, 191, 195, 197, 198, 202, 211, 212, 213, 215, 218, 219, 220, 221, 222, 223, 225, 227, 228, 236, 239, 240, 241, 244, 250, 252, 253, 255, 258, 262, 265, 268], "nrf": [7, 82, 90, 238], "x86": [7, 8, 230, 236], "64": [7, 8, 25, 27, 34, 43, 47, 60, 67, 113, 117, 124, 133, 142, 146, 160, 162, 163, 174, 203, 254, 255], "x64": [7, 8, 230, 236], "greater": [7, 8, 46, 47, 49, 78, 117, 124, 131, 133, 149, 211, 221, 239, 250], "represent": [7, 9, 51, 53, 72, 156, 160, 230, 254], "obj_repr_d": 7, "repres": [7, 16, 35, 52, 55, 63, 65, 72, 73, 75, 76, 82, 85, 89, 93, 96, 101, 113, 117, 124, 125, 128, 133, 136, 140, 147, 148, 156, 161, 162, 169, 170, 222, 227, 228, 232, 235], "float": [7, 8, 13, 14, 16, 18, 19, 46, 49, 51, 52, 56, 89, 92, 100, 110, 111, 112, 113, 117, 118, 124, 125, 127, 131, 145, 156, 159, 161, 162, 170, 180, 219, 220, 228, 268], "instanc": [7, 9, 16, 18, 26, 35, 54, 60, 61, 64, 65, 67, 74, 75, 82, 85, 90, 94, 95, 101, 145, 149, 150, 153, 154, 155, 157, 162, 175, 186, 205, 216, 219, 228, 229, 232, 235, 240, 250, 252, 254, 255, 258, 260, 266], "boolean": [7, 63, 64, 73, 78, 82, 87, 96, 98, 100, 117, 133, 140, 165, 232, 240], "small": [7, 21, 26, 48, 60, 62, 63, 64, 65, 67, 74, 85, 106, 107, 115, 117, 124, 125, 162, 173, 177, 181, 191, 193, 196, 197, 200, 208, 210, 211, 212, 219, 228, 230, 234, 236, 240, 252, 253, 254, 258, 263, 267], "store": [7, 9, 12, 14, 31, 47, 49, 54, 55, 62, 64, 69, 73, 78, 79, 82, 90, 93, 95, 113, 117, 124, 125, 128, 131, 133, 136, 146, 148, 152, 156, 159, 160, 170, 177, 181, 186, 191, 193, 197, 198, 202, 212, 217, 218, 219, 220, 221, 228, 229, 230, 232, 236, 239, 240, 258, 262, 273], "elsewher": [7, 54, 217, 240], "portion": [7, 62, 172], "tag": [7, 21, 117, 236, 237], "tell": [7, 39, 41, 90, 117, 123, 161, 181, 192, 205, 212, 213, 214], "mpconfig": [7, 10, 12], "align": [7, 128, 145, 159, 162, 174, 175, 178, 217, 222, 227], "lower": [7, 33, 62, 65, 73, 79, 81, 86, 96, 110, 111, 112, 113, 117, 120, 124, 127, 137, 141, 156, 173, 181, 198, 221, 232, 236, 240, 258], "zero": [7, 8, 16, 19, 54, 64, 79, 117, 119, 125, 128, 139, 143, 145, 150, 151, 156, 212, 213, 216, 219, 221, 222, 223, 224, 225, 232, 236, 250, 252], "00": [7, 89, 161], "reserv": [7, 17, 20, 26, 125, 213, 223], "oppos": [7, 142], "introduc": [7, 33, 71, 228, 232, 234], "field": [7, 14, 58, 83, 96, 113, 117, 124, 128, 162, 170, 236], "ineffici": 7, "deal": [7, 12, 64, 88, 89, 117, 124, 161, 172, 228, 232], "concret": [7, 71, 81, 96, 128], "semant": [7, 66, 155, 162], "asterisk": 7, "immedi": [7, 21, 23, 33, 52, 63, 64, 78, 80, 82, 94, 122, 133, 138, 146, 148, 155, 157, 176, 186, 198, 215, 216, 222, 225, 227, 232, 235, 239, 256], "layout": [7, 8, 49, 65, 193, 194, 229], "010": 7, "110": 7, "star": 7, "creation": [7, 16, 17, 21, 27, 49, 93, 147, 148, 175, 178, 228, 242, 250, 255, 268], "textual": [7, 16, 156], "everyth": [7, 14, 91, 117, 123, 186, 187, 188, 191, 205, 259], "smallest": [7, 26, 69, 211], "unit": [7, 21, 26, 27, 63, 75, 80, 85, 88, 90, 117, 128, 133, 146, 161, 173, 184, 235, 253, 267], "block": [7, 10, 12, 14, 15, 16, 19, 21, 36, 49, 52, 54, 59, 60, 63, 71, 74, 75, 76, 77, 79, 80, 85, 86, 90, 93, 94, 98, 112, 113, 117, 122, 124, 127, 130, 131, 136, 140, 148, 151, 152, 154, 156, 157, 162, 168, 169, 177, 191, 192, 205, 217, 228, 232, 240, 242, 252, 258, 259, 268, 273], "16": [7, 12, 16, 21, 24, 25, 26, 27, 29, 39, 43, 48, 54, 62, 64, 65, 73, 74, 80, 81, 85, 89, 102, 113, 117, 124, 131, 133, 135, 137, 142, 145, 151, 158, 160, 162, 166, 173, 174, 175, 195, 198, 222, 225, 227, 228, 239, 240, 242, 249, 250, 252, 253, 254, 255, 259, 265], "byte": [7, 12, 15, 16, 17, 19, 21, 27, 31, 36, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 78, 79, 80, 86, 90, 93, 100, 101, 109, 112, 113, 117, 120, 122, 124, 125, 128, 130, 131, 133, 134, 136, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 162, 163, 164, 171, 175, 178, 186, 192, 195, 217, 218, 219, 221, 222, 227, 228, 230, 232, 235, 236, 239, 240, 242, 250, 255, 257, 258, 259, 268], "track": [7, 12, 26, 64, 83, 114, 117, 124, 125, 141, 161, 186, 189, 205], "bitmap": [7, 65, 117, 124], "whether": [7, 16, 21, 23, 26, 33, 54, 63, 64, 71, 73, 75, 78, 82, 87, 90, 94, 97, 100, 133, 137, 146, 151, 154, 155, 157, 160, 166, 172, 176, 186, 203, 216, 219, 221, 228, 232, 236, 256, 259], "state": [7, 19, 21, 27, 36, 40, 47, 49, 52, 54, 64, 71, 74, 78, 82, 87, 90, 91, 96, 97, 98, 100, 110, 111, 112, 114, 124, 126, 128, 130, 133, 140, 141, 144, 151, 153, 154, 165, 175, 178, 180, 181, 184, 192, 193, 196, 204, 209, 212, 215, 220, 222, 223, 224, 227, 228, 232, 235, 242, 249, 250, 252, 255, 256, 257, 259, 264, 268, 271], "utilis": [7, 228], "still": [7, 9, 14, 16, 23, 26, 30, 33, 42, 54, 55, 64, 66, 70, 71, 74, 90, 93, 111, 121, 131, 140, 150, 156, 160, 161, 171, 174, 181, 186, 187, 188, 191, 193, 196, 199, 209, 214, 228, 229, 230, 233, 236, 237, 238, 258], "arrang": 7, "pool": [7, 12, 16, 228], "properti": [7, 15, 46, 49, 54, 56, 71, 74, 156, 162, 170, 175, 178, 208, 230, 250, 255, 258], "atb": 7, "head": [7, 36, 49, 164, 175, 178, 228], "chain": [7, 49, 59, 157], "tail": [7, 228], "ftb": 7, "finalis": [7, 15], "exist": [8, 12, 13, 14, 18, 26, 31, 42, 49, 54, 55, 59, 61, 63, 64, 68, 75, 78, 79, 86, 87, 101, 122, 128, 130, 146, 148, 157, 160, 181, 186, 187, 193, 212, 228, 233, 234, 235, 236, 238, 239, 240], "advantag": [8, 62, 200, 228, 229, 237], "rebuild": [8, 10, 228, 236], "contrast": [8, 43, 117, 124, 138], "focu": [8, 124, 181], "principl": [8, 219, 228, 232], "stand": [8, 42, 118, 208, 214, 233, 263, 272], "alon": [8, 233], "put": [8, 12, 21, 23, 27, 33, 35, 40, 49, 64, 74, 93, 98, 118, 124, 130, 154, 156, 164, 175, 178, 179, 183, 184, 186, 189, 197, 198, 204, 210, 211, 214, 217, 218, 219, 232, 240, 242, 250, 252, 255, 258, 260, 266], "mpy_ld": 8, "o": [8, 10, 14, 15, 16, 19, 21, 23, 26, 27, 31, 33, 46, 49, 54, 58, 61, 62, 63, 70, 71, 74, 84, 85, 98, 110, 111, 112, 113, 124, 127, 130, 131, 136, 151, 152, 153, 155, 160, 161, 162, 168, 169, 173, 175, 178, 179, 180, 182, 186, 189, 191, 193, 229, 230, 232, 235, 237, 240, 242, 245, 246, 252, 253, 254, 257, 258, 259, 264, 267, 268, 271, 272, 273], "pyelftool": 8, "v0": 8, "25": [8, 21, 25, 29, 34, 48, 54, 117, 145, 166, 174, 175, 178, 183, 204, 228, 250, 252, 254], "valid": [8, 19, 21, 26, 36, 52, 54, 60, 63, 64, 65, 73, 81, 82, 97, 100, 101, 117, 124, 134, 135, 137, 138, 148, 155, 157, 171, 175, 232, 235, 236, 255, 257, 258], "arch": [8, 49, 97, 121, 174, 175, 236], "armv6m": [8, 236], "thumb": [8, 198, 217, 220, 230, 232], "cortex": [8, 74, 117, 173, 241, 249, 252, 253], "m0": [8, 74, 249, 252, 253], "armv7m": [8, 236], "m3": 8, "armv7emsp": [8, 236], "m4f": 8, "m7": [8, 104, 117, 125, 137, 146, 173, 174, 178, 180, 181, 188], "armv7emdp": [8, 236], "doubl": [8, 58, 117, 124, 138, 159, 175, 211, 219, 235, 256], "xtensa": [8, 20, 26, 129, 230, 236], "esp8266": [8, 23, 28, 31, 35, 36, 37, 40, 41, 42, 49, 64, 74, 90, 91, 95, 96, 238, 268], "xtensawin": [8, 236], "8": [8, 16, 17, 20, 21, 25, 27, 29, 33, 34, 35, 42, 43, 44, 46, 48, 49, 53, 54, 60, 63, 65, 73, 74, 77, 78, 79, 81, 83, 85, 86, 90, 95, 96, 97, 99, 100, 101, 102, 106, 113, 117, 118, 121, 124, 127, 130, 131, 133, 134, 137, 141, 142, 145, 146, 151, 154, 156, 158, 159, 161, 162, 166, 173, 174, 175, 178, 180, 191, 195, 197, 216, 228, 232, 236, 239, 240, 242, 249, 250, 253, 254, 255, 259, 266, 268], "chosen": [8, 27, 54, 142, 156, 254], "independ": [8, 21, 33, 54, 83, 103, 104, 117, 141, 162, 213, 230, 232, 249, 250, 252, 265], "pic": 8, "offset": [8, 9, 29, 49, 62, 63, 117, 128, 136, 152, 154, 158, 159, 161, 162, 168, 169, 218, 222, 227, 229], "although": [8, 131, 218, 237], "vari": [8, 21, 66, 71, 74, 85, 228, 232, 254], "machineri": [8, 236], "reloc": [8, 236], "rodata": 8, "linker": [8, 190], "loader": [8, 33, 176, 181, 186, 190], "struct": [8, 16, 46, 49, 70, 122, 124, 162, 169, 192, 228], "workaround": [8, 26, 44, 45, 47, 48, 98], "initialis": [8, 10, 21, 64, 78, 79, 80, 82, 83, 85, 86, 88, 89, 90, 96, 97, 99, 128, 131, 133, 134, 137, 140, 142, 145, 146, 149, 204, 205, 213, 219, 228, 229, 250], "writabl": [8, 15, 17, 45], "against": [8, 13, 71, 117, 122, 150, 157, 262], "rather": [8, 17, 18, 19, 52, 54, 70, 85, 93, 162, 175, 191, 219, 228, 230, 232, 233, 235, 237, 240, 252], "explicit": [8, 14, 44, 162, 221, 228, 235, 239], "export": [8, 238], "mp_fun_tabl": 8, "nativeglu": 8, "thu": [8, 33, 45, 63, 71, 88, 89, 117, 156, 160, 161, 216, 217, 219, 225, 226, 228, 230], "possibl": [8, 13, 16, 20, 21, 26, 27, 39, 49, 54, 55, 60, 62, 64, 71, 74, 78, 82, 86, 90, 93, 96, 99, 100, 109, 117, 122, 124, 128, 129, 131, 133, 143, 146, 148, 154, 156, 161, 167, 173, 175, 178, 181, 186, 188, 200, 213, 219, 220, 230, 232, 236, 239, 253, 257, 258, 259, 264], "hal": 8, "rto": [8, 14, 27, 160, 161, 267], "rebuilt": 8, "fun_tabl": 8, "stub": 8, "dynruntim": 8, "easi": [8, 23, 33, 44, 117, 123, 124, 125, 180, 192, 198, 214, 256], "filesystem": [8, 9, 10, 16, 26, 32, 33, 46, 49, 62, 70, 71, 95, 117, 130, 136, 152, 181, 202, 208, 214, 228, 230, 231, 232, 233, 235, 237, 239, 245, 246, 262, 268, 269], "simplest": [8, 36, 145, 198, 230, 232, 233, 235, 237], "least": [8, 10, 19, 23, 26, 33, 38, 55, 60, 64, 78, 86, 117, 122, 133, 142, 155, 156, 161, 162, 186, 211, 228, 230, 236, 262], "mpy_init": 8, "entri": [8, 12, 31, 54, 78, 85, 128, 133, 160, 161, 203, 237], "split": [8, 12, 17, 36, 46, 49, 63, 73, 87, 117, 150, 162, 186, 240], "desir": [8, 21, 64, 71, 131, 133, 140, 146, 211, 258], "src": [8, 151, 233, 235, 238], "mpy_dir": [8, 233], "mod": 8, "fulli": [8, 44, 50, 54, 71, 117, 181, 191, 228, 240], "factori": [8, 18, 58, 63, 131, 193, 201, 229, 244, 245, 246, 247, 258], "mp_int_t": [8, 10], "factorial_help": 8, "x_obj": 8, "extract": [8, 110, 111, 112, 113, 117, 120, 127, 162, 188, 190, 230], "mp_obj_get_int": 8, "calcul": [8, 30, 117, 133, 161, 212, 232, 255, 258], "mp_obj_new_int": 8, "mp_define_const_fun_obj_1": 8, "factorial_obj": 8, "mp_obj_fun_bc_t": 8, "self": [8, 17, 18, 22, 32, 33, 44, 45, 78, 130, 133, 175, 229, 232, 237, 240], "n_arg": 8, "n_kw": 8, "mp_dynruntime_init_entri": 8, "namespac": [8, 9, 46, 49, 63, 156], "mp_store_glob": 8, "mp_qstr_factori": 8, "mp_obj_from_ptr": 8, "last": [8, 12, 33, 44, 47, 54, 64, 74, 78, 79, 86, 90, 119, 124, 130, 133, 137, 142, 146, 161, 175, 181, 186, 214, 233, 239, 248, 258], "restor": [8, 21, 74, 93, 130, 209, 212, 219, 220, 226, 264], "mp_dynruntime_init_exit": 8, "prerequisit": 8, "Be": [8, 21, 23, 27, 33, 122, 175, 176, 178, 202, 242, 250, 255, 256, 262], "correct": [8, 10, 15, 18, 42, 54, 77, 78, 113, 117, 124, 130, 131, 133, 161, 186, 205, 208, 228, 229, 236, 240, 263], "3628800": 8, "natmod": 8, "except": [8, 10, 14, 15, 16, 18, 21, 25, 26, 27, 39, 42, 45, 46, 48, 49, 52, 55, 61, 62, 70, 71, 78, 79, 82, 88, 89, 90, 93, 98, 109, 114, 122, 124, 128, 133, 135, 140, 145, 146, 148, 150, 151, 155, 156, 160, 161, 162, 173, 175, 205, 215, 220, 222, 223, 224, 227, 228, 233, 235, 239, 254, 257, 259, 266], "save": [9, 12, 21, 26, 49, 54, 64, 71, 73, 74, 87, 100, 104, 115, 117, 120, 124, 125, 154, 177, 181, 186, 193, 205, 210, 212, 214, 219, 221, 226, 228, 232, 239, 258, 266], "ram": [9, 12, 20, 23, 26, 45, 49, 60, 66, 74, 93, 110, 111, 112, 113, 117, 124, 125, 127, 134, 173, 186, 191, 197, 229, 230, 233, 234, 235, 236, 237, 238, 239, 253, 258], "ensur": [9, 52, 54, 63, 64, 91, 110, 111, 112, 113, 120, 124, 128, 186, 188, 217, 228, 232, 240, 252], "effici": [9, 12, 55, 58, 67, 71, 79, 86, 93, 150, 155, 156, 171, 228, 230, 240, 252], "temporari": [9, 124, 191, 209, 235, 264], "lead": [9, 23, 26, 33, 62, 64, 65, 71, 74, 82, 122, 161, 162, 175, 202, 229, 232, 233, 235, 240, 241, 262], "signific": [9, 19, 74, 86, 142, 162, 219, 228, 232, 236, 237, 240], "amount": [9, 26, 42, 54, 60, 66, 71, 74, 93, 116, 117, 119, 124, 145, 153, 156, 181, 186, 200, 228, 230, 232, 236, 237, 240, 252], "overhead": [9, 45, 64, 87, 234, 240], "rom": [9, 12, 21, 27, 38, 175, 176, 178, 233, 237, 242, 250, 255, 256], "reduc": [9, 16, 23, 33, 40, 44, 45, 47, 64, 74, 82, 100, 124, 130, 131, 134, 151, 154, 186, 191, 207, 228, 230, 232, 234, 240, 255, 258], "manifest": [9, 49, 188, 231, 237], "separ": [9, 26, 28, 30, 51, 53, 55, 58, 72, 86, 117, 156, 162, 166, 230, 244, 257], "hand": [9, 20, 21, 26, 33, 93, 131, 150, 173, 181, 186, 208, 253, 263], "lookup": [9, 110, 111, 112, 113, 117, 120, 127, 162, 228, 240], "length": [9, 10, 12, 14, 15, 25, 26, 41, 49, 52, 54, 58, 62, 63, 64, 65, 73, 74, 78, 79, 80, 86, 90, 96, 117, 122, 128, 130, 133, 136, 146, 156, 162, 168, 200, 219, 236, 258], "much": [9, 19, 26, 29, 33, 60, 63, 71, 87, 88, 89, 90, 110, 111, 112, 113, 117, 120, 122, 123, 124, 125, 127, 129, 145, 146, 148, 150, 156, 176, 186, 187, 200, 202, 203, 229, 230, 237, 239, 262], "shorter": [9, 12, 54, 60, 235], "less": [9, 14, 15, 21, 26, 33, 58, 60, 62, 64, 66, 71, 73, 78, 102, 110, 111, 112, 113, 117, 120, 122, 127, 130, 133, 134, 149, 156, 160, 166, 176, 186, 210, 221, 230, 239], "underscor": [9, 16, 49, 93, 228], "treat": [9, 31, 117, 134, 150, 154, 156, 161, 177, 215], "proper": [9, 10, 42, 131, 157, 166, 213, 256, 272], "henc": [9, 24, 85, 217, 222, 227, 228, 232, 258], "_y": 9, "foo": [9, 12, 44, 45, 58, 219, 228, 229, 232, 233, 236, 237, 238, 239, 240], "construct": [9, 21, 27, 28, 30, 39, 65, 73, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 95, 128, 133, 134, 137, 138, 142, 145, 146, 175, 178, 219, 229, 230, 232, 250, 255, 258, 268], "assign": [9, 14, 18, 21, 35, 46, 49, 64, 65, 85, 86, 89, 117, 133, 140, 162, 166, 178, 198, 212, 219, 228, 232, 248, 250], "centric": 9, "microcontrol": [10, 21, 49, 74, 119, 122, 124, 125, 158, 173, 175, 177, 183, 187, 191, 193, 194, 197, 198, 212, 230, 231, 234, 240, 241, 242, 249, 250, 253, 255], "famili": [10, 16, 49, 73, 117, 156, 173, 176, 241, 249, 253], "subdirectori": [10, 13, 128, 233, 268, 273], "piec": [10, 128, 214, 235, 258, 263], "kit": [10, 23], "simplifi": [10, 71, 85, 160, 161, 232], "stm32f4xx": [10, 162], "mcu": [10, 21, 49, 70, 74, 77, 79, 88, 89, 130, 131, 133, 136, 162, 166, 175, 176, 188, 230, 240, 241, 242, 245, 248, 253, 254, 255, 259], "boot": [10, 21, 27, 31, 33, 35, 40, 42, 49, 62, 63, 64, 93, 130, 168, 169, 181, 186, 188, 190, 209, 210, 214, 229, 235, 238, 243, 244, 245, 247, 261, 262, 263, 272, 273], "initi": [10, 14, 16, 18, 21, 25, 38, 42, 51, 54, 58, 59, 63, 66, 71, 73, 80, 82, 83, 84, 89, 101, 102, 106, 107, 108, 110, 111, 112, 113, 116, 117, 124, 126, 127, 134, 145, 151, 153, 154, 157, 160, 166, 168, 175, 189, 220, 223, 228, 232, 236, 239, 245, 246, 256, 258, 259, 265, 271, 273], "debug": [10, 14, 18, 21, 27, 49, 62, 99, 121, 130, 140, 150, 167, 174, 176, 182, 188, 193, 228, 230, 232, 240, 257, 258], "gpio": [10, 20, 23, 24, 26, 28, 32, 33, 36, 49, 63, 77, 82, 85, 87, 90, 106, 110, 111, 112, 135, 140, 145, 151, 158, 161, 173, 174, 176, 182, 183, 230, 240, 249, 253, 254, 256, 258, 269], "uart": [10, 20, 23, 24, 26, 33, 42, 49, 54, 62, 73, 74, 117, 130, 132, 167, 173, 176, 182, 183, 201, 203, 228, 230, 232, 237, 240, 241, 244, 249, 252, 253, 256, 263, 266, 267, 272], "integr": [10, 33, 49, 92, 158, 175, 186, 232, 235, 240, 242, 258], "interpret": [10, 14, 15, 18, 45, 49, 72, 74, 117, 122, 157, 198, 200, 205, 219, 228, 230, 231, 232, 233, 235, 238, 240], "walkthrough": 10, "mkdir": [10, 31, 49, 61, 128, 235, 238], "example_port": 10, "mperrno": 10, "stackctrl": 10, "gchelper": 10, "pyexec": 10, "4096": [10, 62, 63, 229, 268, 273], "int": [10, 14, 15, 16, 18, 41, 46, 47, 49, 51, 56, 82, 98, 109, 117, 120, 121, 124, 125, 134, 159, 160, 179, 197, 214, 218, 219, 228, 236, 240], "argc": 10, "argv": [10, 49, 160, 257], "mp_stack_ctrl_init": 10, "gc_init": 10, "sizeof": [10, 49, 162], "mp_init": 10, "repl": [10, 18, 21, 23, 24, 26, 27, 32, 33, 49, 64, 70, 74, 93, 128, 130, 160, 175, 176, 193, 195, 198, 201, 203, 211, 214, 228, 230, 231, 235, 237, 238, 242, 244, 247, 250, 255, 256, 257, 261, 264, 266, 269], "enter": [10, 21, 33, 39, 40, 42, 45, 54, 62, 63, 64, 70, 74, 78, 133, 198, 208, 209, 210, 211, 214, 221, 228, 235, 239, 245, 248, 257, 258, 263, 264, 266, 272], "blank": [10, 42, 117, 186, 208, 239, 263, 272], "pyexec_friendly_repl": 10, "deinitialis": [10, 41, 88, 89, 145], "gc_sweep_al": 10, "mp_deinit": 10, "uncaught": [10, 239], "never": [10, 71, 89, 93, 113, 124, 128, 131, 186, 235, 258], "reach": [10, 55, 64, 65, 71, 73, 89, 134, 145, 151, 193, 200, 211, 250], "nlr_jump_fail": 10, "val": [10, 21, 34, 45, 47, 51, 55, 75, 76, 77, 95, 116, 118, 131, 197], "cycl": [10, 19, 21, 25, 27, 33, 34, 41, 54, 63, 81, 89, 103, 107, 130, 145, 151, 175, 178, 193, 200, 205, 209, 213, 214, 233, 240, 250, 252, 254, 255, 259, 264, 265], "gc_collect": 10, "gc_collect_start": 10, "gc_helper_collect_regs_and_stack": 10, "gc_collect_end": 10, "stat": [10, 49, 64, 128, 163], "ing": 10, "mp_import_stat_t": 10, "mp_import_stat": 10, "mp_import_stat_no_exist": 10, "mp_lexer_t": 10, "mp_lexer_new_from_fil": 10, "mp_raise_oserror": 10, "mp_enoent": 10, "mkenv": 10, "cflag": 10, "lm": 10, "src_c": 10, "mphalport": 10, "readlin": [10, 36, 49, 52, 90, 146, 148, 156], "gchelper_gener": 10, "stdout_help": 10, "containung": 10, "src_qstr": [10, 12], "obj": [10, 11, 44, 56, 72, 155, 162], "py_core_o": 10, "addprefix": 10, "elf": [10, 162], "echo": [10, 42, 64, 239], "cc": [10, 221, 258], "ldflag": 10, "mkrule": 10, "rememb": [10, 34, 41, 42, 58, 63, 64, 113, 177, 186, 193, 212], "tab": [10, 21, 27, 175, 186, 239, 242, 250, 255, 258], "indent": [10, 49, 205], "stdint": 10, "micropy_enable_gc": 10, "micropy_helper_repl": 10, "micropy_error_report": 10, "micropy_error_reporting_ters": 10, "micropy_float_impl": 10, "micropy_float_impl_float": 10, "fine": [10, 11, 23, 33, 131, 161, 187], "micropy_py_async_await": 10, "micropy_py_builtins_set": 10, "micropy_py_attrtupl": 10, "micropy_py_collect": 10, "micropy_py_math": 10, "micropy_py_io": 10, "micropy_py_struct": 10, "intptr_t": 10, "uintptr_t": 10, "mp_uint_t": 10, "long": [10, 16, 18, 25, 26, 41, 44, 49, 64, 74, 101, 115, 117, 120, 122, 124, 131, 159, 160, 161, 192, 202, 211, 212, 228, 232, 236, 239, 240, 252, 262], "mp_off_t": 10, "alloca": 10, "micropy_hw_board_nam": 10, "micropy_hw_mcu_nam": 10, "unknown": [10, 117, 119, 128], "mp_state_port": 10, "mp_state_vm": 10, "root": [10, 18, 57, 92, 128, 130, 210, 229, 236], "mp_hal_set_interrupt_char": 10, "charact": [10, 12, 16, 17, 27, 42, 53, 64, 65, 73, 90, 93, 96, 117, 146, 148, 150, 156, 159, 186, 192, 203, 208, 210, 228, 235, 239, 263], "unistd": 10, "receiv": [10, 14, 15, 18, 20, 26, 52, 54, 62, 63, 78, 79, 80, 86, 90, 98, 109, 113, 114, 117, 119, 122, 124, 133, 137, 142, 145, 146, 147, 148, 154, 156, 157, 158, 163, 175, 178, 183, 185, 192, 195, 203, 219, 230, 232, 239, 252, 259, 265], "mp_hal_stdin_rx_chr": 10, "unsign": [10, 81, 134, 159, 162, 215, 216, 219, 221, 236, 239, 240, 255], "stdin_fileno": 10, "send": [10, 15, 21, 26, 36, 49, 54, 63, 78, 90, 96, 98, 109, 110, 112, 122, 130, 133, 137, 138, 142, 146, 147, 148, 156, 157, 158, 164, 166, 175, 178, 186, 192, 195, 197, 230, 239, 252, 259], "mp_hal_stdout_tx_strn": 10, "str": [10, 15, 17, 36, 46, 49, 51, 54, 55, 56, 63, 64, 72, 82, 138, 219, 227, 228, 230, 240], "len": [10, 11, 29, 48, 49, 51, 54, 56, 58, 64, 86, 90, 110, 117, 125, 134, 136, 146, 148, 156, 181, 184, 197, 219, 229, 254], "stdout_fileno": 10, "At": [10, 11, 12, 54, 78, 79, 80, 86, 90, 125, 133, 137, 142, 145, 146, 148, 175, 204, 210, 214, 228, 229, 239, 253, 255], "termin": [10, 21, 26, 27, 42, 49, 117, 122, 160, 182, 203, 205, 208, 210, 219, 232, 235, 239, 244, 253, 263, 272], "stty": 10, "opost": 10, "That": [10, 26, 37, 71, 90, 117, 124, 125, 161, 166, 175, 177, 185, 186, 188, 191, 214, 228], "2021": [10, 14], "01": [10, 44, 161, 200], "sy": [10, 14, 15, 16, 17, 18, 19, 27, 45, 46, 49, 70, 158, 236, 237, 257, 258, 264], "reset": [10, 15, 21, 24, 26, 27, 33, 40, 42, 43, 49, 52, 62, 63, 64, 73, 78, 79, 83, 91, 110, 111, 112, 113, 115, 116, 120, 124, 127, 133, 141, 145, 155, 158, 161, 175, 176, 177, 178, 181, 186, 189, 193, 201, 202, 205, 212, 213, 214, 229, 232, 242, 243, 244, 245, 249, 250, 255, 256, 258, 259, 261, 262, 266, 272], "myport": 10, "modmyport": 10, "myport_info": 10, "mp_printf": 10, "mp_plat_print": 10, "my": [10, 96, 100, 117, 187, 233], "n": [10, 11, 18, 19, 21, 29, 33, 34, 36, 46, 49, 52, 65, 73, 95, 96, 97, 113, 116, 117, 124, 128, 138, 146, 149, 150, 174, 175, 178, 192, 204, 205, 214, 215, 216, 217, 218, 219, 221, 222, 225, 227, 228, 239, 240, 245, 254, 255, 257], "mp_const_non": 10, "myport_info_obj": 10, "myport_module_globals_t": 10, "mp_obj_new_qstr": 10, "mp_qstr_myport": 10, "myport_module_glob": 10, "myport_modul": 10, "went": 10, "compris": [11, 232, 240], "mp_obj_new_list": 11, "mp_obj_list_append": 11, "self_in": 11, "mp_obj_list_remov": 11, "mp_obj_list_get": 11, "too": [11, 17, 23, 26, 33, 44, 49, 63, 64, 110, 111, 112, 117, 122, 124, 125, 161, 162, 181, 183, 186, 191, 232, 240, 258], "duplic": [12, 49, 67, 162, 171, 195, 230, 263, 266], "primarili": [12, 79, 86, 186], "fast": [12, 18, 19, 60, 77, 79, 82, 86, 117, 122, 186, 187, 189, 232, 240, 242, 255], "comparison": [12, 13, 15, 49, 54, 160, 220, 221, 228], "de": [12, 60, 64, 134, 158, 181, 186, 230], "mp_qstr_foo": 12, "evalu": [12, 16, 17, 42, 117, 131, 208, 228, 235, 240, 263, 272], "multi": [12, 14, 87, 117, 162], "summari": [12, 16, 49, 70, 228], "replac": [12, 15, 19, 33, 49, 54, 64, 70, 117, 150, 181, 186, 210, 219, 230, 232, 235, 273], "referenc": [12, 160, 228, 230, 236, 240], "qstr_global_depend": 12, "frozen_mpi": 12, "alphanumer": 12, "qstrdef": 12, "qstrdefsport": [12, 228], "qstr_def": 12, "concaten": [12, 46, 49, 51, 109, 129, 228], "processor": [12, 21, 62, 100, 101, 117, 132, 151, 173, 183, 191, 221, 232, 241, 252], "condition": [12, 216], "remov": [12, 14, 15, 16, 19, 31, 49, 58, 70, 78, 82, 85, 114, 117, 124, 128, 136, 144, 153, 176, 181, 186, 210, 228, 234, 235, 238, 246, 247, 273], "don": [12, 26, 42, 44, 46, 47, 49, 55, 64, 71, 73, 79, 86, 88, 89, 98, 117, 128, 131, 140, 145, 155, 156, 161, 177, 181, 188, 189, 190, 191, 192, 193, 205, 208, 209, 211, 235, 237, 264], "won": [12, 16, 21, 33, 71, 88, 89, 117, 155, 181, 186, 191, 193, 239, 258], "thank": [12, 187, 188, 191], "no_qstr": 12, "qstr_gen_cflag": 12, "unaffect": [12, 223, 232, 264], "makeqstrdef": 12, "indic": [12, 13, 16, 18, 42, 49, 51, 54, 60, 73, 78, 87, 93, 98, 113, 127, 133, 142, 145, 151, 154, 156, 157, 160, 170, 184, 208, 216, 219, 221, 232, 236, 239, 257, 263, 272], "ran": 12, "per": [12, 15, 21, 26, 30, 45, 54, 55, 63, 73, 90, 102, 115, 116, 117, 118, 122, 124, 125, 145, 146, 155, 161, 166, 169, 200, 211, 213, 230, 236, 245, 248, 265], "genhdr": 12, "necessari": [12, 63, 64, 85, 106, 107, 117, 128, 156, 168, 219, 228, 232, 240, 272], "combin": [12, 54, 71, 79, 84, 125, 151, 155, 156, 158, 229, 235, 254, 255, 263], "increment": [12, 73, 117, 232, 239], "updat": [12, 15, 17, 18, 19, 49, 54, 63, 64, 68, 73, 94, 95, 98, 112, 115, 117, 120, 124, 127, 128, 138, 145, 155, 177, 181, 185, 186, 189, 190, 208, 221, 232, 233, 234, 235, 255, 258], "cat": [12, 117, 235, 238], "enumer": [12, 25, 49, 56, 100, 117], "transform": [12, 117], "unchang": [12, 82, 157], "undon": 12, "preprocess": [12, 117, 131], "makeqstrdata": 12, "plu": [12, 25, 41, 64, 125, 136, 178, 188, 218, 221, 258], "hard": [12, 26, 27, 39, 40, 63, 74, 82, 124, 130, 148, 153, 154, 158, 161, 177, 191, 193, 208, 212, 232, 235, 242, 246, 258, 263, 264], "ones": [12, 14, 21, 54, 63, 191, 233, 259], "qdef": 12, "equal": [12, 14, 15, 52, 62, 63, 64, 65, 73, 74, 89, 113, 115, 117, 120, 122, 124, 125, 149, 151, 167, 212, 216, 221, 268], "mp_qstr_const_pool": 12, "Will": [12, 52, 128], "attr": 12, "regular": [12, 14, 15, 16, 18, 44, 47, 49, 70, 74, 128, 184, 186, 235, 239], "alwai": [12, 14, 15, 16, 19, 20, 21, 26, 27, 42, 45, 60, 63, 64, 67, 69, 70, 76, 78, 82, 93, 96, 101, 117, 122, 124, 128, 130, 133, 142, 150, 156, 161, 162, 173, 174, 175, 178, 181, 193, 198, 218, 229, 230, 232, 255, 258, 266], "minimum": [12, 14, 16, 21, 25, 33, 41, 54, 55, 63, 74, 75, 113, 117, 125, 128, 134, 143, 154, 160, 188, 197, 200, 211, 214, 228, 236, 250, 259], "wherea": [12, 65, 156, 219, 228, 235], "pack": [12, 49, 70, 117, 122, 162, 192, 244], "underli": [12, 15, 49, 55, 60, 64, 67, 70, 71, 74, 75, 79, 81, 86, 87, 91, 117, 128, 130, 145, 157, 160, 161, 230, 232], "chunk": [12, 42, 73, 156, 197, 258], "demand": [12, 14, 21, 27, 63, 228], "kei": [13, 14, 15, 16, 18, 20, 21, 26, 27, 35, 42, 43, 49, 52, 54, 55, 58, 59, 63, 64, 65, 96, 98, 100, 101, 140, 157, 162, 228, 235, 239, 248, 249, 254, 258, 263, 272], "runner": 13, "subfold": 13, "categor": 13, "def": [13, 15, 21, 27, 29, 34, 35, 36, 39, 41, 42, 44, 45, 48, 52, 54, 64, 70, 78, 88, 94, 122, 133, 135, 140, 145, 197, 198, 199, 206, 212, 214, 219, 228, 229, 232, 239, 240, 250, 252, 254, 255, 258, 259, 265], "print_on": 13, "skip": [13, 22, 23, 32, 42, 87, 117, 124, 193, 209, 258, 264], "extra_coverag": 13, "ffi_callback": 13, "ffi_float": 13, "ffi_float2": 13, "time2": 13, "compar": [13, 25, 33, 41, 46, 47, 49, 65, 73, 117, 145, 160, 218, 221, 230], "exp": [13, 49, 57, 92], "truth": 13, "And": [13, 23, 31, 33, 42, 54, 116, 122, 176, 180, 183, 187, 190, 191, 192, 208, 212, 256, 258, 263], "octob": [14, 18, 19], "pep": [14, 15, 16, 17, 18, 19], "619": 14, "statu": [14, 15, 16, 17, 18, 19, 21, 46, 49, 54, 64, 73, 87, 96, 97, 100, 128, 151, 158, 182, 204, 212, 214, 221, 224, 266], "634": 14, "pattern": [14, 15, 73, 93, 117, 124, 131, 150, 161, 252], "635": 14, "motiv": 14, "rational": [14, 161], "636": 14, "bpo": 14, "12782": 14, "parenthes": [14, 18], "offici": [14, 67, 193, 194, 241], "618": 14, "zip": [14, 15, 49, 56, 125, 176, 258], "improv": [14, 15, 16, 42, 49, 55, 60, 73, 117, 124, 191, 228, 230, 234, 257], "626": 14, "604": 14, "union": [14, 19], "y": [14, 19, 43, 45, 49, 65, 73, 92, 110, 111, 112, 113, 114, 116, 117, 118, 120, 124, 125, 127, 130, 132, 137, 138, 151, 154, 162, 170, 186, 195, 196, 203, 204, 214, 216, 234, 235, 237, 268], "613": 14, "alias": [14, 71, 117, 145, 235], "612": 14, "deprec": [14, 15, 74, 100, 130, 136, 156, 178], "restrict": [14, 18, 19, 26, 44, 49, 64, 65, 79, 86, 93, 100, 145, 172, 232, 233, 240], "644": 14, "openssl": [14, 16], "newer": [14, 15, 16, 23, 29, 30, 33], "632": 14, "distutil": 14, "Not": [14, 15, 19, 27, 39, 44, 45, 68, 81, 82, 117, 156, 161, 175, 178, 221], "623": 14, "wstr": 14, "member": [14, 205, 259], "pyunicodeobject": 14, "624": [14, 213], "py_unicod": 14, "encod": [14, 16, 19, 44, 49, 53, 54, 65, 70, 73, 74, 117, 145, 151, 154, 156, 157, 159, 162, 164, 221, 228, 242], "597": 14, "encodingwarn": 14, "bit_count": [14, 151], "expans": [14, 166, 239, 259, 263], "popul": [14, 31, 78, 117, 133, 219, 236], "count": [14, 16, 46, 49, 51, 64, 90, 116, 117, 120, 124, 128, 130, 141, 145, 146, 150, 151, 159, 160, 162, 163, 180, 193, 213, 223, 229, 232, 236, 265], "attribut": [14, 15, 16, 17, 19, 21, 27, 46, 49, 56, 58, 124, 128, 157, 160, 250], "mappingproxytyp": 14, "wrap": [14, 18, 44, 52, 60, 64, 67, 73, 78, 87, 122, 130, 133, 134, 151, 157, 161, 213, 252, 258], "strict": 14, "iter": [14, 15, 16, 18, 47, 48, 49, 51, 55, 56, 58, 63, 64, 122, 128, 155, 197, 233, 235, 240], "extens": [14, 15, 19, 26, 52, 66, 70, 71, 87, 155, 157, 160, 186, 228, 230, 234, 258], "longer": [14, 15, 18, 19, 35, 52, 55, 63, 68, 78, 90, 117, 121, 133, 161, 200, 217, 239, 240], "accept": [14, 15, 16, 18, 33, 36, 42, 49, 52, 54, 55, 73, 78, 89, 90, 96, 98, 117, 123, 125, 133, 135, 156, 157, 161, 165, 166, 211, 226, 228, 232, 235, 255, 270], "decim": [14, 18, 30, 102], "fraction": [14, 15, 18, 81, 92, 161, 170], "loss": [14, 64, 124, 162, 232], "__int__": [14, 18], "__index__": [14, 18], "__ipow__": 14, "notimpl": 14, "fall": [14, 39, 82, 117, 125, 135, 145, 161, 212, 228, 258], "__pow__": 14, "__rpow__": 14, "expect": [14, 54, 64, 74, 81, 122, 161, 218, 232, 254], "unparenthes": [14, 19], "slice": [14, 49, 51, 56, 240, 250], "__builtins__": 14, "__globals__": [14, 45], "aiter": 14, "anext": 14, "asynchron": [14, 16, 49, 64, 70, 71, 155, 183, 212, 230], "counterpart": 14, "staticmethod": [14, 49, 56, 219], "classmethod": [14, 49, 56, 59, 63, 135, 140], "inherit": [14, 18, 46, 49, 64, 70], "__module__": [14, 16, 46, 49], "__name__": [14, 45, 239], "__qualname__": 14, "__doc__": 14, "__annotations__": 14, "__wrapped__": 14, "moreov": 14, "callabl": [14, 49, 56, 82, 88, 160], "complex": [14, 16, 18, 30, 45, 49, 56, 70, 87, 162, 187, 191, 228, 230], "besid": [14, 26, 27, 55, 101, 258], "526": [14, 16, 64], "caus": [14, 21, 26, 27, 33, 40, 44, 45, 47, 48, 64, 65, 74, 85, 93, 113, 117, 145, 146, 175, 180, 192, 217, 219, 221, 232, 240, 258, 266], "effect": [14, 21, 26, 29, 41, 42, 45, 64, 66, 68, 73, 77, 102, 117, 124, 140, 151, 158, 162, 186, 189, 198, 212, 220, 230, 257, 258], "__future__": 14, "lazi": 14, "__dict__": [14, 51], "backward": [14, 30, 130, 229], "compat": [14, 21, 26, 30, 33, 44, 47, 48, 49, 54, 56, 58, 70, 123, 128, 130, 155, 156, 160, 161, 229, 230], "practic": [14, 49, 231], "await": [14, 15, 17, 52, 64, 80, 232], "forbidden": 14, "under": [14, 30, 52, 54, 65, 70, 93, 114, 118, 122, 123, 125, 126, 128, 176, 181, 186, 189, 228], "side": [14, 16, 49, 55, 58, 71, 73, 74, 117, 122, 150, 151, 154, 156, 157, 158, 175, 181, 235, 252, 258], "unbound": 14, "super": [14, 16, 44, 46, 49, 56, 186], "might": [14, 23, 33, 42, 54, 82, 83, 85, 117, 122, 124, 128, 145, 181, 186, 187, 191, 193, 202, 205, 213, 228, 229, 232, 233, 235, 237, 258, 262], "alter": [14, 232], "render": [14, 65, 110, 111, 112, 113, 117, 120, 127], "effectless": 14, "nan": [14, 15, 16], "ident": [14, 30, 54, 154, 175, 215, 218, 223, 230, 231, 255], "formerli": [14, 19], "though": [14, 18, 30, 124, 156, 161, 162], "potenti": [14, 15, 80, 122, 228, 232], "quadrat": 14, "behavior": [14, 18, 177, 186, 235], "excess": [14, 66, 131, 166], "syntaxerror": [14, 46, 49, 56], "nameerror": [14, 49, 56], "delet": [14, 42, 49, 56, 74, 164, 209, 210, 264], "__debug__": [14, 93], "end_lineno": 14, "end_offset": 14, "determin": [14, 63, 65, 79, 86, 91, 117, 123, 125, 133, 137, 140, 145, 157, 161, 171, 186, 188, 200, 205, 219, 221, 224, 232, 233, 236, 239, 240], "asyncio": [14, 17, 18, 19, 49, 70, 80], "miss": [14, 18, 64, 70, 186], "connect_accepted_socket": 14, "stop": [14, 42, 49, 52, 54, 63, 74, 78, 79, 88, 89, 90, 91, 98, 102, 117, 124, 130, 133, 141, 145, 146, 149, 150, 161, 186, 195, 205, 211, 212, 214, 235, 238, 242, 244, 245, 248, 250, 258], "audit": [14, 18], "hook": [14, 15, 18, 26, 258], "get_object": [14, 18], "get_referr": 14, "get_refer": 14, "hashlib": [14, 16, 49, 70], "preliminari": 14, "pure": [14, 71, 113, 114, 117, 122, 126, 174, 230], "fallback": [14, 239], "pbkdf2_hmac": 14, "futur": [14, 18, 26, 52, 63, 70, 83, 117, 136, 156, 180], "pbkdf2": 14, "hmac": [14, 233], "cpu_count": 14, "vxwork": 14, "eventfd": 14, "eventfd2": 14, "syscal": [14, 15, 16], "splice": 14, "descriptor": [14, 15, 19, 49, 54, 130], "kernel": [14, 16, 117, 186], "space": [14, 17, 45, 46, 47, 49, 54, 58, 62, 90, 113, 117, 124, 125, 153, 154, 158, 162, 181, 186, 191, 192, 228, 230, 235, 239, 253, 258], "pipe": 14, "o_evtonli": 14, "o_fsync": 14, "o_symlink": 14, "o_nofollow_ani": 14, "freedesktop_os_releas": 14, "retriev": [14, 36, 55, 63, 96, 97, 100, 129, 258, 266], "identif": 14, "freedesktop": 14, "socket": [14, 15, 16, 19, 21, 27, 32, 49, 52, 54, 60, 67, 70, 71, 84, 96, 97, 98, 99, 100, 101, 157, 162, 171, 208], "timeout": [14, 15, 19, 21, 52, 54, 63, 64, 73, 74, 78, 79, 89, 90, 91, 98, 101, 109, 113, 119, 122, 124, 133, 137, 141, 142, 146, 147, 148, 155, 156, 161, 163, 206, 250, 258, 259, 265, 266], "alia": [14, 27, 52, 117, 120, 156, 162, 235], "timeouterror": [14, 52, 161], "mptcp": 14, "ipproto_mptcp": 14, "ip_recvto": 14, "ToS": 14, "dscp": 14, "ecn": 14, "ssl": [14, 15, 16, 19, 49, 52, 70], "op_ignore_unexpected_eof": 14, "deprecationwarn": [14, 17], "sslcontext": [14, 16, 49, 52], "op_no_sslv2": 14, "op_no_sslv3": 14, "warn": [14, 70, 78, 133, 208, 259], "secur": [14, 16, 19, 42, 54, 64, 68, 96, 98, 100, 101, 157, 235, 266], "cipher": [14, 15, 16, 49, 70, 157], "forward": [14, 64, 130, 186, 187, 188], "secreci": 14, "sha": [14, 16], "mac": [14, 21, 27, 33, 42, 49, 54, 64, 74, 96, 97, 98, 100, 101, 181, 182, 186, 210, 259, 272], "prohibit": [14, 19, 71], "weak": [14, 82], "rsa": [14, 26], "dh": [14, 26], "ecc": [14, 26], "112": [14, 113], "protocol": [14, 15, 16, 18, 26, 30, 35, 36, 49, 54, 55, 63, 65, 74, 78, 85, 87, 90, 100, 128, 130, 133, 136, 146, 152, 156, 157, 161, 162, 168, 169, 175, 229, 230, 235, 239, 240, 252, 273], "tl": [14, 16, 49, 70], "hynek": 14, "schlawack": 14, "research": 14, "distro": 14, "vendor": [14, 20, 21, 26, 27, 33, 130, 173, 176, 253], "patch": [14, 49, 98, 117, 121, 164], "prevent": [14, 54, 63, 66, 70, 90, 91, 93, 117, 124, 131, 151, 181, 186, 188, 193, 235, 240], "success": [14, 54, 63, 64, 65, 73, 94, 100, 122, 128, 155, 170, 205, 232], "handshak": [14, 15, 16, 20, 26, 157, 173], "get_server_certif": 14, "verifi": [14, 23, 33, 91, 109, 181, 258], "verify_x509_partial_chain": 14, "orig_argv": 14, "stdlib_module_nam": 14, "_thread": [14, 49, 70], "interrupt_main": 14, "signal": [14, 18, 21, 27, 41, 42, 49, 63, 71, 74, 78, 80, 82, 85, 86, 89, 90, 96, 98, 130, 133, 134, 142, 143, 145, 146, 158, 166, 173, 174, 175, 178, 191, 196, 211, 230, 240, 244, 247, 250, 254, 255, 258, 265], "simul": [14, 232], "sigint": [14, 18], "7847": 14, "group": [15, 16, 21, 49, 64, 150, 175, 178, 208, 230, 240, 255, 263, 272], "impact": [15, 21, 232, 255], "448": [15, 25], "unpack": [15, 18, 46, 49, 70, 122], "partial": [15, 17, 181, 224, 232], "465": 15, "matrix": [15, 21, 117], "complet": [15, 16, 17, 18, 19, 21, 27, 31, 40, 46, 49, 52, 54, 63, 78, 113, 115, 120, 122, 133, 134, 145, 154, 156, 157, 175, 176, 181, 183, 186, 191, 210, 228, 232, 233, 236, 242, 245, 250, 255], "492": 15, "coroutin": [15, 18, 19, 52, 232], "async": [15, 17, 18, 19, 52, 64, 122, 232], "461": 15, "475": [15, 166], "retri": [15, 21, 23, 33, 64, 162], "eintr": 15, "479": 15, "stopiter": [15, 47, 49, 56], "471": 15, "scandir": [15, 16], "485": 15, "math": [15, 16, 17, 18, 19, 41, 49, 70, 134, 179, 197, 214, 258], "isclos": 15, "miscellan": [15, 18, 49, 220], "441": 15, "486": 15, "launcher": [15, 181], "awar": [15, 23, 33, 176, 256], "484": 15, "hint": [15, 19, 49, 110, 111, 112, 113, 117, 120, 127, 196, 200, 220, 240], "advisori": 15, "488": [15, 117, 141], "pyo": 15, "489": 15, "redesign": 15, "namereplac": 15, "error": [15, 16, 19, 23, 26, 33, 42, 46, 49, 64, 65, 70, 71, 78, 92, 117, 122, 130, 133, 137, 145, 151, 153, 154, 155, 156, 160, 181, 186, 205, 211, 212, 221, 228, 232, 235, 239, 240, 258, 272], "handler": [15, 27, 39, 49, 52, 54, 74, 80, 82, 83, 88, 89, 93, 101, 122, 145, 148, 153, 154, 158, 161, 212, 231, 242, 252, 258, 259, 265], "backslashreplac": 15, "decod": [15, 19, 49, 53, 70, 117, 123, 228, 255], "translat": [15, 117, 156, 166], "especi": [15, 64, 134, 175, 178, 240, 248, 255], "namedtupl": [15, 16, 49, 58], "circular": [15, 17, 49, 117, 134, 197, 232], "zipzap": 15, "ordereddict": [15, 49, 58], "100": [15, 25, 33, 36, 54, 63, 64, 65, 88, 89, 93, 98, 103, 104, 106, 107, 110, 111, 112, 115, 116, 117, 120, 124, 131, 133, 134, 143, 145, 161, 166, 175, 181, 196, 197, 200, 204, 211, 214, 216, 228, 232, 240], "faster": [15, 21, 27, 73, 74, 117, 122, 124, 161, 175, 186, 187, 191, 211, 228, 230, 232, 237, 255, 258], "revers": [15, 16, 18, 49, 56, 112, 117, 118, 122, 124, 125, 151, 200, 216, 223], "dequ": [15, 16, 46, 49, 58], "userstr": 15, "__getnewargs__": 15, "__rmod__": 15, "casefold": 15, "format_map": 15, "isprint": 15, "maketran": 15, "heapq": [15, 49, 70], "merg": [15, 117, 172], "bufferediobas": 15, "readinto1": 15, "rawiobas": 15, "readinto": [15, 21, 27, 49, 52, 60, 67, 79, 80, 86, 90, 128, 146, 148, 156, 175, 178, 195, 228, 230, 240, 250, 255, 268], "json": [15, 16, 46, 49, 60, 67, 70, 122, 164, 228, 237], "jsondecodeerror": 15, "valueerror": [15, 19, 21, 44, 49, 56, 64, 72, 81, 96, 149, 153, 236], "better": [15, 16, 17, 54, 87, 117, 161, 175, 178, 200, 228, 229, 240, 255], "inf": [15, 16, 208, 209, 210], "gcd": [15, 19], "direntri": 15, "urandom": [15, 16, 49, 128], "getrandom": [15, 16], "getentropi": 15, "openbsd": 15, "6": [15, 21, 24, 25, 27, 44, 46, 48, 49, 53, 54, 59, 60, 63, 64, 65, 73, 85, 98, 101, 117, 118, 124, 128, 131, 133, 134, 135, 145, 161, 166, 174, 175, 178, 213, 222, 227, 228, 229, 236, 239, 240, 250, 252, 253, 254, 255, 258, 259, 263, 268, 271], "failur": [15, 26, 54, 63, 94, 128, 170, 181, 229, 232, 240], "exhaust": [15, 16, 45, 66, 113, 117, 122], "get_block": 15, "set_block": 15, "o_nonblock": 15, "commonpath": 15, "longest": [15, 117], "pathnam": [15, 123], "lookbehind": 15, "assert": [15, 58, 87, 93, 145, 146, 150, 158, 161, 162], "captur": [15, 49, 87, 89, 93, 117, 124, 145, 150, 162, 186, 235, 240], "subn": 15, "unmatch": [15, 150], "msg": [15, 64], "lineno": 15, "colno": 15, "monoton": 15, "clock": [15, 24, 29, 40, 49, 62, 63, 74, 79, 80, 85, 86, 90, 97, 110, 111, 112, 117, 120, 122, 130, 131, 133, 137, 142, 145, 146, 154, 161, 184, 189, 213, 235, 249], "sendfil": 15, "high": [15, 21, 23, 25, 27, 33, 39, 41, 49, 63, 64, 74, 79, 82, 85, 87, 90, 102, 117, 122, 124, 140, 145, 151, 158, 161, 173, 175, 178, 180, 195, 198, 199, 203, 211, 212, 232, 239, 240, 242, 250, 253, 255, 258, 268], "upload": [15, 21, 26, 27, 164, 176, 256, 258, 260], "plain": [15, 258], "sendal": [15, 49, 156], "sent": [15, 29, 54, 64, 65, 73, 78, 79, 90, 100, 112, 122, 123, 133, 148, 156, 166, 186, 197, 211, 239], "maximum": [15, 21, 25, 26, 27, 28, 41, 49, 54, 58, 60, 63, 64, 73, 74, 75, 77, 79, 91, 100, 101, 113, 117, 124, 125, 128, 134, 139, 143, 150, 151, 156, 160, 162, 191, 197, 200, 211, 222, 227, 232, 250], "total": [15, 20, 21, 26, 54, 62, 63, 66, 73, 110, 111, 112, 113, 117, 120, 127, 135, 154, 161, 173, 178, 191, 232, 250, 252, 253, 254, 258], "durat": [15, 33, 54, 63, 74, 81, 90, 96, 130, 146, 187, 232, 235, 240], "backlog": [15, 52, 156], "listen": [15, 21, 36, 49, 54, 64, 109, 119, 122, 156, 157, 212], "somaxconn": 15, "128": [15, 21, 25, 27, 34, 43, 47, 54, 78, 112, 113, 117, 124, 125, 133, 134, 142, 145, 173, 195, 197, 203, 204, 239, 255], "whichev": 15, "bio": 15, "layer": [15, 21, 71, 122, 157, 187, 191, 229], "negoti": [15, 54, 101], "sslsocket": [15, 16, 19, 157], "queri": [15, 54, 64, 66, 90, 96, 98, 100, 128, 140, 161, 235], "sslwantreaderror": 15, "sslwantwriteerror": 15, "previous": [15, 16, 19, 52, 54, 89, 117, 122, 124, 125, 127, 128, 140, 145, 157, 186, 258], "cert_time_to_second": 15, "utc": [15, 27, 44, 45, 47, 48, 161], "rfc": [15, 53], "5280": 15, "addition": [15, 30, 33, 54, 71, 117, 122, 124, 177, 186, 188, 234, 235], "sslobject": [15, 157], "shared_ciph": 15, "client": [15, 16, 21, 26, 27, 31, 36, 42, 49, 64, 70, 96, 98, 100, 101, 123, 157, 235, 258], "do_handshak": [15, 157], "shutdown": [15, 19, 49, 124, 128], "match_hostnam": 15, "ip": [15, 21, 27, 33, 35, 36, 42, 96, 97, 98, 99, 100, 101, 156, 175, 235, 238, 258, 259, 263], "set_coroutine_wrapp": 15, "get_coroutine_wrapp": 15, "is_fin": [15, 19], "shut": [15, 40, 62], "beta": [16, 63], "12": [16, 20, 21, 25, 27, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 54, 63, 64, 76, 77, 80, 85, 113, 117, 130, 131, 134, 145, 161, 166, 173, 174, 175, 178, 179, 195, 236, 242, 250, 253, 254, 255], "sep": [16, 53], "2016": 16, "498": 16, "515": 16, "525": 16, "provision": [16, 18, 156], "530": 16, "468": 16, "preserv": [16, 17, 58, 117, 120, 186, 219, 235], "kwarg": [16, 71, 229, 240], "487": [16, 141], "simpler": [16, 71], "520": 16, "495": [16, 127], "disambigu": 16, "506": 16, "secret": [16, 54], "519": 16, "509": 16, "523": 16, "frame": [16, 49, 70, 73, 78, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 124, 125, 133, 161, 175, 181, 182, 189, 191, 200], "524": 16, "startup": [16, 64, 124, 141, 186, 229, 235], "528": 16, "consol": [16, 36, 267, 272], "utf": [16, 17, 44, 236], "529": 16, "nonloc": 16, "syntaxwarn": [16, 18], "special": [16, 18, 23, 27, 31, 33, 34, 42, 46, 49, 71, 101, 150, 162, 183, 186, 198, 212, 224, 232, 240, 258], "__iter__": [16, 19, 49, 55], "repeat": [16, 62, 63, 83, 128, 130, 134, 214, 228, 239, 257, 259], "traceback": [16, 17, 44, 47, 93, 160, 239, 248], "abbrevi": 16, "modulenotfounderror": 16, "importerror": [16, 17, 19, 49, 56], "reli": [16, 44, 45, 48, 161], "metaclass": 16, "stai": [16, 122, 124, 210, 211, 258], "binascii": [16, 49, 68, 70, 100], "b2a_base64": [16, 49, 53], "newlin": [16, 53, 73, 90, 146, 148, 156], "append": [16, 25, 45, 49, 51, 54, 58, 70, 93, 164, 232, 237, 240, 254], "cmath": [16, 49, 70], "tau": 16, "\u03c4": 16, "infj": 16, "nanj": 16, "repr": [16, 49, 51, 56], "__reversed__": 16, "asyncgener": 16, "tupl": [16, 18, 29, 34, 45, 46, 49, 54, 56, 57, 58, 63, 64, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 92, 95, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 116, 117, 118, 120, 124, 125, 127, 128, 129, 130, 132, 133, 141, 143, 147, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 175, 196, 203, 212, 228, 230, 233, 235, 255, 258, 271], "verbos": [16, 71, 93, 257], "renam": [16, 49, 117, 128, 188], "recurs": [16, 162, 191, 219, 233, 235, 236], "pickl": [16, 18, 228], "blake2": 16, "were": [16, 20, 26, 31, 33, 37, 54, 58, 79, 117, 140, 146, 155, 166, 173, 181, 186, 187, 216, 228, 235, 239, 253, 254, 267], "blake2b": 16, "sha3_224": 16, "sha3_256": 16, "sha3_384": 16, "sha3_512": 16, "shake": 16, "shake_128": 16, "shake_256": 16, "password": [16, 21, 33, 36, 42, 96, 98, 100, 101, 123, 238, 258, 259, 266], "deriv": [16, 49, 94, 128, 142, 166, 232], "scrypt": 16, "On": [16, 21, 26, 41, 42, 54, 55, 62, 64, 70, 74, 81, 91, 92, 93, 95, 97, 109, 122, 124, 131, 136, 140, 151, 153, 160, 161, 175, 177, 181, 186, 191, 198, 210, 211, 228, 229, 232, 233, 237, 249, 250, 255, 258], "entropi": 16, "increas": [16, 21, 33, 54, 60, 64, 65, 73, 80, 82, 93, 117, 122, 124, 161, 181, 189, 191, 200, 239, 240, 257], "random": [16, 19, 46, 49, 54, 55, 70, 117, 123, 128, 130, 134, 191, 203, 232, 240], "span": [16, 49, 150, 229], "p": [16, 25, 36, 39, 42, 45, 82, 95, 150, 159, 172, 178, 180, 195, 229, 238, 252, 254, 255], "ython": 16, "gvr": 16, "__getitem__": [16, 49, 51, 55, 95], "mo": [16, 124], "ioctl": [16, 49, 63, 124, 128, 136, 152, 168, 169, 229], "sio_loopback_fast_path": 16, "getsockopt": 16, "so_domain": 16, "so_protocol": 16, "so_peersec": 16, "so_passsec": 16, "setsockopt": [16, 49, 156], "optnam": [16, 156], "optlen": 16, "af_alg": 16, "crypto": 16, "alg_": 16, "sol_alg": 16, "sendmsg_afalg": 16, "tcp_user_timeout": 16, "tcp_congest": 16, "3de": 16, "chacha20": 16, "poly1305": 16, "session": [16, 26, 123, 208, 235, 246, 258, 263, 266, 272], "sslsession": 16, "resumpt": 16, "latenc": [16, 64, 124, 232], "get_ciph": [16, 49, 157], "prioriti": [16, 82, 88, 89, 161, 167, 212, 224, 232, 242, 257, 258], "intenum": 16, "intflag": 16, "server": [16, 27, 49, 52, 64, 96, 98, 100, 123, 156, 157, 164, 175], "post_handshake_auth": 16, "verify_client_post_handshak": 16, "post": [16, 33, 49, 117, 151, 164, 252], "authent": [16, 21, 36, 54, 101, 157, 258], "ieee": [16, 17, 96], "754": [16, 17], "half": [16, 26, 29, 34, 42, 134, 189, 195, 198, 203, 210, 222, 227, 240], "getfilesystemencodeerror": 16, "unicod": [16, 45, 46, 49, 228], "zlib": [16, 49, 60, 70], "compress": [16, 49, 70, 117, 120, 121, 123, 124, 186], "decompress": [16, 49, 70, 120], "538": 17, "coerc": [17, 219], "legaci": [17, 21, 54, 68, 195], "539": 17, "thread": [17, 52, 94, 161, 167, 181, 186, 232, 257], "storag": [17, 21, 31, 49, 54, 55, 60, 64, 67, 85, 117, 124, 128, 130, 151, 167, 186, 191, 203, 209, 214, 228, 229, 230, 234, 237, 264, 268, 269], "540": 17, "552": 17, "determinist": 17, "pyc": 17, "553": 17, "breakpoint": 17, "557": 17, "560": 17, "562": 17, "__getattr__": 17, "__dir__": 17, "563": 17, "postpon": 17, "564": 17, "nanosecond": [17, 21, 74, 75, 81, 161, 175, 255], "resolut": [17, 21, 25, 30, 46, 49, 63, 76, 81, 105, 106, 110, 111, 113, 115, 117, 120, 124, 127, 131, 134, 161, 175, 178, 179, 186, 255], "565": 17, "__main__": [17, 19, 45], "567": 17, "255": [17, 21, 27, 29, 34, 35, 43, 44, 63, 73, 78, 81, 96, 97, 98, 99, 100, 101, 103, 110, 111, 112, 113, 117, 120, 124, 125, 127, 133, 141, 178, 179, 195, 196, 203, 205, 225, 250, 254, 259, 266], "fromhex": 17, "bytearrai": [17, 21, 27, 43, 46, 49, 54, 56, 60, 63, 64, 65, 78, 80, 86, 117, 122, 124, 130, 131, 133, 134, 137, 142, 147, 154, 162, 175, 178, 197, 219, 228, 229, 230, 232, 240, 250, 255, 259, 268], "ascii": [17, 45, 49, 70, 100, 117, 150, 228, 236], "whitespac": [17, 49, 72, 150, 159, 228], "gain": [17, 22, 32, 102, 113, 124, 166, 240, 258], "isascii": 17, "__file__": [17, 19], "__format__": 17, "trace": [17, 97, 130, 160, 232], "tracebacktyp": 17, "tb_next": 17, "eagerli": 17, "left": [17, 42, 58, 62, 64, 65, 73, 80, 83, 110, 111, 112, 113, 114, 117, 118, 124, 127, 130, 150, 153, 154, 166, 175, 181, 186, 196, 202, 203, 208, 214, 263], "occur": [17, 26, 33, 39, 44, 52, 64, 74, 88, 90, 93, 94, 101, 124, 130, 141, 145, 146, 148, 161, 186, 212, 224, 228, 232, 235, 240], "importtim": 17, "pythonprofileimporttim": 17, "freez": [17, 49, 182, 233], "unfreez": 17, "get_freeze_count": 17, "remaind": [17, 92, 146, 229], "style": [17, 18, 33, 160, 166, 168, 219, 235], "tidi": 17, "breakpointhook": 17, "_coroutine_origin_tracking_depth": 17, "pep564": 17, "time_n": [17, 49, 161, 175], "569": 18, "570": 18, "572": 18, "574": 18, "band": 18, "578": 18, "587": 18, "590": 18, "vectorcal": 18, "f": [18, 25, 26, 31, 46, 49, 51, 55, 60, 65, 67, 73, 116, 128, 144, 159, 162, 175, 179, 186, 197, 212, 219, 228, 229, 235, 237, 238, 240, 245, 268, 273], "continu": [18, 41, 54, 72, 74, 75, 80, 86, 119, 122, 124, 130, 134, 151, 160, 178, 193, 195, 199, 204, 205, 212, 213, 216, 217, 219, 232, 236, 238, 239, 252], "illeg": 18, "claus": [18, 19, 176], "problem": [18, 26, 85, 100, 125, 181, 187, 190, 200, 205, 208, 209, 219, 228, 232, 264], "lift": [18, 26, 93], "as_integer_ratio": 18, "constructor": [18, 21, 25, 27, 41, 49, 63, 71, 85, 93, 117, 128, 162, 174, 180, 192, 228, 232, 240, 258, 266], "__float__": [18, 44], "__complex__": 18, "escap": [18, 42, 46, 49, 150, 209, 235], "dictview": 18, "enclos": [18, 117], "comma": [18, 51], "30": [18, 21, 48, 54, 64, 73, 105, 117, 124, 130, 143, 145, 159, 166, 175, 178, 186, 196, 211, 219, 232, 239, 240, 249, 250, 252, 254, 265], "40": [18, 21, 41, 43, 48, 63, 117, 203, 249, 254], "arithmet": [18, 49, 151, 161, 216, 220, 223, 232, 240], "subclass": [18, 43, 44, 46, 49, 58, 71, 130, 156], "datetim": [18, 21, 27, 49, 83, 141, 161, 175, 178, 195, 235, 242, 250, 255, 259], "date": [18, 21, 27, 83, 128, 141, 157, 161, 175, 178, 181, 186, 195, 220, 242, 250, 255, 259], "timedelta": 18, "interrupt": [18, 36, 41, 42, 49, 82, 83, 88, 89, 93, 94, 113, 122, 124, 145, 148, 151, 158, 161, 162, 201, 205, 207, 213, 224, 231, 235, 240, 242, 248, 250, 258, 259, 265, 268], "keyboardinterrupt": [18, 42, 49, 56, 93, 148, 239, 248], "caught": [18, 52], "detect": [18, 33, 39, 49, 60, 64, 73, 85, 117, 124, 125, 128, 160, 168, 171, 177, 181, 186, 196, 214, 229, 235, 237, 273], "di": 18, "advanc": [18, 23, 26, 33, 55, 58, 117, 150, 151, 176, 186, 198, 212, 232, 240, 241, 256, 258], "codetyp": 18, "pow": [18, 49, 56, 92, 117], "permit": [18, 64, 166, 172, 232, 240, 242, 250], "expon": [18, 92], "neg": [18, 51, 57, 74, 80, 92, 93, 110, 111, 112, 113, 117, 127, 128, 130, 141, 156, 159, 161, 167, 171, 178, 196, 215, 216, 221, 265], "prime": 18, "modulu": [18, 57, 205], "sync": [18, 49, 64, 117, 120, 128, 130, 166, 175, 177, 178, 208, 239, 245, 246], "__reduce__": 18, "six": [18, 117, 249, 254, 255], "graduat": 18, "stabl": [18, 23, 33, 117, 176, 199, 256, 270], "launch": [18, 181, 190, 235], "cancellederror": [18, 52], "baseexcept": 18, "concurr": [18, 52, 54, 132, 187, 232], "task": [18, 19, 26, 35, 49, 124, 145, 161, 166, 186, 232, 252, 265], "get_coro": 18, "create_task": [18, 49, 52, 64, 232], "event": [18, 39, 49, 70, 74, 82, 88, 89, 101, 114, 130, 145, 146, 148, 161, 172, 207, 212, 232, 265], "loop": [18, 19, 26, 36, 38, 42, 49, 63, 94, 115, 117, 122, 124, 131, 161, 189, 196, 197, 200, 205, 208, 219, 228, 230, 232, 235, 239, 240, 252, 263, 272], "set_nam": 18, "happi": [18, 232], "eyebal": 18, "create_connect": 18, "happy_eyeballs_delai": 18, "interleav": [18, 102], "dist": 18, "euclidean": 18, "distanc": [18, 49, 117], "hypot": 18, "dimens": [18, 65, 193, 194], "prod": 18, "analog": [18, 25, 30, 32, 41, 49, 74, 76, 82, 130, 140, 182, 183, 200, 249, 258], "sum": [18, 49, 56, 87, 117, 132, 156, 162], "product": [18, 30, 33, 49, 71, 130, 173, 181, 182, 191, 253], "combinator": 18, "perm": 18, "comb": 18, "isqrt": 18, "accur": [18, 20, 21, 30, 63, 113, 117, 131, 161, 213], "squar": [18, 29, 57, 73, 92, 117, 219], "convers": [18, 30, 32, 46, 49, 70, 74, 76, 117, 124, 130, 186, 211, 228, 232, 237, 244, 247], "unraisablehook": 18, "overridden": [18, 115, 120, 151, 188, 258], "unrais": 18, "5th": 19, "596": 19, "573": 19, "584": 19, "585": 19, "593": 19, "flexibl": [19, 63, 87, 88, 89, 128, 187, 234, 241, 254], "602": 19, "adopt": [19, 240], "annual": 19, "aim": [19, 63, 173, 228, 230, 231, 253], "month": [19, 83, 141, 161], "614": 19, "relax": 19, "decor": [19, 62, 73, 151, 198, 219, 230, 240], "615": 19, "iana": [19, 157], "zone": 19, "databas": [19, 49, 70], "present": [19, 21, 51, 58, 63, 67, 82, 103, 117, 118, 136, 157, 160, 171, 208, 219, 228, 229, 241, 242, 263, 272, 273], "zoneinfo": 19, "616": 19, "prefix": [19, 70, 158, 162], "suffix": [19, 257], "617": 19, "peg": 19, "__import__": 19, "becam": 19, "sometim": [19, 46, 140, 186, 232, 240, 256], "parallel": [19, 105, 111, 126], "aclos": 19, "asend": [19, 64], "athrow": 19, "ag_run": 19, "reflect": [19, 198, 229, 235], "unexpect": [19, 46, 49, 64, 65, 79, 232, 239], "mask": [19, 24, 47, 49, 73, 96, 97, 99, 100, 117, 124, 131, 133, 155, 175, 198, 223, 224], "typeerror": [19, 44, 47, 49, 56, 88], "indexof": 19, "countof": 19, "lambda": [19, 21, 27, 44, 82, 123, 144, 145, 175, 178, 195, 212, 213, 232, 236, 242, 250, 252, 255, 259, 265, 268, 271], "concern": [19, 231], "reuse_address": 19, "create_datagram_endpoint": 19, "shutdown_default_executor": 19, "schedul": [19, 26, 49, 64, 70, 80, 93, 113, 124, 155, 161], "executor": 19, "wait": [19, 38, 49, 52, 54, 64, 70, 71, 74, 78, 79, 81, 90, 94, 96, 98, 101, 109, 113, 115, 122, 124, 130, 133, 137, 142, 146, 147, 148, 151, 154, 156, 161, 179, 181, 189, 192, 195, 197, 199, 205, 207, 232, 235, 238, 239, 252, 259, 266, 271], "threadpoolexecutor": 19, "finish": [19, 40, 42, 54, 64, 122, 124, 130, 131, 133, 151, 156, 176, 181, 186, 189, 191, 208, 212, 214, 238, 239, 256, 257, 258, 263], "pidfdchildwatch": 19, "child": [19, 236], "watcher": 19, "poll": [19, 49, 64, 90, 116, 121, 122, 130, 156, 158, 161], "to_thread": 19, "cancel": [19, 42, 49, 52, 54, 83, 122, 128, 181, 210, 232, 239, 242], "wait_for": [19, 49, 52], "typererror": 19, "incompat": [19, 236], "resurrect": 19, "lcm": 19, "nextaft": 19, "toward": [19, 92, 118, 191], "ulp": [19, 21, 63], "pidfd_open": 19, "p_pidfd": 19, "unsetenv": [19, 47], "putenv": [19, 47], "waitstatus_to_exitcod": 19, "randbyt": 19, "platlibdir": 19, "stderr": [19, 49, 160], "buffer": [19, 21, 27, 49, 52, 54, 55, 59, 63, 64, 70, 71, 73, 78, 79, 80, 82, 86, 90, 93, 110, 111, 112, 113, 117, 121, 124, 125, 127, 131, 133, 134, 137, 138, 142, 146, 147, 148, 156, 159, 162, 168, 170, 175, 178, 181, 182, 191, 192, 195, 197, 228, 230, 250, 252, 255, 258, 268], "interact": [19, 42, 49, 153, 156, 158, 205, 208, 230, 231, 232, 235, 238, 257, 258, 263, 266, 272], "micropy_cpython_compat": 19, "popular": [20, 21, 26, 27, 38, 42], "wifi": [20, 21, 27, 37, 40, 49, 62, 70, 74, 96, 123, 182, 235, 239], "bluetooth": [20, 49, 64, 70, 186, 260], "chip": [20, 21, 22, 23, 26, 27, 30, 32, 33, 37, 40, 43, 63, 85, 86, 98, 110, 111, 112, 116, 126, 131, 166, 173, 176, 184, 193, 194, 219, 228, 240, 249, 250, 253, 256], "espressif": [20, 21, 23, 26, 33, 63, 64], "carri": [20, 26, 173, 202, 215, 216, 221, 232, 253, 262], "tri": [20, 26, 74, 117, 124, 129, 156, 220, 228, 232, 239, 240, 255], "taken": [20, 24, 26, 75, 124, 132, 150, 162, 166, 173, 175, 232, 252, 253, 258, 267, 268], "schemat": [20, 26, 73, 173, 175, 193, 194, 197, 204, 253, 267], "materi": [20, 26, 173, 253, 267, 272], "decis": [20, 26, 85, 173, 253], "made": [20, 26, 33, 42, 52, 54, 62, 63, 71, 73, 76, 117, 133, 138, 145, 150, 173, 177, 191, 193, 202, 219, 228, 253, 258], "pin": [20, 23, 25, 26, 28, 29, 30, 32, 33, 34, 36, 38, 40, 41, 42, 43, 49, 52, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 94, 95, 97, 98, 99, 106, 107, 110, 111, 112, 113, 116, 122, 124, 127, 130, 131, 132, 133, 134, 137, 142, 143, 145, 146, 151, 154, 158, 161, 166, 173, 176, 179, 180, 181, 183, 189, 191, 192, 198, 200, 201, 203, 211, 212, 230, 232, 239, 240, 241, 244, 245, 247, 248, 249, 252, 253, 256, 262, 263, 265, 269, 272], "diagram": [20, 26, 173, 253], "usabl": [20, 140, 141, 156, 168, 173, 228], "spi": [20, 24, 26, 33, 43, 49, 73, 74, 85, 99, 105, 117, 130, 152, 158, 168, 173, 183, 228, 232, 241, 249, 252, 253], "site": [20, 26, 173, 193, 194, 220, 237, 253, 258], "www": [20, 22, 32, 101, 135, 156, 173, 244, 253, 258], "en": [20, 44, 161, 253], "download": [20, 21, 23, 27, 33, 36, 95, 176, 190, 193, 208, 234, 237, 238, 244, 256, 263, 270], "primari": [20, 26, 64, 96, 136, 145, 166, 173, 229, 234, 253], "capabl": [20, 21, 26, 37, 54, 63, 74, 82, 96, 105, 125, 173, 175, 178, 186, 228, 230, 232, 237, 242, 250, 253, 255, 258, 262], "dual": [20, 49, 78, 102, 133, 249, 253], "lx6": 20, "frequenc": [20, 21, 25, 26, 27, 29, 41, 49, 63, 70, 74, 79, 80, 81, 85, 86, 88, 89, 102, 103, 107, 122, 131, 133, 134, 137, 142, 145, 154, 166, 173, 175, 178, 195, 200, 207, 213, 232, 242, 250, 252, 253, 254, 255, 258, 259, 265], "240mhz": 20, "528kb": 20, "bootrom": [20, 26, 173, 253], "448kb": 20, "flashrom": [20, 23, 26, 27, 33, 173, 253], "4mb": [20, 26], "34": [20, 21, 24, 42, 48, 117, 174, 254], "multiplex": [20, 21, 26, 54, 85, 173, 253], "rx": [20, 21, 23, 24, 26, 27, 33, 42, 49, 54, 78, 80, 90, 97, 117, 122, 133, 146, 151, 154, 166, 173, 174, 175, 178, 192, 195, 230, 242, 244, 250, 252, 254, 255], "tx": [20, 21, 23, 24, 26, 27, 33, 42, 49, 54, 78, 80, 90, 97, 122, 133, 146, 151, 154, 166, 173, 174, 175, 178, 192, 195, 230, 242, 244, 250, 252, 254, 255], "i2c": [20, 26, 30, 43, 49, 73, 74, 109, 113, 116, 117, 130, 132, 140, 142, 166, 173, 183, 197, 203, 204, 228, 232, 241, 249, 252, 253], "bitbang": [20, 26, 27, 86], "i2": [20, 26, 49, 64, 74, 166, 173, 253], "adc": [20, 28, 49, 74, 77, 82, 124, 130, 140, 145, 166, 173, 179, 183, 213, 215, 240, 253, 254, 258], "sar": [20, 173, 250, 253], "18": [20, 21, 25, 48, 54, 63, 85, 113, 117, 131, 174, 175, 236, 246, 250, 254], "channel": [20, 21, 25, 27, 49, 63, 64, 75, 76, 77, 80, 85, 88, 96, 98, 100, 101, 102, 106, 107, 110, 111, 112, 113, 117, 120, 124, 125, 127, 130, 131, 132, 158, 174, 175, 178, 186, 195, 200, 235, 242, 249, 250, 253, 254, 255, 259, 265, 268], "dac": [20, 49, 105, 130, 145, 179, 183, 197, 200, 213, 254], "rmt": 20, "puls": [20, 22, 32, 49, 63, 74, 143, 145, 174, 200, 211], "transmit": [20, 54, 63, 74, 78, 79, 80, 90, 100, 117, 133, 146, 163, 183, 252], "bootload": [20, 23, 26, 49, 63, 74, 130, 173, 176, 177, 235, 239, 242, 249, 253, 258], "brickabl": [20, 26, 173], "esp32_datasheet_en": 20, "pdf": [20, 73, 135, 193, 194, 208, 258, 262], "esp": [20, 21, 27, 33, 41, 42, 63], "idf": [20, 63, 64], "framework": [20, 119], "freerto": 20, "adafruit": [21, 23, 26, 27, 33, 40, 79, 174, 230, 253, 255], "overview": [21, 49, 175, 182, 242, 250, 255], "troubleshoot": [21, 27, 63, 175, 242, 250, 255], "subsect": [21, 27, 175, 242, 250, 255], "uart0": [21, 23, 27, 33, 42, 174, 242, 250, 263], "gpio1": [21, 23, 27, 33, 42, 250, 268], "gpio3": [21, 23, 27, 33, 42, 250], "baudrat": [21, 23, 27, 33, 42, 43, 73, 78, 86, 90, 122, 133, 137, 142, 146, 175, 178, 192, 195, 203, 238, 242, 250, 255, 259, 268, 272], "115200": [21, 23, 27, 33, 42, 122, 175, 178, 192, 203, 238, 242, 244, 255, 263, 272], "larg": [21, 26, 27, 60, 64, 65, 73, 89, 117, 120, 122, 124, 125, 162, 175, 181, 186, 191, 213, 228, 236, 237, 242, 250, 255], "slab": [21, 27, 175, 242, 250, 255], "freq": [21, 25, 27, 40, 41, 49, 74, 79, 81, 85, 88, 89, 103, 116, 122, 131, 133, 134, 145, 154, 175, 178, 195, 200, 207, 213, 232, 239, 242, 250, 252, 255, 258, 259, 265], "240000000": [21, 250], "240": [21, 63, 104, 116, 117, 127, 250], "mhz": [21, 27, 104, 145, 166, 173, 175, 178, 213, 249, 250, 255], "osdebug": [21, 27, 62], "off": [21, 25, 27, 29, 39, 41, 42, 43, 49, 52, 64, 73, 78, 79, 82, 86, 87, 90, 102, 110, 111, 112, 117, 124, 130, 133, 137, 138, 139, 140, 142, 146, 166, 171, 175, 176, 178, 181, 184, 186, 189, 191, 193, 195, 196, 198, 200, 202, 205, 208, 209, 210, 212, 214, 219, 239, 240, 242, 245, 246, 248, 250, 252, 255, 262, 263, 268], "redirect": [21, 27, 49, 203], "flash_siz": [21, 33, 62], "flash_user_start": [21, 62], "flash_eras": [21, 62], "sector_no": [21, 62], "flash_writ": [21, 62], "byte_offset": [21, 62], "flash_read": [21, 62], "raw_temperatur": [21, 63], "temperatur": [21, 27, 32, 38, 63, 113, 118, 124, 131, 170, 175, 178, 228, 242, 250, 255], "fahrenheit": 21, "ultra": 21, "power": [21, 32, 38, 41, 43, 49, 54, 62, 64, 73, 82, 92, 97, 100, 104, 108, 113, 117, 124, 141, 143, 156, 161, 162, 173, 175, 177, 178, 181, 183, 184, 186, 187, 188, 189, 193, 197, 201, 203, 209, 210, 211, 212, 224, 228, 229, 230, 232, 241, 249, 259, 264, 266], "co": [21, 49, 57, 92], "sensor": [21, 30, 38, 49, 63, 64, 73, 79, 87, 110, 111, 112, 115, 117, 120, 123, 127, 131, 167, 186, 187, 189, 191, 193, 194, 196, 201, 230, 232, 250], "higher": [21, 27, 29, 40, 54, 60, 70, 71, 74, 81, 82, 87, 88, 89, 93, 102, 113, 117, 122, 124, 136, 152, 161, 167, 175, 178, 208, 221, 228, 232, 255, 258, 263, 272, 273], "ambient": [21, 113, 131], "ic": [21, 49, 74, 145, 181], "warm": 21, "minimis": [21, 52, 228, 232], "wake": [21, 26, 27, 40, 62, 63, 64, 74, 82, 83, 101, 118, 124, 130, 141, 242, 258, 259], "sta_if": [21, 27, 35, 64, 98, 100, 123, 235], "station": [21, 27, 35, 96, 98, 100, 101, 235, 259, 266], "scan": [21, 27, 38, 49, 54, 55, 64, 79, 96, 98, 100, 101, 113, 117, 137, 175, 178, 181, 186, 195, 235, 242, 250, 255, 259, 266, 268], "isconnect": [21, 27, 35, 49, 64, 96, 97, 98, 99, 100, 101, 123, 126, 130, 148, 259, 266], "ap": [21, 27, 33, 64, 96, 98, 100, 101, 235, 250, 258, 259, 263, 266], "ssid": [21, 27, 35, 96, 98, 100, 101, 123, 258, 259, 266], "ifconfig": [21, 27, 35, 49, 96, 97, 98, 99, 100, 101, 175, 235, 259, 266], "netmask": [21, 27, 35], "gw": [21, 27], "dn": [21, 27, 35, 96, 97, 98, 99, 100, 217], "ap_if": [21, 27, 35, 64, 98, 100], "max_client": 21, "do_connect": [21, 27, 35], "establish": [21, 27, 35, 54, 123, 157, 240], "tcp": [21, 27, 32, 49, 98, 156, 186, 235], "udp": [21, 27, 98, 156, 186], "forev": [21, 64, 98, 102, 119, 187, 247], "rang": [21, 27, 29, 30, 34, 38, 41, 44, 45, 47, 48, 49, 51, 54, 55, 56, 57, 64, 75, 77, 79, 81, 89, 95, 101, 102, 113, 115, 116, 117, 119, 120, 124, 125, 132, 133, 134, 135, 141, 149, 150, 156, 161, 162, 166, 175, 178, 191, 196, 197, 203, 204, 205, 211, 214, 219, 221, 222, 223, 227, 228, 229, 232, 236, 239, 240, 242, 250, 254, 255, 258], "stat_connect": [21, 100], "succe": [21, 42, 101], "reconnect": [21, 64, 100, 181], "attempt": [21, 22, 32, 54, 64, 74, 93, 100, 130, 161, 228, 229, 232, 240], "behaviour": [21, 46, 48, 54, 64, 71, 74, 79, 82, 88, 89, 96, 131, 134, 146, 148, 155, 156, 157, 161, 216, 220, 229, 235, 240, 252], "wire": [21, 23, 30, 32, 33, 42, 49, 74, 84, 85, 87, 130, 174, 200, 211, 258, 263], "mdc": 21, "pin_mdc": 21, "phy": [21, 96, 97, 175], "mdio": 21, "phy_typ": [21, 97], "phy_lan8710": 21, "phy_lan8720": [21, 97], "ph_ip101": 21, "phy_rtl8201": 21, "phy_dp83848": [21, 97], "phy_ksz8041": 21, "phy_addr": [21, 97], "ref_clk_mod": [21, 97], "ref_clk": 21, "suitabl": [21, 29, 59, 60, 68, 97, 122, 166, 232, 254, 255], "IN": [21, 27, 36, 39, 49, 82, 97, 140, 172, 175, 178, 180, 195, 199, 242, 250, 255, 258, 259, 268, 271], "olimex": [21, 174, 175], "gatewai": [21, 35, 96, 97, 98, 99, 100, 101], "poe": 21, "iso": [21, 96], "23": [21, 25, 27, 36, 43, 48, 54, 85, 117, 161, 174, 175, 178, 195, 219, 239, 242, 250, 254, 255, 258, 263], "wireless": [21, 100, 127, 186], "wt32": 21, "eth01": 21, "ethernet": [21, 49, 96, 173], "kit_a_v1": 21, "phy_ip101": 21, "500": [21, 25, 27, 36, 41, 42, 62, 130, 133, 161, 173, 175, 178, 195, 242, 250, 255, 268], "millisecond": [21, 27, 52, 54, 63, 64, 74, 78, 83, 88, 91, 101, 109, 113, 117, 122, 124, 130, 133, 137, 141, 142, 143, 146, 147, 148, 155, 156, 161, 166, 175, 178, 195, 205, 211, 214, 228, 240, 242, 250, 252, 255, 268], "sleep_u": [21, 27, 49, 161, 175, 178, 195, 242, 250, 255, 268], "microsecond": [21, 27, 54, 74, 79, 83, 89, 124, 130, 133, 161, 175, 178, 195, 211, 240, 242, 250, 255, 268], "ticks_m": [21, 27, 49, 161, 175, 178, 195, 242, 250, 252, 255, 268], "counter": [21, 27, 49, 59, 71, 73, 130, 145, 154, 161, 162, 175, 178, 179, 195, 220, 221, 232, 242, 250, 255, 265, 268], "delta": [21, 27, 161, 175, 178, 195, 240, 242, 250, 255, 268], "ticks_diff": [21, 27, 49, 161, 175, 178, 195, 240, 242, 250, 255, 268], "inclus": [21, 27, 55, 60, 79, 81, 85, 133, 149, 161, 171], "tim0": [21, 175, 178, 255], "init": [21, 25, 27, 49, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 98, 101, 102, 108, 113, 127, 133, 134, 137, 140, 142, 145, 146, 148, 151, 153, 154, 175, 178, 213, 232, 242, 250, 255, 258, 259, 265, 266, 268], "period": [21, 25, 27, 41, 49, 62, 63, 64, 74, 80, 81, 83, 88, 89, 91, 120, 130, 131, 141, 145, 146, 156, 161, 174, 175, 178, 195, 213, 228, 232, 240, 242, 250, 255, 258, 259, 265], "5000": [21, 27, 78, 81, 91, 122, 124, 133, 137, 142, 147, 148, 163, 175, 178, 242, 250, 255, 259, 265, 266], "one_shot": [21, 27, 49, 88, 89, 175, 178, 242, 250, 255, 265], "callback": [21, 27, 39, 49, 52, 54, 74, 78, 80, 82, 83, 88, 89, 93, 94, 101, 102, 109, 113, 114, 122, 124, 126, 133, 135, 141, 144, 145, 148, 175, 178, 195, 201, 242, 250, 255, 258, 265], "tim1": [21, 175, 178, 255, 265], "2000": [21, 27, 54, 91, 117, 124, 137, 161, 175, 178, 189, 211, 240, 242, 250, 252, 255], "p0": [21, 27, 39, 82, 98, 112, 113, 127, 142, 146, 175, 178, 180, 183, 242, 250, 255], "gpio0": [21, 27, 33, 175, 178, 250, 255, 271], "p2": [21, 27, 39, 82, 98, 112, 113, 116, 117, 127, 142, 146, 175, 178, 229, 242, 250, 255], "gpio2": [21, 23, 27, 42, 175, 176, 178, 250, 255], "p4": [21, 27, 113, 137, 146, 175, 178, 183, 192, 240, 242, 250, 255], "pull_up": [21, 27, 39, 49, 82, 135, 140, 175, 178, 180, 195, 242, 250, 255, 259, 268], "resistor": [21, 27, 30, 38, 39, 79, 82, 135, 140, 175, 178, 180, 200, 211, 242, 250, 255, 268], "p5": [21, 27, 106, 113, 131, 137, 146, 175, 178, 183, 192, 242, 250], "p6": [21, 98, 112, 175, 178, 179, 183], "drive": [21, 27, 49, 82, 90, 103, 105, 110, 111, 112, 126, 134, 140, 146, 176, 177, 182, 186, 193, 200, 208, 209, 214, 242, 248, 250, 256, 258, 264, 265], "drive_3": [21, 242], "strength": [21, 82, 98, 106, 107, 117, 258], "21": [21, 48, 54, 60, 70, 83, 117, 171, 174, 236, 254, 263, 268, 272], "27": [21, 25, 48, 54, 174, 244, 254], "39": [21, 24, 48, 254], "adhoc": [21, 27], "d0": [21, 27, 85, 174, 175, 217, 254, 255, 256], "d1": [21, 27, 85, 174, 217, 254, 255], "physic": [21, 27, 73, 74, 78, 79, 80, 82, 85, 86, 87, 90, 97, 99, 128, 133, 137, 140, 142, 146, 228], "consult": [21, 26, 27, 208, 220], "safe": [21, 52, 193, 201, 210, 214, 232, 246, 255, 262], "sink": [21, 178, 183], "resist": [21, 73, 203, 229], "drive_0": [21, 49, 82, 242], "5ma": 21, "130": 21, "ohm": [21, 38, 122, 140, 200], "drive_1": [21, 49, 82, 242], "10ma": 21, "60": [21, 29, 34, 48, 104, 105, 110, 111, 112, 113, 117, 127, 143, 174, 175, 178, 195, 211, 254, 259], "drive_2": [21, 49, 82, 242], "20ma": 21, "40ma": 21, "15": [21, 25, 27, 29, 36, 39, 41, 43, 48, 54, 60, 63, 85, 113, 117, 131, 135, 145, 166, 171, 174, 175, 239, 250, 254], "pad": [21, 49, 63, 117, 254], "held": [21, 63, 79, 212, 258], "outstand": [21, 54, 122], "reappli": 21, "7": [21, 23, 25, 26, 29, 33, 43, 44, 46, 48, 49, 54, 63, 65, 73, 79, 85, 89, 90, 101, 102, 113, 115, 117, 119, 122, 133, 134, 137, 141, 145, 146, 151, 153, 154, 160, 162, 166, 174, 175, 178, 196, 213, 222, 227, 235, 236, 250, 254, 255, 258, 263], "11": [21, 24, 48, 54, 78, 85, 96, 100, 101, 117, 122, 133, 145, 166, 174, 175, 178, 236, 250, 254], "embed": [21, 70, 85, 161, 187, 217, 240], "invert": [21, 27, 43, 49, 81, 87, 90, 117, 125, 151, 175, 178, 214, 242, 255], "illumin": [21, 27, 170, 175, 178, 184], "led": [21, 27, 32, 34, 42, 49, 52, 70, 74, 87, 122, 130, 144, 145, 165, 175, 181, 182, 183, 186, 187, 196, 198, 199, 201, 202, 208, 209, 210, 212, 213, 214, 232, 240, 245, 250, 252, 254, 256, 263, 265, 271, 272], "uart1": [21, 27, 174, 175, 178, 242, 250], "9600": [21, 27, 90, 146, 178, 195, 206, 250, 259], "uart2": [21, 174, 242], "variant": [21, 33, 96, 128, 221, 230, 255], "conflict": [21, 46, 71, 124], "onboard": [21, 103, 177, 180, 186, 228], "psram": 21, "peripher": [21, 22, 23, 27, 33, 40, 42, 49, 62, 64, 74, 79, 80, 82, 85, 88, 89, 90, 104, 133, 137, 140, 142, 145, 147, 162, 174, 176, 195, 213, 230, 240, 242, 243, 244, 249, 250, 256, 258, 259, 264, 272], "1hz": [21, 41, 42, 145, 250, 252], "40mhz": [21, 85], "tradeoff": 21, "duti": [21, 25, 27, 41, 49, 54, 63, 81, 89, 103, 107, 145, 175, 178, 250, 254, 255, 259, 265], "decreas": [21, 117, 239, 259], "pwm0": [21, 27, 250], "duty_u16": [21, 25, 49, 81, 175, 178, 250, 255], "32768": [21, 81, 141, 175, 250, 255], "1023": [21, 25, 27, 41, 255], "512": [21, 25, 27, 41, 55, 67, 113, 128, 130, 133, 136, 141, 145, 173, 229, 253], "50": [21, 27, 41, 48, 63, 81, 89, 101, 104, 117, 122, 125, 130, 138, 174, 175, 178, 191, 195, 203, 205, 211, 214, 229, 250, 254, 255, 259, 265], "256": [21, 25, 29, 34, 47, 60, 73, 80, 110, 111, 112, 113, 117, 120, 125, 127, 133, 142, 145, 166, 173, 206, 229, 239, 253], "ratio": [21, 57, 81, 92, 110, 111, 112, 113, 117, 119, 120, 122, 124, 127, 175, 255], "65535": [21, 75, 78, 81, 133, 156, 175, 178, 242, 250, 255], "75": [21, 117, 122, 133, 254], "duty_n": [21, 49, 81, 175, 178, 255], "250_000": 21, "1_000_000_000": 21, "deinit": [21, 25, 27, 41, 49, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 106, 107, 110, 111, 112, 113, 127, 133, 134, 137, 142, 145, 146, 166, 175, 178, 242, 250, 255, 258], "pwm2": [21, 27, 175, 178, 254], "20000": [21, 80, 137, 175, 178, 200], "s2": [21, 63, 143], "c3": [21, 235], "26": [21, 25, 43, 48, 54, 171, 174, 246, 250], "esp32s2": 21, "read_u16": [21, 49, 75, 175, 178, 242, 250, 255], "read_uv": [21, 49, 75, 76, 242], "microvolt": [21, 75], "voltag": [21, 27, 28, 39, 63, 75, 78, 82, 106, 131, 133, 134, 175, 178, 179, 193, 194, 202, 204, 211, 232, 249, 250, 255, 258, 262], "1v": [21, 255], "slightli": [21, 87], "packag": [21, 46, 49, 67, 70, 95, 171, 173, 181, 183, 190, 230, 231, 233, 235, 238, 249], "particularli": [21, 93, 117, 196, 232], "attenu": [21, 75], "100mv": 21, "atten": [21, 75, 242], "sampl": [21, 27, 44, 45, 47, 48, 73, 75, 76, 80, 86, 102, 119, 122, 131, 132, 133, 134, 142, 145, 166, 170, 175, 178, 186, 195, 197, 242, 250, 255], "sample_n": [21, 75, 242], "attn_0db": 21, "No": [21, 26, 49, 55, 64, 78, 82, 85, 113, 119, 122, 124, 133, 188, 203, 229, 249], "950mv": 21, "attn_2_5db": 21, "5db": 21, "1250mv": 21, "attn_6db": 21, "6db": [21, 80], "150mv": 21, "1750mv": 21, "attn_11db": 21, "11db": 21, "2450mv": 21, "rate": [21, 23, 33, 54, 64, 73, 79, 80, 86, 90, 110, 111, 112, 113, 117, 118, 122, 124, 131, 133, 137, 141, 142, 145, 146, 163, 166, 175, 178, 195, 232, 238, 244, 250, 255], "6v": [21, 77, 175, 202, 211, 258, 262], "boundari": 21, "risk": [21, 124, 232], "damag": [21, 74, 172, 177, 258], "characterist": [21, 23, 33, 54, 86, 166, 176, 239, 256], "efus": 21, "manufactur": [21, 181, 191, 193, 194, 249], "calibr": [21, 49, 73, 75, 113, 124, 131, 141, 143, 255], "millivolt": 21, "ti": [21, 71, 142, 265], "ground": [21, 33, 38, 41, 122, 143, 200, 202, 203, 211, 262], "scale": [21, 49, 73, 75, 110, 111, 112, 113, 117, 120, 124, 125, 127, 131, 162, 166], "adcblock": [21, 49, 74, 75], "seri": [21, 68, 117, 133, 158, 166, 173, 186, 232, 233, 234, 235], "highest": [21, 63, 103, 117, 119, 124, 161, 166, 175, 178, 212, 255], "mismatch": 21, "accord": [21, 116, 131, 159, 174, 175, 215, 232, 254, 255], "4095": [21, 131, 134, 178, 179, 195, 255, 259], "width_9bit": 21, "width_10bit": 21, "width_11bit": 21, "width_12bit": 21, "bang": [21, 27, 63, 74, 79, 86, 87, 175, 178, 250, 252, 255], "softspi": [21, 27, 43, 49, 86, 175, 178, 242, 250, 255], "polar": [21, 27, 43, 49, 57, 86, 89, 117, 142, 145, 151, 175, 178, 195, 202, 250, 255, 259, 262, 265, 268], "idl": [21, 27, 49, 63, 74, 82, 83, 86, 90, 122, 142, 175, 178, 239, 242, 250, 255, 258, 259, 266], "sck": [21, 27, 43, 80, 85, 86, 142, 174, 175, 178, 195, 242, 250, 254, 255], "edg": [21, 27, 39, 65, 82, 86, 117, 122, 135, 138, 142, 145, 175, 178, 210, 212, 250, 255, 258, 265], "100000": [21, 27, 122, 175, 178, 195, 217, 228, 255, 259, 268], "mosi": [21, 27, 43, 85, 86, 99, 122, 142, 174, 175, 178, 242, 250, 254, 255, 268], "miso": [21, 27, 43, 85, 86, 99, 122, 142, 174, 175, 178, 242, 250, 254, 255, 268], "200000": [21, 27, 175, 178, 195, 200, 250, 255], "0xff": [21, 27, 34, 63, 175, 178, 225, 228, 236, 250, 255], "buf": [21, 27, 52, 54, 63, 73, 78, 79, 80, 86, 90, 116, 128, 130, 131, 133, 134, 136, 138, 142, 146, 148, 152, 154, 156, 162, 168, 169, 175, 178, 195, 197, 228, 229, 232, 240, 250, 255, 268], "12345": [21, 27, 175, 178, 250, 255, 258], "write_readinto": [21, 27, 49, 86, 175, 178, 250, 255, 259, 268], "1234": [21, 27, 142, 175, 178, 250, 255, 258], "transmiss": [21, 63, 64, 78, 90, 117, 133, 134, 146, 175], "80mhz": [21, 26, 27, 40, 63, 81], "reliabl": [21, 23, 36, 64, 175, 176, 178, 192, 255, 256], "hspi": [21, 27, 43], "vspi": 21, "10000000": [21, 122, 175, 178, 255], "80000000": [21, 27, 40, 63, 81], "firstbit": [21, 86, 142, 242, 268], "softi2c": [21, 27, 49, 79, 175, 178, 242, 250, 255], "scl": [21, 27, 30, 43, 79, 122, 137, 166, 174, 175, 178, 195, 242, 250, 254, 255, 258], "sda": [21, 27, 30, 43, 79, 122, 137, 140, 166, 174, 175, 176, 178, 195, 242, 250, 254, 255, 258], "readfrom": [21, 27, 49, 79, 175, 178, 195, 250, 255, 259, 268], "0x3a": [21, 27, 175, 178, 250, 255], "writeto": [21, 27, 49, 79, 175, 178, 195, 250, 255, 259, 268], "400000": [21, 79, 86, 137, 175, 178, 195, 242, 255, 258], "w": [21, 31, 49, 55, 58, 65, 73, 80, 110, 111, 112, 113, 117, 120, 124, 125, 127, 150, 158, 162, 166, 175, 176, 186, 195, 203, 229, 238, 239, 250, 257, 268, 273], "stereo": [21, 49, 80, 166, 175, 195, 250], "44100": [21, 80, 166, 175, 195, 250], "ibuf": [21, 80, 175, 195, 250], "40000": [21, 175, 195, 250], "audio": [21, 49, 70, 80, 166, 175, 193, 194, 195, 201, 250], "mono": [21, 49, 80, 166, 175, 195, 250], "22050": [21, 80, 166, 195, 197, 250], "technic": [21, 80, 195, 240, 250], "preview": [21, 33, 80, 195, 234, 250], "feedback": [21, 80, 186, 195, 250], "encourag": [21, 26, 80, 195, 250], "buse": [21, 74, 78, 99, 133, 142, 175, 195, 250], "2017": [21, 27, 175, 178, 195, 242, 250], "48": [21, 27, 48, 174, 175, 178, 195, 242, 250, 254, 255], "feed": [21, 27, 49, 68, 73, 91, 117, 228, 250, 259], "woke": [21, 27, 40], "reset_caus": [21, 27, 40, 49, 74, 242, 266], "deepsleep_reset": [21, 27, 40, 49, 74], "deepsleep": [21, 26, 27, 40, 49, 62, 63, 64, 74, 82, 239, 242, 258, 259, 266], "10000": [21, 27, 40, 64, 89, 117, 175, 178, 228, 240, 265], "indefinit": [21, 54, 63, 74, 130], "wake_on_": 21, "retain": [21, 63, 64, 74, 162], "leakag": 21, "disconnect": [21, 49, 54, 64, 96, 98, 100, 101, 181, 186, 189, 208, 235, 246, 263], "opin": 21, "ipin": 21, "gpio_deep_sleep_hold": [21, 63], "sdcard": [21, 130, 174, 175, 229], "mount": [21, 26, 49, 84, 85, 130, 175, 177, 181, 186, 193, 210, 229, 235, 242, 245, 258, 259, 268, 273], "listdir": [21, 31, 49, 128, 175, 242, 246], "umount": [21, 49, 128, 130, 175, 229, 235, 242], "eject": [21, 175, 177, 193, 208, 209, 210, 214], "5n": [21, 63], "clock_div": [21, 63], "source_freq": [21, 49, 63, 145, 213], "100n": [21, 63], "write_puls": [21, 63], "2000n": [21, 63], "200n": [21, 63], "4000n": [21, 63], "ow": [21, 27, 175, 178, 242, 250, 255], "gpio12": [21, 27, 38, 175, 178, 250, 255], "readbyt": [21, 27, 175, 178, 242, 250, 255], "writebyt": [21, 27, 175, 178, 242, 250, 255], "0x12": [21, 27, 122, 137, 162, 175, 178, 242, 250, 255], "123": [21, 27, 44, 78, 79, 93, 133, 137, 175, 178, 195, 239, 242, 250, 255], "select_rom": [21, 27, 175, 178, 242, 250, 255], "12345678": [21, 27, 86, 175, 178, 242, 250, 255], "ds18s20": [21, 27, 38, 175, 178, 242, 250, 255], "ds18b20": [21, 27, 38, 175, 178, 242, 250, 255], "ds18x20": [21, 27, 38, 175, 178, 242, 250, 255], "convert_temp": [21, 27, 38, 175, 178, 242, 250, 255], "750": [21, 27, 38, 175, 178, 242, 250, 255], "read_temp": [21, 27, 38, 175, 178, 242, 250, 255], "7k": [21, 27, 38, 175, 178, 242, 250, 255], "np": [21, 27, 34, 250], "pixel": [21, 27, 29, 34, 43, 49, 65, 110, 111, 112, 113, 114, 115, 117, 120, 124, 125, 127, 138, 186, 189, 203, 214, 250], "white": [21, 27, 29, 30, 43, 110, 111, 112, 117, 124, 138, 186, 187, 250], "colour": [21, 27, 29, 34, 43, 138, 202, 211, 250, 256], "800khz": [21, 27, 74, 95], "400khz": [21, 27, 79, 86, 95], "bitstream": [21, 27, 49, 63, 74, 242, 255], "bitstream_channel": [21, 63], "apa102": [21, 32, 250], "dotstar": [21, 29, 250], "touchpad": 21, "smaller": [21, 26, 60, 73, 87, 117, 124, 134, 156, 160, 171, 211, 228, 230, 240], "variat": [21, 196], "ten": [21, 131, 232], "larger": [21, 28, 47, 54, 55, 65, 117, 122, 124, 159, 171, 181, 191, 197, 211, 229, 232, 252], "thousand": 21, "composit": 21, "threshold": [21, 49, 66, 119, 124, 125, 151, 154, 186, 204, 228], "wake_on_touch": [21, 63], "lightsleep": [21, 49, 64, 74, 242, 258, 259], "dht11": [21, 27, 30, 175, 178, 255], "humid": [21, 27, 32, 170, 175, 178, 255], "41": [21, 27, 48, 175, 178, 254, 255], "rh": [21, 27, 49, 175, 178, 255], "dht22": [21, 27, 30, 175, 178, 255], "websocket": [21, 27], "experiment": [21, 27, 50], "webrepl_setup": [21, 26, 27, 42], "screen": [21, 27, 42, 43, 49, 65, 70, 106, 107, 108, 110, 111, 112, 127, 138, 203, 208, 246, 263, 272], "reboot": [21, 27, 42, 64, 208, 235, 239, 245, 246, 263], "daemon": [21, 26, 27], "mypass": 21, "sta": [21, 27, 64, 96, 98, 100, 101, 258, 259, 266], "router": [21, 27, 35, 42, 64], "provis": [21, 27], "transfer": [21, 27, 64, 73, 79, 80, 86, 90, 122, 134, 137, 142, 168, 219, 221, 230, 239, 252, 258], "button": [21, 27, 42, 74, 87, 121, 123, 130, 144, 151, 176, 181, 186, 189, 193, 204, 208, 210, 214, 229, 244, 246, 254, 256, 258, 263], "webrepl_cli": [21, 27], "forum": [21, 26, 27, 175, 185, 255], "commun": [21, 23, 26, 27, 33, 35, 38, 42, 49, 64, 74, 79, 85, 86, 87, 109, 122, 130, 132, 137, 166, 175, 192, 240, 242, 252, 255], "feel": [22, 32, 33, 37, 181, 202, 262], "interest": [22, 26, 32, 33, 44, 74, 110, 111, 112, 113, 117, 120, 125, 127, 158, 187], "explain": [22, 32, 33, 234, 262], "readi": [22, 32, 33, 54, 73, 76, 95, 113, 124, 137, 155, 156, 167, 181, 186, 188, 232, 234, 235, 237, 240], "hope": [22, 32, 66], "knowledg": [22, 32, 186, 240], "width": [22, 32, 43, 49, 65, 73, 74, 85, 86, 89, 110, 111, 112, 113, 115, 116, 117, 120, 124, 125, 127, 133, 137, 143, 145, 200, 211, 215, 216, 221, 222, 225, 227, 265], "vice": [23, 33, 42, 59, 81, 113, 176, 256], "versa": [23, 33, 42, 59, 81, 113, 176, 256], "webrepl": [23, 26, 33, 230, 237], "network": [23, 32, 33, 42, 49, 63, 64, 68, 70, 74, 97, 98, 99, 100, 101, 123, 125, 128, 130, 156, 157, 159, 161, 162, 175, 186, 230, 235, 237, 259, 260, 266], "compon": [23, 33, 34, 39, 45, 64, 73, 117, 161, 176, 197, 202, 204, 230, 256, 262], "let": [23, 33, 36, 39, 41, 42, 117, 124, 161, 166, 176, 181, 183, 186, 189, 192, 193, 198, 203, 205, 208, 209, 210, 212, 213, 214, 240, 251, 256, 263, 270], "pc": [23, 33, 36, 42, 130, 151, 176, 177, 181, 191, 193, 201, 202, 210, 212, 214, 221, 228, 229, 230, 235, 237, 238, 244, 256, 270, 272], "straightforward": [23, 33, 176, 240, 256], "connector": [23, 33, 175, 176, 181, 202, 210, 256, 262, 270], "recent": [23, 33, 44, 47, 55, 73, 74, 176, 203, 239, 248, 256], "onto": [23, 33, 65, 69, 70, 113, 117, 120, 125, 135, 154, 176, 181, 190, 197, 203, 204, 219, 226, 256], "page": [23, 33, 36, 55, 94, 133, 176, 186, 204, 220, 241, 256, 270], "choic": [23, 33, 42, 49, 149, 161, 176, 186, 254, 256, 258], "daili": [23, 33, 176, 256, 270], "spiram": 23, "bet": [23, 33, 176, 256], "experienc": [23, 33, 176, 256], "who": [23, 26, 33, 117, 176, 186, 198, 256], "procedur": [23, 26, 33, 122, 176, 193, 209, 220, 228, 256, 258], "highli": [23, 26, 33, 44, 45, 50, 70, 71, 74, 176], "fortun": 23, "dtr": [23, 33], "rt": [23, 33, 49, 90, 148, 166, 168, 173, 175, 222, 227, 242, 254], "feather": [23, 26, 27, 33, 40, 253, 255], "huzzah32": 23, "m5stack": 23, "wemo": 23, "lolin32": 23, "tinypico": 23, "devkitc": 23, "pico": [23, 151, 235, 249, 250], "wrover": 23, "eras": [23, 27, 33, 62, 63, 73, 124, 128, 181, 203, 229, 246], "entir": [23, 26, 33, 43, 54, 55, 65, 70, 73, 93, 117, 146, 150, 228, 229, 233, 235, 240, 252], "esptool": [23, 33, 63], "older": [23, 30, 33, 124, 193, 236], "ttyusb0": [23, 33, 42, 235, 263], "erase_flash": [23, 33], "write_flash": [23, 33], "z": [23, 47, 57, 58, 60, 117, 118, 130, 132, 170, 195, 196, 216, 218, 221, 268], "0x1000": [23, 54, 219], "20180511": 23, "baud": [23, 33, 73, 90, 122, 133, 175, 178, 238, 244, 255], "fm": [23, 33, 174], "dio": 23, "introduct": [23, 201, 213, 232, 261], "experi": [23, 33, 37, 42, 176, 187, 202, 232, 256, 262], "exclud": [23, 33, 176, 233, 256], "bad": [23, 26, 33, 176, 256], "qualiti": [23, 33, 49, 117, 120, 123, 124, 176, 181, 186, 256], "worn": [23, 33, 62, 176, 256], "defect": [23, 33, 176, 256], "speak": [23, 33, 176, 256], "amperag": [23, 33, 176, 256], "rippl": [23, 33, 176, 256, 262], "nois": [23, 33, 49, 102, 117, 134, 166, 176, 199, 255, 256], "emi": [23, 33, 176, 256], "460800": [23, 33], "compromis": [23, 26, 33, 74], "stabil": [23, 33, 124], "cabl": [23, 33, 177, 181, 193, 201, 202, 210, 244, 256, 262], "catch": [23, 33, 122, 156, 205], "sector": [23, 33, 62, 168], "bug": [23, 33, 98, 186, 232], "tracker": [23, 33], "report": [23, 33, 44, 49, 93, 113, 128, 130, 203, 229, 232, 236], "datasheet": [24, 30, 133, 151, 162, 197, 204, 267, 271], "prescal": [24, 49, 133, 142, 145, 213], "mcpwm0": 24, "mem32": [24, 49, 74, 158, 219], "dr_reg_dport_bas": 24, "0x3ff00000": 24, "dport_perip_clk_en_reg": 24, "0x0c0": 24, "dport_perip_rst_en_reg": 24, "0x0c4": 24, "dport_pwm0_clk_en": 24, "0x3ff5e000": 24, "mcpwm1": 24, "0x3ff6c000": 24, "clk": [24, 84, 85, 174], "rst": [24, 27, 40, 43, 208, 209, 210, 212, 214, 263], "0xffffffff": [24, 131, 216, 219, 223, 240], "pwm_clk_cfg_reg": 24, "0x55": 24, "pwm_clk_prescal": 24, "dport_peri_clk_en_reg": 24, "dport_peri_rst_en_reg": 24, "simultan": [24, 86], "gpio_out_reg": 24, "0x3ff44004": 24, "31": [24, 27, 29, 48, 64, 73, 130, 132, 138, 151, 160, 161, 171, 219, 222, 223, 227, 250, 252, 254, 255], "gpio_out1_reg": 24, "0x3ff44010": 24, "gpio_enable_reg": 24, "0x3ff44020": 24, "gpio_enable1_reg": 24, "0x3ff4402c": 24, "m16": 24, "m17": 24, "m32": 24, "m33": [24, 241], "p16": 24, "p17": 24, "p32": 24, "p33": 24, "0x0": [24, 162], "0x30000": 24, "0x3": 24, "36": [24, 48, 83, 174, 254], "pwm": [25, 29, 41, 49, 74, 87, 89, 103, 105, 143, 145, 184, 200, 241, 249, 265], "artifici": [25, 41, 162], "digit": [25, 30, 32, 41, 49, 54, 63, 74, 80, 82, 87, 124, 130, 140, 145, 150, 183, 193, 194, 197, 200, 230], "rapidli": [25, 41, 199, 240, 252], "toggl": [25, 41, 42, 49, 63, 139, 144, 145, 178, 183, 184, 195, 199, 205, 212, 213, 232, 240, 259, 263, 265], "hz": [25, 27, 74, 80, 81, 85, 88, 89, 103, 105, 113, 124, 127, 131, 141, 145, 154, 166, 175, 178, 195, 200, 211, 213, 242, 255, 259, 265], "1024": [25, 27, 28, 60, 133, 171, 229], "22": [25, 43, 48, 54, 117, 135, 166, 174, 236, 254, 271], "200": [25, 27, 36, 104, 107, 117, 124, 134, 161, 175, 178, 216, 250, 255], "192": [25, 33, 35, 96, 97, 98, 99, 100, 101, 104, 166, 175, 258, 259, 263, 266], "300": [25, 64, 124, 258, 259], "320": [25, 125], "384": 25, "400": [25, 52, 74, 104, 125, 134, 197, 249], "576": 25, "640": [25, 117, 211], "600": [25, 173, 258], "704": 25, "768": 25, "700": [25, 52, 211], "832": 25, "896": 25, "800": [25, 74, 116], "960": 25, "smooth": [25, 117, 141], "sleep": [25, 26, 49, 52, 62, 63, 74, 82, 83, 96, 101, 118, 124, 130, 135, 141, 161, 175, 178, 183, 195, 200, 235, 239, 242, 245, 248, 250, 255, 266, 268, 272], "f_min": 25, "f_max": 25, "delta_f": 25, "wave": [25, 134, 179, 197], "oscilloscop": 25, "duty_max": 25, "delta_d": 25, "elif": [25, 54, 64, 161, 196, 200], "wrong": [25, 42, 79, 120, 162, 205, 208, 209, 210, 216, 246, 263, 264], "huzzah": [26, 27, 33, 40], "handi": [26, 267], "variou": [26, 53, 58, 63, 73, 75, 96, 104, 128, 135, 161, 162, 164, 210, 232, 233, 235, 240, 258, 267], "eventu": [26, 181, 232], "lock": [26, 49, 93, 94, 117, 161, 232], "lack": [26, 63, 71, 161, 232, 240], "bb": [26, 47, 117], "viewtop": 26, "php": 26, "67": [26, 48, 81, 254], "225": 26, "lx106": 26, "overclock": [26, 249], "160mhz": [26, 40, 175], "96kb": [26, 173], "64kb": [26, 245, 253], "512kb": [26, 33], "deep": [26, 62, 63, 64, 117, 130], "modest": 26, "big": [26, 55, 117, 124, 159, 160, 161, 162, 191, 240, 258], "fledg": [26, 230], "soon": [26, 39, 64, 74, 82, 93, 114, 126, 146, 156, 167, 232], "eps8266": 26, "_boot": 26, "refrain": 26, "earli": [26, 54, 66, 161, 228], "diagnos": [26, 232], "themselv": [26, 54, 117, 181, 186, 228], "aris": [26, 172, 228, 232], "customiz": 26, "mind": [26, 45, 55, 70, 258], "reflash": [26, 27, 33, 177, 202], "scratch": [26, 125, 181, 212, 250, 252, 268, 273], "my_app": 26, "clear": [26, 34, 49, 52, 54, 70, 73, 78, 97, 110, 111, 112, 117, 124, 133, 138, 145, 151, 154, 175, 178, 181, 191, 216, 221, 223, 224, 232, 235, 252, 264], "among": [26, 35, 68, 82, 96, 161, 265], "rtc": [26, 40, 49, 62, 63, 74, 130, 157, 161, 235, 241, 255, 258], "accuraci": [26, 30, 74, 81, 113, 134, 145, 175, 178, 255], "drift": 26, "minut": [26, 83, 130, 141, 161, 185, 213], "short": [26, 33, 39, 71, 74, 115, 117, 120, 125, 156, 159, 187, 192, 230, 232, 238], "wall": [26, 33, 187], "synchron": [26, 27, 80, 86, 122, 143, 158, 174, 175, 178, 255], "net": [26, 266], "ntptime": [26, 27, 157], "45h": 26, "localtim": [26, 49, 161, 255], "hour": [26, 83, 141, 161, 185], "deactiv": [26, 64, 87, 96, 98, 100], "consequ": [26, 65, 128, 132, 134, 221, 232, 240], "firstli": [26, 228, 232, 240], "occupi": [26, 65, 162, 218, 228], "secondli": [26, 228, 232, 240], "properli": [26, 64, 137, 157, 181, 258], "lmac": 26, "manner": [26, 74, 117, 125, 130, 228], "queue": [26, 49, 52, 58, 70, 93, 232], "deadlock": 26, "recoveri": 26, "reason": [26, 60, 71, 74, 78, 96, 104, 133, 156, 171, 181, 191, 218, 228, 230, 232, 258], "subsequ": [26, 65, 73, 78, 93, 133, 146, 156, 216, 217, 219, 228, 235, 237], "arriv": [26, 64, 71, 145, 146, 154, 232], "provok": [26, 228, 232], "repeatedli": [26, 122, 125, 141, 189, 240], "regardless": [26, 54, 64, 74, 87, 146, 155, 223, 229, 240], "sock": [26, 156, 157], "axtl": [26, 157], "diffi": 26, "hellman": 26, "exchang": [26, 54, 64], "ellipt": 26, "curv": 26, "cryptographi": 26, "ok": [26, 33, 36, 63, 155, 239], "certif": [26, 157, 241, 258], "duplex": [26, 49, 74, 130], "natur": [26, 57, 81, 92, 117, 162, 216, 232], "consider": [26, 117, 240, 258], "classic": [26, 78, 124, 133, 219, 232], "slow": [26, 117, 122, 124, 125, 141, 186, 191, 232, 233, 252], "reus": [26, 64, 78, 133, 230], "undergo": [26, 130, 134], "expens": [26, 40, 54, 117, 181, 191], "record": [26, 49, 70, 102, 117, 124, 166, 186], "16kb": 26, "5kb": 26, "adjust": [26, 29, 34, 65, 117, 124, 131, 141, 199, 203, 272], "googl": [26, 117, 119, 125], "max": [26, 29, 41, 49, 56, 63, 64, 113, 117, 124, 125, 130, 160, 258], "websit": [26, 36], "realli": [26, 44, 64, 89, 113, 121, 186, 188], "suscept": [26, 71], "man": [26, 94, 157], "middl": [26, 157, 162, 235, 240, 242], "attack": [26, 157, 166], "160000000": [27, 40], "160": [27, 112, 113, 117], "wlan": [27, 35, 49, 64, 96, 98, 101, 122, 123, 235, 261, 263, 264], "tim": [27, 88, 89, 131, 145, 178, 195, 200, 213, 232, 242, 250, 259, 265], "lowest": [27, 81, 87, 124, 166, 175, 212], "denomin": 27, "wakeup": [27, 49, 130, 141], "bidirect": [27, 60], "attach": [27, 42, 79, 82, 90, 109, 113, 124, 127, 137, 158, 164, 175, 177, 181, 186, 188, 204, 205, 213], "incom": [27, 52, 54, 64, 93, 146, 232, 239], "straight": [27, 36, 42, 74, 186, 187, 188, 211], "stdin": [27, 44, 48, 49, 160, 239, 248], "detach": 27, "reattach": 27, "dupterm": [27, 49, 128, 263], "soft": [27, 42, 49, 64, 73, 74, 166, 205, 208, 232, 245, 246, 263, 264, 266], "recov": [27, 181, 190, 193, 228, 258], "dedic": [27, 85, 175, 211, 240], "0v": [27, 175, 178, 179, 180, 183, 250, 255], "gpio13": 27, "gpio14": 27, "ntp": 27, "settim": 27, "irq": [27, 39, 40, 49, 52, 54, 64, 73, 74, 80, 82, 83, 88, 89, 90, 93, 101, 130, 145, 148, 151, 153, 154, 158, 242, 252, 254, 258, 259, 265, 268, 271], "gpio16": [27, 39, 40, 250], "alarm0": [27, 40, 49, 83, 259], "fire": [27, 40, 88, 158], "alarm": [27, 40, 49, 83, 242, 259], "apa": 27, "bright": [27, 29, 34, 43, 73, 106, 107, 117, 124, 200, 205], "apa102_writ": 27, "clock_pin": 27, "data_pin": 27, "rgbi_buf": 27, "monochrom": [27, 65, 138], "ol": [27, 32, 49], "ssd1306_i2c": [27, 43], "face": [27, 117, 118, 187], "58": [28, 48, 254], "volt": [28, 179], "toler": [28, 178, 179, 183, 229, 258], "divid": [28, 63, 81, 117, 131, 133, 142, 145, 154, 168, 175, 213, 255], "circuit": [28, 62, 197, 199, 204, 230, 242], "individu": [29, 34, 47, 63, 73, 139, 146, 150, 162, 184, 230, 232], "rgb": [29, 49, 73, 74, 95, 105, 110, 112, 113, 117, 120, 127, 177, 178, 184, 186, 203, 256], "neopixel": [29, 32, 49, 70, 74, 254], "persist": [29, 43, 73, 136, 152, 229, 240, 258, 273], "vision": [29, 49, 70, 124, 182, 183, 184, 187, 191], "strip": [29, 34, 74, 95, 186, 228], "gpio5": 29, "gpio4": [29, 34], "red": [29, 34, 65, 95, 112, 117, 124, 178, 181, 184, 187, 193, 195, 198, 202, 205, 209, 211, 212, 213, 232, 255, 256, 271], "green": [29, 34, 65, 110, 111, 112, 113, 117, 120, 124, 127, 178, 181, 184, 186, 189, 193, 195, 198, 202, 205, 209, 210, 214, 232, 240, 255, 256, 271], "blue": [29, 30, 34, 43, 65, 112, 117, 124, 178, 181, 184, 195, 196, 202, 205, 210, 255], "apa102c": 29, "swap": [29, 110, 111, 112, 113, 117, 120, 124, 125, 127, 175], "round": [29, 49, 54, 56, 81, 92, 117, 154, 211, 232], "prefer": [29, 44, 54, 67, 70, 85, 131, 150, 153, 171, 190, 233], "rbg": 29, "customis": [29, 136, 152], "quarter": [29, 34], "demonstr": [29, 219, 220], "1m": [29, 130, 228, 229, 240, 258], "dim": [29, 43, 110, 111, 112, 184, 200], "wheel": [29, 117], "transit": [29, 79, 145, 166], "85": [29, 254], "170": 29, "demo": [29, 34, 204, 235], "0xff0000": 29, "rainbow": [29, 117], "fade": [29, 34, 201], "153": 29, "250": [29, 64], "dht": [30, 49], "cost": [30, 81, 87, 112, 117, 122, 124, 127, 151, 191, 228, 240, 252], "capacit": [30, 204], "thermistor": 30, "air": [30, 63], "whole": [30, 62, 117, 120, 125, 133, 148, 181, 186, 197], "dalla": 30, "payload": [30, 49, 54, 109, 117, 122, 133], "checksum": [30, 67, 109, 171, 258], "degre": [30, 43, 49, 92, 110, 111, 112, 113, 117, 118, 120, 124, 127, 131, 143, 170, 178, 195, 211], "celsiu": [30, 113, 118, 124, 170], "percentag": [30, 89, 103, 125, 133, 145], "degrad": 30, "am2301": 30, "am2302": 30, "vdd": 30, "gnd": [30, 140, 166, 195, 202, 244, 262], "dht12": 30, "am2320": 30, "am2321": 30, "am2322": 30, "sold": 30, "1mbyte": [31, 33, 62], "upon": [31, 35, 52, 65, 74, 88, 130, 160, 233, 239], "fat": [31, 49, 128, 181, 245, 268, 273], "wb": [31, 60, 67, 156], "rb": [31, 60, 67, 117, 156], "port_config": 31, "dir": [31, 49, 56, 128, 235, 239], "yourself": [31, 99, 117, 186, 208, 234, 263], "web": [31, 35, 123, 186, 189, 241], "quick": [31, 49, 156, 183, 200, 220, 228, 230, 240, 248, 258], "prompt": [32, 36, 54, 160, 181, 190, 193, 201, 203, 204, 211, 212, 214, 230, 235, 239, 246, 247, 258, 261, 269], "ssd1306": [32, 49], "mip": [33, 49, 95, 230, 235], "tune": 33, "1024kb": 33, "histori": 33, "basi": [33, 203, 230], "nodemcu": 33, "20170108": 33, "fastest": 33, "dout": 33, "slowest": [33, 49], "fresh": [33, 35, 235], "essid": 33, "xxxxxx": [33, 42], "upper": [33, 65, 73, 88, 117], "Its": [33, 128, 219, 236, 240], "168": [33, 35, 96, 97, 98, 99, 100, 101, 104, 145, 175, 213, 258, 259, 263, 266], "wart": 33, "suppli": [33, 53, 82, 87, 117, 131, 140, 166, 175, 193, 202, 240, 255, 262], "unearth": 33, "electromagnet": 33, "interfer": [33, 64], "electr": [33, 85, 202, 230, 262], "breakdown": [33, 192], "advis": [33, 71, 217], "regard": [33, 84, 124, 232], "000": [33, 64, 242], "cite": 33, "reput": 33, "reject": [33, 54, 64], "appar": 33, "cheap": 33, "judgement": 33, "price": 33, "sale": 33, "purchas": 33, "didn": [33, 181], "had": [33, 115, 124, 232, 239], "doesn": [33, 36, 42, 46, 49, 55, 63, 71, 86, 87, 89, 117, 122, 145, 150, 156, 161, 162, 181, 184, 186, 190, 191, 193, 218, 220, 230, 236, 238, 239, 258], "megabit": 33, "pip2": 33, "mandatori": [33, 55, 82, 166], "corrupt": [33, 124, 181, 193, 202, 209, 229, 262, 264], "check_fw": 33, "ws2812": [34, 49, 70, 74], "serial": [34, 38, 49, 55, 62, 74, 80, 122, 130, 148, 181, 182, 183, 192, 193, 208, 210, 214, 230, 235, 238, 239, 244, 247, 253, 254, 258, 263], "rgbw": [34, 95], "rgby": 34, "bpp": [34, 95, 117], "orang": [34, 193, 202, 209, 214], "yellow": [34, 43, 195, 205], "fanci": 34, "j": [34, 176, 235, 239], "bounc": [34, 135, 138, 258], "inact": [35, 87, 96, 97, 145], "endpoint": [35, 75, 149], "proce": [35, 196, 232, 258, 266], "email": [35, 185], "smtp": 35, "telnet": [35, 36, 238, 263, 266], "ssh": [35, 238], "talk": [35, 109, 110, 117, 122, 180, 183, 186], "few": [36, 42, 49, 62, 70, 71, 87, 162, 166, 173, 174, 175, 178, 180, 181, 185, 186, 198, 202, 209, 230, 232, 253, 262], "blinkenlight": 36, "nl": 36, "anyon": [36, 188], "usernam": [36, 238], "awai": [36, 42, 74, 87, 117, 124, 211, 213], "addr_info": 36, "getaddrinfo": [36, 49, 52, 96, 156, 258], "towel": 36, "addr": [36, 54, 63, 73, 79, 96, 118, 137, 162, 229], "exactli": [36, 42, 45, 52, 64, 82, 87, 92, 135, 141, 148, 162, 175, 178, 184, 211, 232, 252, 255, 262], "recv": [36, 49, 64, 78, 96, 133, 137, 142, 146, 147, 148, 156, 157, 178, 195, 232], "utf8": [36, 44, 117], "anim": [36, 73, 204], "webpag": 36, "80": [36, 96, 113, 117, 122, 133, 156, 186, 203, 204, 254], "url": [36, 117, 156, 164, 230, 237, 258], "http_get": 36, "_": [36, 45, 49, 232, 240, 258], "nhost": [36, 96], "k": [36, 58, 235, 257], "serv": [36, 71, 90, 203, 224, 230, 240], "doctyp": 36, "titl": 36, "bodi": [36, 44, 164, 240], "h1": 36, "border": 36, "tr": 36, "th": [36, 54], "cl": 36, "cl_file": 36, "rwb": [36, 156], "row": [36, 41, 42, 49, 65, 93, 117, 175, 228, 254], "td": 36, "join": [36, 186], "ncontent": 36, "bring": [37, 189, 239], "hopefulli": [37, 191], "luck": 37, "bu": [38, 49, 73, 74, 85, 87, 99, 109, 113, 116, 122, 126, 130, 132, 137, 142, 147, 148, 158, 166, 183, 191, 192, 197, 203, 204, 249], "onewir": [38, 49], "dat": 38, "750m": 38, "Or": [39, 64, 117, 134, 162, 187, 235], "irq_fal": [39, 49, 82, 135, 145], "irq_ris": [39, 49, 82, 135, 178, 195, 258], "rise": [39, 82, 135, 145], "abil": [40, 42, 54, 71, 128, 181, 186, 232, 234], "fly": [40, 90, 212], "consumpt": [40, 74, 130, 183, 187, 207, 228, 258], "heavi": 40, "real": [40, 49, 57, 74, 87, 117, 128, 130, 156, 161, 180, 232, 267], "drastic": [40, 106, 107], "batteri": [40, 64, 131, 161, 175, 202, 211, 262], "perhap": [40, 70, 88, 89], "1khz": [41, 88, 259], "p12": 41, "pwm12": 41, "beyond": [41, 45, 70, 78, 96, 100, 133, 219, 230, 232, 253], "min": [41, 49, 56, 69, 113, 117, 124, 125, 148], "clip": [41, 73, 113, 115, 117, 120], "l": [41, 44, 51, 65, 117, 159, 174, 192, 205, 221, 228, 235, 238], "sin": [41, 49, 57, 92, 134, 179, 197, 214], "pi": [41, 49, 57, 92, 134, 151, 197, 237, 249, 250], "nice": [41, 87, 186], "motor": [41, 49, 143, 145, 187, 201], "50hz": 41, "115": 41, "77": [41, 254], "centr": [41, 143, 211], "far": [42, 49, 60, 70, 115, 120, 191, 205, 208, 211, 239, 263], "easiest": [42, 205, 208, 237, 263], "emul": [42, 147, 192, 272], "teraterm": 42, "picocom": [42, 208, 244, 263, 272], "minicom": [42, 208, 263, 272], "Of": [42, 162, 211], "cours": [42, 71, 162, 166, 211], "favourit": [42, 205, 210], "b115200": 42, "hit": [42, 71, 124, 263], "firefox": 42, "chrome": 42, "came": [42, 202, 262], "wide": [42, 45, 85, 87, 90, 117, 146, 157, 221, 230, 234], "reconfigur": [42, 82, 90, 91], "click": [42, 117, 123, 181, 186, 189, 190, 208, 210, 263, 267], "press": [42, 114, 144, 151, 170, 186, 193, 199, 203, 205, 208, 209, 210, 211, 212, 214, 228, 229, 235, 239, 246, 258, 263, 264, 272], "shouldn": [42, 196], "arrow": [42, 117, 189], "respond": [42, 54, 64, 79, 137, 212, 232, 239, 271], "4922235242952026704037113243122008064": 42, "right": [42, 43, 58, 65, 73, 80, 114, 117, 118, 150, 154, 161, 162, 166, 172, 175, 181, 183, 186, 187, 188, 196, 198, 202, 203, 208, 210, 211, 213, 214, 223, 232, 260, 263], "cursor": [42, 117, 186, 197, 208, 239, 263, 272], "backspac": [42, 73, 239], "home": [42, 64], "recal": 42, "ma": [42, 178, 183], "compound": [42, 239], "dot": [42, 73, 138, 156, 162, 239], "did": [42, 117, 192, 209], "earlier": [42, 63, 66, 70, 117, 146, 161, 162, 235], "recreat": 42, "delai": [42, 49, 82, 88, 89, 115, 124, 130, 138, 151, 154, 161, 179, 196, 197, 198, 199, 204, 205, 214, 228, 232, 235, 240, 252], "plai": [42, 117, 122, 124, 186, 197, 202, 214, 252, 262], "perman": [42, 228], "varieti": [43, 85, 128, 140, 145, 228, 232, 236, 265], "128x64": [43, 124], "128x32": [43, 138], "72x40": 43, "64x48": 43, "dc": [43, 110], "ssd1306_spi": 43, "500000": [43, 86, 170, 175, 178, 242, 255], "0x3c": 43, "poweroff": 43, "poweron": 43, "redrawn": 43, "rotat": [43, 49, 110, 111, 112, 113, 117, 118, 120, 124, 127, 178, 195], "180": [43, 110, 111, 112, 113, 117, 118, 120, 124, 127], "framebuff": [43, 49, 124, 240], "graphic": [43, 260], "primit": [43, 49, 70, 162], "hline": [43, 49, 65], "draw": [43, 49, 95, 110, 111, 112, 113, 117, 120, 138], "horizont": [43, 65, 73, 110, 111, 112, 113, 115, 117, 120, 124, 127, 186], "vline": [43, 49, 65], "vertic": [43, 65, 73, 110, 111, 112, 113, 115, 117, 120, 124, 127, 186], "height": [43, 49, 65, 73, 110, 111, 112, 113, 115, 116, 117, 120, 124, 125, 127], "127": [43, 64, 117, 134, 138, 156, 197, 254, 255], "63": [43, 48, 73, 254, 255], "rect": [43, 49, 57, 65, 73, 124, 125, 203], "107": [43, 254, 259, 266], "43": [43, 48, 64, 174, 254], "rectangl": [43, 49, 65, 73, 110, 111, 112, 113, 120, 125, 127, 203], "outlin": [43, 65, 73, 228, 232], "117": [43, 254], "53": [43, 48, 174, 254], "fill_rect": 43, "solid": [43, 49, 117, 186], "scroll": [43, 49, 65, 73, 186, 214], "coordin": [43, 52, 65, 73, 117, 125, 203, 214], "framebuf": [43, 49, 70, 73], "fbuf": [43, 65], "mono_vlsb": [43, 49, 65], "blit": [43, 49, 65], "logo": 43, "28": [43, 48, 54, 113, 133, 166, 174, 254], "24": [43, 48, 54, 102, 105, 111, 113, 126, 166, 174, 219, 254, 255], "tue": [44, 45, 47, 48], "05": [44, 45, 47, 48, 117, 208], "mar": [44, 45, 47, 48], "2024": [44, 45, 47, 48, 172], "02": [44, 45, 47, 48], "06": [44, 45, 47, 48, 272], "cpy": [44, 45, 46, 47, 49], "attributeerror": [44, 47, 49, 56], "sh": [44, 45, 47, 48, 176, 190], "bar": [44, 45, 49, 58, 117, 124, 182, 219, 228, 232, 233, 240], "indexerror": [44, 49, 51, 56, 58, 69], "x01": [44, 47, 156, 239], "x02": [44, 47, 156], "x00": [44, 239, 255], "strive": 44, "__mod__": 44, "leav": [44, 65, 78, 85, 117, 133, 181, 188, 214, 235, 239, 263, 264], "abc": [44, 90, 137, 146, 239], "rare": [44, 229, 232, 233], "operand": [44, 215, 216], "1g": [44, 175], "1e": 44, "unless": [44, 54, 55, 64, 68, 78, 90, 110, 111, 112, 115, 117, 120, 121, 128, 133, 146, 174, 186, 229, 232, 236], "wikipedia": [44, 161, 162, 211], "wiki": [44, 161, 162, 176, 220, 241], "composition_over_inherit": 44, "__add__": [44, 49, 51], "84": [44, 145, 254], "del": [44, 45, 47, 55, 70], "abcdefghi": 44, "acegi": 44, "aa": 45, "ab": [45, 49, 56, 92, 196, 268], "upi": [45, 46, 49, 204, 220], "aa1": 45, "1ab": 45, "a1": [45, 174, 235, 254, 255], "1a": 45, "balanc": [45, 100, 117, 124], "rf": [45, 158, 262], "microppython": 45, "hierarchi": [45, 49, 236], "overrid": [45, 49, 73, 133, 142, 193, 229, 237, 257, 258], "__str__": [45, 49, 140], "func_x": 45, "__enter__": 45, "func": [45, 93, 160, 228, 240], "expr": [45, 93], "modules3": 45, "inher": [45, 71, 232], "portabl": [45, 87, 88, 89, 156, 161], "workspac": 45, "cpydiff": 45, "simplic": [45, 49, 161, 258], "belong": 45, "modules2": 45, "subpkg": 45, "nth": [46, 49, 205], "mp_small_int": [46, 49], "adjac": [46, 49, 81, 250], "brace": [46, 49], "unbalanc": [46, 49], "nest": [46, 49, 93, 162, 219, 221, 236], "bracket": [46, 49, 149], "__del__": [46, 49], "mro": [46, 49], "compliant": [46, 49, 240], "getter": [46, 49], "__exit__": [46, 49], "aren": [46, 49, 55, 71, 117, 186], "eval": [46, 48, 49, 56, 228, 230, 235, 239], "__all__": [46, 49], "unsupport": [46, 49], "__init__": [46, 49, 59, 229, 232, 237, 240], "__path__": [46, 49], "implicit": [47, 49, 71, 161, 162, 235], "truncat": [47, 54], "257": 47, "overflowerror": 47, "sign": [47, 63, 92, 130, 159, 161, 162, 196, 200, 205, 208, 214, 215, 216, 219, 220, 221, 258], "deflt": 47, "dump": [47, 49, 60, 67, 72, 73, 98, 99, 135, 188, 228], "new_vari": 47, "prng": [47, 149], "32bit": 47, "4275605868765694853": 47, "cast": [47, 117, 240], "wordsiz": 47, "340282366920938463463374607431768211455": 47, "fewer": 48, "29": [48, 54, 78, 117, 133, 174, 250, 252, 259], "35": [48, 117, 133, 171, 174, 254], "37": [48, 174, 254], "45": [48, 143, 174, 178, 195, 211, 254], "46": [48, 174, 197, 254], "47": [48, 138, 171, 174, 254], "49": [48, 174, 254], "51": [48, 174, 239, 254], "52": [48, 174, 253, 254], "54": [48, 174, 254, 255], "55": [48, 254, 259], "56": [48, 249, 254], "57": [48, 254], "59": [48, 161, 254], "61": [48, 254], "62": [48, 122, 250, 254], "rebind": 48, "1and": 48, "1or": 48, "1if": 48, "1els": 48, "latin": 48, "letter": [48, 51, 96, 140, 150, 228], "micro": [49, 54, 124, 130, 160, 181, 193, 197, 201, 202, 208, 210, 213, 228, 256, 258], "__setitem__": [49, 51, 55, 95], "__len__": [49, 51, 95], "__iadd__": [49, 51], "__repr__": [49, 51], "current_task": [49, 52], "wait_for_m": [49, 52], "gather": [49, 52], "is_set": [49, 52], "threadsafeflag": [49, 232], "acquir": [49, 52, 94, 228, 232], "open_connect": [49, 52], "start_serv": [49, 52], "get_extra_info": [49, 52], "wait_clos": [49, 52], "readexactli": [49, 52], "drain": [49, 52, 80, 82, 140, 180], "get_event_loop": [49, 52], "new_event_loop": [49, 52], "run_forev": [49, 52], "run_until_complet": [49, 52], "set_exception_handl": [49, 52], "get_exception_handl": [49, 52], "default_exception_handl": [49, 52], "call_exception_handl": [49, 52], "hexlifi": [49, 53, 68, 100], "unhexlifi": [49, 53], "a2b_base64": [49, 53], "chr": [49, 56, 93, 148], "delattr": [49, 56], "divmod": [49, 56], "exec": [49, 56, 151, 154, 228, 235, 238], "filter": [49, 56, 78, 96, 102, 109, 117, 119, 132, 133, 145, 156, 166, 184, 186], "frozenset": [49, 56], "getattr": [49, 56], "hasattr": [49, 56], "from_byt": [49, 56], "to_byt": [49, 56], "isinst": [49, 56], "issubclass": [49, 56], "memoryview": [49, 54, 56, 78, 122, 133, 230, 240], "oct": [49, 56], "ord": [49, 56], "setattr": [49, 56], "sort": [49, 55, 56, 117, 124, 192, 254], "assertionerror": [49, 56], "keyerror": [49, 56], "memoryerror": [49, 56, 62, 93, 122], "notimplementederror": [49, 56], "oserror": [49, 52, 55, 56, 60, 61, 63, 64, 79, 109, 128, 146, 153, 155, 156, 157, 170], "runtimeerror": [49, 56, 93, 232], "systemexit": [49, 56, 160], "zerodivisionerror": [49, 56], "mathemat": [49, 70, 161], "log": [49, 57, 62, 92, 117, 205, 258], "log10": [49, 57, 92], "sqrt": [49, 57, 92, 117, 218], "popleft": [49, 58], "errno": [49, 70, 128, 156], "errorcod": [49, 61], "gzip": [49, 60, 70, 171], "gzipfil": [49, 60, 67], "sha256": [49, 68], "sha1": [49, 68, 258], "md5": [49, 68, 258], "digest": [49, 68, 164, 258], "hexdigest": [49, 68], "heappush": [49, 69], "heappop": [49, 69], "heapifi": [49, 69], "conceptu": 49, "stringio": [49, 71], "bytesio": [49, 55, 60, 67, 71], "getvalu": [49, 60, 71], "aco": [49, 92], "acosh": [49, 92], "asin": [49, 92], "asinh": [49, 92], "atan": [49, 92], "atan2": [49, 92], "atanh": [49, 92], "ceil": [49, 92, 124], "copysign": [49, 92], "cosh": [49, 92], "erf": [49, 92], "erfc": [49, 92], "expm1": [49, 92], "fab": [49, 92], "floor": [49, 92], "fmod": [49, 92], "frexp": [49, 92], "gamma": [49, 92, 117], "isfinit": [49, 92], "isinf": [49, 92], "isnan": [49, 92], "ldexp": [49, 92], "lgamma": [49, 92], "log2": [49, 92], "modf": [49, 92], "radian": [49, 92, 117, 170, 179], "sinh": [49, 92], "tan": [49, 92], "tanh": [49, 92], "trunc": [49, 92], "unam": [49, 128, 258], "chdir": [49, 128, 229, 235, 242], "getcwd": [49, 128, 245], "ilistdir": [49, 128], "rmdir": [49, 128, 235, 238], "statvf": [49, 128], "vfsfat": [49, 128, 175, 229, 268, 273], "mkf": [49, 128, 130, 229, 258, 264, 268, 273], "vfslfs1": [49, 128], "vfslfs2": [49, 128, 229, 268, 273], "abstractblockdev": [49, 63, 85, 128, 130, 136, 152, 168, 169, 229, 273], "readblock": [49, 63, 128, 130, 136, 152, 168, 169, 229], "writeblock": [49, 63, 128, 130, 136, 152, 168, 169, 229], "python_compil": [49, 129], "libc_ver": [49, 129], "getrandbit": [49, 149], "randint": [49, 149, 203], "randrang": [49, 149], "uniform": [49, 149], "seed": [49, 149], "regex": 49, "unregist": [49, 155], "ipol": [49, 155], "inet_ntop": [49, 156], "inet_pton": [49, 156], "af_inet": [49, 156, 258], "af_inet6": [49, 156], "sock_stream": [49, 156, 157, 258], "sock_dgram": [49, 156], "ipproto_udp": [49, 156], "ipproto_tcp": [49, 156], "sendto": [49, 156], "recvfrom": [49, 156], "settimeout": [49, 156], "setblock": [49, 156], "wrap_socket": [49, 157, 258], "load_cert_chain": [49, 157], "load_verify_loc": [49, 157], "set_ciph": [49, 157], "verify_mod": [49, 157], "sslerror": [49, 157], "protocol_tls_cli": [49, 157], "protocol_tls_serv": [49, 157], "cert_non": [49, 157], "cert_opt": [49, 157], "cert_requir": [49, 157, 258], "calcsiz": [49, 159], "pack_into": [49, 159], "unpack_from": [49, 159], "atexit": [49, 160], "print_except": [49, 160], "settrac": [49, 160], "byteord": [49, 56, 160], "maxsiz": [49, 160], "ps1": [49, 160], "ps2": [49, 160], "stdout": [49, 160], "tracebacklimit": [49, 160], "version_info": [49, 160], "gmtime": [49, 161], "mktime": [49, 161, 255], "ticks_u": [49, 161, 240, 254], "ticks_cpu": [49, 161], "ticks_add": [49, 161], "tick": [49, 120, 130, 141, 145, 161, 189, 240, 265], "fp": [49, 117, 124, 161, 186, 189], "avg": [49, 161, 259], "multithread": [49, 70], "ble": [49, 219, 221], "broadcast": [49, 96, 100, 127], "role": 49, "advertis": [49, 64], "gap_advertis": [49, 54], "observ": 49, "scanner": 49, "gap_scan": [49, 54], "central": [49, 252], "gap_connect": [49, 54], "gap_disconnect": [49, 54], "gatt": 49, "gatts_register_servic": [49, 54], "gatts_read": [49, 54], "gatts_writ": [49, 54], "gatts_notifi": [49, 54], "gatts_ind": [49, 54], "gatts_set_buff": [49, 54], "gattc_discover_servic": [49, 54], "gattc_discover_characterist": [49, 54], "gattc_discover_descriptor": [49, 54], "gattc_read": [49, 54], "gattc_writ": [49, 54], "gattc_exchange_mtu": [49, 54], "l2cap": 49, "orient": [49, 73, 117, 205], "l2cap_listen": [49, 54], "l2cap_connect": [49, 54], "l2cap_disconnect": [49, 54], "l2cap_send": [49, 54], "l2cap_recvinto": [49, 54], "bond": 49, "gap_pair": [49, 54], "gap_passkei": [49, 54], "uuid": 49, "btree": [49, 70], "flush": [49, 52, 55, 71, 73, 90, 117, 120, 124, 230], "__delitem__": [49, 55], "__contains__": [49, 55], "incl": [49, 55], "desc": [49, 55], "cryptolib": [49, 70], "cryptograph": [49, 68, 70], "ae": [49, 59], "encrypt": [49, 54, 59, 63, 64, 98, 157, 258], "decrypt": [49, 59], "deflat": [49, 67, 70, 171], "deflateio": [49, 60, 67, 171], "auto": [49, 60, 64, 117, 124, 151, 154, 171, 186, 208, 229, 273], "manipul": [49, 73, 117, 240, 268], "shape": [49, 117, 125], "ellips": [49, 65, 117], "poli": [49, 65], "mono_hlsb": [49, 65], "mono_hmsb": [49, 65], "rgb565": [49, 65, 110, 111, 112, 113, 115, 117, 120, 124, 127, 186, 189], "gs2_hmsb": [49, 65], "gs4_hmsb": [49, 65], "gs8": [49, 65], "mem8": [49, 74, 158], "mem16": [49, 74, 158, 240], "soft_reset": [49, 74, 235, 239, 242, 266], "disable_irq": [49, 74, 130, 232, 239, 242], "enable_irq": [49, 74, 130, 232, 239, 242], "unique_id": [49, 74, 130, 239, 242, 259], "time_pulse_u": [49, 74, 242], "pwron_reset": [49, 74], "hard_reset": [49, 74, 130], "wdt_reset": [49, 74], "wlan_wak": [49, 74], "pin_wak": [49, 74], "rtc_wake": [49, 74], "__call__": [49, 82, 144], "open_drain": [49, 82], "alt": [49, 82, 140, 145, 242, 258, 259, 263], "alt_open_drain": [49, 82], "pull_down": [49, 82, 135, 140, 180, 199, 258], "pull_hold": [49, 82], "irq_low_level": [49, 82], "irq_high_level": [49, 82], "area": [49, 73, 74, 110, 111, 112, 113, 117, 120, 124, 125, 127, 130, 158, 169, 186, 202, 262], "setfilt": [49, 78, 133, 195], "clearfilt": [49, 78, 133], "rxcallback": [49, 78, 133], "loopback": [49, 78, 133, 195], "silent": [49, 78, 133, 166], "silent_loopback": [49, 78, 133], "error_act": [49, 78, 133], "error_warn": [49, 78, 133], "error_pass": [49, 78, 133], "bus_off": [49, 78, 133], "list32": [49, 78, 133], "sendbreak": [49, 90, 146], "txdone": [49, 90], "rx_ani": [49, 90, 242], "msb": [49, 86, 142, 216, 236, 268], "lsb": [49, 86, 142, 236, 242, 255], "readfrom_into": [49, 79], "writevto": [49, 79], "readfrom_mem": [49, 79, 195, 242, 259, 268], "readfrom_mem_into": [49, 79], "writeto_mem": [49, 79, 195, 259, 268], "inter": [49, 74, 242], "sound": [49, 74, 119, 131, 197], "shift": [49, 65, 73, 80, 151, 154, 162, 198, 252, 263], "alarm_left": [49, 83, 242], "wdt": [49, 74, 241], "watchdog": [49, 73, 74, 79], "opt_level": [49, 93, 233], "alloc_emergency_exception_buf": [49, 88, 89, 93, 145, 232], "mem_info": [49, 63, 93, 228, 235], "qstr_info": [49, 93, 228], "stack_us": [49, 93], "heap_lock": [49, 93], "heap_unlock": [49, 93], "kbd_intr": [49, 93], "adapt": [49, 117, 175, 228, 230, 240], "abstractn": [49, 96], "winc": [49, 96], "shield": [49, 70, 96, 112, 113, 124, 175, 186, 262], "start_ap": [49, 98], "connected_sta": [49, 98], "wait_for_sta": [49, 98], "netinfo": [49, 98], "rssi": [49, 54, 96, 98, 100, 101], "fw_version": [49, 98], "fw_dump": [49, 98], "fw_updat": [49, 98], "wpa_psk": [49, 98], "802_1x": [49, 98], "mode_sta": [49, 98], "mode_ap": [49, 98], "mode_p2p": [49, 98], "mode_bsp": [49, 98], "mode_firmwar": [49, 98], "pm_perform": [49, 64, 100], "pm_powersav": [49, 100], "pm_none": [49, 64, 100], "lan": [49, 96, 122, 123, 175], "countri": [49, 96], "hostnam": [49, 96, 100, 157], "phy_mod": [49, 96], "uctyp": [49, 70, 219, 228], "little_endian": [49, 162], "big_endian": [49, 162], "addressof": [49, 162, 219], "bytes_at": [49, 162], "bytearray_at": [49, 162], "uint8": [49, 125, 162], "int8": [49, 125, 162], "uint16": [49, 162], "int16": [49, 162], "uint32": [49, 162], "int32": [49, 162], "uint64": [49, 162], "int64": [49, 162], "float32": [49, 162], "float64": [49, 162], "ptr": [49, 162, 240], "mutex": [49, 70, 122, 232], "ping": [49, 64, 70], "urequest": [49, 70], "openmv": [49, 78, 103, 104, 106, 112, 113, 114, 117, 118, 122, 123, 124, 125, 126, 130, 136, 137, 148, 172, 177, 179, 180, 181, 183, 184, 185, 187, 189, 190, 191, 192], "cam": [49, 78, 103, 104, 106, 112, 113, 117, 118, 122, 123, 124, 125, 130, 136, 137, 148, 177, 179, 180, 181, 183, 184, 185, 187, 189, 190, 191, 192], "pyb": [49, 52, 70, 78, 81, 94, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 178, 179, 180, 182, 184, 192, 195, 196, 197, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 229, 232, 238, 239], "udelai": [49, 130], "milli": [49, 54, 118, 130], "elapsed_milli": [49, 130], "elapsed_micro": [49, 130], "fault_debug": [49, 130], "wfi": [49, 130, 195, 207, 224], "standbi": [49, 130, 131, 141], "have_cdc": [49, 130], "hid": [49, 130, 214], "repl_uart": [49, 130, 195, 203], "rng": [49, 130, 232, 239, 242], "usb_mod": [49, 130, 147, 214], "hid_mous": [49, 130], "hid_keyboard": [49, 130], "read_tim": [49, 131], "adcal": 49, "list16": [49, 133, 195], "mask16": [49, 133], "mask32": [49, 133], "triangl": [49, 134], "write_tim": [49, 134, 197], "extint": [49, 130, 178, 195], "reg": [49, 99, 116, 124, 135, 140], "swint": [49, 135], "irq_rising_fal": [49, 135], "is_readi": [49, 137], "mem_read": [49, 137, 178, 204], "mem_writ": [49, 137, 178, 197, 204], "mapper": [49, 135, 140, 258], "af": [49, 140, 145, 156], "af_list": [49, 140], "af_od": [49, 140], "af_pp": [49, 140], "out_od": [49, 140, 180], "out_pp": [49, 140, 178, 180, 195], "pull_non": [49, 135, 140, 178, 195, 248], "pinaf": [49, 130], "servo": [49, 130, 145, 183, 201, 213], "hobbi": [49, 130, 201], "angl": [49, 117, 118, 143, 178, 195, 196, 211, 214], "pulse_width": [49, 143, 145, 200], "driven": [49, 82, 86, 97, 130, 145, 203, 255], "send_recv": [49, 142, 178, 195], "timerchannel": [49, 130, 200], "pulse_width_perc": [49, 145, 178, 195], "center": [49, 110, 111, 112, 113, 117, 120, 124, 127, 145, 175], "brk_off": [49, 145], "brk_low": [49, 145], "brk_high": [49, 145], "readchar": [49, 146], "writechar": [49, 146], "ct": [49, 90, 148, 242, 254], "flow": [49, 54, 70, 90, 102, 117, 119, 148, 239, 242, 252, 254], "transmitt": [49, 230], "usb_hid": [49, 130, 214], "human": [49, 130, 181, 214], "usb_vcp": [49, 130, 206], "comm": [49, 130], "setinterrupt": [49, 148, 206], "debug_mode_en": [49, 148], "irq_rx": [49, 148], "stm": [49, 70, 140, 198, 219, 240], "gpioa": [49, 74, 158, 198, 240], "gpiob": [49, 158], "gpio_bsrr": [49, 74, 158], "gpio_idr": [49, 74, 158], "gpio_odr": [49, 158, 240], "stm32wbxx": 49, "rfcore_statu": [49, 158], "rfcore_fw_vers": [49, 158], "rfcore_sys_hci": [49, 158], "stm32wlxx": 49, "subghz_c": [49, 158], "subghz_irq": [49, 158], "subghz_is_busi": [49, 158], "camera": [49, 70, 110, 111, 112, 113, 115, 117, 118, 120, 123, 127, 145, 178, 181, 184, 186, 187, 189], "snapshot": [49, 110, 111, 112, 113, 115, 117, 120, 123, 124, 127, 186, 189, 191], "skip_fram": [49, 110, 111, 112, 113, 115, 120, 124, 127, 189], "get_fb": [49, 124], "get_id": [49, 124], "alloc_extra_fb": [49, 124, 191], "dealloc_extra_fb": [49, 124], "set_pixformat": [49, 110, 111, 112, 113, 115, 120, 124, 127, 189], "get_pixformat": [49, 124], "set_frames": [49, 110, 111, 112, 113, 115, 120, 124, 127, 189], "get_frames": [49, 124], "set_framer": [49, 124], "get_framer": [49, 124], "set_window": [49, 117, 124], "get_window": [49, 124], "set_gainceil": [49, 124], "set_contrast": [49, 124], "set_bright": [49, 73, 124], "set_satur": [49, 124], "set_qual": [49, 124], "set_colorbar": [49, 124], "set_auto_gain": [49, 124], "get_gain_db": [49, 124], "set_auto_exposur": [49, 124], "get_exposure_u": [49, 124], "set_auto_whiteb": [49, 124], "get_rgb_gain_db": [49, 124], "set_auto_blc": [49, 124], "get_blc_reg": [49, 124], "set_hmirror": [49, 124], "get_hmirror": [49, 124], "set_vflip": [49, 124], "get_vflip": [49, 124], "set_transpos": [49, 124], "get_transpos": [49, 124], "set_auto_rot": [49, 124], "get_auto_rot": [49, 124], "set_framebuff": [49, 124], "get_framebuff": [49, 124], "disable_delai": [49, 124], "disable_full_flush": [49, 124], "set_lens_correct": [49, 124], "set_vsync_callback": [49, 124], "set_frame_callback": [49, 124], "get_frame_avail": [49, 113, 124], "set_color_palett": [49, 124], "get_color_palett": [49, 124], "__write_reg": [49, 118, 124], "__read_reg": [49, 118, 124], "grayscal": [49, 65, 110, 111, 112, 113, 115, 117, 120, 124, 125, 127, 186, 189], "bayer": [49, 117, 124], "yuv422": [49, 117, 124], "jpeg": [49, 73, 117, 120, 121, 122, 123, 124, 186], "ov2640": [49, 123, 124], "ov5640": [49, 123, 124], "ov7690": [49, 124], "ov7725": [49, 117, 124], "ov9650": [49, 124], "mt9v022": [49, 124], "mt9v024": [49, 124], "mt9v032": [49, 124], "mt9v034": [49, 124], "mt9m114": [49, 124], "lepton": [49, 113, 117, 124], "hm01b0": [49, 124], "hm0360": [49, 124], "gc2145": [49, 124], "paj6100": [49, 124], "frogeye2020": [49, 124], "qqcif": [49, 124], "qcif": [49, 124], "cif": [49, 124], "qqsif": [49, 124], "qsif": [49, 124], "sif": [49, 124, 127], "qqqqvga": [49, 124], "qqqvga": [49, 124], "qqvga": [49, 115, 124], "qvga": [49, 105, 113, 120, 124, 189], "vga": [49, 105, 124], "hqqqqvga": [49, 124], "hqqqvga": [49, 124], "hqqvga": [49, 124], "hqvga": [49, 124], "hvga": [49, 124], "b64x32": [49, 124], "b64x64": [49, 117, 124], "b128x64": [49, 124], "b128x128": [49, 124], "b160x160": [49, 124], "b320x320": [49, 124], "lcd": [49, 73, 105, 108, 110, 111, 112, 124, 126, 127, 193, 194, 201, 203], "qqvga2": [49, 124], "wvga": [49, 124], "wvga2": [49, 124], "svga": [49, 105, 124], "xga": [49, 105, 124], "wxga": [49, 124], "sxga": [49, 105, 124], "sxgam": [49, 124], "uxga": [49, 105, 124], "hd": [49, 105, 124], "fhd": [49, 105, 124], "qhd": [49, 124], "qxga": [49, 124], "wqxga": [49, 124], "wqxga2": [49, 124], "ioctl_set_readout_window": [49, 124], "ioctl_get_readout_window": [49, 124], "ioctl_set_triggered_mod": [49, 124], "ioctl_get_triggered_mod": [49, 124], "ioctl_set_fov_wid": [49, 124], "ioctl_get_fov_wid": [49, 124], "ioctl_trigger_auto_focu": [49, 124], "ioctl_pause_auto_focu": [49, 124], "ioctl_reset_auto_focu": [49, 124], "ioctl_wait_on_auto_focu": [49, 124], "ioctl_set_night_mod": [49, 124], "ioctl_get_night_mod": [49, 124], "ioctl_lepton_get_width": [49, 124], "ioctl_lepton_get_height": [49, 124], "ioctl_lepton_get_radiometri": [49, 124], "ioctl_lepton_get_refresh": [49, 124], "ioctl_lepton_get_resolut": [49, 124], "ioctl_lepton_run_command": [49, 124], "ioctl_lepton_set_attribut": [49, 124], "ioctl_lepton_get_attribut": [49, 124], "ioctl_lepton_get_fpa_temperatur": [49, 124], "ioctl_lepton_get_aux_temperatur": [49, 124], "ioctl_lepton_set_measurement_mod": [49, 124], "ioctl_lepton_get_measurement_mod": [49, 124], "ioctl_lepton_set_measurement_rang": [49, 124], "ioctl_lepton_get_measurement_rang": [49, 124], "ioctl_himax_md_en": [49, 124], "ioctl_himax_md_clear": [49, 124], "ioctl_himax_md_window": [49, 124], "ioctl_himax_md_threshold": [49, 124], "ioctl_himax_osc_en": [49, 124], "single_buff": [49, 124], "double_buff": [49, 124], "triple_buff": [49, 112, 124, 127], "video_fifo": [49, 124], "binary_to_grayscal": [49, 117], "binary_to_rgb": [49, 117], "binary_to_lab": [49, 117], "binary_to_yuv": [49, 117], "grayscale_to_binari": [49, 117], "grayscale_to_rgb": [49, 117], "grayscale_to_lab": [49, 117], "grayscale_to_yuv": [49, 117], "rgb_to_binari": [49, 117], "rgb_to_grayscal": [49, 117], "rgb_to_lab": [49, 117], "rgb_to_yuv": [49, 117], "lab_to_binari": [49, 117], "lab_to_grayscal": [49, 117], "lab_to_rgb": [49, 117], "lab_to_yuv": [49, 117], "yuv_to_binari": [49, 117], "yuv_to_grayscal": [49, 117], "yuv_to_rgb": [49, 117], "yuv_to_lab": [49, 117], "load_decriptor": [49, 117], "save_descriptor": [49, 117], "match_descriptor": [49, 117], "haarcascad": 49, "histogram": [49, 182], "l_bin": [49, 117], "a_bin": [49, 117], "b_bin": [49, 117], "get_percentil": [49, 117], "get_threshold": [49, 117], "get_statist": [49, 117], "percentil": 49, "l_valu": [49, 117], "a_valu": [49, 117], "b_valu": [49, 117], "statist": [49, 167, 235], "median": [49, 117], "stdev": [49, 117], "lq": [49, 117], "uq": [49, 117], "l_mean": [49, 117], "l_median": [49, 117], "l_mode": [49, 117], "l_stdev": [49, 117], "l_min": [49, 117], "l_max": [49, 117], "l_lq": [49, 117], "l_uq": [49, 117], "a_mean": [49, 117], "a_median": [49, 117], "a_mod": [49, 117], "a_stdev": [49, 117], "a_min": [49, 117], "a_max": [49, 117], "a_lq": [49, 117], "a_uq": [49, 117], "b_mean": [49, 117], "b_median": [49, 117], "b_mode": [49, 117], "b_stdev": [49, 117], "b_min": [49, 117], "b_max": [49, 117], "b_lq": [49, 117], "b_uq": [49, 117], "blob": [49, 63, 125, 176], "corner": [49, 65, 73, 110, 111, 112, 113, 117, 127, 181, 186, 211], "min_corn": [49, 117], "cx": [49, 117], "cxf": [49, 117], "cy": [49, 117], "cyf": [49, 117], "rotation_deg": [49, 117], "rotation_rad": [49, 117], "perimet": [49, 117], "elong": [49, 117], "densiti": [49, 117], "extent": [49, 117], "compact": [49, 72, 117, 230], "convex": [49, 65, 117], "x_hist_bin": [49, 117], "y_hist_bin": [49, 117], "major_axis_lin": [49, 117], "minor_axis_lin": [49, 117], "enclosing_circl": [49, 117], "enclosed_ellips": [49, 117], "x1": [49, 65, 73, 117, 124, 140, 195, 199, 200, 211, 240], "y1": [49, 65, 73, 117, 124, 145, 195], "x2": [49, 65, 73, 117, 124, 145, 195, 211], "y2": [49, 65, 73, 117, 124], "magnitud": [49, 117, 196], "theta": [49, 117], "rho": [49, 117], "circl": [49, 57, 65, 92, 214], "qrcode": 49, "ecc_level": [49, 117], "data_typ": [49, 117], "eci": [49, 117], "is_numer": [49, 117], "is_alphanumer": [49, 117], "is_binari": [49, 117], "is_kanji": [49, 117], "apriltag": [49, 191], "decision_margin": [49, 117], "ham": [49, 117], "x_translat": [49, 117], "y_translat": [49, 117], "z_translat": [49, 117], "x_rotat": [49, 117], "y_rotat": [49, 117], "z_rotat": [49, 117], "datamatrix": 49, "column": [49, 117, 186, 235, 254], "capac": [49, 117, 173, 228, 232], "barcod": 49, "displac": 49, "kptmatch": 49, "keypoint": 49, "imageio": [49, 186], "is_clos": [49, 117, 120], "buffer_s": [49, 117], "seek": [49, 71, 117, 230], "file_stream": [49, 117], "memory_stream": [49, 117], "get_pixel": [49, 73, 117], "set_pixel": [49, 73, 117], "mean_pool": [49, 117], "midpoint_pool": [49, 117], "to_bitmap": [49, 117], "to_grayscal": [49, 117], "to_rgb565": [49, 117], "to_rainbow": [49, 117], "to_ironbow": [49, 117], "to_jpeg": [49, 117], "to_png": [49, 117], "compress_for_id": [49, 117], "compressed_for_id": [49, 117], "crop": [49, 110, 111, 112, 113, 117, 120, 124, 127], "draw_lin": [49, 117], "draw_rectangl": [49, 117, 125], "draw_circl": [49, 117], "draw_ellips": [49, 117], "draw_str": [49, 117], "draw_cross": [49, 117], "draw_arrow": [49, 117], "draw_edg": [49, 117], "draw_imag": [49, 117], "draw_keypoint": [49, 117], "flood_fil": [49, 117], "mask_rectang": [49, 117], "mask_circl": [49, 117], "mask_ellips": [49, 117], "b_and": [49, 117], "b_nand": [49, 117], "b_or": [49, 117], "b_nor": [49, 117], "b_xor": [49, 117], "b_xnor": [49, 117], "erod": [49, 117], "dilat": [49, 117], "top_hat": [49, 117], "black_hat": [49, 117], "awb": [49, 117], "ccm": [49, 117], "gamma_corr": [49, 117], "negat": [49, 117, 150], "blend": [49, 113, 117, 120], "histeq": [49, 117], "midpoint": [49, 117], "morph": [49, 117], "gaussian": [49, 117], "laplacian": [49, 117], "bilater": [49, 117], "linpolar": [49, 117], "logpolar": [49, 117], "lens_corr": [49, 117], "get_histogram": [49, 117], "get_regress": [49, 117], "find_blob": [49, 117, 186], "find_lin": [49, 117], "find_line_seg": [49, 117], "find_circl": [49, 117], "find_rect": [49, 117], "find_qrcod": [49, 117], "find_apriltag": [49, 117, 124], "find_datamatric": [49, 117], "find_barcod": [49, 117], "find_displac": [49, 117, 124], "find_templ": [49, 117], "find_featur": [49, 117], "find_ey": [49, 117], "find_lbp": [49, 117], "find_keypoint": [49, 117], "find_edg": [49, 117], "find_hog": [49, 117], "stero_dispar": [49, 117], "img": [49, 113, 117, 125, 189], "rotation_corr": [49, 117], "png": [49, 117, 120, 258], "palette_rainbow": [49, 110, 111, 112, 113, 117, 120, 124, 127], "palette_ironbow": [49, 110, 111, 112, 113, 117, 120, 127], "bilinear": [49, 110, 111, 112, 113, 117, 120, 127], "bicub": [49, 110, 111, 112, 113, 117, 120, 127], "vflip": [49, 110, 111, 112, 113, 117, 120, 124, 127], "hmirror": [49, 110, 111, 112, 113, 117, 120, 124, 127], "transpos": [49, 110, 111, 112, 113, 117, 120, 124, 127], "extract_rgb_channel_first": [49, 110, 111, 112, 113, 117, 120, 127], "apply_color_palette_first": [49, 110, 111, 112, 113, 117, 120, 127], "scale_aspect_keep": [49, 110, 111, 112, 113, 117, 120, 127], "scale_aspect_expand": [49, 110, 111, 112, 113, 117, 120, 127], "scale_aspect_ignor": [49, 110, 111, 112, 113, 117, 120, 127], "rotate_90": [49, 110, 111, 112, 113, 117, 120, 127], "rotate_180": [49, 110, 111, 112, 113, 117, 120, 127], "rotate_270": [49, 110, 111, 112, 113, 117, 120, 127], "black_background": [49, 117], "search_ex": [49, 117], "search_d": [49, 117], "edge_canni": [49, 117], "edge_simpl": [49, 117], "corner_fast": [49, 117], "corner_agast": [49, 117], "tag16h5": [49, 117], "tag25h7": [49, 117], "tag25h9": [49, 117], "tag36h10": [49, 117], "tag36h11": [49, 117], "artoolkit": [49, 117], "ean2": [49, 117], "ean5": [49, 117], "ean8": [49, 117], "upc": [49, 117], "isbn10": [49, 117], "upca": [49, 117], "ean13": [49, 117], "isbn13": [49, 117], "i25": [49, 117], "databar": [49, 117], "databar_exp": [49, 117], "codabar": [49, 117], "code39": [49, 117], "pdf417": [49, 117], "code93": [49, 117], "code128": [49, 117], "tf": [49, 70], "tensor": [49, 70, 119], "classifi": [49, 119, 125], "segment": [49, 87, 117, 125, 133, 178, 184, 191], "regress": [49, 117, 125], "free_from_fb": [49, 125], "tf_classif": 49, "classif": [49, 71], "dection": 49, "classification_output": [49, 125], "tf_model": [49, 119], "tensorflow": [49, 119], "input_height": [49, 125], "input_width": [49, 125], "input_channel": [49, 125], "input_datatyp": [49, 125], "input_scal": [49, 125], "input_zero_point": [49, 125], "output_height": [49, 125], "output_width": [49, 125], "output_channel": [49, 125], "output_datatyp": [49, 125], "output_scal": [49, 125], "output_zero_point": [49, 125], "gif": [49, 70, 120, 186], "add_fram": [49, 115, 120], "mjpeg": [49, 70, 115, 186], "deint": [49, 102], "start_stream": [49, 102, 119], "stop_stream": [49, 102], "micro_speech": [49, 70], "speech": [49, 70], "microspeech": [49, 119], "audio_callback": [49, 119], "spidisplai": [49, 105], "refresh": [49, 105, 110, 111, 112, 113, 124, 127], "bgr": [49, 112], "byte_swap": [49, 112], "backlight": [49, 105, 110, 111, 112, 138], "bus_writ": [49, 108, 110, 112], "rgbdisplai": [49, 105], "dsidisplai": [49, 105, 108], "dsi": [49, 105, 108], "bus_read": [49, 108, 110], "displaydata": [49, 105], "display_id": [49, 109], "send_fram": [49, 109], "receive_fram": [49, 109], "frame_callback": [49, 109], "st7701": [49, 105, 110], "read_id": [49, 108, 116], "dacbacklight": [49, 105, 110, 111, 112], "pwmbacklight": [49, 105, 110, 111, 112], "tqvga": [49, 105], "fhvga": [49, 105], "fhvga2": [49, 105], "thvga": [49, 105], "fwvga": [49, 105, 110, 111], "fwvga2": [49, 105], "tfwvga": [49, 105], "tfwvga2": [49, 105], "wsvga": [49, 105], "sxga2": [49, 105], "fir": [49, 70], "thermal": [49, 70, 114, 117, 126], "infrar": [49, 63, 70], "radiometr": [49, 113, 124], "register_vsync_cb": [49, 113], "register_frame_cb": [49, 113], "trigger_ffc": [49, 113], "read_ta": [49, 113], "read_ir": [49, 113], "draw_ir": [49, 113], "fir_non": [49, 113], "fir_shield": [49, 113], "fir_mlx90621": [49, 113], "fir_mlx90640": [49, 113], "fir_mlx90641": [49, 113], "fir_amg8833": [49, 113], "fir_lepton": [49, 113], "tv": [49, 70], "tv_none": [49, 127], "tv_shield": [49, 127], "cpufreq": [49, 70], "set_frequ": [49, 104], "get_current_frequ": [49, 104], "get_supported_frequ": [49, 104], "buzzer": [49, 70, 87, 254], "resonant_freq": [49, 103], "imu": [49, 124], "acceleration_mg": [49, 118], "angular_rate_mdp": [49, 118], "temperature_c": [49, 118], "roll": [49, 118, 124, 145], "pitch": [49, 118, 184], "rpc": [49, 70], "rpc_master": 49, "rpc_slave": 49, "rpc_can_mast": 49, "rpc_can_slav": 49, "slave": [49, 137, 166, 175, 178, 242, 255, 268], "rpc_i2c_mast": 49, "rpc_i2c_slav": 49, "rpc_spi_mast": 49, "rpc_spi_slav": 49, "rpc_uart_mast": 49, "rpc_uart_slav": 49, "rpc_usb_vcp_mast": 49, "vcp": [49, 130, 148, 175, 214, 255], "rpc_usb_vcp_slav": 49, "rpc_network_mast": 49, "rpc_network_slav": 49, "rtsp": [49, 70], "rtsp_server": 49, "register_setup_cb": [49, 123], "register_play_cb": [49, 123], "register_pause_cb": [49, 123], "register_teardown_cb": [49, 123], "omv": [49, 70], "version_major": [49, 121], "version_minor": [49, 121], "version_patch": [49, 121], "version_str": [49, 121], "board_typ": [49, 121], "board_id": [49, 121], "disable_fb": [49, 121], "gt911": [49, 70], "touch": [49, 63, 70, 193, 194, 201, 214, 235, 238], "_read_reg": [49, 116], "_write_reg": [49, 116], "read_point": [49, 116], "ft5x06": [49, 70], "get_gestur": [49, 114], "get_point": [49, 114], "get_point_flag": [49, 114], "get_point_id": [49, 114], "get_point_x": [49, 114], "get_point_i": [49, 114], "touch_callback": [49, 114, 116], "update_point": [49, 114], "lcd_gesture_move_up": [49, 114], "lcd_gesture_move_left": [49, 114], "lcd_gesture_move_down": [49, 114], "lcd_gesture_move_right": [49, 114], "lcd_gesture_zoom_in": [49, 114], "lcd_gesture_zoom_out": [49, 114], "lcd_gesture_non": [49, 114], "lcd_flag_press": [49, 114], "lcd_flag_releas": [49, 114], "lcd_flag_mov": [49, 114], "tfp410": [49, 70, 111], "dvi": [49, 70], "hdmi": [49, 70, 105, 109, 111], "hotplug_callback": [49, 126], "ulab": 49, "numpi": 49, "pid": [49, 130, 235], "proport": [49, 211, 240], "bno055": 49, "tb6612": 49, "stepper": 49, "lsm6dsox": 49, "modbu": 49, "mqtt": [49, 64], "vl53l1x": 49, "tof": 49, "glossari": [49, 231], "aka": [49, 98, 100, 231], "shortcut": [49, 82, 156, 175, 186, 190], "tip": [49, 186, 220], "emerg": [49, 93], "isr": [49, 94, 151, 154], "overcom": [49, 218, 221], "reentranc": [49, 94], "cach": [49, 55, 162], "postscript": 49, "footnot": 49, "metadata": [49, 233], "freeze_as_str": [49, 233], "freeze_as_mpi": [49, 233], "freeze_mpi": [49, 233], "publish": [49, 172], "thumb2": [49, 231], "convent": [49, 142, 198, 228, 235, 238, 272], "categori": [49, 240], "bitwis": [49, 54, 80, 148, 220], "subtract": [49, 117, 141, 161, 216], "divis": [49, 258], "apsr": [49, 218, 221], "subroutin": 49, "pop": [49, 58, 69, 210, 219, 220, 256], "fpu": 49, "vf": [49, 63, 128, 175, 235], "littlef": [49, 128, 273], "hybrid": 49, "migrat": [49, 231], "readabl": [49, 219], "subscript": [49, 54, 74, 149, 158, 162, 240], "behav": [49, 155, 161, 214, 239, 258], "bit_length": 49, "endswith": 49, "subscr": 49, "ljust": 49, "rjust": 49, "rsplit": 49, "typecod": [49, 51, 134], "throw": [49, 109, 135, 191], "serialis": [49, 72, 228], "getenv": 49, "openmvcam": 49, "sd": [49, 80, 85, 124, 168, 181, 188, 195, 197, 202, 204, 209, 218, 228, 229, 242, 250, 258, 262, 264, 268, 273], "card": [49, 124, 168, 181, 188, 197, 202, 204, 209, 220, 228, 242, 258, 262, 264, 266, 268, 273], "desktop": [49, 124, 182, 210, 230], "raspberrypi": [49, 182], "menu": [49, 181, 182, 190, 244], "viewer": [49, 182], "video": [49, 115, 120, 123, 124, 181, 182, 197, 204, 262], "protect": [49, 54, 85, 94, 98, 181, 182, 202, 262], "settl": [50, 124], "grow": [51, 117, 124, 191, 240], "thrown": [51, 78, 122, 133, 232], "blink": [52, 122, 181, 245, 246, 250, 252, 258, 272], "period_m": 52, "led1": [52, 87, 245, 246, 248, 271], "led2": [52, 87, 248], "10_000": 52, "coro": 52, "trap": 52, "caller": [52, 60, 128, 198], "cleanup": 52, "return_except": 52, "promot": 52, "inject": [52, 235], "synchronis": [52, 133, 211, 232, 252], "possibli": [52, 63, 124, 128, 226, 240], "unlock": [52, 93, 94, 232], "atom": [52, 93, 232], "transport": [52, 122, 157], "reader": 52, "writer": 52, "could": [52, 63, 70, 117, 129, 135, 140, 146, 162, 181, 187, 200, 212, 228, 230, 232, 239, 255], "streamread": [52, 80], "streamwrit": [52, 80], "peernam": 52, "eof": [52, 156], "eoferror": 52, "accumul": [52, 58, 102, 117], "hexadecim": [53, 101], "invers": [53, 87, 92, 161], "base64": 53, "invalid": [53, 64, 65, 130, 161, 228, 232], "conform": [53, 160, 162], "2045": 53, "3548": 53, "energi": 54, "aiobl": [54, 235], "subject": [54, 172, 232], "singleton": [54, 64, 152], "radio": [54, 64, 96, 158, 208, 263], "param": [54, 64, 73, 78, 89, 96, 100, 101, 133, 156, 266], "quot": [54, 64, 96, 100], "addr_typ": 54, "addr_mod": 54, "0x00": [54, 86, 137], "0x01": [54, 137, 216], "0x02": 54, "rpa": 54, "0x03": 54, "nrpa": 54, "gap_nam": 54, "gap": 54, "0x1800": 54, "0x2a00": 54, "rxbuf": [54, 64, 90], "bursti": [54, 64], "mtu": 54, "att": 54, "_irq_mtu_exchang": 54, "discov": [54, 70, 96], "mitm": 54, "_io_capability_display_onli": 54, "_io_capability_display_yesno": 54, "_io_capability_keyboard_onli": 54, "_io_capability_no_input_output": 54, "_io_capability_keyboard_displai": 54, "le_secur": 54, "le": [54, 221], "unnecessari": [54, 64, 240], "adv_data": 54, "char_data": 54, "notify_data": 54, "ringbuff": 54, "invoc": [54, 155, 257], "connected_addr": 54, "matched_uuid": 54, "inspect": [54, 235, 236, 257], "bt_irq": 54, "_irq_central_connect": 54, "conn_handl": 54, "_irq_central_disconnect": 54, "_irq_gatts_writ": 54, "attr_handl": 54, "_irq_gatts_read_request": 54, "deni": [54, 232], "_irq_scan_result": 54, "adv_typ": 54, "_irq_scan_don": 54, "_irq_peripheral_connect": 54, "_irq_peripheral_disconnect": 54, "_irq_gattc_service_result": 54, "start_handl": 54, "end_handl": 54, "_irq_gattc_service_don": 54, "discoveri": 54, "_irq_gattc_characteristic_result": 54, "value_handl": 54, "_irq_gattc_characteristic_don": 54, "_irq_gattc_descriptor_result": 54, "dsc_handl": 54, "_irq_gattc_descriptor_don": 54, "_irq_gattc_read_result": 54, "_irq_gattc_read_don": 54, "_irq_gattc_write_don": 54, "_irq_gattc_notifi": 54, "notifi": [54, 212], "_irq_gattc_ind": 54, "_irq_gatts_indicate_don": 54, "acknowledg": [54, 64, 239], "_irq_l2cap_accept": 54, "cid": 54, "psm": 54, "our_mtu": 54, "peer_mtu": 54, "_irq_l2cap_connect": 54, "_irq_l2cap_disconnect": 54, "_irq_l2cap_recv": 54, "_irq_l2cap_send_readi": 54, "_irq_connection_upd": 54, "conn_interv": 54, "conn_lat": 54, "supervision_timeout": 54, "_irq_encryption_upd": 54, "key_siz": 54, "_irq_get_secret": 54, "sec_typ": 54, "_irq_set_secret": 54, "_irq_passkey_act": 54, "passkei": 54, "action": [54, 172, 186, 188, 235, 238, 252], "_gatts_no_error": 54, "_gatts_error_read_not_permit": 54, "_gatts_error_write_not_permit": 54, "_gatts_error_insufficient_authent": 54, "0x05": 54, "_gatts_error_insufficient_author": 54, "0x08": [54, 79], "_gatts_error_insufficient_encrypt": 54, "0x0f": [54, 254], "_passkey_action_non": 54, "_passkey_action_input": 54, "_passkey_action_displai": 54, "_passkey_action_numeric_comparison": 54, "interval_u": 54, "resp_data": 54, "nearest": [54, 64, 65, 110, 111, 112, 113, 117, 120, 127], "625u": 54, "repli": [54, 100], "resum": [54, 74, 235], "duration_m": 54, "1280000": 54, "window_u": 54, "11250": 54, "background": [54, 65, 73, 80, 117, 120, 124, 230, 235, 252], "adv_ind": 54, "scannabl": 54, "undirect": 54, "adv_direct_ind": 54, "adv_scan_ind": 54, "adv_nonconn_ind": 54, "0x04": 54, "scan_rsp": 54, "scan_duration_m": 54, "min_conn_interval_u": 54, "max_conn_interval_u": 54, "30000": [54, 175, 178], "50000": [54, 79], "throughput": [54, 64], "wasn": 54, "registr": [54, 220], "char_handl": 54, "services_definit": 54, "OR": [54, 73, 82, 110, 111, 112, 113, 117, 120, 127, 155, 172], "privaci": 54, "flatten": 54, "heart": 54, "nordic": 54, "hr_uuid": 54, "0x180d": 54, "hr_char": 54, "0x2a37": 54, "flag_read": 54, "flag_notifi": 54, "hr_servic": 54, "uart_uuid": 54, "6e400001": 54, "b5a3": 54, "f393": 54, "e0a9": 54, "e50e24dcca9": 54, "uart_tx": 54, "6e400003": 54, "uart_rx": 54, "6e400002": 54, "flag_writ": 54, "uart_servic": 54, "hr": 54, "bt": [54, 175], "_flag_broadcast": 54, "0x0001": 54, "_flag_read": 54, "0x0002": 54, "_flag_write_no_respons": 54, "0x0004": 54, "_flag_writ": 54, "0x0008": 54, "_flag_notifi": 54, "0x0010": 54, "_flag_ind": 54, "0x0020": 54, "_flag_authenticated_signed_writ": 54, "0x0040": 54, "_flag_aux_writ": 54, "0x0100": 54, "_flag_read_encrypt": 54, "0x0200": 54, "_flag_read_authent": 54, "0x0400": 54, "_flag_read_author": 54, "0x0800": 54, "_flag_write_encrypt": 54, "_flag_write_authent": 54, "0x2000": 54, "_flag_write_author": 54, "0x4000": [54, 128], "send_upd": 54, "subscrib": 54, "notif": [54, 181, 185], "largest": [54, 63, 211], "0xffff": [54, 65, 133, 141, 145, 225], "confirm": [54, 158, 242, 246, 247, 248], "bluekitchen": 54, "nimbl": 54, "consum": [54, 228, 239], "chanc": 54, "peer": [54, 157], "unsuccess": 54, "twice": [54, 117, 181, 239, 240, 256], "stall": [54, 146, 151, 154], "grant": [54, 172], "unabl": [54, 64, 232], "volatil": 54, "irk": 54, "shown": [54, 200, 219, 254], "0x2908": 54, "disk": [55, 110, 111, 112, 117, 119, 120, 125, 167, 176, 177, 186, 228, 232], "notabl": [55, 63, 236, 249], "berkelydb": 55, "xx": [55, 96, 98, 117], "partit": [55, 136, 169, 229, 234, 268, 273], "oftentim": 55, "idiom": 55, "care": [55, 64, 86, 108, 117, 119, 125, 130, 162, 232, 258], "NOT": [55, 68, 150, 156, 157, 172, 178, 246, 258], "mydb": 55, "db": 55, "transact": [55, 79], "pages": 55, "caches": 55, "minkeypag": 55, "tweak": 55, "65536": [55, 175, 178, 255], "lru": 55, "unwritten": 55, "start_kei": 55, "end_kei": 55, "exclus": [55, 85, 94, 232, 235], "descend": 55, "ORed": [55, 117, 162, 265], "cosin": [57, 92], "exponenti": [57, 92, 117], "logarithm": [57, 60, 92, 166, 171, 200], "cut": [57, 102, 122], "axi": [57, 117, 132, 170, 214, 268], "phi": 57, "sine": [57, 92, 134, 197], "circumfer": [57, 92], "diamet": [57, 92], "maxlen": [58, 148], "bound": [58, 63, 88, 93, 98, 117, 125, 156, 186, 232, 240], "opposit": [58, 117, 200], "mytupl": 58, "t1": 58, "t2": 58, "benefit": [58, 187, 232, 233, 240], "iv": 59, "mode_ecb": 59, "electron": [59, 241, 258], "book": 59, "ecb": 59, "mode_cbc": 59, "cbc": 59, "mode_ctr": 59, "ctr": 59, "vector": [59, 65, 79, 117], "in_buf": 59, "out_buf": 59, "newli": [59, 73, 232, 256], "mutabl": [59, 137, 142, 147, 148, 160, 232], "archiv": [60, 171], "micropy_py_defl": 60, "micropy_py_deflate_compress": 60, "wbit": [60, 171], "32k": [60, 171], "kilobyt": [60, 162], "gz": [60, 67, 190], "compressed_data": 60, "get_data_z": 60, "decompressed_data": 60, "uncompressed_data": 60, "get_data": 60, "compressor": [60, 171], "slower": [60, 117, 124, 154, 186, 237, 255], "mid": 60, "decompressor": 60, "trivial": 60, "uncompress": [60, 115, 117], "unset": [60, 85], "32kib": 60, "kib": 60, "inventori": [61, 68, 156], "eexist": 61, "eagain": 61, "ansi": 61, "posix": [61, 94, 150, 155, 161, 230], "mention": [61, 124, 131, 181, 232, 255], "exc": [61, 160], "my_dir": 61, "sleep_typ": 62, "sleep_non": 62, "sleep_modem": 62, "modem": [62, 158], "sleep_light": 62, "light": [62, 63, 64, 87, 117, 124, 138, 139, 170, 181, 186, 196, 204, 205, 210, 256], "suspend": [62, 224, 258, 259], "time_u": 62, "flash_id": 62, "begin": [62, 63, 73, 93, 117, 122, 130, 154, 169, 175, 200, 212, 233, 239, 240], "length_or_buff": 62, "uart_no": 62, "set_native_code_loc": 62, "asm_xtensa": 62, "iram": 62, "iram1": 62, "region": [62, 63, 73, 93, 96, 106, 107, 110, 111, 112, 113, 117, 120, 124, 125, 127, 128, 228, 230], "neither": [62, 124, 228, 236], "nor": [62, 117, 124, 218, 228], "erasur": [62, 128], "sparingli": 62, "rewritten": 62, "wake_on_ulp": 63, "wake_on_ext0": 63, "ext0": 63, "wakeup_all_low": 63, "wakeup_any_high": 63, "wake_on_ext1": 63, "ext1": 63, "idf_heap_info": 63, "shed": 63, "situat": [63, 71, 93, 128, 162, 177, 191, 207, 228, 229, 232, 258], "malloc_cap_xxx": 63, "predefin": [63, 96, 140, 162], "heap_data": 63, "heap_exec": 63, "seen": [63, 113, 128, 135, 228, 258], "7288": 63, "16648": 63, "79912": 63, "35712": 63, "35512": 63, "35108": 63, "15072": 63, "15036": 63, "113840": 63, "ota": [63, 258, 260, 261, 262], "block_siz": [63, 169, 229, 258], "type_app": 63, "subtyp": 63, "block_num": [63, 128, 136, 152, 168, 169, 229], "cmd": [63, 84, 85, 110, 112, 136, 152, 168, 169, 174, 259], "set_boot": 63, "get_next_upd": 63, "mark_app_valid_cancel_rollback": 63, "rollback": 63, "app": [63, 87, 190, 214, 235, 238, 260], "config_bootloader_app_rollback_en": 63, "261": 63, "type_data": [63, 229], "bootabl": 63, "ota_0": 63, "ota_1": 63, "nv": 63, "otadata": 63, "phy_init": 63, "idle_level": 63, "carrier": 63, "tx_carrier": 63, "38000": 63, "multipli": [63, 117, 125, 133, 235], "pulse_max": [63, 143], "eight": [63, 175, 232, 255], "0101": 63, "progress": [63, 100, 228, 234], "percent": [63, 170, 175], "wait_don": 63, "enable_loop": 63, "126": [63, 133, 195, 228], "s3": 63, "riscv": 63, "set_wakeup_period": 63, "period_index": 63, "period_u": 63, "load_binari": 63, "load_addr": 63, "program_binari": 63, "entry_point": 63, "lost": [63, 64, 78, 98, 133, 181, 215, 232], "set_i32": 63, "get_i32": 63, "set_blob": 63, "distinguish": [63, 74, 77, 89, 101, 156, 160], "get_blob": 63, "erase_kei": 63, "set_xxx": 63, "unencrypt": 64, "iot": 64, "sensit": [64, 196], "hundr": [64, 117], "metr": 64, "sender": 64, "xbb": 64, "add_peer": 64, "esp_now_init": 64, "esp_now_deinit": 64, "deregist": 64, "packet": [64, 109, 122, 130, 163], "mac_address": 64, "traffic": [64, 122], "timeout_m": [64, 122, 158], "irecv": 64, "recvinto": 64, "wifi_phy_rate_t": 64, "num": [64, 254], "esp_err_espnow_not_init": 64, "addr_len": 64, "max_data_len": 64, "esp_err_espnow_not_found": 64, "esp_err_espnow_if": 64, "esp_err_espnow_no_mem": 64, "ie": [64, 93, 211, 214, 239], "bytestr": 64, "friendli": [64, 239], "peers_tabl": 64, "timestamp": [64, 128, 161, 252], "4th": [64, 86], "sophist": [64, 90, 196, 237], "pollin": [64, 90, 155, 156], "tx_pkt": 64, "tx_respons": 64, "tx_failur": 64, "rx_packet": 64, "rx_dropped_packet": 64, "drop": [64, 70, 117, 124, 131, 186, 219, 260], "quickli": [64, 117, 122, 124, 143, 177, 181, 186, 187, 191, 193, 200, 202, 209, 210, 214, 230, 232, 238, 258], "enforc": [64, 169], "un": [64, 117], "pmk": 64, "lmk": 64, "set_pmk": 64, "key_len": 64, "ifidx": 64, "signifi": [64, 228], "4ghz": 64, "max_total_peer_num": 64, "max_encrypt_peer_num": 64, "esp_now_max_encrypt_peer_num": 64, "esp_err_espnow_exist": 64, "esp_err_espnow_ful": 64, "del_peer": 64, "get_peer": 64, "peer_count": 64, "peer_num": 64, "encrypt_num": 64, "mod_peer": 64, "recv_cb": 64, "moder": 64, "busi": [64, 158, 192], "caveat": [64, 240], "suffici": [64, 90, 146], "exercis": [64, 196, 205, 214], "burst": [64, 134], "errnum": 64, "errstr": 64, "err": 64, "proxim": [64, 170], "neighbour": [64, 117], "time_m": [64, 74, 242], "dbm": [64, 100], "dai": [64, 83, 130, 141], "xaa": 64, "18372": 64, "12541": 64, "supplementari": 64, "aioespnow": 64, "2mb": 64, "heartbeat": [64, 165, 259, 263], "echo_serv": 64, "120": [64, 104, 113, 122, 124, 178, 195, 255], "arecv": 64, "airecv": 64, "_aiter__": 64, "__anext__": 64, "recv_till_halt": 64, "halt": 64, "xff": [64, 228, 255], "bcast": 64, "quickref": 64, "unreli": 64, "pm": [64, 100], "strang": 64, "wish": [64, 121, 125], "scenario": [64, 235, 258], "proxi": 64, "wifi_reset": 64, "myssid": 64, "mypassword": 64, "broker": 64, "read_sensor": 64, "guarante": [64, 71, 86, 93, 156, 161, 232], "attent": [64, 240], "mitig": 64, "lose": 64, "conserv": [64, 124], "drawn": [65, 73, 110, 111, 112, 113, 117, 120, 127, 175], "polygon": 65, "96": [65, 78, 130, 133, 254, 255], "stride": 65, "permiss": [65, 172, 190, 208, 215, 223, 263, 272], "color": [65, 73, 110, 111, 112, 113, 115, 117, 120, 124, 125, 127, 177, 186], "accommod": [65, 161, 234], "thick": [65, 117], "xr": 65, "yr": 65, "radii": 65, "geometri": 65, "quadrant": 65, "q1": [65, 174], "b1": [65, 162, 223], "q2": [65, 174], "b2": [65, 223], "q3": [65, 174], "b3": [65, 223], "q4": [65, 174], "counterclockwis": [65, 211], "coord": [65, 162], "concav": 65, "x0": [65, 117], "y0": [65, 117], "xn": 65, "yn": 65, "8x8": [65, 113], "font": [65, 73, 186], "xstep": 65, "ystep": 65, "footprint": 65, "palett": [65, 110, 111, 112, 113, 117, 120, 124, 127], "transpar": [65, 73, 110, 111, 112, 113, 117, 120, 127, 128], "glyph": [65, 117], "icon": [65, 181, 186], "whose": [65, 110, 111, 112, 113, 117, 127, 134, 162, 223, 228], "foreground": [65, 73], "rightmost": [65, 162], "leftmost": 65, "satisfi": [66, 133], "oom": 66, "intent": [66, 175], "heurist": 66, "set_threshold": 66, "signatur": [66, 85, 128, 229], "fileobj": 67, "footer": [67, 171], "compresslevel": 67, "mtime": [67, 128], "guidanc": 67, "modern": [68, 71, 177, 181, 188, 230], "sha2": 68, "constraint": [68, 70, 88, 89, 161, 230, 232, 240], "interoper": 68, "offer": [68, 87, 175, 188, 228, 232], "hasher": 68, "fed": [68, 91, 228], "aspir": 70, "With": [70, 74, 78, 81, 83, 86, 90, 97, 101, 124, 128, 131, 133, 137, 140, 141, 142, 146, 161, 200, 208, 210, 212, 219, 255, 263, 272], "unavail": [70, 85, 128, 228], "pertain": 70, "ifi": 70, "philosophi": 70, "wildcard": 70, "forc": [70, 73, 78, 98, 113, 117, 124, 133, 145, 175, 181, 203, 228], "temporarili": [70, 94, 122, 151, 209, 264], "_path": 70, "extra_method": 70, "utim": [70, 178], "umodul": 70, "adher": 71, "dichotomi": 71, "wise": [71, 117], "somewhat": [71, 117, 228], "unbuff": [71, 156, 255], "os": [71, 230], "rtose": [71, 230], "bufferbloat": 71, "preciou": 71, "buffered": 71, "incur": [71, 134], "ask": [71, 155, 181, 185, 186, 258], "trait": 71, "concis": 71, "strongli": 71, "favour": 71, "govern": 71, "peculiar": [71, 160, 231], "tricki": [71, 256], "whatev": [71, 110, 111, 112, 113, 117, 120, 122, 124, 127, 186, 208, 246, 263], "clearli": 71, "inde": 71, "convolut": [71, 117], "undefin": [71, 79, 82, 96, 128, 156, 240, 255], "matter": [71, 156, 205], "prevail": 71, "alloc_s": 71, "prealloc": [71, 240], "realloc": [71, 124], "item_separ": 72, "key_separ": 72, "deserialis": 72, "lcd160crv1": [73, 193, 194], "100kib": 73, "6mib": 73, "panel": [73, 208, 263], "set_ori": 73, "portrait": [73, 110, 111], "set_po": 73, "set_text_color": 73, "set_font": 73, "get_touch": [73, 203], "pwr": 73, "i2c_addr": [73, 114, 126], "98": [73, 181], "xy": [73, 104, 178, 195, 259], "yx": 73, "skin": [73, 138, 193, 194, 201], "x4": [73, 99, 117, 211], "y4": [73, 117, 133, 195], "pen": [73, 117], "set_pen": [73, 203], "clip_lin": 73, "publicli": 73, "set_pow": 73, "landscap": 73, "portrait_upsidedown": 73, "landscape_upsidedown": 73, "set_i2c_addr": 73, "set_uart_baudr": [73, 203], "set_startup_deco": 73, "startup_deco_non": 73, "startup_deco_mlogo": 73, "startup_deco_info": 73, "save_to_flash": 73, "get_lin": 73, "dummi": [73, 85], "screen_dump": 73, "minu": [73, 214, 221], "screen_load": 73, "fg": [73, 203], "bg": [73, 117, 203], "bold": 73, "tran": 73, "overdraw": 73, "vt100": [73, 203], "rect_outlin": 73, "rect_interior": 73, "interior": 73, "dot_no_clip": 73, "rect_no_clip": 73, "rect_outline_no_clip": 73, "rect_interior_no_clip": 73, "line_no_clip": 73, "poly_dot": 73, "poly_lin": 73, "touch_config": 73, "calib": 73, "nvram": 73, "is_touch": [73, 203], "set_spi_win": 73, "fast_spi": 73, "destin": [73, 113, 117, 120, 156, 221, 225, 237, 252], "show_framebuf": 73, "set_scrol": 73, "set_scroll_win": 73, "win": 73, "vec": 73, "pat": 73, "0x07e0": 73, "ticker": 73, "0bf": 73, "ddssssssssssss": 73, "dd": 73, "set_scroll_win_param": 73, "set_scroll_buf": 73, "exif": 73, "baselin": [73, 88, 89], "dct": 73, "huffman": 73, "ycbcr4": 73, "jpeg_start": 73, "total_len": 73, "jpeg_data": 73, "feed_wdt": 73, "roughli": [73, 240, 255], "ed": [73, 82, 117, 156], "unrestrict": 74, "incorrectli": 74, "malfunct": [74, 162], "lockup": 74, "crash": [74, 91, 162, 186, 232, 258], "thin": 74, "shim": 74, "notat": [74, 117, 144, 149, 156, 158, 162, 212, 215, 216, 218, 221, 222, 223, 225, 227, 240], "0x48000000": 74, "0x18": 74, "0x10": [74, 178, 195, 216, 228, 242, 259], "pa2": [74, 158], "pa3": [74, 158], "unexpectedli": 74, "opaqu": [74, 110, 111, 112, 113, 117, 120, 124, 127, 156, 161], "hertz": [74, 110, 111, 112, 124], "gate": [74, 166, 255], "retent": 74, "soc": [74, 88, 89, 162], "substr": [74, 129, 150, 228], "pulse_level": [74, 242], "timeout_u": [74, 242], "1000000": [74, 86, 178, 239, 242], "high_time_0": 74, "low_time_0": 74, "high_time_1": 74, "low_time_1": 74, "850": 74, "450": 74, "48mhz": [74, 253, 255], "120n": 74, "closer": [74, 117, 234], "30n": 74, "discretis": 75, "finer": [76, 81], "wipi": [77, 79, 84, 86, 89, 90, 263, 264, 266], "apin": [77, 259], "gp3": [77, 259], "pinout": [77, 84, 175, 178, 183, 195, 250, 253, 255, 258], "4v": 77, "8v": [77, 211, 258], "withstand": [77, 258], "gp2": [77, 258, 259], "gp4": [77, 258], "gp5": 77, "remap": [77, 84, 85, 117, 263], "TO": [78, 172], "THE": [78, 172], "rt1062": [78, 173, 174], "AND": [78, 89, 172], "WILL": [78, 156], "BE": [78, 172], "OF": [78, 172], "transceiv": [78, 133], "124": [78, 133, 173, 195], "fifo": [78, 90, 124, 133, 151, 154, 195, 252], "p3": [78, 98, 112, 113, 122, 127, 142, 178, 183], "p1": [78, 98, 113, 116, 117, 127, 142, 146, 178, 229], "auto_restart": [78, 133], "particip": [78, 133], "tec": [78, 133], "rec": [78, 133], "passiv": [78, 133, 258], "entert": [78, 133], "pend": [78, 117, 133, 146, 148], "bank": [78, 133, 249], "rtr": [78, 133], "extfram": [78, 133], "five": [78, 100, 128, 133, 250, 255], "fmi": [78, 133], "fifth": [78, 133, 250], "resiz": [78, 133], "inplac": [78, 86, 133, 137], "lst": [78, 133], "shall": [78, 88, 133, 172, 255], "dlc": [78, 133], "fun": [78, 124, 133, 140, 144, 145, 198, 210], "cb0": [78, 133], "circuitri": 79, "kohm": 79, "vcc": [79, 166], "breakout": [79, 166], "troubl": [79, 243], "excel": [79, 253], "x10": [79, 132], "stretch": [79, 110, 111, 112, 113, 117, 120, 127], "etimedout": 79, "0x77": 79, "nack": 79, "ack": 79, "nbyte": [79, 86, 90, 146, 148, 156, 217], "memaddr": [79, 137], "addrsiz": [79, 242], "sck_pin": 80, "ws_pin": 80, "sd_pin": 80, "y6": [80, 133, 195], "y5": [80, 133, 140, 195], "y8": [80, 195], "audio_out": 80, "audio_in": 80, "num_written": 80, "num_read": 80, "i2s_callback": 80, "swriter": 80, "sreader": 80, "mck": [80, 174, 175], "dma": [80, 134, 137, 252], "underflow": 80, "deiniti": [80, 102, 106, 107, 113, 127], "endian": [80, 146, 159, 162, 192, 217, 239], "preced": [80, 236], "volum": [80, 103, 166, 175, 181, 191, 197, 228], "8192": [81, 134], "reinitialis": [81, 134], "200u": 81, "5u": 81, "3000": 81, "3u": 81, "dest": [81, 151, 175, 235, 238, 255], "entiti": [81, 151, 175, 252], "discret": [81, 255], "300khz": 81, "300000": 81, "266": 81, "267": 81, "299625": 81, "300751": 81, "rp2040": [81, 91, 153, 235, 249, 250, 252], "granular": 81, "averag": [81, 161, 230, 255, 259], "spectral": 81, "puriti": 81, "interdepend": 81, "insignific": 81, "300_000": 81, "unambigu": 82, "imped": [82, 134], "cc3200": [82, 90, 259, 263], "datetimetupl": [83, 141], "year": [83, 141, 161, 175], "weekdai": [83, 141, 161, 255], "subsecond": [83, 141, 161], "tzinfo": 83, "januari": 83, "2015": [83, 239, 259, 263], "time_in_m": 83, "alarm_id": 83, "expir": [83, 88, 89, 91, 259], "dat0": [84, 174], "gp10": [84, 89, 258, 259], "gp11": [84, 89, 258, 259], "gp15": [84, 259], "clk_pin": 84, "cmd_pin": 84, "dat0_pin": 84, "factor": [85, 102, 117, 175, 255], "media": [85, 96], "mmc": 85, "emmc": 85, "wp": 85, "20000000": 85, "reassign": 85, "d2": [85, 174, 175, 254, 255], "d3": [85, 174, 175, 254], "d4": [85, 174, 175, 254, 255], "d5": [85, 174, 175, 254, 255], "d6": [85, 174, 175, 254], "d7": [85, 174, 175, 254, 255], "usdhc": [85, 168], "50mhz": 85, "unfortun": 85, "mimxrt1011": [85, 175], "micropy_usdhcx": 85, "usdhc1": 85, "micropy_usdhc1": 85, "gpio_sd_b0_02_usdhc1_cmd": 85, "gpio_sd_b0_03_usdhc1_clk": 85, "cd_b": 85, "gpio_sd_b0_06_usdhc1_cd_b": 85, "data0": [85, 259], "gpio_sd_b0_04_usdhc1_data0": 85, "data1": [85, 162], "gpio_sd_b0_05_usdhc1_data1": 85, "data2": [85, 162], "gpio_sd_b0_00_usdhc1_data2": 85, "data3": 85, "gpio_sd_b0_01_usdhc1_data3": 85, "cb_b": 85, "usdhc_dummy_pin": 85, "micropy_usdhc2": 85, "usdhc2": 85, "deselect": 86, "rxdata": 86, "0x42": [86, 137, 178, 195, 259], "txdata": 86, "sit": [86, 142, 189], "write_buf": 86, "read_buf": 86, "deassert": 87, "seem": [87, 161, 200, 254], "major": [87, 98, 117, 121, 160, 230, 234, 236], "goal": [87, 187, 234], "relai": 87, "suppos": [87, 161, 162], "led1_pin": 87, "led2_pin": 87, "ll": [87, 117, 124, 136, 152, 154, 181, 183, 186, 189, 190, 191, 192, 214, 238, 239], "reed": 87, "moistur": 87, "flame": 87, "detector": [87, 117, 125], "minor": [87, 98, 117, 121, 160, 236], "doubt": 87, "unexcit": 87, "enjoi": 87, "frustrat": 87, "fact": [87, 124, 211, 219, 228], "pin_obj": 87, "pin_argu": 87, "univers": [87, 230, 240], "intermedi": [87, 162, 258], "heterogen": [88, 89], "greatli": [88, 89, 191], "mycallback": 88, "100m": [88, 119, 161, 175], "shot": [88, 89, 155, 265], "1000m": 88, "nonetyp": 88, "5hz": [89, 265], "duty_cycl": [89, 259, 265], "5050": 89, "gp24": [89, 258], "gp25": [89, 263], "gp9": [89, 258], "heavili": [89, 184], "usart": [90, 146], "confus": [90, 146, 232], "pariti": [90, 146, 244], "odd": [90, 117, 146, 149, 175, 250], "txbuf": [90, 242], "timeout_char": [90, 146, 178, 192], "inv_tx": 90, "inv_rx": 90, "bitmask": [90, 117], "paus": [90, 117, 123, 124, 130, 138, 195, 212, 232, 235, 252], "mimxrt": [90, 97, 166, 174, 175, 176], "renesa": 90, "ra": [90, 239, 245, 248], "ongo": 90, "recover": [91, 240], "8388": [91, 250], "sensibl": [91, 137, 142], "hyperbol": 92, "tangent": 92, "princip": [92, 232], "infin": [92, 117], "complementari": [92, 145, 175, 178], "decompos": 92, "mantissa": 92, "finit": [92, 93], "infinit": [92, 117, 124, 186, 189, 205], "const_x": 93, "const_i": 93, "hidden": [93, 96, 100, 138, 186, 258], "recognis": [93, 128, 210], "mainli": [93, 229], "forcefulli": 93, "micropy_py_micropython_heap_lock": 93, "earliest": 93, "preempt": [93, 228, 232], "opcod": [93, 240], "fundament": 93, "solut": [93, 156, 228, 232], "notion": [94, 128, 232], "mutual": [94, 232], "pthread_mutex_lock": 94, "pthread_mutex_unlock": 94, "pthread_mutex_trylock": 94, "mechan": [94, 135, 141, 199, 211, 219, 229, 230, 258], "routin": [94, 151, 198, 212, 232, 240, 252], "data_readi": 94, "defer": [94, 157, 232], "semaphor": 94, "geeksforgeek": 94, "stackoverflow": 94, "differencebetween": 94, "ws2818": 95, "x8": [95, 99, 145], "gradient": [95, 117], "rout": [96, 122, 175, 191], "nic": [96, 97, 99, 100], "impli": [96, 172, 219, 228, 240], "is_act": [96, 98, 100], "service_id": 96, "accompani": 96, "said": [96, 117, 124, 125, 177, 186, 188, 191], "medium": [96, 173, 210, 211, 253], "bssid": [96, 98, 100, 101], "technologi": [96, 100, 191], "subnet": [96, 97, 98, 99, 100], "dealt": [96, 100, 212], "formal": [96, 100, 240], "3166": 96, "alpha": [96, 110, 111, 112, 113, 117, 120, 127], "complianc": 96, "worldwid": 96, "dhcp": [96, 98, 100, 101, 175], "mdn": [96, 100], "mode_11b": 96, "802": 96, "11b": 96, "mode_11g": 96, "11g": 96, "mode_11n": 96, "11n": 96, "board_default": 97, "hardwir": 97, "pyh": 97, "seeed": [97, 174, 175, 253], "config_paramet": 97, "low_pow": [97, 248, 258], "phy_ksz8081": 97, "phy_dp83825": 97, "phy_rtl8211f": 97, "mode_st": 98, "p7": [98, 112, 137, 143, 178, 183, 255], "p8": [98, 112, 137, 143, 178, 183], "winc1500": [98, 186], "wep": [98, 100, 101], "fw": 98, "reopen": 98, "usocket": 98, "adress": 98, "ip_addr": 98, "subnet_addr": 98, "gateway_addr": 98, "dns_addr": 98, "xxx": [98, 228], "ipv4": [98, 156], "versu": [98, 110, 111, 112, 113, 117, 120, 125, 127, 181, 191, 228], "author": [98, 172, 233], "revis": 98, "wpa": [98, 100, 101], "psk": [98, 100], "wpa2": [98, 100, 101, 259, 266], "enterpris": 98, "bsp": 98, "adaptor": [99, 211], "w5200": 99, "w5500": 99, "chipset": 99, "micropy_py_network_wiznet5k": 99, "x5": [99, 134, 195], "x7": [99, 145], "sclk": [99, 122, 178], "x6": [99, 134, 195], "nss": [99, 142], "nreset": 99, "pin_c": 99, "pin_rst": 99, "interface_id": 100, "visibl": [100, 138, 151, 170, 228, 258], "status": 100, "stat_idl": 100, "stat_wrong_password": 100, "stat_no_ap_found": 100, "stat_connect_fail": 100, "stat_got_ip": 100, "unlimit": [100, 242, 250], "txpower": 100, "auth": [101, 164, 259, 266], "antenna": [101, 262], "sec": [101, 151, 161, 258, 266], "abc1de45bf": 101, "int_ant": 101, "ext_ant": 101, "if_id": 101, "configtupl": 101, "subnet_mask": 101, "dns_server": 101, "mac_addr": 101, "microphon": [102, 175, 197], "arduino": [102, 117, 124, 175, 176, 183, 186, 187], "portenta": [102, 117, 124], "pdm": 102, "16000": [102, 145, 166], "gain_db": [102, 124], "highpass": 102, "9883": 102, "voic": [102, 119], "pcmbuf": 102, "pcm": 102, "amplitud": 103, "defint": 103, "4000": 103, "m4": [104, 117, 125, 178, 180, 181, 188, 241, 253, 255], "supported_frequ": 104, "cpu_clk_in_mhz": 104, "hclk_in_mhz": 104, "pclk1_in_mhz": 104, "pclk2_in_mhz": 104, "144": 104, "216": 104, "480": [104, 116, 117], "h7": [104, 124, 125, 133, 136, 146, 178, 188], "silicon": [104, 249], "mipi": [105, 108, 110], "320x240": [105, 117, 124, 189], "frames": [105, 110, 111, 124], "240x320": 105, "480x272": 105, "480x128": 105, "640x480": [105, 124], "320x480": 105, "800x480": [105, 110, 111], "800x320": 105, "480x800": 105, "480x480": 105, "800x600": [105, 124], "1024x600": 105, "1024x768": [105, 124], "1280x1024": [105, 124], "1280x400": 105, "1600x1200": [105, 124], "1280x720": [105, 124], "1920x1080": [105, 124], "stm32h7": [105, 191], "1080p": 105, "cotnrol": 108, "display_control": 108, "displayport": 109, "cec": 109, "ddc": 109, "ddc_addr": 109, "0x50": [109, 242], "eeprom": [109, 249], "edid": 109, "dst_addr": 109, "src_addr": 109, "recept": [109, 239], "anymor": [109, 114, 117, 125, 126, 179, 181, 186], "destruct": [110, 111, 112, 228], "x_scale": [110, 111, 112, 113, 117, 127], "y_scale": [110, 111, 112, 113, 117, 127], "roi": [110, 111, 112, 113, 117, 120, 124, 125, 127, 186], "rgb_channel": [110, 111, 112, 113, 117, 120, 127], "color_palett": [110, 111, 112, 113, 117, 120, 127], "alpha_palett": [110, 111, 112, 113, 117, 120, 127], "jpg": [110, 111, 112, 117, 186], "flip": [110, 111, 112, 113, 117, 120, 124, 127], "black": [110, 111, 112, 117, 120, 124, 127, 138, 184, 202, 208, 210, 211, 263], "perfectli": [110, 111, 112, 127, 196], "downscal": [110, 111, 112, 113, 117, 120, 127], "neighbor": [110, 111, 112, 113, 117, 120, 127], "90": [110, 111, 112, 113, 117, 118, 120, 123, 124, 127, 143, 175, 178, 204, 211, 254], "270": [110, 111, 112, 113, 117, 118, 120, 124, 127], "display_off": [110, 111, 112], "display_on": 111, "databu": 111, "128x160": [112, 124], "3x": [112, 127], "sdram": [112, 124], "tripl": [112, 113, 124, 127], "ta": 113, "ir": [113, 178, 184], "to_min": 113, "to_max": 113, "2f": [113, 228], "thermopil": 113, "16x4": 113, "32x24": 113, "16x12": 113, "80x60": [113, 117, 124], "flir": [113, 117, 124], "160x120": [113, 124], "950c": 113, "750c": 113, "600c": 113, "450c": 113, "300c": 113, "80c": 113, "140c": 113, "400c": 113, "125": [113, 133, 195], "kb": [113, 124, 125, 127, 173, 181, 253], "cb": [113, 122, 123, 124, 232], "nomial": 113, "flat": [113, 117, 196], "ffc": 113, "ir_min": 113, "ir_max": 113, "seamlessli": [113, 117], "x_size": 113, "y_size": 113, "pixformat": [113, 124], "copy_to_fb": [113, 117], "mlx90621": 113, "refactor": [114, 126], "0x38": 114, "lcd_gesture_": 114, "lcd_flag_": 114, "gestur": 114, "zoom": [114, 117, 124, 186], "playback": [115, 166], "centi": 115, "viewabl": [115, 120], "400_000": [116, 175, 178, 250, 255], "reset_pin": 116, "irq_pin": 116, "touch_point": 116, "0x5d": 116, "reserve_x": 116, "reserve_i": 116, "reverse_axi": 116, "stio": 116, "refresh_r": 116, "pressur": [116, 170, 228], "correl": [116, 117, 169, 252], "binary_image_valu": 117, "rgb888": 117, "lab": [117, 186], "yuv": [117, 186], "grayscale_valu": 117, "rgb_tupl": 117, "lab_tupl": 117, "yuv_tupl": 117, "descritor0": 117, "descriptor1": 117, "filter_outli": 117, "lbp": 117, "metric": [117, 193, 194], "orb": 117, "ambigu": 117, "tighten": [117, 181], "outlier": 117, "haar": 117, "cascad": 117, "frontalfac": 117, "frontal": 117, "ey": [117, 181, 186, 200], "someon": 117, "opencv": [117, 187], "lighter": 117, "train": [117, 119], "pictur": [117, 124, 181, 186, 189, 203, 204, 211], "cdf": 117, "distribut": [117, 172, 186, 210, 230], "ruin": [117, 205], "otsu": 117, "halv": [117, 195], "deviat": 117, "quartil": 117, "get_stat": 117, "l_": 117, "a_": 117, "b_": 117, "necessarili": [117, 200], "lie": [117, 223], "box": [117, 125, 181, 186, 202, 208, 263], "centroid": 117, "pencil": 117, "shortest": [117, 150], "ry": 117, "hough": 117, "179": 117, "radiu": [117, 124], "qr": 117, "plan": [117, 183, 186], "seriou": [117, 187], "kanji": 117, "241": 117, "2319": 117, "586": 117, "511": [117, 141], "refin": 117, "eas": 117, "front": [117, 181, 184, 187, 214], "plane": 117, "scanlin": 117, "estim": 117, "meta": 117, "iamgeio": 117, "bmp": [117, 186], "pgm": 117, "ppm": [117, 141, 255], "rgbtupl": 117, "debay": 117, "x_div": 117, "y_div": 117, "compos": [117, 129, 146], "shrink": [117, 191], "shrunken": 117, "bia": 117, "old": [117, 124, 258], "stale": [117, 124], "becuas": 117, "easili": [117, 124, 131, 181, 186, 189, 191, 192, 204, 230, 260, 264], "ironbow": 117, "destroi": [117, 202, 228, 262], "191": 117, "misinterpret": 117, "untouch": [117, 128], "yc": 117, "x_space": 117, "y_space": 117, "mono_spac": 117, "char_rot": 117, "char_hmirror": 117, "char_vflip": 117, "string_rot": 117, "string_hmirror": 117, "string_vflip": 117, "8x10": 117, "cahract": 117, "terribl": [117, 186], "coner": 117, "x3": [117, 140, 145, 211], "y3": [117, 133], "rotation_angle_in_degre": 117, "cirl": 117, "seed_threshold": 117, "floating_threshold": 117, "clear_background": 117, "flood": 117, "rectangular": 117, "radius_x": 117, "radius_i": 117, "lo": [117, 122, 125], "hi": [117, 125, 187, 221], "l_lo": 117, "l_hi": 117, "a_lo": 117, "a_hi": 117, "b_lo": 117, "b_hi": 117, "drag": [117, 186, 190, 260], "tight": [117, 161], "editor": [117, 186, 205, 210, 228, 235], "gui": 117, "slider": 117, "binar": 117, "ANDs": 117, "scalar": [117, 162], "nand": 117, "ORs": 117, "xor": [117, 175], "xnor": 117, "convolv": 117, "eros": 117, "grai": 117, "funciton": 117, "matric": 117, "rr": 117, "rg": 117, "gr": 117, "gg": 117, "gb": 117, "br": [117, 133], "ro": 117, "bo": 117, "3x3": 117, "3x4": 117, "weight": [117, 125], "darker": 117, "brighter": [117, 196, 205], "diagon": 117, "unmodif": 117, "this_imag": 117, "clip_limit": 117, "qualiz": 117, "blur": 117, "5x5": 117, "sharpest": 117, "surfac": 117, "50th": 117, "artifact": 117, "neighborhood": 117, "mul": [117, 215], "unsharp": 117, "guassian": 117, "sharp": 117, "sharpen": 117, "unthreshold": 117, "color_sigma": 117, "space_sigma": 117, "cartessian": 117, "x_corr": 117, "y_corr": 117, "fishey": 117, "distort": 117, "fov": 117, "3d": [117, 125, 166, 254], "spin": [117, 187], "2d": [117, 125, 187], "viewport": 117, "homographi": 117, "image_width": 117, "image_height": 117, "bird": 117, "top_tilt": 117, "bottom_tilt": 117, "tilt": [117, 132, 195, 196, 211], "get_hist": 117, "historgram": 117, "motion": [117, 124, 130, 196, 214], "differenc": 117, "x_stride": 117, "y_stride": 117, "area_threshold": 117, "pixels_threshold": 117, "robust": [117, 122, 181, 239], "theil": 117, "sen": 117, "slope": 117, "blog": 117, "margin": [117, 186], "threshold_cb": 117, "merge_cb": 117, "x_hist_bins_max": 117, "y_hist_bins_max": 117, "intersect": 117, "x_histogram": 117, "y_histogram": 117, "theta_margin": 117, "rho_margin": 117, "bulki": 117, "sobel": 117, "apart": [117, 161, 211, 212], "merge_dist": 117, "max_theta_differ": 117, "segement": 117, "seper": 117, "lsd": 117, "x_margin": 117, "y_margin": 117, "r_margin": 117, "r_min": 117, "r_max": 117, "r_step": 117, "quad": [117, 219], "shear": 117, "slide": [117, 119, 125], "scene": 117, "flatter": 117, "undo": [117, 186, 239], "barrel": 117, "narrow": 117, "lens": 117, "fx": 117, "fy": 117, "farther": 117, "wors": 117, "warp": 117, "focal": 117, "printabl": [117, 235], "x11": 117, "984": 117, "656": 117, "mm": [117, 200], "952": 117, "effort": [117, 186, 267], "datamatric": 117, "spend": 117, "1d": [117, 125], "blurri": 117, "rss": 117, "templat": [117, 128], "template_roi": 117, "optic": 117, "arround": 117, "repsons": [117, 122], "serach_ex": 117, "poorer": 117, "pupil": 117, "scale_factor": 117, "max_keypoint": 117, "corner_detector": 117, "agast": 117, "FOr": 117, "edge_typ": 117, "canni": 117, "hog": 117, "graidient": 117, "max_dispar": 117, "he": 117, "stero": 117, "dispar": 117, "reprsent": 117, "640x240": 117, "camrea": 117, "useless": 117, "algorith": 117, "nonsens": 117, "simd": 117, "toi": 117, "upscal": 117, "subsampl": 117, "higest": 117, "canva": 117, "afterward": [117, 122, 124, 190, 232, 260], "completlei": 117, "tag1h5": 117, "dof": 118, "lsm6ds3": 118, "acceler": [118, 143, 170, 211], "ly": 118, "bottom": [118, 124, 181, 186, 191, 202, 211, 225, 252], "angular": [118, 170], "roat": 118, "upsid": 118, "lite": [119, 125, 244], "recognit": 119, "buf_in": 119, "fft": [119, 124], "confid": 119, "silenc": 119, "ye": [119, 181, 187, 191, 229], "score": [119, 125], "criteria": 119, "meant": [121, 122], "fb": [121, 240], "memory_view_object_result": 122, "remote_function_or_method_nam": 122, "bytes_object_argu": 122, "receiev": 122, "encapsul": 122, "memoryview_object_argu": 122, "bytes_object_result": 122, "register_callback": 122, "reimplement": 122, "get_byt": 122, "buff": 122, "put_byt": 122, "okai": [122, 181, 202, 210, 262], "stream_read": 122, "call_back": 122, "queue_depth": 122, "read_timeout_m": 122, "bytes_or_memory_view": 122, "stream_writ": 122, "write_timeout_m": 122, "send_timeout": 122, "recv_timeout": 122, "exeuct": 122, "deivc": 122, "schedule_callback": 122, "parent": 122, "some_function_or_method_that_takes_a_long_time_to_execut": 122, "stuff": [122, 176, 213], "normal_rpc_call_back": 122, "setup_loop_callback": 122, "message_if": 122, "0x7ff": [122, 133], "bit_rat": 122, "250000": 122, "sample_point": [122, 133], "can_bu": 122, "mb": [122, 173, 249, 253], "message_id": 122, "tseg1": 122, "tseg2": 122, "87": [122, 254], "slave_addr": 122, "i2c_bu": 122, "cs_pin": [122, 175, 178], "clk_polar": 122, "clk_phase": 122, "spi_bu": 122, "uart_port": 122, "network_if": [122, 123], "0x1dba": 122, "vlc": 123, "554": 123, "differenti": [123, 166], "tear": 123, "woken": [124, 131], "grab": 124, "secondari": [124, 166, 191], "steal": 124, "gen": 124, "shutter": 124, "lepton1": 124, "nicla": 124, "pixart": 124, "contig": [124, 191], "instantli": 124, "intens": [124, 139, 184, 195, 196, 205], "liad": 124, "bufer": 124, "effic": [124, 125], "88x72": 124, "176x144": 124, "352x288": 124, "88x60": 124, "176x120": 124, "352x240": 124, "40x30": 124, "30x20": 124, "60x40": 124, "120x80": 124, "240x160": 124, "480x320": 124, "64x32": 124, "64x64": 124, "128x128": 124, "160x160": 124, "320x320": 124, "720x480": 124, "752x480": 124, "1280x768": 124, "1280x960": 124, "2560x1440": 124, "2048x1536": 124, "2560x1600": 124, "2592x1944": 124, "exposur": 124, "140": 124, "200x200": 124, "paren": 124, "gainceil": 124, "constrast": 124, "satur": 124, "gain_db_ceil": 124, "decibel": 124, "exposure_u": 124, "pretti": [124, 131], "alot": 124, "rgb_gain_db": 124, "blc": 124, "ever": [124, 191, 192], "reciv": 124, "advent": 124, "randomli": 124, "hous": [124, 202, 262], "ago": [124, 161], "huge": 124, "bulk": [124, 240], "radi": 124, "coef": 124, "vsync": 124, "readout": 124, "dramat": 124, "positon": 124, "maximum_camera_sensor_pixel_width": 124, "maximum_camera_sensor_pixel_height": 124, "fpc": 124, "nightmod": 124, "night": [124, 184], "sdk": [124, 173], "deseri": 124, "fpa": 124, "temp": [124, 131, 228], "aux": 124, "500c": 124, "clamp": 124, "max_temp_in_celsiu": 124, "min_temp_in_celsiu": 124, "arug": 124, "10c": 124, "40c": 124, "pc15": [124, 254], "oscil": [124, 166, 214], "sheet": [124, 173, 255], "quantiz": 125, "kera": 125, "runnabl": 125, "flatbuff": 125, "contact": 125, "tflite": 125, "sratch": 125, "384kb": [125, 253], "496kb": 125, "31mb": 125, "anywher": [125, 186, 258], "significantli": [125, 233], "min_scal": 125, "scale_mul": 125, "x_overlap": 125, "y_overlap": 125, "person_detect": 125, "person": [125, 172, 186, 239], "reduct": 125, "95": [125, 181, 254, 255], "reductioin": 125, "overlap": 125, "organ": 125, "load_to_fb": 125, "mobilenet": 125, "understood": [125, 130], "appropri": [125, 130, 131, 145, 210, 218, 219, 237, 239], "datatyp": 125, "0x3f": 126, "352": 127, "sysnam": 128, "nodenam": 128, "inod": 128, "0x8000": 128, "old_path": 128, "new_path": 128, "f_bsize": 128, "f_frsize": 128, "f_block": 128, "f_bfree": 128, "f_bavail": 128, "unprivileg": 128, "f_file": 128, "f_ffree": 128, "f_favail": 128, "f_flag": 128, "f_namemax": 128, "f_avail": 128, "stream_object": 128, "iobas": 128, "fsobj": 128, "mount_point": [128, 258], "readonli": [128, 130, 258], "eperm": 128, "unmount": [128, 130, 177, 193, 208, 209, 210, 214, 235, 258], "einval": 128, "block_dev": [128, 268], "readsiz": 128, "progsiz": 128, "lookahead": 128, "lfs1": 128, "347": [128, 229], "v2": [128, 159, 229], "reformat": [128, 181], "lfs2": [128, 268], "295": [128, 229], "prior": [128, 216, 217, 219, 223, 226, 232], "intercept": [128, 239], "delimit": 129, "dash": 129, "libc": 129, "idfv4": 129, "newlib3": 129, "smallint": 130, "outcom": [130, 228, 232], "fault": [130, 177, 193, 232, 258], "fatal": 130, "1000hz": 130, "ua": 130, "mous": [130, 147, 186, 201], "dump_alloc_t": 130, "mountpoint": 130, "blocknum": 130, "slash": 130, "modestr": 130, "vid": [130, 235], "0xf055": 130, "msc": [130, 214, 229, 238], "high_spe": 130, "mass": [130, 136, 196, 203, 230, 234, 237], "pybd": [130, 195], "cdc": [130, 235], "scsi": 130, "lun": 130, "keyboard": [130, 147, 263], "read_channel": 131, "read_core_temp": 131, "read_core_vbat": 131, "vbat": 131, "read_core_vref": 131, "vref": [131, 255], "read_vref": 131, "10hz": [131, 213, 265], "3v": [131, 134, 175, 176, 178, 179, 180, 183, 250, 255], "die": [131, 170], "centigrad": 131, "backup": [131, 161, 175], "21v": 131, "nomin": [131, 133], "overload": 131, "backscal": 131, "met": 131, "exce": [131, 232], "unscal": 131, "unwant": 131, "0x70000": 131, "filtered_xyz": 132, "x9": 132, "f4": [133, 174], "f7": [133, 178], "fd": 133, "kbit": 133, "arbitr": 133, "1mbit": 133, "500_000": 133, "brs_baudrat": 133, "1_000_000": [133, 255], "0xfff0": 133, "fdf": 133, "ya": [133, 203], "yb": 133, "pb8": 133, "pb9": 133, "pb12": [133, 142, 178, 254], "pb13": [133, 142, 146, 178, 254], "sjw": 133, "bs1": 133, "bs2": 133, "num_filter_bank": 133, "brs_sjw": 133, "brs_bs1": 133, "brs_bs2": 133, "brs_sample_point": 133, "quanta": 133, "resynchronis": 133, "brs_prescal": 133, "tq": 133, "pclk1": 133, "bittim": 133, "42mhz": 133, "28khz": 133, "680": 133, "stm32f405": 133, "0x111": 133, "bitrat": 133, "65v": 134, "400hz": [134, 197], "2048": 134, "2047": [134, 179], "amp": [134, 201], "5k\u03c9": 134, "15k\u03c9": 134, "5m\u03c9": 134, "penalti": [134, 228], "pseudo": [134, 149, 225], "ramp": [134, 166], "dac1": [134, 255], "dac2": 134, "buf1": 134, "buf2": 134, "waveform": 134, "px0": 135, "px1": 135, "caution": [135, 258], "pushbutton": 135, "eng": [135, 258], "utah": [135, 258], "edu": [135, 176, 258], "cs5780": [135, 258], "debounc": [135, 201, 204, 258], "evt_ris": 135, "evt_fal": 135, "evt_rising_fal": 135, "irq_xxx": 135, "evt_xxx": 135, "wfe": 135, "exti": 135, "usrsw": 135, "0x100": [136, 228, 240], "spiflash": 136, "pullup": [137, 146], "recipi": 137, "456": 137, "buss": [137, 146], "pb10": [137, 146, 178, 254], "pb11": [137, 146, 178, 254], "pd12": [137, 178, 254], "pd13": [137, 178], "gencal": 137, "addr_siz": 137, "0x7f": 137, "lcd32mkv1": [138, 193, 194], "nhd": [138, 193, 194], "c12832a1z": [138, 193, 194], "dx": 138, "dy": 138, "50m": [138, 199], "skin_posit": 138, "plug": [138, 181, 193, 211, 214], "instr_data": 138, "diod": [139, 211], "x1_pin": 140, "pybv1": [140, 193, 194, 195, 208, 239], "a0": [140, 174, 175, 235, 254, 255], "mymapperdict": 140, "leftmotordir": 140, "c12": 140, "mymapp": 140, "pin_nam": 140, "summaris": [140, 232], "ordin": 140, "40k": 140, "3v3": [140, 193, 194, 258, 262], "11k": 140, "microprocessor": [140, 253], "x3_af": 140, "af1_tim2": 140, "af2_tim5": 140, "af3_tim9": [140, 239], "af7_usart2": 140, "tim2_ch3": 140, "tim2": [140, 178, 195, 265], "2014": [141, 161, 208], "mondai": 141, "sundai": 141, "took": 141, "0x10000": 141, "0x20000": 141, "cal": 141, "954": 141, "likewis": 141, "600000": 142, "crc": [142, 219], "0x7": 142, "polynomi": 142, "pb14": [142, 146, 178, 254], "pb15": [142, 146, 178, 254], "moment": [142, 145, 175, 178, 214, 232, 242, 250, 253, 255], "328125": 142, "apb": 142, "texa": 142, "instrument": 142, "motorola": 142, "ahb1": 142, "s1": [143, 178, 195], "servo1": [143, 211], "servo2": [143, 211], "1500m": [143, 178, 195], "1500": [143, 170, 178, 195, 200, 211], "p9": [143, 178, 183], "pulse_min": 143, "pulse_centr": 143, "pulse_angle_90": 143, "pulse_speed_100": 143, "sw": [144, 195, 212], "shorthand": [144, 156, 212], "2hz": 145, "99": [145, 253], "199": 145, "div": [145, 213], "deadtim": [145, 175], "brk": 145, "100hz": 145, "83": [145, 213, 254], "999": 145, "psc": 145, "0x3fffffff": [145, 213], "autoreload": 145, "arr": [145, 162], "dead": 145, "complimentari": 145, "1008": 145, "kill": 145, "brk_in": 145, "afn_timx": 145, "pwm_invert": 145, "oc_tim": 145, "oc_act": 145, "oc_inact": 145, "oc_toggl": 145, "oc_forced_act": 145, "oc_forced_inact": 145, "enc_a": 145, "ch1": [145, 195, 200], "enc_b": 145, "ch2": 145, "enc_ab": 145, "oc": 145, "enc": 145, "ch1n": 145, "ch2n": 145, "8000": [145, 166], "ch3": [145, 178], "pin_t8_1": 145, "af3_tim8": [145, 239], "pc6": 145, "tim8_ch1": 145, "pin_t8_1n": 145, "pa7": 145, "tim8_ch1n": 145, "pin_bkin": 145, "pa6": 145, "tim8_bkin": 145, "break_callabck": 145, "read_buf_len": 146, "nrt": 146, "nct": 146, "paragraph": [146, 177], "116": [146, 254], "ceas": 146, "trail": [148, 175, 223], "micropy_py_random_extra_func": 149, "micropy_py_random_seed_init_func": 149, "greedi": 150, "za": 150, "z0": 150, "9_": 150, "backslash": 150, "rn": [150, 215, 216, 218, 220, 222, 223, 225, 227], "cr": 150, "lf": [150, 229], "repetit": [150, 232], "line1": 150, "rline2": 150, "nline3": 150, "line2": 150, "line3": 150, "regex_str": 150, "anchor": 150, "substitut": [150, 228, 240], "max_split": 150, "raspberri": [151, 249, 250], "statemachin": [151, 153, 250, 252], "asm_pio": [151, 153, 154, 250, 252], "out_init": [151, 153], "set_init": [151, 153, 250, 252], "sideset_init": [151, 153], "in_shiftdir": [151, 153, 154], "out_shiftdir": [151, 153, 154], "autopush": 151, "autopul": 151, "push_thresh": [151, 154], "pull_thresh": [151, 154], "fifo_join": [151, 153], "join_non": [151, 153], "in_low": [151, 153], "in_high": [151, 153], "out_low": [151, 153, 250, 252], "out_high": [151, 153], "shift_left": [151, 153, 154], "shift_right": [151, 153, 154], "osr": [151, 154], "join_rx": [151, 153], "join_tx": [151, 153], "asm_pio_encod": [151, 154], "instr": [151, 154], "sideset_count": 151, "sideset_opt": 151, "57345": 151, "bootsel_button": 151, "qspi_ss": 151, "bootsel": 151, "pioasmerror": 151, "nine": [151, 252], "wrap_target": [151, 252], "jmp": [151, 154, 250, 252], "uncondition": 151, "cond": 151, "not_x": 151, "not_i": 151, "x_dec": [151, 250, 252], "y_dec": 151, "decrement": [151, 252], "x_not_i": 151, "not_osr": 151, "hasn": 151, "in_bas": [151, 154], "in_": [151, 252], "pindir": 151, "noblock": 151, "ifful": 151, "ifempti": 151, "mov": [151, 216, 219, 225, 252], "modulo": [151, 240, 255], "nop": [151, 224, 250, 252], "pseudoinstruct": 151, "programm": [151, 153, 187, 228, 240, 244, 249, 251], "add_program": 153, "enomem": 153, "remove_program": 153, "state_machin": 153, "irq_sm0": 153, "irq_sm1": 153, "irq_sm2": 153, "irq_sm3": 153, "pio": [154, 249, 252], "out_bas": 154, "set_bas": [154, 250, 252], "jmp_pin": 154, "sideset_bas": 154, "slight": 154, "65536th": 154, "125mhz": [154, 175, 250], "1908": 154, "sm": [154, 218, 250, 252], "sm_restart": 154, "rx_fifo": 154, "tx_fifo": 154, "rlist": 155, "wlist": 155, "xlist": 155, "eventmask": 155, "pollout": 155, "pollhup": 155, "pollerr": 155, "unsolicit": 155, "enoent": 155, "calle": [155, 230], "emploi": [155, 219, 220, 228, 232, 240, 249], "bsd": [156, 176], "sockaddr": 156, "domain": 156, "hack": 156, "ipv4_address": 156, "ipv6": 156, "ipv6_address": 156, "flowinfo": 156, "scopeid": 156, "colon": [156, 239, 257], "2001": 156, "db8": 156, "proto": 156, "canonnam": 156, "gaierror": 156, "bin_addr": 156, "x7f": 156, "txt_addr": 156, "x03": 156, "x04": [156, 239], "sol_": 156, "so_": 156, "ipproto_": 156, "dgram": 156, "unaccept": 156, "refus": 156, "conn": 156, "consecut": [156, 217], "bufsiz": 156, "nonneg": 156, "poller": 156, "facil": 157, "server_sid": 157, "keyfil": 157, "certfil": 157, "cert_req": [157, 258], "cadata": 157, "server_hostnam": 157, "do_handshake_on_connect": 157, "mbedtl": 157, "ca": [157, 258], "der": 157, "protocol_": 157, "cafil": 157, "sni": 157, "prone": 157, "verif": 157, "cert_": 157, "cmsi": 158, "bsrr": 158, "fu": 158, "ogf": 158, "ocf": 158, "hci": 158, "subghz": 158, "truthi": 158, "falsei": 158, "rfbusi": 158, "fmt": 159, "retval": 160, "underlyingli": 160, "tracefunc": 160, "micropy_py_sys_settrac": 160, "_machin": 160, "_mpy": [160, 236], "mandat": 160, "bare": [160, 228, 229], "baremet": [160, 161, 162, 230], "epoch": [161, 255], "1970": 161, "calendar": 161, "mdai": 161, "yeardai": 161, "centuri": 161, "mon": 161, "sun": 161, "366": 161, "jan": 161, "ticks_max": 161, "ticks_period": 161, "why": [161, 181, 187, 191], "benchmark": 161, "modular": 161, "deadlin": 161, "do_a_little_of_someth": 161, "ticks1": 161, "ticks2": 161, "ring": 161, "distant": 161, "complement": [161, 215, 216, 223], "monitor": [161, 203, 228, 235], "notch": 161, "dial": 161, "plate": 161, "mistak": 161, "regularli": [161, 186, 240], "metaphor": 161, "500u": 161, "overdu": 161, "snippet": [161, 230, 238], "scheduled_tim": 161, "nap": 161, "oop": [161, 162], "late": [161, 232], "run_fast": 161, "year_2038_problem": 161, "foreign": [162, 230], "behind": [162, 181, 187], "ctype": 162, "streamlin": 162, "familiar": [162, 186, 220, 228], "uncar": 162, "executable_and_linkable_format": 162, "file_head": 162, "elf_head": 162, "ei_mag": 162, "ei_data": 162, "0x5": 162, "e_machin": 162, "x7felf": 162, "struct1": 162, "wwdg": 162, "wwdg_layout": 162, "wwdg_cr": 162, "bfuint32": 162, "wdga": 162, "bf_po": 162, "bf_len": 162, "wwdg_cfr": 162, "ewi": 162, "wdgtb": 162, "0x40002c00": 162, "0b10": 162, "field1": 162, "field2": 162, "field_nam": 162, "b0": [162, 223, 227], "aggreg": 162, "arr2": 162, "ptr2": 162, "bitfield": 162, "bitf0": 162, "bfuint16": 162, "lsbit": 162, "bitsiz": 162, "typenam": 162, "bf": 162, "abi": 162, "layout_typ": 162, "immut": [162, 196, 228], "ffi": [162, 230, 233], "my_struct": 162, "substruct1": 162, "dereferenc": 162, "derefer": 162, "mcu_regist": 162, "peripheral_a": 162, "register1": 162, "reg_a": 162, "register0": 162, "dozen": 162, "anywai": [162, 180, 181, 183, 184, 186, 188, 189, 191, 192], "spread": 162, "megabyt": [162, 191], "synthet": 162, "quiet": 163, "kw": 164, "rrequest": 164, "nxp": [166, 173, 176], "freescal": [166, 193, 194], "mx": [166, 173, 174, 175], "cope": 166, "0x1a": 166, "sample_r": [166, 175], "swap_non": 166, "route_playback_record": 166, "left_input": 166, "input_mic3": 166, "right_input": 166, "input_mic2": 166, "sysclk_sourc": 166, "sysclk_mclk": 166, "mclk_freq": 166, "sync_dac": [166, 175], "bus_i2": 166, "i2c_address": 166, "wm8960_i2c_addr": 166, "11025": 166, "12000": 166, "24000": 166, "32000": [166, 175], "48000": 166, "96000": 166, "192000": 166, "384000": 166, "play_sourc": 166, "sysclk": 166, "mclk": 166, "pll": [166, 249], "daclrc": 166, "sysclk_pll": 166, "2896": 166, "11015": 166, "288": 166, "swap_input": [166, 175], "swap_output": 166, "bus_left_justifi": 166, "bus_right_justifi": 166, "bus_pcma": 166, "bus_pcmb": 166, "input_clos": 166, "input_mic1": 166, "input_line2": 166, "input_line3": 166, "route_bypass": 166, "route_playback": 166, "route_record": 166, "module_adc": 166, "module_dac": 166, "module_vref": 166, "module_headphon": 166, "module_mic_bia": 166, "module_m": 166, "module_line_in": 166, "module_line_out": 166, "module_speak": 166, "module_omix": 166, "module_mono_out": 166, "play_headphone_left": 166, "play_headphone_right": 166, "play_speaker_left": 166, "play_speaker_right": 166, "sync_adc": 166, "set_left_input": 166, "input_sourc": 166, "set_right_input": 166, "volume_l": 166, "volume_r": 166, "mute": 166, "mute_fast": 166, "unmut": 166, "mute_slow": 166, "set_data_rout": 166, "set_modul": 166, "enable_modul": 166, "disable_modul": 166, "expand_3d": 166, "module_mono_mix": 166, "alc_mod": 166, "alc": 166, "alc_off": 166, "als_right": 166, "alc_left": 166, "alc_stereo": 166, "alc_limit": 166, "alc_gain": 166, "max_gain": 166, "min_gain": 166, "noise_g": 166, "78": [166, 254], "alc_tim": 166, "decai": 166, "6140": 166, "24580": 166, "43000": 166, "deemphasi": 166, "micro_python": 166, "wm": [166, 175], "set_volum": [166, 232], "mimxrt10xx_dev": [166, 175], "mic": [166, 254], "16_000": 166, "sparkfun": 166, "teensi": [166, 173, 174, 175], "24mhz": [166, 255], "adclrc": 166, "24_000_000": 166, "44_100": 166, "is_preempt_thread": 167, "preemptibl": 167, "supplant": 167, "current_tid": 167, "thread_analyz": 167, "analyz": 167, "thread_nam": 167, "available_stack_spac": 167, "stack_space_us": 167, "stack_siz": 167, "percent_stack_space_us": 167, "cpu_util": 167, "config_thread_runtime_stat": 167, "kconfig": 167, "config_thread_analyz": 167, "prj": 167, "conf": 167, "shell_exec": 167, "cmd_in": 167, "backend": [167, 186], "config_shell_backend_seri": 167, "shell": [167, 258], "diskaccess": [167, 268, 273], "flasharea": [167, 268, 273], "zsensor": [167, 268], "zephyr": [168, 169, 271, 272, 273], "devicetre": [168, 169, 170, 272], "disk_nam": 168, "mimxrt1050_evk": [168, 273], "sdhc": [168, 181, 268, 273], "mcuboot": 169, "flash_area_label_exist": 169, "boot_partit": 169, "slot0_partit": 169, "slot1_partit": 169, "scratch_partit": 169, "quantiti": [170, 219, 255], "ax": 170, "device_nam": 170, "acceleromet": [170, 193, 194, 201, 268], "frdm": [170, 267, 268, 271, 272], "k64f": [170, 267, 268, 272], "fxos8700": 170, "sensor_sample_fetch": 170, "millionth": [170, 268], "get_float": [170, 268], "sensor_channel": 170, "get_micro": [170, 268], "1500000": 170, "get_milli": [170, 268], "thousandth": [170, 268], "get_int": [170, 268], "accel_x": [170, 268], "accel_i": [170, 268], "accel_z": [170, 268], "gyro_x": 170, "veloc": 170, "gyro_i": 170, "gyro_z": 170, "magn_x": 170, "magnet": 170, "gauss": 170, "magn_i": 170, "magn_z": 170, "die_temp": 170, "kilopasc": 170, "prox": 170, "dimensionless": 170, "spectrum": 170, "lux": 170, "altitud": 170, "meter": [170, 184], "onward": 171, "trade": [171, 240], "constrain": [171, 222, 227, 267], "mit": 172, "2013": 172, "damien": 172, "georg": 172, "paul": 172, "sokolovski": 172, "llc": 172, "herebi": 172, "charg": 172, "sublicens": 172, "sell": 172, "whom": 172, "furnish": 172, "substanti": [172, 228, 230, 240], "AS": 172, "BUT": 172, "noninfring": 172, "holder": 172, "liabl": 172, "claim": 172, "liabil": 172, "contract": 172, "tort": 172, "WITH": 172, "mxrt": 173, "arm7": 173, "imxrt1020": 173, "evk": [173, 174, 175], "mimxrt1010": [173, 174, 175], "mimxrt1020": [173, 174], "mimxrt1050": [173, 174, 175], "mimxrt1060": [173, 174], "mimxrt1064": [173, 174], "rt1064": [173, 174], "sram": [173, 191, 249], "rt1061": 173, "rt1050": 173, "rt1020": 173, "rt1015": 173, "rt1010": 173, "crossov": 173, "imx": 173, "600mhz": 173, "mbyte": 173, "1015": [173, 174, 175], "101x": 173, "uart3": [174, 255], "mimxrt1015": 174, "d9": [174, 175, 254, 255], "d10": [174, 175, 254, 255], "d13": [174, 254], "d8": [174, 254, 255], "evkb": 174, "mimxrt1170": [174, 175], "d12": [174, 175, 254, 255], "d11": [174, 254, 255], "metro": 174, "rt1010py": 174, "rxd": [174, 247, 254], "txd": [174, 247, 254], "j3_19": 174, "j3_20": 174, "j4_16": 174, "j4_17": 174, "j4_06": 174, "j4_07": 174, "uart4": [174, 242], "uart5": 174, "uart6": 174, "uart7": [174, 242], "uart8": [174, 242], "d15": 174, "d14": [174, 255], "d25": [174, 255], "d26": [174, 175, 255], "d33": 174, "d34": 174, "d35": 174, "d36": [174, 175], "j4_10": 174, "j4_11": 174, "j5_08": 174, "j5_12": 174, "1010": 174, "1020": [174, 175], "1050": 174, "1170": 174, "f1": 174, "f2": 174, "a2": [174, 175, 235, 254], "a3": [174, 235, 254], "a4": [174, 254], "a5": [174, 254], "d31": 174, "d32": 174, "denot": [174, 198, 215, 216, 218, 221, 222, 223, 225, 227, 255], "f3": 174, "dat1": 174, "dat2": 174, "dat3": 174, "j3_04": 174, "j3_10": 174, "j3_12": 174, "j3_13": 174, "j3_16": 174, "j3_17": 174, "j4_08": 174, "j4_09": 174, "j5_32": 174, "j5_28": 174, "j5_29": 174, "j5_30": 174, "j5_04": 174, "j5_05": 174, "j5_06": 174, "j5_07": 174, "j5_13": 174, "j5_14": 174, "j5_23": 174, "j5_24": 174, "j5_25": 174, "j5_26": 174, "j5_42": 174, "j5_43": 174, "j5_50": 174, "led_r": 174, "led_green": 174, "led_blu": [174, 254], "sdi": 174, "sdo": 174, "cs0": 174, "legend": 174, "qm": 174, "qtmr": [174, 175], "flexpwm": [174, 175], "rt1011": 174, "gpio_01": 174, "gpio_02": 174, "gpio_ad_12": 174, "gpio_sd_01": 174, "gpio_sd_02": 174, "rt1021": 174, "gpio_ad_b1_06": 174, "flexpwm1": 174, "gpio_ad_b1_07": 174, "gpio_emc_26": 174, "gpio_emc_27": 174, "gpio_ad_b0_14": 174, "flexpwm2": 174, "gpio_ad_b0_15": 174, "gpio_emc_10": 174, "gpio_emc_38": 174, "gpio_emc_39": 174, "rt1052": 174, "gpio_ad_b0_02": 174, "gpio_emc_23": 174, "gpio_emc_24": 174, "gpio_sd_b0_00": 174, "gpio_sd_b0_01": 174, "gpio_b0_06": 174, "gpio_b0_07": 174, "gpio_emc_06": 174, "gpio_emc_07": 174, "gpio_emc_29": 174, "flexpwm3": 174, "gpio_emc_30": 174, "gpio_ad_b1_08": 174, "flexpwm4": 174, "gpio_emc_00": 174, "gpio_emc_01": 174, "rt1176": 174, "gpio_emc_b1_00": 174, "gpio_emc_b1_01": 174, "gpio_emc_b1_06": 174, "gpio_emc_b1_07": 174, "gpio_emc_b1_23": 174, "gpio_emc_b1_24": 174, "gpio_emc_b1_29": 174, "gpio_emc_b1_30": 174, "gpio_ad_00": 174, "gpio_ad_01": 174, "gpio_ad_24": 174, "gpio_ad_25": 174, "cs1": 174, "spi0": [174, 175, 242], "spi1": [174, 242], "spi2": 174, "mixmxrt1010": 174, "mixmxrt1015": 174, "mixmxrt1020": 174, "mixmxrt1050": 174, "mixmxrt1060": 174, "mixmxrt1064": 174, "mixmxrt1170": 174, "d28": 174, "d24": [174, 175], "j4_12": 174, "j4_14": 174, "j4_13": 174, "j4_15": 174, "j3_09": 174, "j3_05": 174, "j3_08_j3_11": 174, "d19": 174, "d18": 174, "sda1": [174, 254], "scl1": [174, 254], "sda2": 174, "scl2": 174, "sck_tx": [174, 175], "ws_tx": [174, 175], "sd_tx": 174, "sck_rx": 174, "ws_rx": 174, "sd_rx": [174, 175], "j14_13": 174, "mimxrt_dev": 174, "mimxrt_10xx_dev": 174, "gpio_b1_15": 175, "dxx": 175, "ann": [175, 255], "mimxrt10xx": 175, "j3_xx": 175, "j4_xx": 175, "j5_xx": 175, "mimxrt1xxx": 175, "mimxrt1010_evk": 175, "mimxrt1170_evk": 175, "inner": [175, 221], "d16": 175, "d23": 175, "j9": 175, "d17": 175, "d27": 175, "j26": 175, "j63": 175, "j66": 175, "d29": 175, "j25": 175, "d30": 175, "pwm4": [175, 178], "pwm5": [175, 178], "pwm6": [175, 178], "pwm9": [175, 178], "pwm3": [175, 178], "resp": [175, 254], "18hz": 175, "24hz": 175, "duty_16": 175, "channel_mask": 175, "Their": 175, "illustr": [175, 219, 232, 240], "bridg": 175, "flex": 175, "pwm_clk": 175, "formula": 175, "pmw_clk": 175, "150": 175, "1060": 175, "1064": 175, "20hz": 175, "u16": 175, "1907": 175, "2288": 175, "2441": 175, "irrespect": [175, 178, 217, 255], "30mhz": [175, 207], "0x76": [175, 178, 255], "codec": [175, 197], "uda1334": 175, "wm8960": 175, "sample_rate_in_hz": 175, "adc_sync": 175, "mw8960": 175, "sgtl5000": 175, "d21": 175, "d20": 175, "0x0a": 175, "mute_dac": 175, "dac_volum": 175, "headphone_select": 175, "mute_headphon": 175, "absenc": 175, "20\u00b5a": 175, "cr2032": 175, "coin": 175, "cell": [175, 254], "1011": 175, "overdr": 175, "jack": 175, "pjrc": [175, 176], "lan8720": 175, "equip": [175, 218], "ftp": [175, 260, 266], "rshell": [175, 255], "thonni": [175, 255], "teensy_loader_cli": 176, "imxrt1062": 176, "disappear": [176, 256], "reappear": 176, "segger": [176, 244], "sidekick": 176, "debugg": 176, "seeedstudio": 176, "arch_mix": 176, "jlink": [176, 244], "mini": 176, "jflashlit": 176, "0x60000000": 176, "j3": 176, "gpio_ad_b0_05": 176, "dip": 176, "firmware_image_fil": 176, "jumper": 176, "pin19": 176, "superus": 176, "udev": 176, "blhost": 176, "sdphost": 176, "robert": 176, "hh": 176, "mimxrt_serial_download": 176, "think": [177, 186], "remount": [177, 235], "rescan": 177, "overwrit": 177, "reconmend": 177, "asset": [177, 181], "powerup": 177, "dfu": [177, 181, 186, 190, 193, 235], "immediantli": 177, "avial": 178, "p_out": [178, 195, 259], "p_in": [178, 195, 259], "pa5": 178, "pd14": 178, "5v": [178, 179, 183, 211, 258, 262], "intr": [178, 195], "ext": [178, 195], "tim3": 178, "tim4": [178, 213, 232], "tim7": [178, 213], "tim14": 178, "tim8": 178, "tim12": 178, "tim17": 178, "ch": [178, 195], "ss": [178, 258], "360": 179, "probabl": [180, 191, 210, 212, 214], "tini": [180, 196], "ve": [180, 181, 186, 188, 190, 191, 192, 239], "cloth": 181, "strand": 181, "microfib": 181, "glass": 181, "isopropyl": 181, "alcohol": 181, "screw": 181, "rub": 181, "wet": 181, "gentli": 181, "dirt": 181, "spot": 181, "microscop": 181, "evapor": 181, "water": 181, "gentl": [181, 202, 262], "rip": 181, "movement": 181, "hole": 181, "strain": 181, "relief": 181, "unrespons": [181, 186], "saw": 181, "broken": [181, 187, 239, 266], "unplug": [181, 186, 202, 262], "sai": [181, 186, 199, 210, 228], "hello_world": 181, "webcam": 181, "dig": 181, "bump": 181, "plastic": [181, 202], "unscrew": 181, "focus": 181, "accident": 181, "ntf": 181, "journal": 181, "wrote": [181, 210], "facto": 181, "importantli": 181, "patent": 181, "safeti": [181, 232], "tb": 181, "fat12": 181, "fat16": 181, "fat32": 181, "sdxc": 181, "accessori": 182, "topic": [183, 232, 240], "hookup": 183, "worri": [183, 235], "beefi": 183, "auxiliari": 183, "red_l": 184, "green_l": 184, "blue_l": 184, "ir_l": 184, "dark": [184, 211], "strong": [184, 202, 262], "onlin": [185, 188], "signup": 185, "twitter": 185, "answer": [185, 187], "account": [185, 188], "question": 185, "qtcreator": 186, "pane": 186, "combo": 186, "obviou": 186, "explor": [186, 210], "ton": [186, 187], "lastli": 186, "profession": 186, "redo": 186, "enviorn": 186, "hover": 186, "walk": 186, "tooltip": 186, "joi": 186, "gotten": 186, "smart": 186, "highlight": 186, "unkil": 186, "recours": 186, "xp": 186, "harder": 186, "reocord": 186, "ffmpeg": 186, "transcod": 186, "constantli": [186, 191], "wild": 186, "candi": 186, "programmat": [186, 239], "graph": 186, "easier": [186, 200, 211, 234], "million": 186, "ini": 186, "bootup": 186, "dialog": 186, "submenu": 186, "life": 186, "mp4": 186, "player": 186, "activit": 186, "07d": 186, "printf": 186, "7d": 186, "folk": 186, "tuturi": [187, 189, 191], "accomplish": 187, "happili": 187, "valv": 187, "solv": [187, 200], "instant": 187, "job": [187, 196], "faq": 187, "ship": 188, "luckili": [188, 191], "cloud": [188, 258], "everyon": 188, "repo": [188, 233, 235, 237], "openmv2": 188, "openmv3": 188, "openmv4": 188, "openmv4p": 188, "omv_lib_dir": 188, "door": 188, "vulner": 188, "assur": [188, 258], "studi": 189, "plenti": 189, "distinct": [189, 228], "welcom": 189, "dmg": 190, "macport": 190, "homebrew": 190, "libusb": 190, "pyusb": 190, "brew": 190, "chmod": 190, "openmvid": 190, "qt": 190, "tar": 190, "dram": 191, "sdr": 191, "cheapest": 191, "revv": 191, "kept": 191, "bandwidth": 191, "2gb": 191, "666mb": 191, "requr": 191, "haven": 191, "automag": 191, "arbitrarili": [191, 228], "leverag": [191, 192], "predict": [191, 232], "100kb": 191, "abadon": 192, "ustruct": 192, "lhb": 192, "a_32_bit_valu": 192, "a_16_bit_valu": 192, "a_8_bit_valu": 192, "pixi": 192, "pixy_uart_emul": 192, "skipsd": 193, "charger": 193, "slowli": [193, 200, 258], "9mib": [193, 194], "4mib": [193, 194], "360kib": [193, 194], "imperi": [193, 194], "194kib": [193, 194], "ampv1": [193, 194], "209kib": [193, 194], "lcd160cr": [193, 194, 201], "stm32f405rgt6": [193, 194], "mma7660": [193, 194], "800kib": [193, 194], "ldo": [193, 194, 249], "regul": [193, 194], "microchip": [193, 194, 253], "mcp1802": [193, 194], "400kib": [193, 194], "newhaven": [193, 194], "fsw": [193, 194], "fbw": [193, 194], "460kib": [193, 194], "mpr121": [193, 194, 204], "280kib": [193, 194], "potentiomet": [193, 194, 197, 211], "mcp4541": [193, 194], "7mib": [193, 194], "pyblitev1": 195, "ac": 195, "60000000": 195, "60mhz": 195, "vin": [195, 202, 211, 262], "x19": 195, "sfxw": 195, "accel": [195, 196, 214, 268], "spring": 196, "noisi": 196, "bigger": [196, 228], "annoyingli": 196, "rescal": 196, "xlight": 196, "ylight": 196, "solder": [197, 202, 204, 262], "speaker": 197, "amplifi": 197, "ic2": 197, "wav": 197, "avconv": 197, "pcm_u8": 197, "readfram": 197, "getnfram": 197, "getframer": 197, "16khz": 197, "total_fram": 197, "framer": 197, "setpo": 197, "asm_thumb": [198, 219], "movw": [198, 225], "r0": [198, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227], "led_on": 198, "movwt": [198, 219, 225], "r1": [198, 216, 219, 226], "strh": [198, 227], "gpio_bsrrl": 198, "concept": [198, 201, 220, 230, 236, 237, 240], "pa13": [198, 254], "movt": [198, 225], "13th": 198, "r2": [198, 219], "r3": [198, 219], "asm_add": 198, "my_label": 198, "bgt": [198, 216, 219, 221], "flash_l": 198, "pa14": [198, 254], "loop_entri": 198, "loop1": 198, "r4": 198, "5599900": 198, "delay_on": 198, "cmp": [198, 216, 219], "gpio_bsrrh": 198, "delay_off": 198, "capacitor": 199, "20m": 199, "wait_pin_chang": 199, "cur_valu": 199, "pin_x1": 199, "breadboard": 200, "anod": 200, "leg": 200, "cathod": 200, "examin": 200, "tim5": 200, "tchannel": 200, "brighten": 200, "max_width": 200, "min_width": 200, "wstep": 200, "cur_width": 200, "weber": 200, "law": 200, "linearli": 200, "exhibit": 200, "relationship": 200, "whilst": [202, 262], "difficult": [202, 262], "shock": [202, 262], "dry": [202, 262], "cold": [202, 262], "climat": [202, 262], "anti": 202, "conduct": 202, "foam": 202, "imposs": [202, 209, 220, 258, 262, 264], "worst": [202, 262], "10v": 202, "lcd160cr_test": 203, "brief": [203, 232], "test_al": 203, "xa": 203, "0x5e": 204, "electrod": 204, "touch_statu": 204, "myle": 205, "autom": [205, 235], "armi": 205, "evil": 205, "robot": [205, 211], "bore": 205, "annoi": 205, "terminologi": 205, "stuck": 205, "carefulli": 205, "choreograph": 205, "vcpinterrupt": 205, "gone": [205, 228, 232], "gradual": 205, "pass_through": 206, "do_some_process": 207, "30000000": 207, "pybcdc": [208, 209, 210], "com4": [208, 263], "hypertermin": 208, "putti": [208, 246, 258, 263, 272], "tty": [208, 263], "usbmodem": [208, 263], "ttyacm1": [208, 235, 272], "ttyacm": [208, 272], "uucp": [208, 263, 272], "dialout": [208, 263, 272], "obligatori": [208, 263], "ahead": [208, 212, 258, 263], "pypypypypypypypypypypypypypypypypypypypi": [208, 263], "03": [208, 246], "stm32f405rg": [208, 239], "closest": 208, "panic": [209, 264], "usr": [209, 212, 214, 257], "lit": [209, 214], "forgot": 209, "disc": 210, "pybflash": 210, "lsblk": 210, "sdb1": [210, 229], "notepad": 210, "congratul": 210, "male": 211, "darkest": 211, "brown": [211, 228], "semicolon": [211, 257], "joint": 211, "pan": 211, "clockwis": 211, "2420": 211, "2470": 211, "2200": 211, "recalibr": 211, "2400": 211, "1510": 211, "2500": 211, "anonym": 212, "beforehand": 212, "13439": 213, "84mhz": 213, "625": 213, "13440": 213, "21504": 213, "start_micro": 213, "end_micro": 213, "uncom": 214, "osc": 214, "tut": 214, "rd": [215, 216, 218, 220, 223, 224, 225], "rm": [215, 216, 218, 220, 221, 235, 238], "r7": [215, 216, 220, 222, 223, 226, 227], "immn": [215, 222, 225, 227], "imm8": [215, 216, 225], "imm3": 215, "rdn": 215, "sbc": 215, "sdiv": 215, "udiv": 215, "bge": [216, 221], "bhi": [216, 221], "0x80000000": [216, 219], "borrow": 216, "compliment": 216, "0x7fffffff": 216, "0x8000000": 216, "cmn": 216, "tst": 216, "ite": [216, 221], "eq": [216, 221], "itt": 216, "itet": 216, "ittt": 216, "itttt": 216, "itee": 216, "inner1": 217, "facilit": [217, 240], "coprocessor": [218, 240], "s0": [218, 219], "s31": 218, "vmov": 218, "sn": 218, "r13": [218, 220], "r15": [218, 220, 221, 223, 225], "vadd": 218, "vsub": 218, "vneg": 218, "vmul": [218, 219], "vdiv": [218, 254], "vsqrt": 218, "fpscr": 218, "vmr": 218, "apsr_nzcv": 218, "vldr": [218, 219], "vstr": [218, 219], "vcmp": 218, "vcvt_f32_s32": 218, "vcvt_s32_f32": 218, "appreci": [219, 232], "bl": [219, 221, 235], "lr": [219, 221, 226], "r14": [219, 221, 226], "bx": [219, 221], "contriv": 219, "fibonacci": 219, "fib": 219, "dofib": 219, "fibdon": 219, "uadd": 219, "0x40000000": 219, "contigu": [219, 228, 240], "indirect": [219, 220], "getindirect": 219, "ldr": [219, 222], "testindirect": 219, "litter": 219, "mydata": 219, "v7": [219, 220], "0xe92d": 219, "0x0f00": 219, "r8": [219, 220, 226], "r9": 219, "r10": 219, "r11": 219, "gamut": 219, "enable_crc": 219, "rcc": 219, "rcc_ahb1enr": 219, "reset_crc": 219, "crc_cr": 219, "getval": 219, "crc_dr": 219, "getcrc": 219, "r12": [220, 226], "constitut": [220, 232], "pseudocod": 220, "emitinlinethumb": 220, "rm0090": 220, "academ": 220, "bewar": 220, "ne": 221, "mi": 221, "pl": 221, "vc": 221, "ge": 221, "lt": 221, "gt": 221, "uncondit": 221, "beq": 221, "bne": 221, "blt": 221, "bc": 221, "bcc": 221, "bmi": 221, "bpl": 221, "bv": 221, "bvc": 221, "beq_w": 221, "imm5": [222, 227], "imm7": [222, 227], "ldrb": 222, "ldrh": 222, "imm6": [222, 227], "eor": 223, "and_": 223, "orr": 223, "mvn": 223, "bic": 223, "lsl": 223, "lsr": 223, "asr": 223, "ror": 223, "rotate_right": 223, "b31": 223, "b30": 223, "clz": 223, "count_leading_zero": 223, "rbit": 223, "bit_revers": 223, "cpsid": 224, "cpsie": 224, "mr": 224, "special_reg": 224, "ipsr": 224, "basepri": 224, "imm16": 225, "halfword": 225, "imm32": 225, "immateri": 226, "regset": 226, "strb": 227, "b7": 227, "b15": 227, "unfamiliar": [228, 240], "nonvolatil": 228, "impract": 228, "inaccess": 228, "incorpor": 228, "mymodul": 228, "vm": [228, 230, 237], "insuffici": 228, "precompil": [228, 236], "_col": 228, "presenc": [228, 232], "prepend": 228, "implic": [228, 232], "mystr": 228, "fox": 228, "resid": [228, 229], "0xdeadbeef0000deadbeef": 228, "needless": 228, "unwittingli": 228, "var": 228, "var1": 228, "var2": 228, "needlessli": 228, "piecem": 228, "fashion": [228, 255], "06d": 228, "painless": 228, "lstrip": 228, "obvious": 228, "redund": [228, 240], "discours": 228, "despit": [228, 238], "10kib": 228, "0x400": 228, "1kib": 228, "quicker": [228, 240], "circumst": 228, "starv": 228, "amelior": 228, "surpris": 228, "metal": [228, 229], "moutn": 229, "flashbdev": 229, "bdev": [229, 273], "ramblockdev": 229, "num_block": 229, "ramdisk": 229, "2m": 229, "fuse": 229, "block_count": 229, "allow_oth": 229, "mnt": 229, "256kib": 229, "frequent": [229, 240], "resili": 229, "csv": 229, "pcb": 230, "invis": 230, "offlin": 230, "circuitpython": 230, "industri": [230, 241], "jython": 230, "ironpython": 230, "pypi": [230, 237], "acronym": 230, "bundl": 230, "vastli": 230, "laptop": 230, "phone": 230, "cheaper": 230, "stdlib": 230, "freebsd": 230, "solari": 230, "interchang": 230, "upip": 230, "obsolet": 230, "inspir": 230, "vagu": 232, "deliber": 232, "cleanli": 232, "deleg": 232, "hazard": [232, 240], "confer": 232, "entrant": 232, "disallow": 232, "0xa5": 232, "0x5a": 232, "bar_ref": 232, "occas": [232, 240], "circumv": 232, "problemat": 232, "parlanc": 232, "unsaf": [232, 235], "dsp": 232, "queu": 232, "compli": 232, "empt": [232, 240], "sustain": 232, "unconstrain": 232, "growth": 232, "propag": 232, "disrupt": 232, "tsf": 232, "cooper": 232, "mere": 232, "beginn": 232, "crucial": [232, 266], "anticip": 232, "inevit": 232, "grasp": 232, "organis": 232, "scheme": 232, "interpos": 232, "reentrant": 232, "assess": 232, "inconsist": 232, "race": 232, "boundsexcept": 232, "arrays": 232, "callback1": 232, "exceed": 232, "irq_stat": 232, "subtl": 232, "overwritten": 232, "unpredict": 232, "dataset": 232, "undesir": 232, "overrun": [232, 240], "radic": 232, "mpy_lib_dir": 233, "port_dir": 233, "board_dir": 233, "myboard": 233, "frozen_manifest": 233, "micropy_frozen_manifest": 233, "micropy_board_dir": 233, "opt": 233, "package_path": 233, "base_path": 233, "baz": 233, "module_path": 233, "unix_ffi": 233, "manifest_path": 233, "mydriv": 233, "pybd_sf2": 233, "aiorepl": 233, "myproject": 233, "decad": 234, "unblock": 234, "micropy_preview_version_2": 234, "deploy": 234, "pipx": 235, "df": 235, "rfc2217": 235, "c0": 235, "com0": 235, "acm": 235, "ftdi": [235, 263], "strictli": 235, "cp": [235, 237, 238], "scp": 235, "clariti": 235, "uf2": [235, 256], "ttyacmn": 235, "u0": 235, "u1": 235, "u2": 235, "u3": 235, "ttyusbn": 235, "c1": 235, "c2": 235, "comn": 235, "c33": 235, "334d335c3138": 235, "wl_scan": 235, "wl": 235, "nearbi": 235, "wl_ifconfig": 235, "com1": 235, "print_state_info": 235, "500m": 235, "functool": 235, "sys_mpi": 236, "armv6": 236, "armv7em": 236, "march": 236, "uppercas": 236, "mpy_cross_flag": 236, "6967ff3c581a66f73e9f3d78975f47528db39980": 236, "d94141e1473aebae0d3c63aeaa8397651ad6fa01": 236, "f2040bfc7ee033e48acef9f289790f3b4e6b74e5": 236, "5716c5cf65e9b2cb46c2906f40302401bdd27517": 236, "9a5f92ea72754c01cc03e5efcdfe94021120531": 236, "ff93fd4f50321c6190e1659b19e64fef3045a484": 236, "dd11af209d226b7d18d5148b239662e30ed60bad": 236, "6a11048af1d01c78bdacddadd1b72dc7ba7c6478": 236, "d8c834c95d506db979ec871417de90b7951edc30": 236, "children": 236, "vuint": 236, "8th": 236, "xd": 236, "myfil": 236, "0x4d": 236, "pkgname": 237, "broadli": 237, "webserv": 237, "mlx90640": 237, "dep": 237, "defaultdict": 237, "downsid": 237, "standalon": 238, "pyseri": 238, "pipi": 238, "login": [238, 258, 259], "pyboard_devic": 238, "pyboard_baudr": 238, "enter_raw_repl": 238, "ret": 238, "exit_raw_repl": 238, "wind": 239, "af3": 239, "af3_tim": 239, "af3_tim10": 239, "af3_tim11": 239, "6466": 239, "6467": 239, "6468": 239, "mess": 239, "indentationerror": 239, "g6f70283": 239, "verbatim": 239, "x05a": 239, "reamin": 239, "x01print": 239, "nraw": 239, "x80": 239, "x04123": 239, "outset": 240, "devot": 240, "textbook": 240, "spectacular": 240, "paramount": 240, "allevi": 240, "ba": 240, "2k": 240, "mv": 240, "aliv": [240, 258], "panacea": 240, "10k": 240, "nonetheless": 240, "indispens": 240, "profil": 240, "judici": 240, "timed_funct": 240, "mynam": 240, "new_func": 240, "3f": 240, "obj_displai": 240, "ba_ref": 240, "adequ": 240, "linebuf": 240, "pursuit": 240, "benefici": 240, "pep0484": 240, "ptr8": 240, "ptr16": 240, "ptr32": 240, "ptrx": 240, "impos": 240, "bit0": 240, "toggle_n": 240, "odr": 240, "kickstart": 240, "mypin": 240, "a14": 240, "bit14": 240, "m23": 241, "psa": 241, "ra4m1": [241, 242, 244, 245], "clicker": [241, 242, 244, 245], "ek": [241, 242, 244, 245], "ra6m2": [241, 242, 244, 245, 246], "unoffici": 241, "ra4w1": [241, 242, 244, 245], "ra6m1": [241, 242, 244, 245], "visit": 241, "wake_reason": 242, "timebas": [242, 250], "p000": [242, 248], "p002": 242, "p004": 242, "p005": 242, "p106": [242, 245, 248], "sci": 242, "sci0": 242, "sci1": 242, "p411": [242, 244], "p401": [242, 244], "p302": 242, "p410": [242, 244], "p402": [242, 244], "p301": 242, "uart9": 242, "p213": 242, "p204": 242, "p109": 242, "p212": 242, "p206": [242, 244], "p110": 242, "p105": 242, "p104": 242, "p602": 242, "p601": 242, "an000": 242, "p103": 242, "p102": 242, "p101": 242, "p100": 242, "p702": 242, "p701": 242, "p700": 242, "p703": 242, "iic": 242, "iic0": 242, "iic1": 242, "i2c0": 242, "p407": 242, "p400": 242, "i2c2": 242, "p512": 242, "p511": 242, "i2c1": 242, "p205": [242, 244], "microsd": 242, "p012": 242, "shoot": 243, "r7fa4m1ab": 244, "r7fa4w1ad2cng": 244, "r7fa6m1ad": 244, "r7fa6m2af": 244, "favorit": 244, "tera": 244, "2023": 244, "36kb": 245, "36864b": 245, "65536b": 245, "128kb": 245, "131072b": 245, "rw": 245, "293": 246, "g339aa09b8": 246, "2022": [246, 272], "ra6m2_ek": 246, "sw1": [246, 248], "suddenli": 247, "sw2": [248, 268, 271], "nm": 249, "7x7mm": 249, "qfn": 249, "smd": 249, "133": 249, "264kb": 249, "qspi": 249, "rp2xxx": 250, "blink_1hz": [250, 252], "delay_high": [250, 252], "delay_low": [250, 252], "8hz": 250, "5mhz": 250, "gp26": 250, "gp27": 250, "gp28": [250, 258], "gp29": 250, "adc0": [250, 254, 255], "adc1": [250, 254, 255], "adc2": 250, "adc3": 250, "vsy": 250, "100_000": 250, "10_000_000": 250, "80_000_000": 250, "countdown": 250, "concentr": 252, "side_set_valu": 252, "delay_valu": 252, "pio_1hz": 252, "2000hz": 252, "samd21": 253, "samd51": 253, "itsybitsi": [253, 255], "trinket": 253, "minisam": 253, "xplain": 253, "pro": 253, "wio": 253, "xiao": 253, "sam": 253, "120mhz": 253, "sam21": 253, "256kb": 253, "sam51": 253, "mux": 254, "tcc": [254, 255], "tc": 254, "pa02": [254, 255], "pb08": 254, "pb09": 254, "pa04": 254, "pa05": [254, 255], "pb02": 254, "pa11": 254, "pa10": 254, "pa09": 254, "pa08": 254, "pa15": 254, "pa21": 254, "pa07": [254, 255], "pa18": 254, "pa16": 254, "pa19": 254, "pa17": 254, "pa00": 254, "dotstar_clk": 254, "pa01": 254, "dotstar_data": 254, "pa27": 254, "flash_c": 254, "pb03": 254, "flash_miso": 254, "pb22": 254, "flash_mosi": 254, "pb23": 254, "flash_sck": 254, "pa12": 254, "pa23": 254, "pa22": 254, "pa30": 254, "swclk": 254, "pa31": [254, 255], "swdio": 254, "pa24": 254, "usb_dm": 254, "pa25": 254, "usb_dp": 254, "pa03": [254, 255], "pa06": 254, "pa20": 254, "pa28": 254, "qspi_c": 254, "qspi_d0": 254, "qspi_d1": 254, "qspi_d2": 254, "qspi_d3": 254, "qspi_sck": 254, "pb06": 254, "pb17": 254, "pb16": 254, "aref": 254, "pb01": 254, "pb00": 254, "pb04": 254, "pb05": 254, "pb07": 254, "pb30": 254, "pb31": [254, 255], "esp_busi": 254, "esp_c": 254, "esp_gpio0": 254, "esp_reset": 254, "esp_rt": 254, "esp_rx": 254, "esp_tx": 254, "flash_hold": 254, "flash_wp": 254, "rxled": 254, "swo": 254, "txled": 254, "usb_hosten": 254, "a0_d0": 254, "a1_d1": 254, "a2_d2": 254, "a3_d3": 254, "a4_d4": 254, "a5_d5": 254, "a6_d6": 254, "a7_d7": 254, "a8_d8": 254, "a9_d9": 254, "a10_d10": 254, "rx_led": 254, "tx_led": 254, "user_l": 254, "led_rx": 254, "led_tx": 254, "ext1_pin3": 254, "ext1_pin4": 254, "ext1_pin5": 254, "ext1_pin6": 254, "ext1_pin7": 254, "ext1_pin8": 254, "ext1_pin9": 254, "ext1_pin10": 254, "ext1_pin11": 254, "ext1_pin12": 254, "ext1_pin13": 254, "ext1_pin14": 254, "ext1_pin15": 254, "ext1_pin16": 254, "ext1_pin17": 254, "ext1_pin18": 254, "ext2_pin3": 254, "ext2_pin4": 254, "ext2_pin5": 254, "ext2_pin6": 254, "ext2_pin7": 254, "ext2_pin8": 254, "ext2_pin9": 254, "ext2_pin10": 254, "ext2_pin13": 254, "ext2_pin14": 254, "ext2_pin15": 254, "ext2_pin16": 254, "ext2_pin17": 254, "ext2_pin18": 254, "ext3_pin3": 254, "ext3_pin4": 254, "ext3_pin6": 254, "ext3_pin7": 254, "ext3_pin8": 254, "ext3_pin9": 254, "ext3_pin10": 254, "ext3_pin15": 254, "ext3_pin16": 254, "ext3_pin17": 254, "ext3_pin18": 254, "a0_d9": 254, "a1_d10": 254, "a2_d11": 254, "a3_d12": 254, "a4_d13": 254, "a6_d2": 254, "pb27": 254, "pb26": 254, "79": 254, "3v3_enabl": 254, "pc14": 254, "5v_enabl": 254, "pc26": 254, "button_1": 254, "91": 254, "pc27": 254, "button_2": 254, "92": 254, "pc28": 254, "button_3": 254, "pd11": 254, "gpclk0": 254, "gpclk1": 254, "gpclk2": 254, "i2c_bclk": 254, "i2s_lrclk": 254, "i2s_sdin": 254, "i2s_sdout": 254, "pb18": 254, "lcd_miso": 254, "pb19": 254, "lcd_mosi": 254, "pb20": 254, "lcd_sck": 254, "pb21": 254, "lcd_c": 254, "pc06": 254, "lcd_d": 254, "71": 254, "pc07": 254, "lcd_reset": 254, "74": 254, "pc10": 254, "lcd_xl": 254, "76": 254, "pc12": 254, "lcd_xr": 254, "pc13": 254, "lcd_yd": 254, "pc11": 254, "lcd_yu": 254, "69": 254, "pc05": 254, "led_lcd": 254, "94": 254, "pc30": 254, "scl0": 254, "sda0": 254, "pd21": 254, "sd_det": 254, "pc19": 254, "sd_c": 254, "82": 254, "pc18": 254, "sd_miso": 254, "pc16": 254, "sd_mosi": 254, "81": 254, "pc17": 254, "sd_sck": 254, "108": 254, "switch_b": 254, "pd20": 254, "switch_u": 254, "104": 254, "pd08": 254, "switch_x": 254, "105": 254, "pd09": 254, "switch_i": 254, "106": 254, "pd10": 254, "switch_z": 254, "pb24": 254, "pb25": 254, "pb28": 254, "pb29": 254, "pc00": 254, "65": 254, "pc01": 254, "66": 254, "pc02": 254, "pc03": 254, "68": 254, "pc04": 254, "pc20": 254, "pc21": 254, "86": 254, "pc22": 254, "pc23": 254, "88": 254, "pc24": 254, "89": 254, "pc25": 254, "pc31": [254, 255], "pd00": 254, "97": 254, "pd01": 254, "pininfo": 254, "print_entri": 254, "print_pininfo": 254, "02d": 254, "abcd": [254, 268], "serial1": 254, "serial2": 254, "pwm1": 254, "tblkei": 254, "zzzzzzz": 254, "03d": 254, "pintbl": 254, "samd": 255, "96_000_000": 255, "200_000_000": 255, "54_000_000": 255, "16mhz": 255, "12mhz": 255, "\u00b5": 255, "32khz": 255, "crystal": 255, "date_tim": 255, "date_time_tupl": 255, "pxnn": 255, "nn": 255, "pd31": 255, "pa0": 255, "pb0": 255, "pc0": 255, "pd0": 255, "itsyb": 255, "sercom": 255, "bandgap": 255, "analogu": 255, "dac0": 255, "dac_tim": 255, "preambl": 255, "postfix": 255, "rigid": 256, "rhythm": 256, "unhandl": 257, "micropyinspect": 257, "oo": 257, "o3": 257, "ooo": 257, "micropy_debug_print": 257, "heapsiz": 257, "x1024": 257, "x1024x1024": 257, "realtim": 257, "micropypath": 257, "micropy_py_sys_path_default": 257, "irrepar": 258, "reachabl": 258, "credenti": 258, "stock": 258, "charm": 258, "osx": 258, "fireftp": 258, "insecur": 258, "mcuimg": 258, "bypass": 258, "1st": 258, "2nd": 258, "12ma": [258, 259], "systick": 258, "950ua": [258, 259], "350ua": 258, "med_pow": 258, "pincb": 258, "pin_int": 258, "2ma": 258, "4ma": 258, "high_pow": 258, "6ma": 258, "githubusercont": 258, "wake_from": 258, "gp17": 258, "hibern": 258, "alt_list": 258, "alt_fun_nam": 258, "alt_fun_index": 258, "gp23": 258, "gp13": 258, "ipproto_sec": 258, "ourselv": 258, "cert": 258, "pem": 258, "blynk": [258, 261], "ca_cert": 258, "8441": 258, "engin": 258, "abcd1234": 258, "1001": 258, "timeout_in_second": 258, "isrun": [258, 259], "block_devic": 258, "deepest": 259, "gp1": 259, "timerwipi": 259, "tim_a": [259, 265], "buts": 259, "5055": 259, "adcwipi": 259, "2mhz": 259, "2_000_000": 259, "rbuf": 259, "alarm_handl": 259, "rtc_o": 259, "rtc_i": 259, "mynetwork": 259, "mynetworkkei": 259, "any_ev": 259, "android": 260, "widget": 260, "smartphon": 260, "dashboard": 260, "tablet": 260, "execfil": 260, "sync_virtu": 260, "esd": 262, "bag": 262, "discharg": 262, "sticker": 262, "youtub": 262, "300ma": 262, "screenrc": 263, "ttyusb01": 263, "ttyusb": 263, "146": 263, "g1d8b5e5": 263, "gp16": 265, "tim_ch": 265, "tim1_ch": 265, "tim2_ch": 265, "3010": 265, "3020": 265, "2000000": 265, "mywifi": 266, "mywifikei": 266, "succeed": 266, "178": 266, "scalabl": 267, "gpio_1": [268, 271, 272], "reiniti": 268, "gpio_2": [268, 271], "i2c_0": 268, "0x1d": 268, "0x0d": 268, "spi_0": 268, "0xf": 268, "fxox8700": 268, "md": 270, "gpio_x": [271, 272], "k64": 271, "frdm_k64f": [271, 272, 273], "ptb22": 271, "96b_carbon": 271, "pd2": 271, "gpiod": 271, "mimxrt685_evk_cm33": 271, "pio0_14": 271, "sw3": 271, "gpio_0": 271, "v3": 272, "g4fd54a475": 272, "mk64f12": 272, "zephyrzephyrzephyr": 272, "fatf": 273, "reel_board": 273, "rv32m1_vega_ri5ci": 273, "spill": 273}, "objects": {"": [[21, 0, 1, "", "ADC"], [21, 0, 1, "", "ADCBlock"], [56, 2, 1, "", "AssertionError"], [56, 2, 1, "", "AttributeError"], [56, 2, 1, "", "Exception"], [56, 2, 1, "", "ImportError"], [56, 2, 1, "", "IndexError"], [56, 2, 1, "", "KeyError"], [56, 2, 1, "", "KeyboardInterrupt"], [56, 2, 1, "", "MemoryError"], [56, 2, 1, "", "NameError"], [56, 2, 1, "", "NotImplementedError"], [56, 2, 1, "", "OSError"], [56, 2, 1, "", "RuntimeError"], [56, 2, 1, "", "StopIteration"], [56, 2, 1, "", "SyntaxError"], [56, 2, 1, "", "SystemExit"], [126, 3, 0, "-", "TFP410"], [56, 2, 1, "", "TypeError"], [56, 2, 1, "", "ValueError"], [166, 0, 1, "", "WM8960"], [56, 2, 1, "", "ZeroDivisionError"], [50, 3, 0, "-", "_thread"], [56, 5, 1, "", "abs"], [64, 3, 0, "-", "aioespnow"], [56, 5, 1, "", "all"], [56, 5, 1, "", "any"], [51, 3, 0, "-", "array"], [52, 3, 0, "-", "asyncio"], [102, 3, 0, "-", "audio"], [56, 5, 1, "", "bin"], [53, 3, 0, "-", "binascii"], [54, 3, 0, "-", "bluetooth"], [70, 3, 0, "-", "bno055"], [56, 0, 1, "", "bool"], [55, 3, 0, "-", "btree"], [103, 3, 0, "-", "buzzer"], [56, 0, 1, "", "bytearray"], [56, 0, 1, "", "bytes"], [56, 5, 1, "", "callable"], [56, 5, 1, "", "chr"], [56, 5, 1, "", "classmethod"], [57, 3, 0, "-", "cmath"], [58, 3, 0, "-", "collections"], [56, 5, 1, "", "compile"], [56, 0, 1, "", "complex"], [104, 3, 0, "-", "cpufreq"], [59, 3, 0, "-", "cryptolib"], [60, 3, 0, "-", "deflate"], [56, 5, 1, "", "delattr"], [56, 0, 1, "", "dict"], [56, 5, 1, "", "dir"], [105, 3, 0, "-", "display"], [56, 5, 1, "", "divmod"], [56, 5, 1, "", "enumerate"], [61, 3, 0, "-", "errno"], [62, 3, 0, "-", "esp"], [63, 3, 0, "-", "esp32"], [64, 3, 0, "-", "espnow"], [56, 5, 1, "", "eval"], [56, 5, 1, "", "exec"], [56, 5, 1, "", "filter"], [113, 3, 0, "-", "fir"], [56, 0, 1, "", "float"], [65, 3, 0, "-", "framebuf"], [233, 5, 1, "", "freeze"], [233, 5, 1, "", "freeze_as_mpy"], [233, 5, 1, "", "freeze_as_str"], [233, 5, 1, "", "freeze_mpy"], [56, 0, 1, "", "frozenset"], [114, 3, 0, "-", "ft5x06"], [66, 3, 0, "-", "gc"], [56, 5, 1, "", "getattr"], [115, 3, 0, "-", "gif"], [56, 5, 1, "", "globals"], [116, 3, 0, "-", "gt911"], [67, 3, 0, "-", "gzip"], [56, 5, 1, "", "hasattr"], [56, 5, 1, "", "hash"], [68, 3, 0, "-", "hashlib"], [69, 3, 0, "-", "heapq"], [56, 5, 1, "", "hex"], [56, 5, 1, "", "id"], [117, 3, 0, "-", "image"], [118, 3, 0, "-", "imu"], [233, 5, 1, "", "include"], [56, 5, 1, "", "input"], [56, 0, 1, "", "int"], [71, 3, 0, "-", "io"], [56, 5, 1, "", "isinstance"], [56, 5, 1, "", "issubclass"], [56, 5, 1, "", "iter"], [72, 3, 0, "-", "json"], [73, 3, 0, "-", "lcd160cr"], [56, 5, 1, "", "len"], [56, 0, 1, "", "list"], [56, 5, 1, "", "locals"], [70, 3, 0, "-", "lsm6dsox"], [74, 3, 0, "-", "machine"], [258, 5, 1, "", "main"], [56, 5, 1, "", "map"], [92, 3, 0, "-", "math"], [56, 5, 1, "", "max"], [56, 0, 1, "", "memoryview"], [233, 5, 1, "", "metadata"], [119, 3, 0, "-", "micro_speech"], [93, 3, 0, "-", "micropython"], [56, 5, 1, "", "min"], [120, 3, 0, "-", "mjpeg"], [258, 5, 1, "", "mkfs"], [70, 3, 0, "-", "modbus"], [233, 5, 1, "", "module"], [258, 5, 1, "", "mount"], [70, 3, 0, "-", "mqtt"], [94, 3, 0, "-", "mutex"], [95, 3, 0, "-", "neopixel"], [96, 3, 0, "-", "network"], [56, 5, 1, "", "next"], [56, 0, 1, "", "object"], [56, 5, 1, "", "oct"], [121, 3, 0, "-", "omv"], [56, 5, 1, "", "open"], [56, 5, 1, "", "ord"], [128, 3, 0, "-", "os"], [233, 5, 1, "", "package"], [70, 3, 0, "-", "pid"], [129, 3, 0, "-", "platform"], [56, 5, 1, "", "pow"], [56, 5, 1, "", "print"], [56, 5, 1, "", "property"], [130, 3, 0, "-", "pyb"], [149, 3, 0, "-", "random"], [56, 5, 1, "", "range"], [150, 3, 0, "-", "re"], [255, 1, 1, "", "read_u16"], [56, 5, 1, "", "repr"], [233, 5, 1, "", "require"], [56, 5, 1, "", "reversed"], [56, 5, 1, "", "round"], [151, 3, 0, "-", "rp2"], [122, 3, 0, "-", "rpc"], [123, 3, 0, "-", "rtsp"], [155, 3, 0, "-", "select"], [124, 3, 0, "-", "sensor"], [56, 0, 1, "", "set"], [56, 5, 1, "", "setattr"], [56, 0, 1, "", "slice"], [156, 3, 0, "-", "socket"], [56, 5, 1, "", "sorted"], [70, 3, 0, "-", "ssd1306"], [157, 3, 0, "-", "ssl"], [56, 5, 1, "", "staticmethod"], [158, 3, 0, "-", "stm"], [56, 0, 1, "", "str"], [159, 3, 0, "-", "struct"], [56, 5, 1, "", "sum"], [56, 5, 1, "", "super"], [160, 3, 0, "-", "sys"], [70, 3, 0, "-", "tb6612"], [125, 3, 0, "-", "tf"], [161, 3, 0, "-", "time"], [56, 0, 1, "", "tuple"], [127, 3, 0, "-", "tv"], [56, 5, 1, "", "type"], [162, 3, 0, "-", "uctypes"], [70, 3, 0, "-", "ulab"], [258, 5, 1, "", "unmount"], [163, 3, 0, "-", "uping"], [164, 3, 0, "-", "urequests"], [70, 3, 0, "-", "vl53l1x"], [165, 3, 0, "-", "wipy"], [255, 1, 1, "", "write"], [167, 3, 0, "-", "zephyr"], [56, 5, 1, "", "zip"], [171, 3, 0, "-", "zlib"], [170, 3, 0, "-", "zsensor"], [257, 7, 1, "cmdoption-O", "-O"], [257, 7, 1, "cmdoption-X", "-X"], [257, 7, 1, "cmdoption-c", "-c"], [257, 7, 1, "cmdoption-h", "-h"], [257, 7, 1, "cmdoption-i", "-i"], [257, 7, 1, "cmdoption-m", "-m"], [257, 7, 1, "cmdoption-v", "-v"], [257, 7, 1, "cmdoption-arg-args", "&lt;args&gt;"], [257, 7, 1, "cmdoption-arg-script", "&lt;script&gt;"], [257, 8, 1, "-", "MICROPYINSPECT"], [257, 8, 1, "-", "MICROPYPATH"]], "ADC": [[21, 1, 1, "", "atten"], [21, 1, 1, "", "read"], [21, 1, 1, "", "read_uv"], [21, 1, 1, "", "width"]], "ADCBlock": [[21, 1, 1, "", "connect"]], "TFP410.TFP410": [[126, 1, 1, "", "hotplug_callback"], [126, 1, 1, "", "isconnected"]], "TFP410.tfp410": [[126, 0, 1, "", "TFP410"]], "Timer": [[265, 4, 1, "", "A"], [265, 4, 1, "", "B"], [265, 4, 1, "", "MATCH"], [265, 4, 1, "", "NEGATIVE"], [265, 4, 1, "", "POSITIVE"], [265, 4, 1, "", "PWM"], [265, 4, 1, "", "TIMEOUT"]], "WM8960": [[166, 1, 1, "", "alc_gain"], [166, 1, 1, "", "alc_mode"], [166, 1, 1, "", "alc_time"], [166, 1, 1, "", "deemphasis"], [166, 1, 1, "", "deinit"], [166, 1, 1, "", "disable_module"], [166, 1, 1, "", "enable_module"], [166, 1, 1, "", "expand_3d"], [166, 1, 1, "", "mono"], [166, 1, 1, "", "mute"], [166, 1, 1, "", "set_data_route"], [166, 1, 1, "", "set_left_input"], [166, 1, 1, "", "set_module"], [166, 1, 1, "", "set_right_input"], [166, 1, 1, "", "volume"]], "aioespnow": [[64, 0, 1, "", "AIOESPNow"]], "aioespnow.AIOESPNow": [[64, 1, 1, "", "_aiter__"]], "array": [[51, 0, 1, "", "array"]], "array.array": [[51, 1, 1, "", "__add__"], [51, 1, 1, "", "__getitem__"], [51, 1, 1, "", "__iadd__"], [51, 1, 1, "", "__len__"], [51, 1, 1, "", "__repr__"], [51, 1, 1, "", "__setitem__"], [51, 1, 1, "", "append"], [51, 1, 1, "", "extend"]], "asyncio": [[52, 0, 1, "", "Event"], [52, 0, 1, "", "Lock"], [52, 0, 1, "", "Loop"], [52, 0, 1, "", "Server"], [52, 0, 1, "", "Stream"], [52, 0, 1, "", "Task"], [52, 0, 1, "", "ThreadSafeFlag"], [52, 5, 1, "", "create_task"], [52, 5, 1, "", "current_task"], [52, 5, 1, "", "gather"], [52, 5, 1, "", "get_event_loop"], [52, 5, 1, "", "new_event_loop"], [52, 5, 1, "", "open_connection"], [52, 5, 1, "", "run"], [52, 5, 1, "", "sleep"], [52, 5, 1, "", "sleep_ms"], [52, 5, 1, "", "start_server"], [52, 5, 1, "", "wait_for"], [52, 5, 1, "", "wait_for_ms"]], "asyncio.Event": [[52, 1, 1, "", "clear"], [52, 1, 1, "", "is_set"], [52, 1, 1, "", "set"], [52, 1, 1, "", "wait"]], "asyncio.Lock": [[52, 1, 1, "", "acquire"], [52, 1, 1, "", "locked"], [52, 1, 1, "", "release"]], "asyncio.Loop": [[52, 1, 1, "", "call_exception_handler"], [52, 1, 1, "", "close"], [52, 1, 1, "", "create_task"], [52, 1, 1, "", "default_exception_handler"], [52, 1, 1, "", "get_exception_handler"], [52, 1, 1, "", "run_forever"], [52, 1, 1, "", "run_until_complete"], [52, 1, 1, "", "set_exception_handler"], [52, 1, 1, "", "stop"]], "asyncio.Server": [[52, 1, 1, "", "close"], [52, 1, 1, "", "wait_closed"]], "asyncio.Stream": [[52, 1, 1, "", "close"], [52, 1, 1, "", "drain"], [52, 1, 1, "", "get_extra_info"], [52, 1, 1, "", "read"], [52, 1, 1, "", "readexactly"], [52, 1, 1, "", "readinto"], [52, 1, 1, "", "readline"], [52, 1, 1, "", "wait_closed"], [52, 1, 1, "", "write"]], "asyncio.Task": [[52, 1, 1, "", "cancel"]], "asyncio.ThreadSafeFlag": [[52, 1, 1, "", "clear"], [52, 1, 1, "", "set"], [52, 1, 1, "", "wait"]], "audio": [[102, 5, 1, "", "deint"], [102, 5, 1, "", "init"], [102, 5, 1, "", "start_streaming"], [102, 5, 1, "", "stop_streaming"]], "binascii": [[53, 5, 1, "", "a2b_base64"], [53, 5, 1, "", "b2a_base64"], [53, 5, 1, "", "hexlify"], [53, 5, 1, "", "unhexlify"]], "bluetooth": [[54, 0, 1, "", "BLE"], [54, 0, 1, "", "UUID"]], "bluetooth.BLE": [[54, 1, 1, "", "active"], [54, 1, 1, "", "config"], [54, 1, 1, "", "gap_advertise"], [54, 1, 1, "", "gap_connect"], [54, 1, 1, "", "gap_disconnect"], [54, 1, 1, "", "gap_pair"], [54, 1, 1, "", "gap_passkey"], [54, 1, 1, "", "gap_scan"], [54, 1, 1, "", "gattc_discover_characteristics"], [54, 1, 1, "", "gattc_discover_descriptors"], [54, 1, 1, "", "gattc_discover_services"], [54, 1, 1, "", "gattc_exchange_mtu"], [54, 1, 1, "", "gattc_read"], [54, 1, 1, "", "gattc_write"], [54, 1, 1, "", "gatts_indicate"], [54, 1, 1, "", "gatts_notify"], [54, 1, 1, "", "gatts_read"], [54, 1, 1, "", "gatts_register_services"], [54, 1, 1, "", "gatts_set_buffer"], [54, 1, 1, "", "gatts_write"], [54, 1, 1, "", "irq"], [54, 1, 1, "", "l2cap_connect"], [54, 1, 1, "", "l2cap_disconnect"], [54, 1, 1, "", "l2cap_listen"], [54, 1, 1, "", "l2cap_recvinto"], [54, 1, 1, "", "l2cap_send"]], "btree": [[55, 4, 1, "", "DESC"], [55, 4, 1, "", "INCL"], [55, 5, 1, "", "open"]], "btree.btree": [[55, 1, 1, "", "__contains__"], [55, 1, 1, "", "__delitem__"], [55, 1, 1, "", "__getitem__"], [55, 1, 1, "", "__iter__"], [55, 1, 1, "", "__setitem__"], [55, 1, 1, "", "close"], [55, 1, 1, "", "flush"], [55, 1, 1, "", "get"], [55, 1, 1, "", "items"], [55, 1, 1, "", "keys"], [55, 1, 1, "", "values"]], "buzzer": [[103, 4, 1, "", "RESONANT_FREQ"], [103, 5, 1, "", "duty"], [103, 5, 1, "", "freq"]], "cmath": [[57, 5, 1, "", "cos"], [57, 4, 1, "", "e"], [57, 5, 1, "", "exp"], [57, 5, 1, "", "log"], [57, 5, 1, "", "log10"], [57, 5, 1, "", "phase"], [57, 4, 1, "", "pi"], [57, 5, 1, "", "polar"], [57, 5, 1, "", "rect"], [57, 5, 1, "", "sin"], [57, 5, 1, "", "sqrt"]], "collections": [[58, 0, 1, "", "OrderedDict"], [58, 0, 1, "", "deque"], [58, 5, 1, "", "namedtuple"]], "collections.deque": [[58, 1, 1, "", "append"], [58, 1, 1, "", "popleft"]], "cpufreq": [[104, 5, 1, "", "get_current_frequencies"], [104, 5, 1, "", "get_supported_frequencies"], [104, 5, 1, "", "set_frequency"]], "cryptolib": [[59, 0, 1, "", "aes"]], "cryptolib.aes": [[59, 1, 1, "", "__init__"], [59, 1, 1, "", "decrypt"], [59, 1, 1, "", "encrypt"]], "deflate": [[60, 0, 1, "", "DeflateIO"]], "deflate.deflate": [[60, 4, 1, "", "AUTO"], [60, 4, 1, "", "GZIP"], [60, 4, 1, "", "RAW"], [60, 4, 1, "", "ZLIB"]], "display.DACBacklight": [[106, 1, 1, "", "backlight"], [106, 1, 1, "", "deinit"]], "display.DSIDisplay": [[110, 1, 1, "", "backlight"], [110, 1, 1, "", "bus_read"], [110, 1, 1, "", "bus_write"], [110, 1, 1, "", "clear"], [110, 1, 1, "", "deinit"], [110, 1, 1, "", "height"], [110, 1, 1, "", "refresh"], [110, 1, 1, "", "width"], [110, 1, 1, "", "write"]], "display.DisplayData": [[109, 1, 1, "", "frame_callback"], [109, 1, 1, "", "receive_frame"], [109, 1, 1, "", "send_frame"]], "display": [[105, 4, 1, "", "FHD"], [105, 4, 1, "", "FHVGA"], [105, 4, 1, "", "FHVGA2"], [105, 4, 1, "", "FWVGA"], [105, 4, 1, "", "FWVGA2"], [105, 4, 1, "", "HD"], [105, 4, 1, "", "QVGA"], [112, 0, 1, "", "SPIDisplay"], [105, 4, 1, "", "SVGA"], [105, 4, 1, "", "SXGA"], [105, 4, 1, "", "SXGA2"], [105, 4, 1, "", "TFWVGA"], [105, 4, 1, "", "TFWVGA2"], [105, 4, 1, "", "THVGA"], [105, 4, 1, "", "TQVGA"], [105, 4, 1, "", "UXGA"], [105, 4, 1, "", "VGA"], [105, 4, 1, "", "WSVGA"], [105, 4, 1, "", "XGA"]], "display.PWMBacklight": [[107, 1, 1, "", "backlight"], [107, 1, 1, "", "deinit"]], "display.RGBDisplay": [[111, 1, 1, "", "backlight"], [111, 1, 1, "", "clear"], [111, 1, 1, "", "deinit"], [111, 1, 1, "", "height"], [111, 1, 1, "", "refresh"], [111, 1, 1, "", "width"], [111, 1, 1, "", "write"]], "display.SPIDisplay": [[112, 1, 1, "", "backlight"], [112, 1, 1, "", "bgr"], [112, 1, 1, "", "bus_write"], [112, 1, 1, "", "byte_swap"], [112, 1, 1, "", "clear"], [112, 1, 1, "", "deinit"], [112, 1, 1, "", "height"], [112, 1, 1, "", "refresh"], [112, 1, 1, "", "triple_buffer"], [112, 1, 1, "", "width"], [112, 1, 1, "", "write"]], "display.ST7701": [[108, 1, 1, "", "init"], [108, 1, 1, "", "read_id"]], "display.display": [[106, 0, 1, "", "DACBacklight"], [110, 0, 1, "", "DSIDisplay"], [109, 0, 1, "", "DisplayData"], [107, 0, 1, "", "PWMBacklight"], [111, 0, 1, "", "RGBDisplay"], [108, 0, 1, "", "ST7701"]], "display.display.DisplayData": [[109, 1, 1, "", "display_id"]], "errno": [[61, 4, 1, "", "errorcode"]], "esp": [[62, 5, 1, "", "deepsleep"], [62, 5, 1, "", "flash_erase"], [62, 5, 1, "", "flash_id"], [62, 5, 1, "", "flash_read"], [62, 5, 1, "", "flash_size"], [62, 5, 1, "", "flash_user_start"], [62, 5, 1, "", "flash_write"], [62, 5, 1, "", "osdebug"], [62, 5, 1, "", "set_native_code_location"], [62, 5, 1, "", "sleep_type"]], "esp32": [[63, 4, 1, "", "HEAP_DATA"], [63, 4, 1, "", "HEAP_EXEC"], [63, 0, 1, "", "NVS"], [63, 0, 1, "", "Partition"], [63, 0, 1, "", "RMT"], [63, 0, 1, "", "ULP"], [63, 5, 1, "", "gpio_deep_sleep_hold"], [63, 5, 1, "", "idf_heap_info"], [63, 5, 1, "", "raw_temperature"], [63, 5, 1, "", "wake_on_ext0"], [63, 5, 1, "", "wake_on_ext1"], [63, 5, 1, "", "wake_on_touch"], [63, 5, 1, "", "wake_on_ulp"]], "esp32.NVS": [[63, 1, 1, "", "commit"], [63, 1, 1, "", "erase_key"], [63, 1, 1, "", "get_blob"], [63, 1, 1, "", "get_i32"], [63, 1, 1, "", "set_blob"], [63, 1, 1, "", "set_i32"]], "esp32.Partition": [[63, 4, 1, "", "BOOT"], [63, 4, 1, "", "RUNNING"], [63, 4, 1, "", "TYPE_APP"], [63, 4, 1, "", "TYPE_DATA"], [63, 1, 1, "", "find"], [63, 1, 1, "", "get_next_update"], [63, 1, 1, "", "info"], [63, 1, 1, "", "ioctl"], [63, 1, 1, "", "mark_app_valid_cancel_rollback"], [63, 1, 1, "", "readblocks"], [63, 1, 1, "", "set_boot"], [63, 1, 1, "", "writeblocks"]], "esp32.RMT": [[63, 4, 1, "", "PULSE_MAX"], [63, 1, 1, "", "bitstream_channel"], [63, 1, 1, "", "clock_div"], [63, 1, 1, "", "loop"], [63, 1, 1, "", "source_freq"], [63, 1, 1, "", "wait_done"], [63, 1, 1, "", "write_pulses"]], "esp32.ULP": [[63, 1, 1, "", "load_binary"], [63, 1, 1, "", "run"], [63, 1, 1, "", "set_wakeup_period"]], "esp32.esp32": [[63, 4, 1, "", "WAKEUP_ALL_LOW"], [63, 4, 1, "", "WAKEUP_ANY_HIGH"]], "espnow": [[64, 0, 1, "", "ESPNow"]], "espnow.ESPNow": [[64, 1, 1, "", "active"], [64, 1, 1, "", "add_peer"], [64, 1, 1, "", "any"], [64, 1, 1, "", "config"], [64, 1, 1, "", "del_peer"], [64, 1, 1, "", "get_peer"], [64, 1, 1, "", "get_peers"], [64, 1, 1, "", "irecv"], [64, 1, 1, "", "irq"], [64, 1, 1, "", "mod_peer"], [64, 1, 1, "", "peer_count"], [64, 4, 1, "", "peers_table"], [64, 1, 1, "", "recv"], [64, 1, 1, "", "recvinto"], [64, 1, 1, "", "send"], [64, 1, 1, "", "set_pmk"], [64, 1, 1, "", "stats"]], "espnow.espnow": [[64, 4, 1, "", "ADDR_LEN"], [64, 4, 1, "", "KEY_LEN"], [64, 4, 1, "", "MAX_DATA_LEN"], [64, 4, 1, "", "MAX_ENCRYPT_PEER_NUM"], [64, 4, 1, "", "MAX_TOTAL_PEER_NUM"]], "fir": [[113, 4, 1, "", "FIR_AMG8833"], [113, 4, 1, "", "FIR_LEPTON"], [113, 4, 1, "", "FIR_MLX90621"], [113, 4, 1, "", "FIR_MLX90640"], [113, 4, 1, "", "FIR_MLX90641"], [113, 4, 1, "", "FIR_NONE"], [113, 4, 1, "", "FIR_SHIELD"], [113, 5, 1, "", "deinit"], [113, 5, 1, "", "draw_ir"], [113, 5, 1, "", "get_frame_available"], [113, 5, 1, "", "height"], [113, 5, 1, "", "init"], [113, 5, 1, "", "radiometric"], [113, 5, 1, "", "read_ir"], [113, 5, 1, "", "read_ta"], [113, 5, 1, "", "refresh"], [113, 5, 1, "", "register_frame_cb"], [113, 5, 1, "", "register_vsync_cb"], [113, 5, 1, "", "resolution"], [113, 5, 1, "", "snapshot"], [113, 5, 1, "", "trigger_ffc"], [113, 5, 1, "", "type"], [113, 5, 1, "", "width"]], "framebuf": [[65, 0, 1, "", "FrameBuffer"]], "framebuf.FrameBuffer": [[65, 1, 1, "", "blit"], [65, 1, 1, "", "ellipse"], [65, 1, 1, "", "fill"], [65, 1, 1, "", "hline"], [65, 1, 1, "", "line"], [65, 1, 1, "", "pixel"], [65, 1, 1, "", "poly"], [65, 1, 1, "", "rect"], [65, 1, 1, "", "scroll"], [65, 1, 1, "", "text"], [65, 1, 1, "", "vline"]], "framebuf.framebuf": [[65, 4, 1, "", "GS2_HMSB"], [65, 4, 1, "", "GS4_HMSB"], [65, 4, 1, "", "GS8"], [65, 4, 1, "", "MONO_HLSB"], [65, 4, 1, "", "MONO_HMSB"], [65, 4, 1, "", "MONO_VLSB"], [65, 4, 1, "", "RGB565"]], "ft5x06.FT5X06": [[114, 1, 1, "", "get_gesture"], [114, 1, 1, "", "get_point_flag"], [114, 1, 1, "", "get_point_id"], [114, 1, 1, "", "get_point_x"], [114, 1, 1, "", "get_point_y"], [114, 1, 1, "", "get_points"], [114, 1, 1, "", "touch_callback"], [114, 1, 1, "", "update_points"]], "ft5x06": [[114, 4, 1, "", "LCD_FLAG_MOVED"], [114, 4, 1, "", "LCD_FLAG_PRESSED"], [114, 4, 1, "", "LCD_FLAG_RELEASED"], [114, 4, 1, "", "LCD_GESTURE_MOVE_DOWN"], [114, 4, 1, "", "LCD_GESTURE_MOVE_LEFT"], [114, 4, 1, "", "LCD_GESTURE_MOVE_RIGHT"], [114, 4, 1, "", "LCD_GESTURE_MOVE_UP"], [114, 4, 1, "", "LCD_GESTURE_NONE"], [114, 4, 1, "", "LCD_GESTURE_ZOOM_IN"], [114, 4, 1, "", "LCD_GESTURE_ZOOM_OUT"]], "ft5x06.ft5x06": [[114, 0, 1, "", "FT5X06"]], "gc": [[66, 5, 1, "", "collect"], [66, 5, 1, "", "disable"], [66, 5, 1, "", "enable"], [66, 5, 1, "", "mem_alloc"], [66, 5, 1, "", "mem_free"], [66, 5, 1, "", "threshold"]], "gif": [[115, 0, 1, "", "Gif"]], "gif.Gif": [[115, 1, 1, "", "add_frame"], [115, 1, 1, "", "close"], [115, 1, 1, "", "format"], [115, 1, 1, "", "height"], [115, 1, 1, "", "loop"], [115, 1, 1, "", "size"], [115, 1, 1, "", "width"]], "gt911.GT911": [[116, 1, 1, "", "_read_reg"], [116, 1, 1, "", "_write_reg"], [116, 1, 1, "", "read_id"], [116, 1, 1, "", "read_points"], [116, 1, 1, "", "reset"]], "gt911.gt911": [[116, 0, 1, "", "GT911"]], "gzip": [[67, 0, 1, "", "GzipFile"], [67, 5, 1, "", "compress"], [67, 5, 1, "", "decompress"], [67, 5, 1, "", "open"]], "hashlib.hash": [[68, 1, 1, "", "digest"], [68, 1, 1, "", "hexdigest"], [68, 1, 1, "", "update"]], "hashlib.hashlib": [[68, 0, 1, "", "md5"], [68, 0, 1, "", "sha1"], [68, 0, 1, "", "sha256"]], "heapq": [[69, 5, 1, "", "heapify"], [69, 5, 1, "", "heappop"], [69, 5, 1, "", "heappush"]], "image": [[117, 4, 1, "", "APPLY_COLOR_PALETTE_FIRST"], [117, 4, 1, "", "AREA"], [117, 4, 1, "", "ARTOOLKIT"], [117, 4, 1, "", "BAYER"], [117, 4, 1, "", "BICUBIC"], [117, 4, 1, "", "BILINEAR"], [117, 4, 1, "", "BINARY"], [117, 4, 1, "", "BLACK_BACKGROUND"], [117, 4, 1, "", "CENTER"], [117, 4, 1, "", "CODABAR"], [117, 4, 1, "", "CODE128"], [117, 4, 1, "", "CODE39"], [117, 4, 1, "", "CODE93"], [117, 4, 1, "", "CORNER_AGAST"], [117, 4, 1, "", "CORNER_FAST"], [117, 4, 1, "", "DATABAR"], [117, 4, 1, "", "DATABAR_EXP"], [117, 4, 1, "", "EAN13"], [117, 4, 1, "", "EAN2"], [117, 4, 1, "", "EAN5"], [117, 4, 1, "", "EAN8"], [117, 4, 1, "", "EDGE_CANNY"], [117, 4, 1, "", "EDGE_SIMPLE"], [117, 4, 1, "", "EXTRACT_RGB_CHANNEL_FIRST"], [117, 4, 1, "", "GRAYSCALE"], [117, 4, 1, "", "HMIRROR"], [117, 0, 1, "", "HaarCascade"], [117, 4, 1, "", "I25"], [117, 4, 1, "", "ISBN10"], [117, 4, 1, "", "ISBN13"], [117, 0, 1, "", "Image"], [117, 0, 1, "", "ImageIO"], [117, 4, 1, "", "JPEG"], [117, 4, 1, "", "PALETTE_IRONBOW"], [117, 4, 1, "", "PALETTE_RAINBOW"], [117, 4, 1, "", "PDF417"], [117, 4, 1, "", "PNG"], [117, 4, 1, "", "RGB565"], [117, 4, 1, "", "ROTATE_180"], [117, 4, 1, "", "ROTATE_270"], [117, 4, 1, "", "ROTATE_90"], [117, 4, 1, "", "SCALE_ASPECT_EXPAND"], [117, 4, 1, "", "SCALE_ASPECT_IGNORE"], [117, 4, 1, "", "SCALE_ASPECT_KEEP"], [117, 4, 1, "", "SEARCH_DS"], [117, 4, 1, "", "SEARCH_EX"], [117, 4, 1, "", "TAG16H5"], [117, 4, 1, "", "TAG25H7"], [117, 4, 1, "", "TAG25H9"], [117, 4, 1, "", "TAG36H10"], [117, 4, 1, "", "TAG36H11"], [117, 4, 1, "", "TRANSPOSE"], [117, 4, 1, "", "UPCA"], [117, 4, 1, "", "UPCE"], [117, 4, 1, "", "VFLIP"], [117, 4, 1, "", "YUV422"], [117, 0, 1, "", "apriltag"], [117, 0, 1, "", "barcode"], [117, 5, 1, "", "binary_to_grayscale"], [117, 5, 1, "", "binary_to_lab"], [117, 5, 1, "", "binary_to_rgb"], [117, 5, 1, "", "binary_to_yuv"], [117, 0, 1, "", "blob"], [117, 0, 1, "", "circle"], [117, 0, 1, "", "datamatrix"], [117, 0, 1, "", "displacement"], [117, 5, 1, "", "grayscale_to_binary"], [117, 5, 1, "", "grayscale_to_lab"], [117, 5, 1, "", "grayscale_to_rgb"], [117, 5, 1, "", "grayscale_to_yuv"], [117, 0, 1, "", "histogram"], [117, 0, 1, "", "kptmatch"], [117, 5, 1, "", "lab_to_binary"], [117, 5, 1, "", "lab_to_grayscale"], [117, 5, 1, "", "lab_to_rgb"], [117, 5, 1, "", "lab_to_yuv"], [117, 0, 1, "", "line"], [117, 5, 1, "", "load_decriptor"], [117, 5, 1, "", "match_descriptor"], [117, 0, 1, "", "percentile"], [117, 0, 1, "", "qrcode"], [117, 0, 1, "", "rect"], [117, 5, 1, "", "rgb_to_binary"], [117, 5, 1, "", "rgb_to_grayscale"], [117, 5, 1, "", "rgb_to_lab"], [117, 5, 1, "", "rgb_to_yuv"], [117, 5, 1, "", "save_descriptor"], [117, 0, 1, "", "statistics"], [117, 0, 1, "", "threshold"], [117, 5, 1, "", "yuv_to_binary"], [117, 5, 1, "", "yuv_to_grayscale"], [117, 5, 1, "", "yuv_to_lab"], [117, 5, 1, "", "yuv_to_rgb"]], "image.Image": [[117, 1, 1, "", "add"], [117, 1, 1, "", "assign"], [117, 1, 1, "", "awb"], [117, 1, 1, "", "b_and"], [117, 1, 1, "", "b_nand"], [117, 1, 1, "", "b_nor"], [117, 1, 1, "", "b_or"], [117, 1, 1, "", "b_xnor"], [117, 1, 1, "", "b_xor"], [117, 1, 1, "", "bilateral"], [117, 1, 1, "", "binary"], [117, 1, 1, "", "black_hat"], [117, 1, 1, "", "blend"], [117, 1, 1, "", "bytearray"], [117, 1, 1, "", "ccm"], [117, 1, 1, "", "clear"], [117, 1, 1, "", "close"], [117, 1, 1, "", "compress"], [117, 1, 1, "", "compress_for_ide"], [117, 1, 1, "", "compressed"], [117, 1, 1, "", "compressed_for_ide"], [117, 1, 1, "", "copy"], [117, 1, 1, "", "crop"], [117, 1, 1, "", "difference"], [117, 1, 1, "", "dilate"], [117, 1, 1, "", "draw_arrow"], [117, 1, 1, "", "draw_circle"], [117, 1, 1, "", "draw_cross"], [117, 1, 1, "", "draw_edges"], [117, 1, 1, "", "draw_ellipse"], [117, 1, 1, "", "draw_image"], [117, 1, 1, "", "draw_keypoints"], [117, 1, 1, "", "draw_line"], [117, 1, 1, "", "draw_rectangle"], [117, 1, 1, "", "draw_string"], [117, 1, 1, "", "erode"], [117, 1, 1, "", "find_apriltags"], [117, 1, 1, "", "find_barcodes"], [117, 1, 1, "", "find_blobs"], [117, 1, 1, "", "find_circles"], [117, 1, 1, "", "find_datamatrices"], [117, 1, 1, "", "find_displacement"], [117, 1, 1, "", "find_edges"], [117, 1, 1, "", "find_eye"], [117, 1, 1, "", "find_features"], [117, 1, 1, "", "find_hog"], [117, 1, 1, "", "find_keypoints"], [117, 1, 1, "", "find_lbp"], [117, 1, 1, "", "find_line_segments"], [117, 1, 1, "", "find_lines"], [117, 1, 1, "", "find_qrcodes"], [117, 1, 1, "", "find_rects"], [117, 1, 1, "", "find_template"], [117, 1, 1, "", "flood_fill"], [117, 1, 1, "", "flush"], [117, 1, 1, "", "format"], [117, 1, 1, "", "gamma"], [117, 1, 1, "", "gamma_corr"], [117, 1, 1, "", "gaussian"], [117, 1, 1, "", "get_histogram"], [117, 1, 1, "", "get_pixel"], [117, 1, 1, "", "get_regression"], [117, 1, 1, "", "get_statistics"], [117, 1, 1, "", "height"], [117, 1, 1, "", "histeq"], [117, 1, 1, "", "invert"], [117, 1, 1, "", "laplacian"], [117, 1, 1, "", "lens_corr"], [117, 1, 1, "", "linpolar"], [117, 1, 1, "", "logpolar"], [117, 1, 1, "", "mask_circle"], [117, 1, 1, "", "mask_ellipse"], [117, 1, 1, "", "mask_rectange"], [117, 1, 1, "", "max"], [117, 1, 1, "", "mean"], [117, 1, 1, "", "mean_pool"], [117, 1, 1, "", "mean_pooled"], [117, 1, 1, "", "median"], [117, 1, 1, "", "midpoint"], [117, 1, 1, "", "midpoint_pool"], [117, 1, 1, "", "midpoint_pooled"], [117, 1, 1, "", "min"], [117, 1, 1, "", "mode"], [117, 1, 1, "", "morph"], [117, 1, 1, "", "negate"], [117, 1, 1, "", "open"], [117, 1, 1, "", "replace"], [117, 1, 1, "", "save"], [117, 1, 1, "", "scale"], [117, 1, 1, "", "set"], [117, 1, 1, "", "set_pixel"], [117, 1, 1, "", "size"], [117, 1, 1, "", "stero_disparity"], [117, 1, 1, "", "sub"], [117, 1, 1, "", "to_bitmap"], [117, 1, 1, "", "to_grayscale"], [117, 1, 1, "", "to_ironbow"], [117, 1, 1, "", "to_jpeg"], [117, 1, 1, "", "to_png"], [117, 1, 1, "", "to_rainbow"], [117, 1, 1, "", "to_rgb565"], [117, 1, 1, "", "top_hat"], [117, 1, 1, "", "width"]], "image.Image.img": [[117, 1, 1, "", "rotation_corr"]], "image.ImageIO": [[117, 4, 1, "", "FILE_STREAM"], [117, 4, 1, "", "MEMORY_STREAM"], [117, 1, 1, "", "buffer_size"], [117, 1, 1, "", "close"], [117, 1, 1, "", "count"], [117, 1, 1, "", "is_closed"], [117, 1, 1, "", "offset"], [117, 1, 1, "", "read"], [117, 1, 1, "", "seek"], [117, 1, 1, "", "size"], [117, 1, 1, "", "sync"], [117, 1, 1, "", "type"], [117, 1, 1, "", "version"], [117, 1, 1, "", "write"]], "image.apriltag": [[117, 1, 1, "", "corners"], [117, 1, 1, "", "cx"], [117, 1, 1, "", "cxf"], [117, 1, 1, "", "cy"], [117, 1, 1, "", "cyf"], [117, 1, 1, "", "decision_margin"], [117, 1, 1, "", "family"], [117, 1, 1, "", "goodness"], [117, 1, 1, "", "h"], [117, 1, 1, "", "hamming"], [117, 1, 1, "", "id"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "rotation"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "x_rotation"], [117, 1, 1, "", "x_translation"], [117, 1, 1, "", "y"], [117, 1, 1, "", "y_rotation"], [117, 1, 1, "", "y_translation"], [117, 1, 1, "", "z_rotation"], [117, 1, 1, "", "z_translation"]], "image.barcode": [[117, 1, 1, "", "corners"], [117, 1, 1, "", "h"], [117, 1, 1, "", "payload"], [117, 1, 1, "", "quality"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "rotation"], [117, 1, 1, "", "type"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.blob": [[117, 1, 1, "", "area"], [117, 1, 1, "", "code"], [117, 1, 1, "", "compactness"], [117, 1, 1, "", "convexity"], [117, 1, 1, "", "corners"], [117, 1, 1, "", "count"], [117, 1, 1, "", "cx"], [117, 1, 1, "", "cxf"], [117, 1, 1, "", "cy"], [117, 1, 1, "", "cyf"], [117, 1, 1, "", "density"], [117, 1, 1, "", "elongation"], [117, 1, 1, "", "enclosed_ellipse"], [117, 1, 1, "", "enclosing_circle"], [117, 1, 1, "", "extent"], [117, 1, 1, "", "h"], [117, 1, 1, "", "major_axis_line"], [117, 1, 1, "", "min_corners"], [117, 1, 1, "", "minor_axis_line"], [117, 1, 1, "", "perimeter"], [117, 1, 1, "", "pixels"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "rotation"], [117, 1, 1, "", "rotation_deg"], [117, 1, 1, "", "rotation_rad"], [117, 1, 1, "", "roundness"], [117, 1, 1, "", "solidity"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "x_hist_bins"], [117, 1, 1, "", "y"], [117, 1, 1, "", "y_hist_bins"]], "image.circle": [[117, 1, 1, "", "magnitude"], [117, 1, 1, "", "r"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.datamatrix": [[117, 1, 1, "", "capacity"], [117, 1, 1, "", "columns"], [117, 1, 1, "", "corners"], [117, 1, 1, "", "h"], [117, 1, 1, "", "padding"], [117, 1, 1, "", "payload"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "rotation"], [117, 1, 1, "", "rows"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.displacement": [[117, 1, 1, "", "response"], [117, 1, 1, "", "rotation"], [117, 1, 1, "", "scale"], [117, 1, 1, "", "x_translation"], [117, 1, 1, "", "y_translation"]], "image.histogram": [[117, 1, 1, "", "a_bins"], [117, 1, 1, "", "b_bins"], [117, 1, 1, "", "bins"], [117, 1, 1, "", "get_percentile"], [117, 1, 1, "", "get_statistics"], [117, 1, 1, "", "get_threshold"], [117, 1, 1, "", "l_bins"]], "image.kptmatch": [[117, 1, 1, "", "count"], [117, 1, 1, "", "cx"], [117, 1, 1, "", "cy"], [117, 1, 1, "", "h"], [117, 1, 1, "", "match"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "theta"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.line": [[117, 1, 1, "", "length"], [117, 1, 1, "", "line"], [117, 1, 1, "", "magnitude"], [117, 1, 1, "", "rho"], [117, 1, 1, "", "theta"], [117, 1, 1, "", "x1"], [117, 1, 1, "", "x2"], [117, 1, 1, "", "y1"], [117, 1, 1, "", "y2"]], "image.percentile": [[117, 1, 1, "", "a_value"], [117, 1, 1, "", "b_value"], [117, 1, 1, "", "l_value"], [117, 1, 1, "", "value"]], "image.qrcode": [[117, 1, 1, "", "corners"], [117, 1, 1, "", "data_type"], [117, 1, 1, "", "ecc_level"], [117, 1, 1, "", "eci"], [117, 1, 1, "", "h"], [117, 1, 1, "", "is_alphanumeric"], [117, 1, 1, "", "is_binary"], [117, 1, 1, "", "is_kanji"], [117, 1, 1, "", "is_numeric"], [117, 1, 1, "", "mask"], [117, 1, 1, "", "payload"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "version"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.rect": [[117, 1, 1, "", "corners"], [117, 1, 1, "", "h"], [117, 1, 1, "", "magnitude"], [117, 1, 1, "", "rect"], [117, 1, 1, "", "w"], [117, 1, 1, "", "x"], [117, 1, 1, "", "y"]], "image.statistics": [[117, 1, 1, "", "a_lq"], [117, 1, 1, "", "a_max"], [117, 1, 1, "", "a_mean"], [117, 1, 1, "", "a_median"], [117, 1, 1, "", "a_min"], [117, 1, 1, "", "a_mode"], [117, 1, 1, "", "a_stdev"], [117, 1, 1, "", "a_uq"], [117, 1, 1, "", "b_lq"], [117, 1, 1, "", "b_max"], [117, 1, 1, "", "b_mean"], [117, 1, 1, "", "b_median"], [117, 1, 1, "", "b_min"], [117, 1, 1, "", "b_mode"], [117, 1, 1, "", "b_stdev"], [117, 1, 1, "", "b_uq"], [117, 1, 1, "", "l_lq"], [117, 1, 1, "", "l_max"], [117, 1, 1, "", "l_mean"], [117, 1, 1, "", "l_median"], [117, 1, 1, "", "l_min"], [117, 1, 1, "", "l_mode"], [117, 1, 1, "", "l_stdev"], [117, 1, 1, "", "l_uq"], [117, 1, 1, "", "lq"], [117, 1, 1, "", "max"], [117, 1, 1, "", "mean"], [117, 1, 1, "", "median"], [117, 1, 1, "", "min"], [117, 1, 1, "", "mode"], [117, 1, 1, "", "stdev"], [117, 1, 1, "", "uq"]], "image.threshold": [[117, 1, 1, "", "a_value"], [117, 1, 1, "", "b_value"], [117, 1, 1, "", "l_value"], [117, 1, 1, "", "value"]], "imu": [[118, 5, 1, "", "__read_reg"], [118, 5, 1, "", "__write_reg"], [118, 5, 1, "", "acceleration_mg"], [118, 5, 1, "", "angular_rate_mdps"], [118, 5, 1, "", "pitch"], [118, 5, 1, "", "roll"], [118, 5, 1, "", "sleep"], [118, 5, 1, "", "temperature_c"]], "int": [[56, 1, 1, "", "from_bytes"], [56, 1, 1, "", "to_bytes"]], "io": [[71, 0, 1, "", "BytesIO"], [71, 0, 1, "", "StringIO"], [71, 5, 1, "", "open"]], "io.BytesIO": [[71, 1, 1, "", "getvalue"]], "json": [[72, 5, 1, "", "dump"], [72, 5, 1, "", "dumps"], [72, 5, 1, "", "load"], [72, 5, 1, "", "loads"]], "lcd160cr": [[73, 0, 1, "", "LCD160CR"]], "lcd160cr.LCD160CR": [[73, 1, 1, "", "dot"], [73, 1, 1, "", "dot_no_clip"], [73, 1, 1, "", "erase"], [73, 1, 1, "", "fast_spi"], [73, 1, 1, "", "feed_wdt"], [73, 1, 1, "", "get_line"], [73, 1, 1, "", "get_pixel"], [73, 1, 1, "", "get_touch"], [73, 4, 1, "", "h"], [73, 1, 1, "", "is_touched"], [73, 1, 1, "", "jpeg"], [73, 1, 1, "", "jpeg_data"], [73, 1, 1, "", "jpeg_start"], [73, 1, 1, "", "line"], [73, 1, 1, "", "line_no_clip"], [73, 1, 1, "", "poly_dot"], [73, 1, 1, "", "poly_line"], [73, 1, 1, "", "rect"], [73, 1, 1, "", "rect_interior"], [73, 1, 1, "", "rect_interior_no_clip"], [73, 1, 1, "", "rect_no_clip"], [73, 1, 1, "", "rect_outline"], [73, 1, 1, "", "rect_outline_no_clip"], [73, 1, 1, "", "reset"], [73, 1, 1, "", "rgb"], [73, 1, 1, "", "save_to_flash"], [73, 1, 1, "", "screen_dump"], [73, 1, 1, "", "screen_load"], [73, 1, 1, "", "set_brightness"], [73, 1, 1, "", "set_font"], [73, 1, 1, "", "set_i2c_addr"], [73, 1, 1, "", "set_orient"], [73, 1, 1, "", "set_pen"], [73, 1, 1, "", "set_pixel"], [73, 1, 1, "", "set_pos"], [73, 1, 1, "", "set_power"], [73, 1, 1, "", "set_scroll"], [73, 1, 1, "", "set_scroll_buf"], [73, 1, 1, "", "set_scroll_win"], [73, 1, 1, "", "set_scroll_win_param"], [73, 1, 1, "", "set_spi_win"], [73, 1, 1, "", "set_startup_deco"], [73, 1, 1, "", "set_text_color"], [73, 1, 1, "", "set_uart_baudrate"], [73, 1, 1, "", "show_framebuf"], [73, 1, 1, "", "touch_config"], [73, 4, 1, "", "w"], [73, 1, 1, "", "write"]], "lcd160cr.lcd160cr": [[73, 4, 1, "", "LANDSCAPE"], [73, 4, 1, "", "LANDSCAPE_UPSIDEDOWN"], [73, 4, 1, "", "PORTRAIT"], [73, 4, 1, "", "PORTRAIT_UPSIDEDOWN"], [73, 4, 1, "", "STARTUP_DECO_INFO"], [73, 4, 1, "", "STARTUP_DECO_MLOGO"], [73, 4, 1, "", "STARTUP_DECO_NONE"]], "machine": [[75, 0, 1, "", "ADC"], [76, 0, 1, "", "ADCBlock"], [77, 0, 1, "", "ADCWiPy"], [78, 0, 1, "", "CAN"], [79, 0, 1, "", "I2C"], [80, 0, 1, "", "I2S"], [81, 0, 1, "", "PWM"], [82, 0, 1, "", "Pin"], [83, 0, 1, "", "RTC"], [84, 0, 1, "", "SD"], [85, 0, 1, "", "SDCard"], [86, 0, 1, "", "SPI"], [87, 0, 1, "", "Signal"], [79, 0, 1, "", "SoftI2C"], [86, 0, 1, "", "SoftSPI"], [88, 0, 1, "", "Timer"], [89, 0, 1, "", "TimerWiPy"], [90, 0, 1, "", "UART"], [91, 0, 1, "", "WDT"], [77, 1, 1, "", "adcchannel"], [74, 5, 1, "", "bitstream"], [74, 5, 1, "", "bootloader"], [74, 5, 1, "", "deepsleep"], [74, 5, 1, "", "disable_irq"], [74, 5, 1, "", "enable_irq"], [74, 5, 1, "", "freq"], [74, 5, 1, "", "idle"], [74, 5, 1, "", "lightsleep"], [74, 4, 1, "", "mem16"], [74, 4, 1, "", "mem32"], [74, 4, 1, "", "mem8"], [74, 5, 1, "", "reset"], [74, 5, 1, "", "reset_cause"], [74, 5, 1, "", "sleep"], [74, 5, 1, "", "soft_reset"], [74, 5, 1, "", "time_pulse_us"], [74, 5, 1, "", "unique_id"]], "machine.ADC": [[75, 1, 1, "", "block"], [75, 1, 1, "", "init"], [75, 1, 1, "", "read_u16"], [75, 1, 1, "", "read_uv"]], "machine.ADCBlock": [[76, 1, 1, "", "connect"], [76, 1, 1, "", "init"]], "machine.ADCWiPy": [[77, 1, 1, "", "channel"], [77, 1, 1, "", "deinit"], [77, 1, 1, "", "init"]], "machine.CAN": [[78, 4, 1, "", "BUS_OFF"], [78, 4, 1, "", "DUAL"], [78, 4, 1, "", "ERROR_ACTIVE"], [78, 4, 1, "", "ERROR_PASSIVE"], [78, 4, 1, "", "ERROR_WARNING"], [78, 4, 1, "", "LIST32"], [78, 4, 1, "", "LOOPBACK"], [78, 4, 1, "", "NORMAL"], [78, 4, 1, "", "SILENT"], [78, 4, 1, "", "SILENT_LOOPBACK"], [78, 4, 1, "", "STOPPED"], [78, 1, 1, "", "any"], [78, 1, 1, "", "clearfilter"], [78, 1, 1, "", "deinit"], [78, 1, 1, "", "info"], [78, 1, 1, "", "init"], [78, 1, 1, "", "recv"], [78, 1, 1, "", "restart"], [78, 1, 1, "", "rxcallback"], [78, 1, 1, "", "send"], [78, 1, 1, "", "setfilter"], [78, 1, 1, "", "state"]], "machine.I2C": [[79, 1, 1, "", "deinit"], [79, 1, 1, "", "init"], [79, 1, 1, "", "readfrom"], [79, 1, 1, "", "readfrom_into"], [79, 1, 1, "", "readfrom_mem"], [79, 1, 1, "", "readfrom_mem_into"], [79, 1, 1, "", "readinto"], [79, 1, 1, "", "scan"], [79, 1, 1, "", "start"], [79, 1, 1, "", "stop"], [79, 1, 1, "", "write"], [79, 1, 1, "", "writeto"], [79, 1, 1, "", "writeto_mem"], [79, 1, 1, "", "writevto"]], "machine.I2S": [[80, 4, 1, "", "MONO"], [80, 4, 1, "", "RX"], [80, 4, 1, "", "STEREO"], [80, 4, 1, "", "TX"], [80, 1, 1, "", "deinit"], [80, 1, 1, "", "init"], [80, 1, 1, "", "irq"], [80, 1, 1, "", "readinto"], [80, 1, 1, "", "shift"], [80, 1, 1, "", "write"]], "machine.PWM": [[81, 1, 1, "", "deinit"], [81, 1, 1, "", "duty_ns"], [81, 1, 1, "", "duty_u16"], [81, 1, 1, "", "freq"], [81, 1, 1, "", "init"]], "machine.Pin": [[82, 4, 1, "", "ALT"], [82, 4, 1, "", "ALT_OPEN_DRAIN"], [82, 4, 1, "", "ANALOG"], [82, 4, 1, "", "DRIVE_0"], [82, 4, 1, "", "DRIVE_1"], [82, 4, 1, "", "DRIVE_2"], [82, 4, 1, "", "IN"], [82, 4, 1, "", "IRQ_FALLING"], [82, 4, 1, "", "IRQ_HIGH_LEVEL"], [82, 4, 1, "", "IRQ_LOW_LEVEL"], [82, 4, 1, "", "IRQ_RISING"], [82, 4, 1, "", "OPEN_DRAIN"], [82, 4, 1, "", "OUT"], [82, 4, 1, "", "PULL_DOWN"], [82, 4, 1, "", "PULL_HOLD"], [82, 4, 1, "", "PULL_UP"], [82, 1, 1, "", "__call__"], [258, 1, 1, "", "alt_list"], [82, 1, 1, "", "drive"], [82, 1, 1, "", "high"], [82, 1, 1, "", "init"], [82, 1, 1, "", "irq"], [82, 1, 1, "", "low"], [82, 1, 1, "", "mode"], [82, 1, 1, "", "off"], [82, 1, 1, "", "on"], [82, 1, 1, "", "pull"], [82, 1, 1, "", "value"]], "machine.RTC": [[83, 4, 1, "", "ALARM0"], [83, 1, 1, "", "alarm"], [83, 1, 1, "", "alarm_left"], [83, 1, 1, "", "cancel"], [83, 1, 1, "", "datetime"], [83, 1, 1, "", "deinit"], [83, 1, 1, "", "init"], [83, 1, 1, "", "irq"], [83, 1, 1, "", "now"]], "machine.SD": [[84, 1, 1, "", "deinit"], [84, 1, 1, "", "init"]], "machine.SPI": [[86, 4, 1, "", "CONTROLLER"], [86, 4, 1, "", "LSB"], [86, 4, 1, "", "MSB"], [86, 1, 1, "", "deinit"], [86, 1, 1, "", "init"], [86, 1, 1, "", "read"], [86, 1, 1, "", "readinto"], [86, 1, 1, "", "write"], [86, 1, 1, "", "write_readinto"]], "machine.Signal": [[87, 1, 1, "", "off"], [87, 1, 1, "", "on"], [87, 1, 1, "", "value"]], "machine.SoftSPI": [[86, 4, 1, "", "LSB"], [86, 4, 1, "", "MSB"]], "machine.Timer": [[88, 4, 1, "", "ONE_SHOT"], [88, 4, 1, "", "PERIODIC"], [88, 1, 1, "", "deinit"], [88, 1, 1, "", "init"]], "machine.TimerWiPy": [[89, 4, 1, "", "ONE_SHOT"], [89, 4, 1, "", "PERIODIC"], [89, 1, 1, "", "channel"], [89, 1, 1, "", "deinit"], [89, 1, 1, "", "init"]], "machine.UART": [[90, 4, 1, "", "RX_ANY"], [90, 1, 1, "", "any"], [90, 1, 1, "", "deinit"], [90, 1, 1, "", "flush"], [90, 1, 1, "", "init"], [90, 1, 1, "", "read"], [90, 1, 1, "", "readinto"], [90, 1, 1, "", "readline"], [90, 1, 1, "", "sendbreak"], [90, 1, 1, "", "txdone"], [90, 1, 1, "", "write"]], "machine.WDT": [[91, 1, 1, "", "feed"]], "machine.adcchannel": [[77, 1, 1, "", "deinit"], [77, 1, 1, "", "init"], [77, 1, 1, "", "value"]], "machine.machine": [[74, 4, 1, "", "DEEPSLEEP"], [74, 4, 1, "", "DEEPSLEEP_RESET"], [74, 4, 1, "", "HARD_RESET"], [74, 4, 1, "", "IDLE"], [74, 4, 1, "", "PIN_WAKE"], [74, 4, 1, "", "PWRON_RESET"], [74, 4, 1, "", "RTC_WAKE"], [74, 4, 1, "", "SLEEP"], [74, 4, 1, "", "SOFT_RESET"], [74, 4, 1, "", "WDT_RESET"], [74, 4, 1, "", "WLAN_WAKE"]], "machine.timerchannel": [[89, 1, 1, "", "duty_cycle"], [89, 1, 1, "", "freq"], [89, 1, 1, "", "irq"], [89, 1, 1, "", "period"]], "math": [[92, 5, 1, "", "acos"], [92, 5, 1, "", "acosh"], [92, 5, 1, "", "asin"], [92, 5, 1, "", "asinh"], [92, 5, 1, "", "atan"], [92, 5, 1, "", "atan2"], [92, 5, 1, "", "atanh"], [92, 5, 1, "", "ceil"], [92, 5, 1, "", "copysign"], [92, 5, 1, "", "cos"], [92, 5, 1, "", "cosh"], [92, 5, 1, "", "degrees"], [92, 4, 1, "", "e"], [92, 5, 1, "", "erf"], [92, 5, 1, "", "erfc"], [92, 5, 1, "", "exp"], [92, 5, 1, "", "expm1"], [92, 5, 1, "", "fabs"], [92, 5, 1, "", "floor"], [92, 5, 1, "", "fmod"], [92, 5, 1, "", "frexp"], [92, 5, 1, "", "gamma"], [92, 5, 1, "", "isfinite"], [92, 5, 1, "", "isinf"], [92, 5, 1, "", "isnan"], [92, 5, 1, "", "ldexp"], [92, 5, 1, "", "lgamma"], [92, 5, 1, "", "log"], [92, 5, 1, "", "log10"], [92, 5, 1, "", "log2"], [92, 5, 1, "", "modf"], [92, 4, 1, "", "pi"], [92, 5, 1, "", "pow"], [92, 5, 1, "", "radians"], [92, 5, 1, "", "sin"], [92, 5, 1, "", "sinh"], [92, 5, 1, "", "sqrt"], [92, 5, 1, "", "tan"], [92, 5, 1, "", "tanh"], [92, 5, 1, "", "trunc"]], "micro_speech": [[119, 0, 1, "", "MicroSpeech"]], "micro_speech.MicroSpeech": [[119, 1, 1, "", "audio_callback"], [119, 1, 1, "", "listen"]], "micropython": [[93, 5, 1, "", "alloc_emergency_exception_buf"], [93, 5, 1, "", "const"], [93, 5, 1, "", "heap_lock"], [93, 5, 1, "", "heap_locked"], [93, 5, 1, "", "heap_unlock"], [93, 5, 1, "", "kbd_intr"], [93, 5, 1, "", "mem_info"], [93, 5, 1, "", "opt_level"], [93, 5, 1, "", "qstr_info"], [93, 5, 1, "", "schedule"], [93, 5, 1, "", "stack_use"]], "mjpeg": [[120, 0, 1, "", "Mjpeg"]], "mjpeg.Mjpeg": [[120, 1, 1, "", "add_frame"], [120, 1, 1, "", "close"], [120, 1, 1, "", "count"], [120, 1, 1, "", "height"], [120, 1, 1, "", "is_closed"], [120, 1, 1, "", "size"], [120, 1, 1, "", "sync"], [120, 1, 1, "", "width"], [120, 1, 1, "", "write"]], "mutex": [[94, 0, 1, "", "Mutex"]], "mutex.Mutex": [[94, 1, 1, "", "release"], [94, 1, 1, "", "test"]], "neopixel": [[95, 0, 1, "", "NeoPixel"]], "neopixel.NeoPixel": [[95, 1, 1, "", "__getitem__"], [95, 1, 1, "", "__len__"], [95, 1, 1, "", "__setitem__"], [95, 1, 1, "", "fill"], [95, 1, 1, "", "write"]], "network": [[96, 0, 1, "", "AbstractNIC"], [97, 0, 1, "", "LAN"], [258, 0, 1, "", "Server"], [98, 0, 1, "", "WINC"], [99, 0, 1, "", "WIZNET5K"], [100, 0, 1, "", "WLAN"], [101, 0, 1, "", "WLANWiPy"], [96, 5, 1, "", "country"], [96, 5, 1, "", "hostname"], [96, 5, 1, "", "phy_mode"]], "network.AbstractNIC": [[96, 1, 1, "", "active"], [96, 1, 1, "", "config"], [96, 1, 1, "", "connect"], [96, 1, 1, "", "disconnect"], [96, 1, 1, "", "ifconfig"], [96, 1, 1, "", "isconnected"], [96, 1, 1, "", "scan"], [96, 1, 1, "", "status"]], "network.LAN": [[97, 1, 1, "", "active"], [97, 1, 1, "", "config"], [97, 1, 1, "", "ifconfig"], [97, 1, 1, "", "isconnected"], [97, 1, 1, "", "status"]], "network.WINC": [[98, 4, 1, "", "802_1X"], [98, 4, 1, "", "MODE_AP"], [98, 4, 1, "", "MODE_BSP"], [98, 4, 1, "", "MODE_FIRMWARE"], [98, 4, 1, "", "MODE_P2P"], [98, 4, 1, "", "MODE_STA"], [98, 4, 1, "", "OPEN"], [98, 4, 1, "", "WPA_PSK"], [98, 1, 1, "", "active"], [98, 1, 1, "", "connect"], [98, 1, 1, "", "connected_sta"], [98, 1, 1, "", "disconnect"], [98, 1, 1, "", "fw_dump"], [98, 1, 1, "", "fw_update"], [98, 1, 1, "", "fw_version"], [98, 1, 1, "", "ifconfig"], [98, 1, 1, "", "isconnected"], [98, 1, 1, "", "netinfo"], [98, 1, 1, "", "rssi"], [98, 1, 1, "", "scan"], [98, 1, 1, "", "start_ap"], [98, 1, 1, "", "wait_for_sta"]], "network.WIZNET5K": [[99, 1, 1, "", "ifconfig"], [99, 1, 1, "", "isconnected"], [99, 1, 1, "", "regs"]], "network.WLAN": [[100, 4, 1, "", "PM_NONE"], [100, 4, 1, "", "PM_PERFORMANCE"], [100, 4, 1, "", "PM_POWERSAVE"], [100, 1, 1, "", "active"], [100, 1, 1, "", "config"], [100, 1, 1, "", "connect"], [100, 1, 1, "", "disconnect"], [100, 1, 1, "", "ifconfig"], [100, 1, 1, "", "isconnected"], [100, 1, 1, "", "scan"], [100, 1, 1, "", "status"]], "network.WLANWiPy": [[101, 4, 1, "", "AP"], [101, 4, 1, "", "EXT_ANT"], [101, 4, 1, "", "INT_ANT"], [101, 4, 1, "", "STA"], [101, 4, 1, "", "WEP"], [101, 4, 1, "", "WPA"], [101, 4, 1, "", "WPA2"], [101, 1, 1, "", "antenna"], [101, 1, 1, "", "auth"], [101, 1, 1, "", "channel"], [101, 1, 1, "", "connect"], [101, 1, 1, "", "disconnect"], [101, 1, 1, "", "ifconfig"], [101, 1, 1, "", "init"], [101, 1, 1, "", "irq"], [101, 1, 1, "", "isconnected"], [101, 1, 1, "", "mac"], [101, 1, 1, "", "mode"], [101, 1, 1, "", "scan"], [101, 1, 1, "", "ssid"]], "omv": [[121, 5, 1, "", "arch"], [121, 5, 1, "", "board_id"], [121, 5, 1, "", "board_type"], [121, 5, 1, "", "disable_fb"], [121, 5, 1, "", "version_major"], [121, 5, 1, "", "version_minor"], [121, 5, 1, "", "version_patch"], [121, 5, 1, "", "version_string"]], "os": [[128, 0, 1, "", "AbstractBlockDev"], [128, 0, 1, "", "VfsFat"], [128, 0, 1, "", "VfsLfs1"], [128, 0, 1, "", "VfsLfs2"], [128, 5, 1, "", "chdir"], [128, 5, 1, "", "dupterm"], [128, 5, 1, "", "getcwd"], [128, 5, 1, "", "ilistdir"], [128, 5, 1, "", "listdir"], [128, 5, 1, "", "mkdir"], [128, 5, 1, "", "mount"], [128, 5, 1, "", "remove"], [128, 5, 1, "", "rename"], [128, 5, 1, "", "rmdir"], [128, 5, 1, "", "stat"], [128, 5, 1, "", "statvfs"], [128, 5, 1, "", "sync"], [128, 5, 1, "", "umount"], [128, 5, 1, "", "uname"], [128, 5, 1, "", "urandom"]], "os.AbstractBlockDev": [[128, 1, 1, "", "ioctl"], [128, 1, 1, "", "readblocks"], [128, 1, 1, "", "writeblocks"]], "os.VfsFat": [[128, 1, 1, "", "mkfs"]], "os.VfsLfs1": [[128, 1, 1, "", "mkfs"]], "os.VfsLfs2": [[128, 1, 1, "", "mkfs"]], "platform": [[129, 5, 1, "", "libc_ver"], [129, 5, 1, "", "platform"], [129, 5, 1, "", "python_compiler"]], "pyb": [[131, 0, 1, "", "ADC"], [132, 0, 1, "", "Accel"], [133, 0, 1, "", "CAN"], [134, 0, 1, "", "DAC"], [135, 0, 1, "", "ExtInt"], [136, 0, 1, "", "Flash"], [137, 0, 1, "", "I2C"], [138, 0, 1, "", "LCD"], [139, 0, 1, "", "LED"], [140, 0, 1, "", "Pin"], [141, 0, 1, "", "RTC"], [142, 0, 1, "", "SPI"], [143, 0, 1, "", "Servo"], [144, 0, 1, "", "Switch"], [145, 0, 1, "", "Timer"], [146, 0, 1, "", "UART"], [147, 0, 1, "", "USB_HID"], [148, 0, 1, "", "USB_VCP"], [130, 5, 1, "", "bootloader"], [130, 5, 1, "", "delay"], [130, 5, 1, "", "disable_irq"], [130, 5, 1, "", "elapsed_micros"], [130, 5, 1, "", "elapsed_millis"], [130, 5, 1, "", "enable_irq"], [130, 5, 1, "", "fault_debug"], [130, 5, 1, "", "hard_reset"], [130, 5, 1, "", "have_cdc"], [130, 5, 1, "", "hid"], [130, 5, 1, "", "info"], [130, 5, 1, "", "main"], [130, 5, 1, "", "micros"], [130, 5, 1, "", "millis"], [130, 5, 1, "", "mount"], [130, 5, 1, "", "repl_uart"], [130, 5, 1, "", "rng"], [130, 5, 1, "", "standby"], [130, 5, 1, "", "stop"], [130, 5, 1, "", "sync"], [130, 5, 1, "", "udelay"], [130, 5, 1, "", "unique_id"], [130, 5, 1, "", "usb_mode"], [130, 5, 1, "", "wfi"]], "pyb.ADC": [[131, 1, 1, "", "read"], [131, 1, 1, "", "read_timed"]], "pyb.Accel": [[132, 1, 1, "", "filtered_xyz"], [132, 1, 1, "", "tilt"], [132, 1, 1, "", "x"], [132, 1, 1, "", "y"], [132, 1, 1, "", "z"]], "pyb.CAN": [[133, 4, 1, "", "BUS_OFF"], [133, 4, 1, "", "DUAL"], [133, 4, 1, "", "ERROR_ACTIVE"], [133, 4, 1, "", "ERROR_PASSIVE"], [133, 4, 1, "", "ERROR_WARNING"], [133, 4, 1, "", "LIST16"], [133, 4, 1, "", "LIST32"], [133, 4, 1, "", "LOOPBACK"], [133, 4, 1, "", "MASK"], [133, 4, 1, "", "MASK16"], [133, 4, 1, "", "MASK32"], [133, 4, 1, "", "NORMAL"], [133, 4, 1, "", "RANGE"], [133, 4, 1, "", "SILENT"], [133, 4, 1, "", "SILENT_LOOPBACK"], [133, 4, 1, "", "STOPPED"], [133, 1, 1, "", "any"], [133, 1, 1, "", "clearfilter"], [133, 1, 1, "", "deinit"], [133, 1, 1, "", "info"], [133, 1, 1, "", "recv"], [133, 1, 1, "", "restart"], [133, 1, 1, "", "rxcallback"], [133, 1, 1, "", "send"], [133, 1, 1, "", "setfilter"], [133, 1, 1, "", "state"]], "pyb.DAC": [[134, 4, 1, "", "CIRCULAR"], [134, 4, 1, "", "NORMAL"], [134, 1, 1, "", "deinit"], [134, 1, 1, "", "init"], [134, 1, 1, "", "noise"], [134, 1, 1, "", "triangle"], [134, 1, 1, "", "write"], [134, 1, 1, "", "write_timed"]], "pyb.ExtInt": [[135, 4, 1, "", "IRQ_FALLING"], [135, 4, 1, "", "IRQ_RISING"], [135, 4, 1, "", "IRQ_RISING_FALLING"], [135, 1, 1, "", "disable"], [135, 1, 1, "", "enable"], [135, 1, 1, "", "line"], [135, 1, 1, "", "regs"], [135, 1, 1, "", "swint"]], "pyb.Flash": [[136, 1, 1, "", "ioctl"], [136, 1, 1, "", "readblocks"], [136, 1, 1, "", "writeblocks"]], "pyb.I2C": [[137, 4, 1, "", "CONTROLLER"], [137, 4, 1, "", "PERIPHERAL"], [137, 1, 1, "", "deinit"], [137, 1, 1, "", "init"], [137, 1, 1, "", "is_ready"], [137, 1, 1, "", "mem_read"], [137, 1, 1, "", "mem_write"], [137, 1, 1, "", "recv"], [137, 1, 1, "", "scan"], [137, 1, 1, "", "send"]], "pyb.LCD": [[138, 1, 1, "", "command"], [138, 1, 1, "", "contrast"], [138, 1, 1, "", "fill"], [138, 1, 1, "", "get"], [138, 1, 1, "", "light"], [138, 1, 1, "", "pixel"], [138, 1, 1, "", "show"], [138, 1, 1, "", "text"], [138, 1, 1, "", "write"]], "pyb.LED": [[139, 1, 1, "", "intensity"], [139, 1, 1, "", "off"], [139, 1, 1, "", "on"], [139, 1, 1, "", "toggle"]], "pyb.Pin": [[140, 4, 1, "", "AF_OD"], [140, 4, 1, "", "AF_PP"], [140, 4, 1, "", "ALT"], [140, 4, 1, "", "ANALOG"], [140, 4, 1, "", "IN"], [140, 4, 1, "", "OUT_OD"], [140, 4, 1, "", "OUT_PP"], [140, 4, 1, "", "PULL_DOWN"], [140, 4, 1, "", "PULL_NONE"], [140, 4, 1, "", "PULL_UP"], [140, 1, 1, "", "__str__"], [140, 1, 1, "", "af"], [140, 1, 1, "", "af_list"], [140, 1, 1, "", "debug"], [140, 1, 1, "", "dict"], [140, 1, 1, "", "gpio"], [140, 1, 1, "", "init"], [140, 1, 1, "", "mapper"], [140, 1, 1, "", "mode"], [140, 1, 1, "", "name"], [140, 1, 1, "", "names"], [140, 1, 1, "", "pin"], [140, 1, 1, "", "port"], [140, 1, 1, "", "pull"], [140, 1, 1, "", "value"]], "pyb.RTC": [[141, 1, 1, "", "calibration"], [141, 1, 1, "", "datetime"], [141, 1, 1, "", "info"], [141, 1, 1, "", "wakeup"]], "pyb.SPI": [[142, 4, 1, "", "CONTROLLER"], [142, 4, 1, "", "LSB"], [142, 4, 1, "", "MSB"], [142, 4, 1, "", "PERIPHERAL"], [142, 1, 1, "", "deinit"], [142, 1, 1, "", "init"], [142, 1, 1, "", "recv"], [142, 1, 1, "", "send"], [142, 1, 1, "", "send_recv"]], "pyb.Servo": [[143, 1, 1, "", "angle"], [143, 1, 1, "", "calibration"], [143, 1, 1, "", "pulse_width"], [143, 1, 1, "", "speed"]], "pyb.Switch": [[144, 1, 1, "", "__call__"], [144, 1, 1, "", "callback"], [144, 1, 1, "", "value"]], "pyb.Timer": [[145, 4, 1, "", "BRK_HIGH"], [145, 4, 1, "", "BRK_LOW"], [145, 4, 1, "", "BRK_OFF"], [145, 4, 1, "", "CENTER"], [145, 4, 1, "", "DOWN"], [145, 4, 1, "", "UP"], [145, 1, 1, "", "callback"], [145, 1, 1, "", "channel"], [145, 1, 1, "", "counter"], [145, 1, 1, "", "deinit"], [145, 1, 1, "", "freq"], [145, 1, 1, "", "init"], [145, 1, 1, "", "period"], [145, 1, 1, "", "prescaler"], [145, 1, 1, "", "source_freq"]], "pyb.UART": [[146, 4, 1, "", "CTS"], [146, 4, 1, "", "RTS"], [146, 1, 1, "", "any"], [146, 1, 1, "", "deinit"], [146, 1, 1, "", "init"], [146, 1, 1, "", "read"], [146, 1, 1, "", "readchar"], [146, 1, 1, "", "readinto"], [146, 1, 1, "", "readline"], [146, 1, 1, "", "sendbreak"], [146, 1, 1, "", "write"], [146, 1, 1, "", "writechar"]], "pyb.USB_HID": [[147, 1, 1, "", "recv"], [147, 1, 1, "", "send"]], "pyb.USB_VCP": [[148, 4, 1, "", "CTS"], [148, 4, 1, "", "IRQ_RX"], [148, 4, 1, "", "RTS"], [148, 1, 1, "", "any"], [148, 1, 1, "", "close"], [148, 1, 1, "", "debug_mode_enabled"], [148, 1, 1, "", "init"], [148, 1, 1, "", "irq"], [148, 1, 1, "", "isconnected"], [148, 1, 1, "", "read"], [148, 1, 1, "", "readinto"], [148, 1, 1, "", "readline"], [148, 1, 1, "", "readlines"], [148, 1, 1, "", "recv"], [148, 1, 1, "", "send"], [148, 1, 1, "", "setinterrupt"], [148, 1, 1, "", "write"]], "pyb.pinaf": [[140, 1, 1, "", "__str__"], [140, 1, 1, "", "index"], [140, 1, 1, "", "name"], [140, 1, 1, "", "reg"]], "pyb.pyb": [[130, 4, 1, "", "hid_keyboard"], [130, 4, 1, "", "hid_mouse"]], "pyb.timerchannel": [[145, 1, 1, "", "callback"], [145, 1, 1, "", "capture"], [145, 1, 1, "", "compare"], [145, 1, 1, "", "pulse_width"], [145, 1, 1, "", "pulse_width_percent"]], "random": [[149, 5, 1, "", "choice"], [149, 5, 1, "", "getrandbits"], [149, 5, 1, "", "randint"], [149, 5, 1, "", "random"], [149, 5, 1, "", "randrange"], [149, 5, 1, "", "seed"], [149, 5, 1, "", "uniform"]], "re": [[150, 4, 1, "", "DEBUG"], [150, 5, 1, "", "compile"], [150, 5, 1, "", "match"], [150, 5, 1, "", "search"], [150, 5, 1, "", "sub"]], "re.match": [[150, 1, 1, "", "end"], [150, 1, 1, "", "group"], [150, 1, 1, "", "groups"], [150, 1, 1, "", "span"], [150, 1, 1, "", "start"]], "re.regex": [[150, 1, 1, "", "match"], [150, 1, 1, "", "search"], [150, 1, 1, "", "split"], [150, 1, 1, "", "sub"]], "rp2": [[152, 0, 1, "", "Flash"], [153, 0, 1, "", "PIO"], [151, 0, 1, "", "PIOASMError"], [154, 0, 1, "", "StateMachine"], [151, 5, 1, "", "asm_pio"], [151, 5, 1, "", "asm_pio_encode"], [151, 5, 1, "", "bootsel_button"]], "rp2.Flash": [[152, 1, 1, "", "ioctl"], [152, 1, 1, "", "readblocks"], [152, 1, 1, "", "writeblocks"]], "rp2.PIO": [[153, 4, 1, "", "IN_HIGH"], [153, 4, 1, "", "IN_LOW"], [153, 4, 1, "", "IRQ_SM0"], [153, 4, 1, "", "IRQ_SM1"], [153, 4, 1, "", "IRQ_SM2"], [153, 4, 1, "", "IRQ_SM3"], [153, 4, 1, "", "JOIN_NONE"], [153, 4, 1, "", "JOIN_RX"], [153, 4, 1, "", "JOIN_TX"], [153, 4, 1, "", "OUT_HIGH"], [153, 4, 1, "", "OUT_LOW"], [153, 4, 1, "", "SHIFT_LEFT"], [153, 4, 1, "", "SHIFT_RIGHT"], [153, 1, 1, "", "add_program"], [153, 1, 1, "", "irq"], [153, 1, 1, "", "remove_program"], [153, 1, 1, "", "state_machine"]], "rp2.StateMachine": [[154, 1, 1, "", "active"], [154, 1, 1, "", "exec"], [154, 1, 1, "", "get"], [154, 1, 1, "", "init"], [154, 1, 1, "", "irq"], [154, 1, 1, "", "put"], [154, 1, 1, "", "restart"], [154, 1, 1, "", "rx_fifo"], [154, 1, 1, "", "tx_fifo"]], "rpc": [[122, 0, 1, "", "rpc"], [122, 0, 1, "", "rpc_i2c_master"], [122, 0, 1, "", "rpc_i2c_slave"], [122, 0, 1, "", "rpc_master"], [122, 0, 1, "", "rpc_network_master"], [122, 0, 1, "", "rpc_network_slave"], [122, 0, 1, "", "rpc_slave"], [122, 0, 1, "", "rpc_spi_master"], [122, 0, 1, "", "rpc_spi_slave"], [122, 0, 1, "", "rpc_uart_master"], [122, 0, 1, "", "rpc_uart_slave"], [122, 0, 1, "", "rpc_usb_vcp_master"], [122, 0, 1, "", "rpc_usb_vcp_slave"]], "rtsp": [[123, 0, 1, "", "rtsp_server"]], "rtsp.rtsp_server": [[123, 1, 1, "", "register_pause_cb"], [123, 1, 1, "", "register_play_cb"], [123, 1, 1, "", "register_setup_cb"], [123, 1, 1, "", "register_teardown_cb"], [123, 1, 1, "", "stream"]], "select": [[155, 5, 1, "", "poll"], [155, 5, 1, "", "select"]], "select.poll": [[155, 1, 1, "", "ipoll"], [155, 1, 1, "", "modify"], [155, 1, 1, "", "poll"], [155, 1, 1, "", "register"], [155, 1, 1, "", "unregister"]], "sensor": [[124, 4, 1, "", "B128X128"], [124, 4, 1, "", "B128X64"], [124, 4, 1, "", "B160X160"], [124, 4, 1, "", "B320X320"], [124, 4, 1, "", "B64X32"], [124, 4, 1, "", "B64X64"], [124, 4, 1, "", "BAYER"], [124, 4, 1, "", "BINARY"], [124, 4, 1, "", "CIF"], [124, 4, 1, "", "DOUBLE_BUFFER"], [124, 4, 1, "", "FHD"], [124, 4, 1, "", "FROGEYE2020"], [124, 4, 1, "", "GC2145"], [124, 4, 1, "", "GRAYSCALE"], [124, 4, 1, "", "HD"], [124, 4, 1, "", "HM01B0"], [124, 4, 1, "", "HM0360"], [124, 4, 1, "", "HQQQQVGA"], [124, 4, 1, "", "HQQQVGA"], [124, 4, 1, "", "HQQVGA"], [124, 4, 1, "", "HQVGA"], [124, 4, 1, "", "HVGA"], [124, 4, 1, "", "IOCTL_GET_FOV_WIDE"], [124, 4, 1, "", "IOCTL_GET_NIGHT_MODE"], [124, 4, 1, "", "IOCTL_GET_READOUT_WINDOW"], [124, 4, 1, "", "IOCTL_GET_TRIGGERED_MODE"], [124, 4, 1, "", "IOCTL_HIMAX_MD_CLEAR"], [124, 4, 1, "", "IOCTL_HIMAX_MD_ENABLE"], [124, 4, 1, "", "IOCTL_HIMAX_MD_THRESHOLD"], [124, 4, 1, "", "IOCTL_HIMAX_MD_WINDOW"], [124, 4, 1, "", "IOCTL_HIMAX_OSC_ENABLE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_ATTRIBUTE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_AUX_TEMPERATURE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_FPA_TEMPERATURE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_HEIGHT"], [124, 4, 1, "", "IOCTL_LEPTON_GET_MEASUREMENT_MODE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_MEASUREMENT_RANGE"], [124, 4, 1, "", "IOCTL_LEPTON_GET_RADIOMETRY"], [124, 4, 1, "", "IOCTL_LEPTON_GET_REFRESH"], [124, 4, 1, "", "IOCTL_LEPTON_GET_RESOLUTION"], [124, 4, 1, "", "IOCTL_LEPTON_GET_WIDTH"], [124, 4, 1, "", "IOCTL_LEPTON_RUN_COMMAND"], [124, 4, 1, "", "IOCTL_LEPTON_SET_ATTRIBUTE"], [124, 4, 1, "", "IOCTL_LEPTON_SET_MEASUREMENT_MODE"], [124, 4, 1, "", "IOCTL_LEPTON_SET_MEASUREMENT_RANGE"], [124, 4, 1, "", "IOCTL_PAUSE_AUTO_FOCUS"], [124, 4, 1, "", "IOCTL_RESET_AUTO_FOCUS"], [124, 4, 1, "", "IOCTL_SET_FOV_WIDE"], [124, 4, 1, "", "IOCTL_SET_NIGHT_MODE"], [124, 4, 1, "", "IOCTL_SET_READOUT_WINDOW"], [124, 4, 1, "", "IOCTL_SET_TRIGGERED_MODE"], [124, 4, 1, "", "IOCTL_TRIGGER_AUTO_FOCUS"], [124, 4, 1, "", "IOCTL_WAIT_ON_AUTO_FOCUS"], [124, 4, 1, "", "JPEG"], [124, 4, 1, "", "LCD"], [124, 4, 1, "", "LEPTON"], [124, 4, 1, "", "MT9M114"], [124, 4, 1, "", "MT9V022"], [124, 4, 1, "", "MT9V024"], [124, 4, 1, "", "MT9V032"], [124, 4, 1, "", "MT9V034"], [124, 4, 1, "", "OV2640"], [124, 4, 1, "", "OV5640"], [124, 4, 1, "", "OV7690"], [124, 4, 1, "", "OV7725"], [124, 4, 1, "", "OV9650"], [124, 4, 1, "", "PAJ6100"], [124, 4, 1, "", "QCIF"], [124, 4, 1, "", "QHD"], [124, 4, 1, "", "QQCIF"], [124, 4, 1, "", "QQQQVGA"], [124, 4, 1, "", "QQQVGA"], [124, 4, 1, "", "QQSIF"], [124, 4, 1, "", "QQVGA"], [124, 4, 1, "", "QQVGA2"], [124, 4, 1, "", "QSIF"], [124, 4, 1, "", "QVGA"], [124, 4, 1, "", "QXGA"], [124, 4, 1, "", "RGB565"], [124, 4, 1, "", "SIF"], [124, 4, 1, "", "SINGLE_BUFFER"], [124, 4, 1, "", "SVGA"], [124, 4, 1, "", "SXGA"], [124, 4, 1, "", "SXGAM"], [124, 4, 1, "", "TRIPLE_BUFFER"], [124, 4, 1, "", "UXGA"], [124, 4, 1, "", "VGA"], [124, 4, 1, "", "VIDEO_FIFO"], [124, 4, 1, "", "WQXGA"], [124, 4, 1, "", "WQXGA2"], [124, 4, 1, "", "WVGA"], [124, 4, 1, "", "WVGA2"], [124, 4, 1, "", "WXGA"], [124, 4, 1, "", "XGA"], [124, 4, 1, "", "YUV422"], [124, 5, 1, "", "__read_reg"], [124, 5, 1, "", "__write_reg"], [124, 5, 1, "", "alloc_extra_fb"], [124, 5, 1, "", "dealloc_extra_fb"], [124, 5, 1, "", "disable_delays"], [124, 5, 1, "", "disable_full_flush"], [124, 5, 1, "", "flush"], [124, 5, 1, "", "get_auto_rotation"], [124, 5, 1, "", "get_blc_regs"], [124, 5, 1, "", "get_color_palette"], [124, 5, 1, "", "get_exposure_us"], [124, 5, 1, "", "get_fb"], [124, 5, 1, "", "get_frame_available"], [124, 5, 1, "", "get_framebuffers"], [124, 5, 1, "", "get_framerate"], [124, 5, 1, "", "get_framesize"], [124, 5, 1, "", "get_gain_db"], [124, 5, 1, "", "get_hmirror"], [124, 5, 1, "", "get_id"], [124, 5, 1, "", "get_pixformat"], [124, 5, 1, "", "get_rgb_gain_db"], [124, 5, 1, "", "get_transpose"], [124, 5, 1, "", "get_vflip"], [124, 5, 1, "", "get_windowing"], [124, 5, 1, "", "height"], [124, 5, 1, "", "ioctl"], [124, 5, 1, "", "reset"], [124, 5, 1, "", "set_auto_blc"], [124, 5, 1, "", "set_auto_exposure"], [124, 5, 1, "", "set_auto_gain"], [124, 5, 1, "", "set_auto_rotation"], [124, 5, 1, "", "set_auto_whitebal"], [124, 5, 1, "", "set_brightness"], [124, 5, 1, "", "set_color_palette"], [124, 5, 1, "", "set_colorbar"], [124, 5, 1, "", "set_contrast"], [124, 5, 1, "", "set_frame_callback"], [124, 5, 1, "", "set_framebuffers"], [124, 5, 1, "", "set_framerate"], [124, 5, 1, "", "set_framesize"], [124, 5, 1, "", "set_gainceiling"], [124, 5, 1, "", "set_hmirror"], [124, 5, 1, "", "set_lens_correction"], [124, 5, 1, "", "set_pixformat"], [124, 5, 1, "", "set_quality"], [124, 5, 1, "", "set_saturation"], [124, 5, 1, "", "set_transpose"], [124, 5, 1, "", "set_vflip"], [124, 5, 1, "", "set_vsync_callback"], [124, 5, 1, "", "set_windowing"], [124, 5, 1, "", "shutdown"], [124, 5, 1, "", "skip_frames"], [124, 5, 1, "", "sleep"], [124, 5, 1, "", "snapshot"], [124, 5, 1, "", "width"]], "server": [[258, 1, 1, "", "deinit"], [258, 1, 1, "", "init"], [258, 1, 1, "", "isrunning"], [258, 1, 1, "", "timeout"]], "socket": [[156, 4, 1, "", "AF_INET"], [156, 4, 1, "", "AF_INET6"], [156, 4, 1, "", "IPPROTO_SEC"], [156, 4, 1, "", "IPPROTO_TCP"], [156, 4, 1, "", "IPPROTO_UDP"], [156, 4, 1, "", "SOCK_DGRAM"], [156, 4, 1, "", "SOCK_STREAM"], [156, 5, 1, "", "getaddrinfo"], [156, 5, 1, "", "inet_ntop"], [156, 5, 1, "", "inet_pton"], [156, 0, 1, "", "socket"]], "socket.socket": [[156, 1, 1, "", "accept"], [156, 1, 1, "", "bind"], [156, 1, 1, "", "close"], [156, 1, 1, "", "connect"], [156, 2, 1, "", "error"], [156, 1, 1, "", "listen"], [156, 1, 1, "", "makefile"], [156, 1, 1, "", "read"], [156, 1, 1, "", "readinto"], [156, 1, 1, "", "readline"], [156, 1, 1, "", "recv"], [156, 1, 1, "", "recvfrom"], [156, 1, 1, "", "send"], [156, 1, 1, "", "sendall"], [156, 1, 1, "", "sendto"], [156, 1, 1, "", "setblocking"], [156, 1, 1, "", "setsockopt"], [156, 1, 1, "", "settimeout"], [156, 1, 1, "", "write"]], "ssl": [[157, 0, 1, "", "SSLContext"]], "ssl.SSLContext": [[157, 1, 1, "", "get_ciphers"], [157, 1, 1, "", "load_cert_chain"], [157, 1, 1, "", "load_verify_locations"], [157, 1, 1, "", "set_ciphers"], [157, 6, 1, "", "verify_mode"], [157, 1, 1, "", "wrap_socket"]], "ssl.ssl": [[157, 4, 1, "", "CERT_NONE"], [157, 4, 1, "", "CERT_OPTIONAL"], [157, 4, 1, "", "CERT_REQUIRED"], [157, 4, 1, "", "PROTOCOL_TLS_CLIENT"], [157, 4, 1, "", "PROTOCOL_TLS_SERVER"], [157, 4, 1, "", "SSLError"], [157, 5, 1, "", "wrap_socket"]], "stm": [[158, 4, 1, "", "GPIOA"], [158, 4, 1, "", "GPIOB"], [158, 4, 1, "", "GPIO_BSRR"], [158, 4, 1, "", "GPIO_IDR"], [158, 4, 1, "", "GPIO_ODR"], [158, 4, 1, "", "mem16"], [158, 4, 1, "", "mem32"], [158, 4, 1, "", "mem8"], [158, 5, 1, "", "rfcore_fw_version"], [158, 5, 1, "", "rfcore_status"], [158, 5, 1, "", "rfcore_sys_hci"], [158, 5, 1, "", "subghz_cs"], [158, 5, 1, "", "subghz_irq"], [158, 5, 1, "", "subghz_is_busy"]], "struct": [[159, 5, 1, "", "calcsize"], [159, 5, 1, "", "pack"], [159, 5, 1, "", "pack_into"], [159, 5, 1, "", "unpack"], [159, 5, 1, "", "unpack_from"]], "sys": [[160, 4, 1, "", "argv"], [160, 5, 1, "", "atexit"], [160, 4, 1, "", "byteorder"], [160, 5, 1, "", "exit"], [160, 4, 1, "", "implementation"], [160, 4, 1, "", "maxsize"], [160, 4, 1, "", "modules"], [160, 4, 1, "", "path"], [160, 4, 1, "", "platform"], [160, 5, 1, "", "print_exception"], [160, 4, 1, "", "ps1"], [160, 4, 1, "", "ps2"], [160, 5, 1, "", "settrace"], [160, 4, 1, "", "stderr"], [160, 4, 1, "", "stdin"], [160, 4, 1, "", "stdout"], [160, 4, 1, "", "tracebacklimit"], [160, 4, 1, "", "version"], [160, 4, 1, "", "version_info"]], "tf": [[125, 5, 1, "", "classify"], [125, 5, 1, "", "detect"], [125, 5, 1, "", "free_from_fb"], [125, 5, 1, "", "load"], [125, 5, 1, "", "regression"], [125, 5, 1, "", "segment"], [125, 0, 1, "", "tf_classification"], [125, 0, 1, "", "tf_model"]], "tf.tf_classification": [[125, 1, 1, "", "classification_output"], [125, 1, 1, "", "h"], [125, 1, 1, "", "rect"], [125, 1, 1, "", "w"], [125, 1, 1, "", "x"], [125, 1, 1, "", "y"]], "tf.tf_model": [[125, 1, 1, "", "classify"], [125, 1, 1, "", "detect"], [125, 1, 1, "", "input_channels"], [125, 1, 1, "", "input_datatype"], [125, 1, 1, "", "input_height"], [125, 1, 1, "", "input_scale"], [125, 1, 1, "", "input_width"], [125, 1, 1, "", "input_zero_point"], [125, 1, 1, "", "len"], [125, 1, 1, "", "output_channels"], [125, 1, 1, "", "output_datatype"], [125, 1, 1, "", "output_height"], [125, 1, 1, "", "output_scale"], [125, 1, 1, "", "output_width"], [125, 1, 1, "", "output_zero_point"], [125, 1, 1, "", "ram"], [125, 1, 1, "", "regression"], [125, 1, 1, "", "segment"]], "time": [[161, 0, 1, "", "clock"], [161, 5, 1, "", "gmtime"], [161, 5, 1, "", "localtime"], [161, 5, 1, "", "mktime"], [161, 5, 1, "", "sleep"], [161, 5, 1, "", "sleep_ms"], [161, 5, 1, "", "sleep_us"], [161, 5, 1, "", "ticks_add"], [161, 5, 1, "", "ticks_cpu"], [161, 5, 1, "", "ticks_diff"], [161, 5, 1, "", "ticks_ms"], [161, 5, 1, "", "ticks_us"], [161, 5, 1, "", "time"], [161, 5, 1, "", "time_ns"]], "time.clock": [[161, 1, 1, "", "avg"], [161, 1, 1, "", "fps"], [161, 1, 1, "", "reset"], [161, 1, 1, "", "tick"]], "tv": [[127, 4, 1, "", "TV_NONE"], [127, 4, 1, "", "TV_SHIELD"], [127, 5, 1, "", "channel"], [127, 5, 1, "", "deinit"], [127, 5, 1, "", "display"], [127, 5, 1, "", "height"], [127, 5, 1, "", "init"], [127, 5, 1, "", "refresh"], [127, 5, 1, "", "triple_buffer"], [127, 5, 1, "", "type"], [127, 5, 1, "", "width"]], "uctypes": [[162, 4, 1, "", "ARRAY"], [162, 4, 1, "", "BIG_ENDIAN"], [162, 4, 1, "", "FLOAT32"], [162, 4, 1, "", "FLOAT64"], [162, 4, 1, "", "INT16"], [162, 4, 1, "", "INT32"], [162, 4, 1, "", "INT64"], [162, 4, 1, "", "INT8"], [162, 4, 1, "", "LITTLE_ENDIAN"], [162, 4, 1, "", "NATIVE"], [162, 4, 1, "", "PTR"], [162, 4, 1, "", "UINT16"], [162, 4, 1, "", "UINT32"], [162, 4, 1, "", "UINT64"], [162, 4, 1, "", "UINT8"], [162, 4, 1, "", "VOID"], [162, 5, 1, "", "addressof"], [162, 5, 1, "", "bytearray_at"], [162, 5, 1, "", "bytes_at"], [162, 5, 1, "", "sizeof"], [162, 0, 1, "", "struct"]], "uping": [[163, 5, 1, "", "ping"]], "urequests": [[164, 0, 1, "", "Response"], [164, 5, 1, "", "delete"], [164, 5, 1, "", "get"], [164, 5, 1, "", "head"], [164, 5, 1, "", "patch"], [164, 5, 1, "", "post"], [164, 5, 1, "", "put"], [164, 5, 1, "", "request"]], "urequests.Response": [[164, 5, 1, "", "content"], [164, 5, 1, "", "headers"], [164, 1, 1, "", "json"]], "wipy": [[165, 5, 1, "", "heartbeat"]], "zephyr": [[168, 0, 1, "", "DiskAccess"], [169, 0, 1, "", "FlashArea"], [167, 5, 1, "", "current_tid"], [167, 5, 1, "", "is_preempt_thread"], [167, 5, 1, "", "shell_exec"], [167, 5, 1, "", "thread_analyze"]], "zephyr.DiskAccess": [[168, 1, 1, "", "ioctl"], [168, 1, 1, "", "readblocks"], [168, 1, 1, "", "writeblocks"]], "zephyr.FlashArea": [[169, 1, 1, "", "ioctl"], [169, 1, 1, "", "readblocks"], [169, 1, 1, "", "writeblocks"]], "zlib": [[171, 5, 1, "", "compress"], [171, 5, 1, "", "decompress"]], "zsensor": [[170, 4, 1, "", "ACCEL_X"], [170, 4, 1, "", "ACCEL_Y"], [170, 4, 1, "", "ACCEL_Z"], [170, 4, 1, "", "ALTITUDE"], [170, 4, 1, "", "DIE_TEMP"], [170, 4, 1, "", "GYRO_X"], [170, 4, 1, "", "GYRO_Y"], [170, 4, 1, "", "GYRO_Z"], [170, 4, 1, "", "HUMIDITY"], [170, 4, 1, "", "LIGHT"], [170, 4, 1, "", "MAGN_X"], [170, 4, 1, "", "MAGN_Y"], [170, 4, 1, "", "MAGN_Z"], [170, 4, 1, "", "PRESS"], [170, 4, 1, "", "PROX"], [170, 0, 1, "", "Sensor"]], "zsensor.Sensor": [[170, 1, 1, "", "get_float"], [170, 1, 1, "", "get_int"], [170, 1, 1, "", "get_micros"], [170, 1, 1, "", "get_millis"], [170, 1, 1, "", "measure"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:module", "4": "py:data", "5": "py:function", "6": "py:attribute", "7": "std:cmdoption", "8": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "module", "Python module"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"], "7": ["std", "cmdoption", "program option"], "8": ["std", "envvar", "environment variable"]}, "titleterms": {"micropython": [0, 2, 3, 4, 8, 10, 12, 21, 22, 23, 27, 32, 33, 42, 45, 46, 48, 49, 70, 93, 172, 175, 176, 201, 203, 208, 219, 228, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 250, 251, 255, 256, 263, 268, 269, 270, 272], "extern": [0, 39, 77, 87, 135, 178, 195, 202, 262], "c": [0, 2, 11], "modul": [0, 5, 8, 10, 21, 25, 27, 41, 47, 81, 94, 97, 99, 102, 119, 156, 157, 162, 166, 167, 174, 175, 178, 183, 195, 242, 250, 254, 255, 258, 259], "structur": [0, 3, 162, 189], "an": [0, 41, 47, 48, 97, 180, 202, 232, 252, 255, 262], "basic": [0, 35, 128, 205], "exampl": [0, 8, 60, 67, 119, 166, 186, 197, 220, 233, 235, 252, 261], "compil": [0, 1, 3, 8, 12, 228], "cmodul": 0, "usag": [0, 8, 153, 220], "The": [1, 7, 11, 31, 131, 183, 193, 194, 196, 197, 203, 204, 205, 213, 216, 228, 232, 236, 238, 239, 240, 258], "ad": [1, 10, 233], "grammar": 1, "rule": 1, "lexic": 1, "token": 1, "pars": [1, 45], "pass": [1, 206, 219], "first": [1, 44, 210], "second": [1, 47], "third": [1, 70], "fourth": 1, "emit": 1, "bytecod": [1, 9], "nativ": [1, 8, 47, 240], "code": [1, 3, 8, 45, 61, 188, 197, 200, 219, 236, 240], "extend": [2, 70, 128], "get": [3, 23, 33, 36, 42, 176, 203, 208, 244, 251, 256, 260, 263, 270, 272], "start": [3, 23, 31, 33, 44, 176, 244, 251, 256, 260, 270], "sourc": [3, 77, 166, 202, 262], "control": [3, 21, 27, 29, 34, 38, 40, 41, 42, 66, 70, 73, 76, 78, 82, 86, 87, 88, 89, 93, 95, 97, 99, 100, 101, 104, 108, 126, 132, 133, 138, 140, 142, 145, 146, 170, 175, 178, 180, 184, 192, 195, 207, 211, 228, 235, 240, 242, 250, 255, 258, 259], "git": 3, "build": [3, 10, 233], "requir": [3, 23, 33, 45, 48, 176, 201, 244, 256, 270], "depend": 3, "cross": 3, "unix": [3, 237, 257], "port": [3, 10, 20, 26, 42, 84, 148, 167, 170, 173, 237, 241, 243, 249, 253, 257, 267, 268, 269, 270, 272], "window": [3, 60, 190, 193, 208, 257, 263], "stm32": [3, 158, 178, 229], "document": [3, 49, 215, 216, 218, 220, 221, 222, 223, 225, 226, 227], "run": [3, 10, 12, 45, 186, 210, 238, 239, 268], "test": [3, 13, 203], "folder": 3, "intern": [4, 12, 31, 77, 93, 145, 195, 245], "implement": [5, 44, 45, 47, 48, 81, 85, 96, 97, 231], "core": [5, 45, 52, 218], "map": 6, "dictionari": [6, 44], "open": [6, 186, 210], "address": [6, 156, 266], "linear": 6, "probe": 6, "memori": [7, 9, 74, 79, 84, 85, 158, 191, 218, 222, 227, 228], "manag": [7, 45, 64, 237], "object": [7, 44, 45, 47, 94, 117, 131, 139, 144, 150, 162, 211, 232, 240], "model": [7, 125], "alloc": [7, 9, 240], "machin": [8, 74, 117, 174, 186, 254, 258], "mpy": [8, 236], "file": [8, 31, 175, 186, 233, 236, 245, 247, 255, 258], "support": [8, 10, 44, 45, 47, 50, 64, 173, 258], "featur": [8, 117, 165], "limit": [8, 26, 81, 162, 232], "defin": [8, 44, 45, 162, 217], "minim": [8, 10], "further": [8, 198, 212], "optim": 9, "frozen": 9, "variabl": [9, 45, 48, 239, 257], "firmwar": [10, 23, 33, 176, 256, 258, 262, 270], "configur": [10, 35, 54, 64, 96, 135], "standard": [10, 70, 79], "input": [10, 42, 71, 166, 180, 199], "output": [10, 44, 71, 95, 180, 203], "public": 11, "api": 11, "string": [12, 45, 228], "time": [12, 21, 26, 27, 47, 83, 130, 141, 161, 175, 178, 195, 242, 250, 255, 259, 268], "qstr": [12, 236], "gener": [12, 20, 21, 26, 27, 45, 79, 128, 149, 173, 175, 177, 178, 193, 195, 232, 241, 242, 249, 250, 253, 255, 258, 259, 267], "write": [13, 232, 233, 237, 245], "python": [14, 15, 16, 17, 18, 19, 70, 205, 232], "3": [14, 15, 16, 17, 18, 19, 143], "10": 14, "5": 15, "6": 16, "7": 17, "8": 18, "9": 19, "inform": [20, 26, 121, 172, 173, 177, 185, 193, 241, 249, 253, 258, 267], "about": [20, 26, 173, 177, 193, 241, 249, 253, 258, 267], "esp32": [20, 21, 22, 23, 62, 63, 64, 85, 229], "multitud": [20, 26, 173, 253, 267], "board": [20, 21, 23, 26, 27, 33, 130, 173, 175, 176, 178, 195, 208, 233, 242, 246, 250, 253, 255, 256, 259, 262, 263, 267], "technic": [20, 26, 173, 212, 249, 253], "specif": [20, 26, 63, 70, 81, 85, 96, 97, 101, 151, 158, 160, 165, 167, 173, 249, 253], "soc": [20, 26, 173, 249, 253], "datasheet": [20, 26, 173, 193, 194, 249], "quick": [21, 27, 175, 178, 195, 242, 250, 255, 257, 259, 268], "refer": [21, 27, 49, 175, 178, 195, 220, 240, 242, 250, 255, 257, 259, 268], "instal": [21, 23, 27, 33, 175, 176, 237, 242, 250, 255, 256], "network": [21, 27, 35, 36, 78, 96, 122, 133, 195, 258], "wlan": [21, 100, 258, 259, 266], "lan": [21, 97], "delai": [21, 27, 175, 178, 195, 242, 250, 255, 268], "timer": [21, 27, 88, 89, 91, 145, 175, 178, 195, 213, 242, 250, 255, 259, 265], "pin": [21, 24, 27, 39, 82, 135, 140, 174, 175, 178, 195, 199, 242, 250, 254, 255, 258, 259, 268, 271], "gpio": [21, 27, 39, 175, 178, 180, 195, 242, 250, 255, 259, 268, 271], "uart": [21, 27, 90, 122, 146, 174, 175, 178, 192, 195, 206, 242, 250, 254, 255, 259], "serial": [21, 23, 27, 33, 42, 79, 86, 90, 137, 142, 146, 175, 176, 178, 186, 195, 242, 250, 255, 256, 259, 272], "bu": [21, 27, 78, 79, 80, 86, 90, 133, 146, 175, 178, 195, 242, 250, 255, 259, 268], "pwm": [21, 27, 81, 107, 174, 175, 178, 195, 242, 250, 254, 255, 259], "puls": [21, 25, 27, 41, 81, 175, 178, 195, 242, 250, 255, 259], "width": [21, 25, 27, 41, 81, 175, 178, 195, 242, 250, 255, 259], "dac": [21, 106, 134, 178, 195, 255], "digit": [21, 27, 28, 75, 77, 84, 85, 131, 134, 175, 178, 195, 242, 250, 255, 259], "analog": [21, 27, 28, 75, 77, 131, 134, 175, 178, 179, 195, 242, 250, 255, 259], "convers": [21, 27, 28, 44, 45, 53, 75, 77, 131, 134, 175, 178, 195, 242, 250, 255, 259], "adc": [21, 27, 75, 76, 131, 175, 178, 195, 242, 250, 255, 259], "softwar": [21, 27, 175, 178, 190, 250, 255], "spi": [21, 27, 86, 112, 122, 142, 174, 175, 178, 195, 242, 250, 254, 255, 259, 268], "hardwar": [21, 27, 74, 88, 89, 132, 136, 174, 175, 178, 181, 193, 194, 234, 240, 250, 255, 262, 265, 268], "i2c": [21, 27, 79, 122, 137, 174, 175, 178, 195, 242, 250, 254, 255, 258, 259, 268], "i2": [21, 80, 174, 175, 195, 250], "real": [21, 26, 27, 83, 141, 175, 178, 195, 242, 250, 259], "clock": [21, 26, 27, 83, 141, 166, 175, 178, 195, 242, 250, 255, 259], "rtc": [21, 27, 83, 141, 175, 178, 195, 242, 250, 259], "wdt": [21, 27, 91, 242, 250, 259], "watchdog": [21, 27, 91, 242, 250, 259], "deep": [21, 27, 40], "sleep": [21, 27, 40, 64, 258, 259], "mode": [21, 27, 40, 42, 64, 177, 193, 209, 239, 246, 258, 259, 264], "sd": [21, 84, 175, 177, 193, 259], "card": [21, 84, 85, 175, 177, 193, 259], "rmt": [21, 63], "onewir": [21, 27, 175, 178, 242, 250, 255], "driver": [21, 27, 70, 98, 103, 105, 110, 111, 112, 113, 114, 116, 127, 143, 166, 175, 178, 203, 242, 250, 255], "neopixel": [21, 27, 34, 95, 242, 250, 255], "apa106": [21, 242, 250], "capacit": 21, "touch": [21, 73, 114, 116, 138, 203, 204], "dht": [21, 27, 175, 178, 255], "webrepl": [21, 27, 31, 42], "web": [21, 27], "browser": [21, 27], "interact": [21, 27, 239], "prompt": [21, 23, 27, 33, 42, 176, 208, 244, 256, 263, 272], "tutori": [22, 32, 182, 183, 201, 243, 261, 269], "power": [23, 33, 40, 63, 74, 130, 176, 202, 207, 256, 258, 262, 270], "deploi": [23, 33, 176, 256, 270], "troubleshoot": [23, 33, 176, 256], "problem": [23, 33, 176, 256], "access": [24, 31, 45, 73, 74, 93, 95, 128, 129, 136, 152, 154, 158, 162, 168, 169, 198, 238, 240, 258, 268, 273], "peripher": [24, 54, 76, 86, 158, 198, 234, 248], "directli": [24, 240], "via": [24, 31, 258], "regist": [24, 158, 216, 218, 222, 225, 227], "synchron": 24, "esp8266": [26, 27, 32, 33, 62, 229], "scarciti": 26, "runtim": [26, 45], "resourc": 26, "boot": [26, 177, 193, 246, 258, 264, 266], "process": 26, "known": [26, 258], "issu": [26, 232, 258], "simultan": 26, "oper": [26, 44, 48, 64, 79, 128, 226, 228], "sta_if": 26, "ap_if": 26, "socket": [26, 35, 36, 156, 258], "wifi": [26, 33, 35, 42, 64, 98, 100, 101, 186, 259], "buffer": [26, 65, 186, 232, 240], "overflow": [26, 47], "ssl": [26, 157, 258], "tl": [26, 157], "apa102": [27, 29, 255], "ssd1306": [27, 43, 70], "led": [29, 41, 95, 139, 177, 178, 184, 193, 195, 200, 205, 248, 255, 258, 259], "temperatur": 30, "humid": 30, "filesystem": [31, 45, 128, 177, 193, 209, 229, 234, 238, 264, 273], "creat": [31, 211, 254, 258], "read": [31, 77, 198, 212], "list": [31, 44, 45], "more": [31, 185], "up": [31, 163, 200, 270], "script": [31, 186, 188, 189, 210, 238, 254], "tcp": [36, 52], "star": 36, "war": 36, "asciim": 36, "http": [36, 164], "request": 36, "simpl": [36, 55, 128, 150], "server": [36, 54, 258, 259], "next": [37, 47], "step": [37, 44, 47, 166, 266], "1": [38, 44, 47, 176], "wire": [38, 79, 137, 143], "devic": [38, 87, 128, 147, 229, 238], "interrupt": [39, 74, 130, 135, 178, 195, 212, 232, 239, 271], "chang": [40, 234], "cpu": [40, 104], "frequenc": [40, 104], "fade": [41, 200], "hobbi": [41, 143, 211], "servo": [41, 143, 178, 195, 211], "repl": [42, 208, 232, 239, 258, 263, 272], "over": [42, 258, 272], "us": [42, 43, 48, 122, 123, 193, 196, 201, 203, 204, 208, 219, 232, 237, 238, 248, 263, 272], "line": [42, 44, 117, 257], "edit": [42, 186, 210], "histori": 42, "tab": 42, "complet": [42, 45, 239], "continu": [42, 211], "auto": [42, 235, 239], "indent": [42, 239], "past": [42, 239], "other": [42, 65, 149, 193, 194], "command": [42, 73, 235, 238, 257], "ol": [43, 70], "displai": [43, 45, 73, 105, 108, 109, 110, 111, 112, 186, 203], "builtin": [44, 47, 56], "type": [44, 45, 56, 58, 159, 219], "except": [44, 47, 56, 64, 157, 232], "all": 44, "have": [44, 45], "readabl": 44, "valu": [44, 45, 47, 77, 198, 228], "errno": [44, 61], "attribut": [44, 45, 47], "just": 44, "stopiter": 44, "oserror": 44, "chain": 44, "user": [44, 45], "ar": [44, 45, 48], "while": 44, "loop": [44, 52, 198], "condit": [44, 216], "mai": [44, 45], "unexpect": [44, 45], "number": [44, 48, 57, 149], "__init__": [44, 45], "method": [44, 45, 47, 55, 64, 65, 68, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 122, 123, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 161, 164, 166, 168, 169, 170, 175, 219, 232, 255], "doe": [44, 45, 47, 48], "exist": 44, "bytearrai": 44, "arrai": [44, 47, 51, 70, 240], "slice": 44, "assign": [44, 48, 174, 175, 254, 255, 266], "unsupport": [44, 45, 219], "rh": 44, "byte": 44, "format": [44, 47, 156, 271], "keyword": [44, 48], "subscript": [44, 47], "dict": 44, "kei": 44, "view": 44, "behav": 44, "set": [44, 155, 258], "float": [44, 149, 218, 232, 240, 258], "upi": [44, 47, 48], "allow": [44, 48], "implicit": 44, "math": [44, 92], "cpython": [44, 45, 46, 47, 48, 66, 71, 155, 156, 157, 159, 160, 161, 234], "differ": [44, 45, 46, 47, 66, 71, 155, 156, 157, 159, 160, 161], "int": 44, "bit_length": 44, "doesn": [44, 45, 48], "t": [44, 45, 48], "No": [44, 258], "deriv": [44, 70], "avail": 44, "delet": [44, 47], "store": [44, 227], "non": [44, 63, 219], "iter": 44, "i": [44, 45, 47, 48, 52, 82, 87, 135, 140, 154, 174, 175, 176, 183], "str": 44, "end": 44, "indic": 44, "endswith": 44, "": [44, 129, 146, 154, 156, 219], "subscr": 44, "ljust": 44, "rjust": 44, "none": 44, "argument": [44, 45, 47, 48, 198, 219], "rsplit": 44, "n": [44, 48], "yet": [44, 47], "tupl": 44, "load": [44, 222], "languag": [45, 151, 231], "f": 45, "don": 45, "concaten": 45, "adjac": 45, "liter": [45, 48], "contain": [45, 58], "brace": 45, "cannot": 45, "express": [45, 150, 254], "resolv": 45, "unbalanc": 45, "nest": 45, "bracket": 45, "raw": [45, 236, 239], "class": [45, 51, 52, 54, 58, 59, 60, 64, 65, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 120, 122, 123, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 164, 167, 168, 169, 170, 219, 265], "special": [45, 205, 223, 239], "__del__": 45, "resolut": 45, "order": 45, "mro": 45, "compliant": 45, "when": [45, 47, 266], "inherit": 45, "from": [45, 46, 70, 77, 222], "multipl": [45, 215, 219], "super": 45, "onli": [45, 47, 64, 84], "call": 45, "one": 45, "getter": 45, "properti": 45, "subclass": 45, "return": [45, 47, 198, 219, 228], "function": [45, 52, 53, 55, 56, 57, 62, 63, 66, 67, 69, 71, 72, 74, 92, 93, 96, 102, 103, 104, 113, 117, 118, 121, 124, 125, 127, 128, 129, 130, 140, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 171, 221, 233, 258], "error": [45, 47, 61, 177, 193], "messag": 45, "count": 45, "do": 45, "__module__": 45, "context": 45, "__exit__": 45, "which": 45, "local": [45, 177, 193, 258], "aren": 45, "includ": [45, 259], "result": [45, 125], "eval": 45, "import": 45, "__all__": 45, "py": [45, 210, 238], "__path__": 45, "packag": [45, 237], "ha": 45, "singl": 45, "instead": [45, 47], "namespac": 45, "split": 45, "across": 45, "comparison": [47, 216, 218], "between": [47, 48, 218, 232], "typecod": 47, "check": 47, "look": 47, "integ": [47, 149, 218, 219], "dequ": 47, "json": [47, 72], "throw": 47, "serialis": 47, "o": [47, 52, 82, 87, 128, 135, 140, 154, 183, 208, 234, 263], "environ": [47, 257], "getenv": 47, "actual": 47, "cach": [47, 240], "random": [47, 149], "getrandbit": 47, "can": [47, 78, 122, 133, 195], "maximum": 47, "32": 47, "bit": [47, 48, 216], "randint": 47, "most": 47, "word": 47, "size": [47, 60], "struct": [47, 159], "pack": [47, 159], "too": 47, "few": 47, "arg": 47, "mani": 47, "whitespac": 47, "ignor": 47, "sy": [47, 160], "overrid": 47, "stdin": 47, "stdout": 47, "stderr": 47, "possibl": 47, "syntax": 48, "unpack": [48, 159], "work": [48, 229], "being": 48, "nth": 48, "greater": 48, "where": 48, "mp_small_int": 48, "comprehens": 48, "rais": 48, "syntaxerror": 48, "space": 48, "cpy": 48, "unicod": 48, "name": [48, 166, 219], "escap": 48, "_thread": 50, "multithread": 50, "numer": 51, "data": [51, 64, 109, 129, 159, 162, 217, 218, 219, 253], "asyncio": [52, 64, 232], "asynchron": 52, "schedul": [52, 232], "addit": [52, 167, 215, 258, 265], "task": 52, "event": [52, 54, 135, 155, 214], "threadsafeflag": 52, "lock": 52, "stream": [52, 71, 155], "connect": [52, 54, 186, 200, 210, 235, 266], "binascii": 53, "binari": [53, 162, 236], "ascii": 53, "bluetooth": 54, "low": [54, 63, 233], "level": [54, 196, 233], "ble": 54, "constructor": [54, 64, 65, 68, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 119, 120, 122, 123, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 161, 166, 168, 169, 170, 175, 255], "handl": 54, "broadcast": [54, 64], "role": 54, "advertis": 54, "observ": 54, "scanner": 54, "central": 54, "gatt": 54, "client": [54, 164], "l2cap": 54, "orient": 54, "channel": [54, 89, 145, 166, 170], "pair": 54, "bond": 54, "uuid": 54, "btree": 55, "databas": 55, "constant": [55, 57, 60, 61, 63, 64, 65, 73, 74, 78, 80, 82, 83, 86, 88, 89, 90, 92, 98, 100, 101, 103, 105, 113, 114, 117, 124, 127, 130, 133, 134, 135, 137, 140, 142, 145, 146, 148, 153, 156, 157, 158, 160, 166, 219, 236, 265], "cmath": 57, "mathemat": [57, 92], "complex": 57, "collect": [58, 228, 240], "cryptolib": 59, "cryptograph": 59, "cipher": 59, "deflat": 60, "compress": [60, 67, 171], "decompress": [60, 67, 171], "system": [61, 128, 160, 191, 245, 247, 258], "esp": [62, 64], "relat": [62, 74, 130, 151, 161, 164], "flash": [63, 136, 152, 169, 177, 181, 193, 228, 244, 247, 268, 273], "partit": 63, "ultra": 63, "co": 63, "processor": 63, "volatil": 63, "storag": [63, 136, 152, 168, 169, 273], "espnow": 64, "now": 64, "wireless": 64, "protocol": [64, 70, 79, 80, 86, 137, 142, 166], "tabl": [64, 166, 236, 254], "content": [64, 162, 177, 193, 229, 240], "introduct": [64, 202, 262], "send": [64, 214], "receiv": 64, "peer": 64, "callback": [64, 212, 213, 232], "signal": [64, 87], "strength": 64, "rssi": 64, "multicast": 64, "framebuf": 65, "frame": [65, 186], "manipul": [65, 70], "framebuff": 65, "draw": [65, 73, 203], "primit": [65, 73, 79, 159], "shape": [65, 73], "text": [65, 73, 186], "gc": [66, 228], "garbag": [66, 228, 240], "collector": 66, "gzip": 67, "hashlib": [68, 258], "hash": 68, "algorithm": [68, 69, 240], "heapq": 69, "heap": [69, 228], "queue": 69, "librari": [70, 122, 123, 238], "micro": [70, 119], "openmv": [70, 121, 146, 178, 182, 186, 188, 229], "cam": [70, 121, 146, 178, 182, 186, 188, 229], "parti": 70, "ulab": 70, "numpi": 70, "like": [70, 258], "pid": 70, "proport": 70, "integr": 70, "bno055": 70, "imu": [70, 118], "tb6612": 70, "stepper": 70, "motor": [70, 211], "lsm6dsox": 70, "modbu": 70, "mqtt": 70, "vl53l1x": 70, "tof": 70, "distanc": 70, "sensor": [70, 113, 118, 124, 138, 170, 203, 204, 268], "built": [70, 100, 136, 152, 169, 229], "io": [71, 179, 250, 252], "conceptu": 71, "hierarchi": 71, "encod": [72, 236], "decod": 72, "lcd160cr": [73, 203], "static": [73, 266], "instanc": 73, "member": 73, "setup": [73, 89, 145, 181, 190], "pixel": [73, 95], "screen": [73, 114, 116], "advanc": [73, 153, 200], "reset": [74, 130, 208, 209, 210, 235, 239, 246, 263, 264], "miscellan": [74, 130, 224], "adcblock": 76, "adcwipi": 77, "adcchannel": 77, "area": [78, 133, 195, 268, 273], "commun": [78, 90, 133, 146, 232], "two": [79, 137], "inter": 80, "ic": 80, "sound": 80, "secur": [84, 85], "cc3200": [84, 85], "sdcard": [85, 242], "detail": [85, 212, 258], "pyboard": [85, 193, 194, 195, 201, 202, 205, 210, 214, 229, 238], "mimxrt": [85, 173], "interfac": [86, 96, 100, 122, 128, 147, 154, 232], "side": 86, "sens": 87, "timerwipi": 89, "timerchannel": [89, 145], "duplex": [90, 146], "mutex": 94, "ws2812": 95, "common": 96, "adapt": 96, "ethernet": [97, 99, 175], "winc": 98, "shield": [98, 127], "wiznet5k": 99, "wiznet5x00": 99, "wlanwipi": 101, "wipi": [101, 165, 258, 259, 260, 261, 262], "audio": [102, 119, 197], "buzzer": 103, "cpufreq": 104, "dacbacklight": 106, "backlight": [106, 107], "pwmbacklight": 107, "st7701": 108, "displaydata": 109, "dsidisplai": 110, "dsi": 110, "rgbdisplai": 111, "rgb": 111, "spidisplai": 112, "fir": 113, "thermal": 113, "far": 113, "infrar": 113, "ft5x06": 114, "gif": 115, "record": [115, 120], "gt911": 116, "imag": [117, 244], "vision": [117, 186], "haarcascad": 117, "descriptor": [117, 162], "histogram": [117, 186], "percentil": 117, "threshold": 117, "statist": 117, "blob": 117, "circl": 117, "rect": 117, "rectangl": 117, "qrcode": 117, "apriltag": 117, "datamatrix": 117, "barcod": 117, "displac": 117, "kptmatch": 117, "keypoint": 117, "imageio": 117, "micro_speech": 119, "speech": 119, "mjpeg": 120, "omv": 121, "rpc": 122, "how": [122, 123, 188], "virtual": [122, 148, 178], "rpc_master": 122, "rpc_slave": 122, "rpc_can_mast": 122, "master": [122, 166], "rpc_can_slav": 122, "slave": 122, "rpc_i2c_mast": 122, "rpc_i2c_slav": 122, "rpc_spi_mast": 122, "rpc_spi_slav": 122, "rpc_uart_mast": 122, "rpc_uart_slav": 122, "rpc_usb_vcp_mast": 122, "usb": [122, 147, 148, 181, 206, 210, 214], "vcp": 122, "rpc_usb_vcp_slav": 122, "rpc_network_mast": 122, "rpc_network_slav": 122, "rtsp": 123, "rtsp_server": 123, "camera": 124, "tf": 125, "tensor": 125, "flow": [125, 146], "tf_classif": 125, "classif": 125, "dection": 125, "tf_model": 125, "tensorflow": 125, "tfp410": 126, "dvi": 126, "hdmi": 126, "tv": 127, "servic": 128, "termin": [128, 186, 254], "redirect": 128, "duplic": 128, "mount": 128, "block": [128, 229], "platform": 129, "underli": 129, "identifi": [129, 240], "pyb": [130, 183], "adcal": 131, "accel": 132, "acceleromet": [132, 195, 196, 214], "note": [132, 136, 181], "extint": 135, "lcd": [138, 204], "pyskin": 138, "pinaf": 140, "altern": 140, "driven": 142, "switch": [144, 195, 212], "ct": 146, "target": 146, "transmitt": 146, "rt": 146, "usb_hid": 147, "human": 147, "hid": 147, "usb_vcp": 148, "comm": 148, "re": 150, "regular": 150, "regex": 150, "match": 150, "rp2": [151, 250], "rp2040": [151, 154], "pio": [151, 153, 250], "assembli": 151, "instruct": [151, 215, 216, 218, 219, 220, 221, 223, 224, 225], "statemachin": 154, "programm": [154, 250, 252], "select": 155, "wait": 155, "poll": 155, "sslcontext": 157, "stm": 158, "mcu": [158, 173], "stm32wbxx": 158, "stm32wlxx": 158, "uctyp": 162, "wai": [162, 258], "layout": [162, 202], "instanti": 162, "ping": 163, "anoth": 163, "comput": 163, "urequest": 164, "respons": 164, "wm8960": 166, "codec": 166, "paramet": 166, "swap": 166, "rout": 166, "plai": 166, "adc_sync": 166, "db": 166, "zephyr": [167, 170, 267, 268, 269, 270], "diskaccess": 168, "disk": [168, 268, 273], "flasharea": 169, "zsensor": 170, "bind": 170, "zlib": 171, "licens": 172, "pinout": [174, 254], "mxrt": [174, 175, 176], "famili": [175, 255], "transfer": [175, 255], "teensi": 176, "4": 176, "0": [176, 234], "imxrt10xx": 176, "evk": 176, "seed": 176, "arch": 176, "mix": 176, "openmvcam": [177, 178], "base": 178, "As": 180, "drive": [181, 210, 255], "id": 186, "overview": [186, 187, 234, 241], "menu": 186, "your": [186, 188, 202, 205, 210, 214, 262, 266], "viewer": 186, "statu": [186, 216], "bar": 186, "tool": [186, 238], "debug": 186, "video": 186, "option": [186, 257], "releas": 188, "product": 188, "freez": [188, 237], "protect": 188, "mac": [190, 208, 263], "linux": [190, 208, 263], "desktop": 190, "raspberrypi": 190, "architectur": [191, 220], "guid": [193, 234, 262], "compon": [193, 194, 200, 201], "make": [196, 206, 213, 214], "spirit": 196, "amp": 197, "skin": [197, 203, 204], "inlin": [198, 217, 220], "assembl": [198, 217, 219, 220], "accept": 198, "debounc": 199, "thing": [200, 201, 254], "breath": 200, "effect": 200, "exercis": 200, "addendum": 200, "extra": 201, "tip": [201, 219, 232], "trick": 201, "know": 201, "care": [202, 262], "plug": [202, 203, 262], "some": 203, "graphic": 203, "direct": [203, 217], "turn": 205, "concept": 205, "A": 205, "disco": 205, "through": 206, "x": [208, 263], "safe": [209, 258, 264], "factori": [209, 264], "main": [210, 232], "rotat": [211, 223], "calibr": 211, "counter": 213, "microsecond": 213, "act": 214, "mous": 214, "hand": 214, "restor": 214, "normal": 214, "arithmet": [215, 218], "convent": [215, 216, 218, 220, 221, 222, 223, 225, 226, 227], "subtract": 215, "negat": 215, "divis": 215, "applic": 216, "program": [216, 232, 239, 245], "apsr": 216, "execut": [216, 228], "label": [217, 221], "point": [218, 240, 258], "move": [218, 225], "arm": 218, "fpu": 218, "convert": 218, "hint": 219, "branch": [219, 221], "subroutin": [219, 221], "overcom": [219, 232], "restrict": 219, "thumb2": 220, "categori": 220, "long": 221, "logic": 223, "bitwis": 223, "shift": 223, "stack": 226, "push": 226, "pop": 226, "microcontrol": 228, "ram": [228, 240], "phase": 228, "fragment": 228, "report": 228, "postscript": 228, "footnot": 228, "vf": [229, 258], "custom": [229, 233], "fat": 229, "littlef": 229, "hybrid": 229, "glossari": 230, "handler": 232, "recommend": 232, "practic": 232, "emerg": 232, "simplic": 232, "isr": 232, "creation": 232, "design": [232, 240], "reentranc": 232, "critic": 232, "section": [232, 240], "manifest": 233, "summari": 233, "definit": 233, "high": 233, "2": 234, "migrat": 234, "compat": [234, 236], "remot": 235, "mpremot": [235, 237], "soft": [235, 239], "shortcut": 235, "version": 236, "header": 236, "global": 236, "element": 236, "mip": 237, "manual": 237, "publish": 237, "interpret": 239, "aka": 239, "_": 239, "underscor": 239, "maximis": 240, "speed": 240, "slowest": 240, "improv": 240, "const": 240, "declar": 240, "emitt": 240, "viper": 240, "renesa": [241, 242, 243, 244], "ra": [241, 242, 243, 244], "j": 244, "link": 244, "ob": 244, "troubl": 247, "shoot": 247, "blink": 248, "rp2xxx": [249, 251], "samd": [253, 254, 256], "sheet": 253, "adafruit": 254, "itsybitsi": 254, "m0": 254, "samd21": [254, 255], "m4": 254, "samd51": [254, 255], "feather": 254, "metro": 254, "airlift": 254, "seeed": 254, "xiao": 254, "trinket": 254, "xplain": 254, "pro": 254, "minisam": 254, "wio": 254, "sparkfun": 254, "plu": 254, "befor": 258, "appli": 258, "default": 258, "behaviour": 258, "telnet": [258, 259], "ftp": [258, 259], "filezilla": 258, "upgrad": [258, 262], "air": 258, "heartbeat": 258, "incompat": 258, "unrel": 258, "adhoc": 258, "heart": 259, "beat": 259, "blynk": 260, "expans": 262, "perform": 262, "home": 266, "router": 266, "ip": 266}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"MicroPython external C modules": [[0, "micropython-external-c-modules"]], "Structure of an external C module": [[0, "structure-of-an-external-c-module"]], "Basic example": [[0, "basic-example"]], "Compiling the cmodule into MicroPython": [[0, "compiling-the-cmodule-into-micropython"]], "Module usage in MicroPython": [[0, "module-usage-in-micropython"], [8, "module-usage-in-micropython"]], "The Compiler": [[1, "the-compiler"]], "Adding a grammar rule": [[1, "adding-a-grammar-rule"]], "Adding a lexical token": [[1, "adding-a-lexical-token"]], "Parsing": [[1, "parsing"]], "Compiler passes": [[1, "compiler-passes"]], "First pass": [[1, "first-pass"]], "Second and third passes": [[1, "second-and-third-passes"]], "Fourth pass": [[1, "fourth-pass"]], "Emitting bytecode": [[1, "emitting-bytecode"]], "Emitting native code": [[1, "emitting-native-code"]], "Extending MicroPython in C": [[2, "extending-micropython-in-c"]], "Getting Started": [[3, "getting-started"]], "Source control with git": [[3, "source-control-with-git"]], "Get the code": [[3, "get-the-code"]], "Compile and build the code": [[3, "compile-and-build-the-code"]], "Required dependencies": [[3, "required-dependencies"]], "Building the MicroPython cross-compiler": [[3, "building-the-micropython-cross-compiler"]], "Building the Unix port of MicroPython": [[3, "building-the-unix-port-of-micropython"]], "Building the Windows port": [[3, "building-the-windows-port"]], "Building the STM32 port": [[3, "building-the-stm32-port"]], "Building the documentation": [[3, "building-the-documentation"]], "Running the tests": [[3, "running-the-tests"]], "Folder structure": [[3, "folder-structure"]], "MicroPython Internals": [[4, "micropython-internals"]], "Implementing a Module": [[5, "implementing-a-module"]], "Implementing a core module": [[5, "implementing-a-core-module"]], "Maps and Dictionaries": [[6, "maps-and-dictionaries"]], "Open addressing": [[6, "open-addressing"]], "Linear probing": [[6, "linear-probing"]], "Memory Management": [[7, "memory-management"]], "The object model": [[7, "the-object-model"]], "Allocation of objects": [[7, "allocation-of-objects"]], "Native machine code in .mpy files": [[8, "native-machine-code-in-mpy-files"]], "Supported features and limitations": [[8, "supported-features-and-limitations"]], "Defining a native module": [[8, "defining-a-native-module"]], "Minimal example": [[8, "minimal-example"]], "Compiling the module": [[8, "compiling-the-module"]], "Further examples": [[8, "further-examples"]], "Optimizations": [[9, "optimizations"]], "Frozen bytecode": [[9, "frozen-bytecode"]], "Variables": [[9, "variables"]], "Allocation of memory": [[9, "allocation-of-memory"]], "Porting MicroPython": [[10, "porting-micropython"]], "Minimal MicroPython firmware": [[10, "minimal-micropython-firmware"]], "MicroPython Configurations": [[10, "micropython-configurations"]], "Support for standard input/output": [[10, "support-for-standard-input-output"]], "Building and running": [[10, "building-and-running"]], "Adding a module to the port": [[10, "adding-a-module-to-the-port"]], "The public C API": [[11, "the-public-c-api"]], "MicroPython string interning": [[12, "micropython-string-interning"]], "Compile-time QSTR generation": [[12, "compile-time-qstr-generation"]], "Run-time QSTR generation": [[12, "run-time-qstr-generation"]], "Writing tests": [[13, "writing-tests"]], "Python 3.10": [[14, "python-3-10"]], "Python 3.5": [[15, "python-3-5"]], "Python 3.6": [[16, "python-3-6"]], "Python 3.7": [[17, "python-3-7"]], "Python 3.8": [[18, "python-3-8"]], "Python 3.9": [[19, "python-3-9"]], "General information about the ESP32 port": [[20, "general-information-about-the-esp32-port"]], "Multitude of boards": [[20, "multitude-of-boards"], [26, "multitude-of-boards"], [173, "multitude-of-boards"], [253, "multitude-of-boards"], [267, "multitude-of-boards"]], "Technical specifications and SoC datasheets": [[20, "technical-specifications-and-soc-datasheets"], [26, "technical-specifications-and-soc-datasheets"], [173, "technical-specifications-and-soc-datasheets"], [249, "technical-specifications-and-soc-datasheets"]], "Quick reference for the ESP32": [[21, "quick-reference-for-the-esp32"]], "Installing MicroPython": [[21, "installing-micropython"], [27, "installing-micropython"], [175, "installing-micropython"], [242, "installing-micropython"], [250, "installing-micropython"], [255, "installing-micropython"]], "General board control": [[21, "general-board-control"], [27, "general-board-control"], [175, "general-board-control"], [195, "general-board-control"], [242, "general-board-control"], [250, "general-board-control"], [255, "general-board-control"]], "Networking": [[21, "networking"], [27, "networking"]], "WLAN": [[21, "wlan"]], "LAN": [[21, "lan"]], "Delay and timing": [[21, "delay-and-timing"], [27, "delay-and-timing"], [175, "delay-and-timing"], [178, "delay-and-timing"], [178, "id1"], [195, "delay-and-timing"], [242, "delay-and-timing"], [250, "delay-and-timing"], [255, "delay-and-timing"], [268, "delay-and-timing"]], "Timers": [[21, "timers"], [27, "timers"], [175, "timers"], [178, "timers"], [195, "timers"], [242, "timers"], [250, "timers"], [255, "timers"], [259, "timers"]], "Pins and GPIO": [[21, "pins-and-gpio"], [27, "pins-and-gpio"], [175, "pins-and-gpio"], [178, "pins-and-gpio"], [178, "id2"], [195, "pins-and-gpio"], [242, "pins-and-gpio"], [250, "pins-and-gpio"], [255, "pins-and-gpio"], [259, "pins-and-gpio"], [268, "pins-and-gpio"]], "UART (serial bus)": [[21, "uart-serial-bus"], [27, "uart-serial-bus"], [175, "uart-serial-bus"], [178, "uart-serial-bus"], [178, "id5"], [195, "uart-serial-bus"], [242, "uart-serial-bus"], [250, "uart-serial-bus"], [255, "uart-serial-bus"], [259, "uart-serial-bus"]], "PWM (pulse width modulation)": [[21, "pwm-pulse-width-modulation"], [27, "pwm-pulse-width-modulation"], [175, "pwm-pulse-width-modulation"], [178, "pwm-pulse-width-modulation"], [178, "id3"], [195, "pwm-pulse-width-modulation"], [242, "pwm-pulse-width-modulation"], [250, "pwm-pulse-width-modulation"], [255, "pwm-pulse-width-modulation"], [259, "pwm-pulse-width-modulation"]], "DAC (digital to analog conversion)": [[21, "dac-digital-to-analog-conversion"], [178, "dac-digital-to-analog-conversion"], [195, "dac-digital-to-analog-conversion"], [255, "dac-digital-to-analog-conversion"]], "ADC (analog to digital conversion)": [[21, "adc-analog-to-digital-conversion"], [27, "adc-analog-to-digital-conversion"], [175, "adc-analog-to-digital-conversion"], [178, "adc-analog-to-digital-conversion"], [178, "id4"], [195, "adc-analog-to-digital-conversion"], [242, "adc-analog-to-digital-conversion"], [250, "adc-analog-to-digital-conversion"], [255, "adc-analog-to-digital-conversion"], [259, "adc-analog-to-digital-conversion"]], "Software SPI bus": [[21, "software-spi-bus"], [27, "software-spi-bus"], [175, "software-spi-bus"], [178, "software-spi-bus"], [250, "software-spi-bus"], [255, "software-spi-bus"]], "Hardware SPI bus": [[21, "hardware-spi-bus"], [27, "hardware-spi-bus"], [175, "hardware-spi-bus"], [178, "hardware-spi-bus"], [250, "hardware-spi-bus"], [255, "hardware-spi-bus"], [268, "hardware-spi-bus"]], "Software I2C bus": [[21, "software-i2c-bus"], [175, "software-i2c-bus"], [178, "software-i2c-bus"], [250, "software-i2c-bus"], [255, "software-i2c-bus"]], "Hardware I2C bus": [[21, "hardware-i2c-bus"], [175, "hardware-i2c-bus"], [178, "hardware-i2c-bus"], [250, "hardware-i2c-bus"], [255, "hardware-i2c-bus"], [268, "hardware-i2c-bus"]], "I2S bus": [[21, "i2s-bus"], [175, "i2s-bus"], [195, "i2s-bus"], [250, "i2s-bus"]], "Real time clock (RTC)": [[21, "real-time-clock-rtc"], [27, "real-time-clock-rtc"], [175, "real-time-clock-rtc"], [178, "real-time-clock-rtc"], [242, "real-time-clock-rtc"], [250, "real-time-clock-rtc"], [259, "real-time-clock-rtc"]], "WDT (Watchdog timer)": [[21, "wdt-watchdog-timer"], [27, "wdt-watchdog-timer"], [242, "wdt-watchdog-timer"], [250, "wdt-watchdog-timer"]], "Deep-sleep mode": [[21, "deep-sleep-mode"], [27, "deep-sleep-mode"], [40, "deep-sleep-mode"]], "SD card": [[21, "sd-card"], [175, "sd-card"], [259, "sd-card"]], "RMT": [[21, "rmt"], [63, "rmt"]], "OneWire driver": [[21, "onewire-driver"], [27, "onewire-driver"], [175, "onewire-driver"], [178, "onewire-driver"], [242, "onewire-driver"], [250, "onewire-driver"], [255, "onewire-driver"]], "NeoPixel and APA106 driver": [[21, "neopixel-and-apa106-driver"], [242, "neopixel-and-apa106-driver"], [250, "neopixel-and-apa106-driver"]], "Capacitive touch": [[21, "capacitive-touch"]], "DHT driver": [[21, "dht-driver"], [27, "dht-driver"], [175, "dht-driver"], [178, "dht-driver"], [255, "dht-driver"]], "WebREPL (web browser interactive prompt)": [[21, "webrepl-web-browser-interactive-prompt"], [27, "webrepl-web-browser-interactive-prompt"]], "MicroPython tutorial for ESP32": [[22, "micropython-tutorial-for-esp32"]], "Getting started with MicroPython on the ESP32": [[23, "getting-started-with-micropython-on-the-esp32"]], "Requirements": [[23, "requirements"], [33, "requirements"], [176, "requirements"], [244, "requirements"], [256, "requirements"], [270, "requirements"]], "Powering the board": [[23, "powering-the-board"], [33, "powering-the-board"], [176, "powering-the-board"], [256, "powering-the-board"]], "Getting the firmware": [[23, "getting-the-firmware"], [33, "getting-the-firmware"], [176, "getting-the-firmware"], [256, "getting-the-firmware"]], "Deploying the firmware": [[23, "deploying-the-firmware"], [33, "deploying-the-firmware"], [176, "deploying-the-firmware"], [256, "deploying-the-firmware"]], "Serial prompt": [[23, "serial-prompt"], [33, "serial-prompt"], [176, "serial-prompt"], [256, "serial-prompt"]], "Troubleshooting installation problems": [[23, "troubleshooting-installation-problems"], [33, "troubleshooting-installation-problems"], [176, "troubleshooting-installation-problems"], [256, "troubleshooting-installation-problems"]], "Accessing peripherals directly via registers": [[24, "accessing-peripherals-directly-via-registers"]], "Synchronous access to pins directly via registers": [[24, "synchronous-access-to-pins-directly-via-registers"]], "Pulse Width Modulation": [[25, "pulse-width-modulation"], [41, "pulse-width-modulation"]], "General information about the ESP8266 port": [[26, "general-information-about-the-esp8266-port"]], "Scarcity of runtime resources": [[26, "scarcity-of-runtime-resources"]], "Boot process": [[26, "boot-process"]], "Known Issues": [[26, "known-issues"]], "Real-time clock": [[26, "real-time-clock"]], "Simultaneous operation of STA_IF and AP_IF": [[26, "simultaneous-operation-of-sta-if-and-ap-if"]], "Sockets and WiFi buffers overflow": [[26, "sockets-and-wifi-buffers-overflow"]], "SSL/TLS limitations": [[26, "ssl-tls-limitations"]], "Quick reference for the ESP8266": [[27, "quick-reference-for-the-esp8266"]], "I2C bus": [[27, "i2c-bus"], [178, "i2c-bus"], [195, "i2c-bus"], [242, "i2c-bus"], [259, "i2c-bus"]], "NeoPixel driver": [[27, "neopixel-driver"]], "APA102 driver": [[27, "apa102-driver"]], "SSD1306 driver": [[27, "ssd1306-driver"]], "Analog to Digital Conversion": [[28, "analog-to-digital-conversion"]], "Controlling APA102 LEDs": [[29, "controlling-apa102-leds"]], "Temperature and Humidity": [[30, "temperature-and-humidity"]], "The internal filesystem": [[31, "the-internal-filesystem"]], "Creating and reading files": [[31, "creating-and-reading-files"]], "Listing file and more": [[31, "listing-file-and-more"]], "Start up scripts": [[31, "start-up-scripts"]], "Accessing the filesystem via WebREPL": [[31, "accessing-the-filesystem-via-webrepl"]], "MicroPython tutorial for ESP8266": [[32, "micropython-tutorial-for-esp8266"]], "Getting started with MicroPython on the ESP8266": [[33, "getting-started-with-micropython-on-the-esp8266"]], "WiFi": [[33, "wifi"]], "Controlling NeoPixels": [[34, "controlling-neopixels"]], "Network basics": [[35, "network-basics"]], "Configuration of the WiFi": [[35, "configuration-of-the-wifi"]], "Sockets": [[35, "sockets"]], "Network - TCP sockets": [[36, "network-tcp-sockets"]], "Star Wars Asciimation": [[36, "star-wars-asciimation"]], "HTTP GET request": [[36, "http-get-request"]], "Simple HTTP server": [[36, "simple-http-server"]], "Next steps": [[37, "next-steps"]], "Controlling 1-wire devices": [[38, "controlling-1-wire-devices"]], "GPIO Pins": [[39, "gpio-pins"], [271, "gpio-pins"]], "External interrupts": [[39, "external-interrupts"], [178, "external-interrupts"], [195, "external-interrupts"]], "Power control": [[40, "power-control"], [207, "power-control"]], "Changing the CPU frequency": [[40, "changing-the-cpu-frequency"]], "Fading an LED": [[41, "fading-an-led"]], "Control a hobby servo": [[41, "control-a-hobby-servo"]], "Getting a MicroPython REPL prompt": [[42, "getting-a-micropython-repl-prompt"], [208, "getting-a-micropython-repl-prompt"], [263, "getting-a-micropython-repl-prompt"], [272, "getting-a-micropython-repl-prompt"]], "REPL over the serial port": [[42, "repl-over-the-serial-port"], [272, "repl-over-the-serial-port"]], "WebREPL - a prompt over WiFi": [[42, "webrepl-a-prompt-over-wifi"]], "Using the REPL": [[42, "using-the-repl"], [272, "using-the-repl"]], "Line editing": [[42, "line-editing"]], "Input history": [[42, "input-history"]], "Tab completion": [[42, "tab-completion"]], "Line continuation and auto-indent": [[42, "line-continuation-and-auto-indent"]], "Paste mode": [[42, "paste-mode"], [239, "paste-mode"]], "Other control commands": [[42, "other-control-commands"]], "Using a SSD1306 OLED display": [[43, "using-a-ssd1306-oled-display"]], "Builtin types": [[44, "builtin-types"]], "Exception": [[44, "exception"]], "All exceptions have readable value and errno attributes, not just StopIteration and OSError.": [[44, "all-exceptions-have-readable-value-and-errno-attributes-not-just-stopiteration-and-oserror"]], "Exception chaining not implemented": [[44, "exception-chaining-not-implemented"]], "User-defined attributes for builtin exceptions are not supported": [[44, "user-defined-attributes-for-builtin-exceptions-are-not-supported"]], "Exception in while loop condition may have unexpected line number": [[44, "exception-in-while-loop-condition-may-have-unexpected-line-number"]], "Exception.__init__ method does not exist.": [[44, "exception-init-method-does-not-exist"]], "bytearray": [[44, "bytearray"]], "Array slice assignment with unsupported RHS": [[44, "array-slice-assignment-with-unsupported-rhs"]], "bytes": [[44, "bytes"]], "bytes objects support .format() method": [[44, "bytes-objects-support-format-method"]], "bytes() with keywords not implemented": [[44, "bytes-with-keywords-not-implemented"]], "Bytes subscription with step != 1 not implemented": [[44, "bytes-subscription-with-step-1-not-implemented"]], "dict": [[44, "dict"]], "Dictionary keys view does not behave as a set.": [[44, "dictionary-keys-view-does-not-behave-as-a-set"]], "float": [[44, "float"]], "uPy allows implicit conversion of objects in maths operations while CPython does not.": [[44, "upy-allows-implicit-conversion-of-objects-in-maths-operations-while-cpython-does-not"]], "uPy and CPython outputs formats may differ": [[44, "upy-and-cpython-outputs-formats-may-differ"]], "int": [[44, "int"]], "bit_length method doesn\u2019t exist.": [[44, "bit-length-method-doesn-t-exist"]], "No int conversion for int-derived types available": [[44, "no-int-conversion-for-int-derived-types-available"]], "list": [[44, "list"]], "List delete with step != 1 not implemented": [[44, "list-delete-with-step-1-not-implemented"]], "List slice-store with non-iterable on RHS is not implemented": [[44, "list-slice-store-with-non-iterable-on-rhs-is-not-implemented"]], "List store with step != 1 not implemented": [[44, "list-store-with-step-1-not-implemented"]], "str": [[44, "str"]], "Start/end indices such as str.endswith(s, start) not implemented": [[44, "start-end-indices-such-as-str-endswith-s-start-not-implemented"]], "Attributes/subscr not implemented": [[44, "attributes-subscr-not-implemented"]], "str(\u2026) with keywords not implemented": [[44, "str-with-keywords-not-implemented"]], "str.ljust() and str.rjust() not implemented": [[44, "str-ljust-and-str-rjust-not-implemented"]], "None as first argument for rsplit such as str.rsplit(None, n) not implemented": [[44, "none-as-first-argument-for-rsplit-such-as-str-rsplit-none-n-not-implemented"]], "Subscript with step != 1 is not yet implemented": [[44, "subscript-with-step-1-is-not-yet-implemented"], [47, "subscript-with-step-1-is-not-yet-implemented"]], "tuple": [[44, "tuple"]], "Tuple load with step != 1 not implemented": [[44, "tuple-load-with-step-1-not-implemented"]], "Core language": [[45, "core-language"]], "f-strings don\u2019t support concatenation with adjacent literals if the adjacent literals contain braces or are f-strings": [[45, "f-strings-don-t-support-concatenation-with-adjacent-literals-if-the-adjacent-literals-contain-braces-or-are-f-strings"]], "f-strings cannot support expressions that require parsing to resolve unbalanced nested braces and brackets": [[45, "f-strings-cannot-support-expressions-that-require-parsing-to-resolve-unbalanced-nested-braces-and-brackets"]], "Raw f-strings are not supported": [[45, "raw-f-strings-are-not-supported"]], "f-strings don\u2019t support !a conversions": [[45, "f-strings-don-t-support-a-conversions"]], "Classes": [[45, "classes"], [51, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [67, "classes"], [71, "classes"], [74, "classes"], [105, "classes"], [130, "classes"], [151, "classes"], [167, "classes"]], "Special method __del__ not implemented for user-defined classes": [[45, "special-method-del-not-implemented-for-user-defined-classes"]], "Method Resolution Order (MRO) is not compliant with CPython": [[45, "method-resolution-order-mro-is-not-compliant-with-cpython"]], "When inheriting from multiple classes super() only calls one class": [[45, "when-inheriting-from-multiple-classes-super-only-calls-one-class"]], "Calling super() getter property in subclass will return a property object, not the value": [[45, "calling-super-getter-property-in-subclass-will-return-a-property-object-not-the-value"]], "Functions": [[45, "functions"], [53, "functions"], [55, "functions"], [57, "functions"], [62, "functions"], [63, "functions"], [66, "functions"], [67, "functions"], [69, "functions"], [71, "functions"], [72, "functions"], [92, "functions"], [93, "functions"], [102, "functions"], [103, "functions"], [104, "functions"], [113, "functions"], [117, "functions"], [118, "functions"], [121, "functions"], [124, "functions"], [125, "functions"], [127, "functions"], [129, "functions"], [150, "functions"], [155, "functions"], [156, "functions"], [157, "functions"], [159, "functions"], [160, "functions"], [161, "functions"], [164, "functions"], [165, "functions"], [167, "functions"], [171, "functions"]], "Error messages for methods may display unexpected argument counts": [[45, "error-messages-for-methods-may-display-unexpected-argument-counts"]], "Function objects do not have the __module__ attribute": [[45, "function-objects-do-not-have-the-module-attribute"]], "User-defined attributes for functions are not supported": [[45, "user-defined-attributes-for-functions-are-not-supported"]], "Generator": [[45, "generator"]], "Context manager __exit__() not called in a generator which does not run to completion": [[45, "context-manager-exit-not-called-in-a-generator-which-does-not-run-to-completion"]], "Runtime": [[45, "runtime"]], "Local variables aren\u2019t included in locals() result": [[45, "local-variables-aren-t-included-in-locals-result"]], "Code running in eval() function doesn\u2019t have access to local variables": [[45, "code-running-in-eval-function-doesn-t-have-access-to-local-variables"]], "import": [[45, "import"]], "__all__ is unsupported in __init__.py in MicroPython.": [[45, "all-is-unsupported-in-init-py-in-micropython"]], "__path__ attribute of a package has a different type (single string instead of list of strings) in MicroPython": [[45, "path-attribute-of-a-package-has-a-different-type-single-string-instead-of-list-of-strings-in-micropython"]], "MicroPython doesn\u2019t support namespace packages split across filesystem.": [[45, "micropython-doesn-t-support-namespace-packages-split-across-filesystem"]], "MicroPython differences from CPython": [[46, "micropython-differences-from-cpython"]], "Modules": [[47, "modules"]], "array": [[47, "array"]], "Comparison between different typecodes not supported": [[47, "comparison-between-different-typecodes-not-supported"]], "Overflow checking is not implemented": [[47, "overflow-checking-is-not-implemented"]], "Looking for integer not implemented": [[47, "looking-for-integer-not-implemented"]], "Array deletion not implemented": [[47, "array-deletion-not-implemented"]], "builtins": [[47, "builtins"]], "Second argument to next() is not implemented": [[47, "second-argument-to-next-is-not-implemented"]], "deque": [[47, "deque"]], "Deque not implemented": [[47, "deque-not-implemented"]], "json": [[47, "json"]], "JSON module does not throw exception when object is not serialisable": [[47, "json-module-does-not-throw-exception-when-object-is-not-serialisable"]], "os": [[47, "os"]], "environ attribute is not implemented": [[47, "environ-attribute-is-not-implemented"]], "getenv returns actual value instead of cached value": [[47, "getenv-returns-actual-value-instead-of-cached-value"]], "random": [[47, "random"]], "getrandbits method can only return a maximum of 32 bits at a time.": [[47, "getrandbits-method-can-only-return-a-maximum-of-32-bits-at-a-time"]], "randint method can only return an integer that is at most the native word size.": [[47, "randint-method-can-only-return-an-integer-that-is-at-most-the-native-word-size"]], "struct": [[47, "struct"]], "Struct pack with too few args, not checked by uPy": [[47, "struct-pack-with-too-few-args-not-checked-by-upy"]], "Struct pack with too many args, not checked by uPy": [[47, "struct-pack-with-too-many-args-not-checked-by-upy"]], "Struct pack with whitespace in format, whitespace ignored by CPython, error on uPy": [[47, "struct-pack-with-whitespace-in-format-whitespace-ignored-by-cpython-error-on-upy"]], "sys": [[47, "sys"]], "Overriding sys.stdin, sys.stdout and sys.stderr not possible": [[47, "overriding-sys-stdin-sys-stdout-and-sys-stderr-not-possible"]], "Syntax": [[48, "syntax"]], "Argument unpacking does not work if the argument being unpacked is the nth or greater argument where n is the number of bits in an MP_SMALL_INT.": [[48, "argument-unpacking-does-not-work-if-the-argument-being-unpacked-is-the-nth-or-greater-argument-where-n-is-the-number-of-bits-in-an-mp-small-int"]], "Operators": [[48, "operators"]], "MicroPython allows using := to assign to the variable of a comprehension, CPython raises a SyntaxError.": [[48, "micropython-allows-using-to-assign-to-the-variable-of-a-comprehension-cpython-raises-a-syntaxerror"]], "Spaces": [[48, "spaces"]], "uPy requires spaces between literal numbers and keywords, CPy doesn\u2019t": [[48, "upy-requires-spaces-between-literal-numbers-and-keywords-cpy-doesn-t"]], "Unicode": [[48, "unicode"]], "Unicode name escapes are not implemented": [[48, "unicode-name-escapes-are-not-implemented"]], "MicroPython documentation and references": [[49, "micropython-documentation-and-references"]], "_thread \u2013 multithreading support": [[50, "module-_thread"]], "array \u2013 arrays of numeric data": [[51, "module-array"]], "asyncio \u2014 asynchronous I/O scheduler": [[52, "module-asyncio"]], "Core functions": [[52, "core-functions"]], "Additional functions": [[52, "additional-functions"]], "class Task": [[52, "class-task"]], "class Event": [[52, "class-event"]], "class ThreadSafeFlag": [[52, "class-threadsafeflag"]], "class Lock": [[52, "class-lock"]], "TCP stream connections": [[52, "tcp-stream-connections"]], "Event Loop": [[52, "event-loop"]], "binascii \u2013 binary/ASCII conversions": [[53, "module-binascii"]], "bluetooth \u2014 low-level Bluetooth": [[54, "module-bluetooth"]], "class BLE": [[54, "class-ble"]], "Constructor": [[54, "constructor"], [54, "id1"], [64, "constructor"], [80, "constructor"], [166, "constructor"], [170, "constructor"]], "Configuration": [[54, "configuration"], [64, "configuration"]], "Event Handling": [[54, "event-handling"]], "Broadcaster Role (Advertiser)": [[54, "broadcaster-role-advertiser"]], "Observer Role (Scanner)": [[54, "observer-role-scanner"]], "Central Role": [[54, "central-role"]], "Peripheral Role": [[54, "peripheral-role"]], "Central & Peripheral Roles": [[54, "central-peripheral-roles"]], "GATT Server": [[54, "gatt-server"]], "GATT Client": [[54, "gatt-client"]], "L2CAP connection-oriented-channels": [[54, "l2cap-connection-oriented-channels"]], "Pairing and bonding": [[54, "pairing-and-bonding"]], "class UUID": [[54, "class-uuid"]], "btree \u2013 simple BTree database": [[55, "module-btree"]], "Methods": [[55, "methods"], [68, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [80, "methods"], [81, "methods"], [82, "methods"], [83, "methods"], [84, "methods"], [86, "methods"], [87, "methods"], [88, "methods"], [89, "methods"], [89, "id1"], [90, "methods"], [91, "methods"], [94, "methods"], [97, "methods"], [98, "methods"], [99, "methods"], [100, "methods"], [101, "methods"], [106, "methods"], [107, "methods"], [108, "methods"], [109, "methods"], [110, "methods"], [111, "methods"], [112, "methods"], [114, "methods"], [115, "methods"], [116, "methods"], [120, "methods"], [122, "methods"], [122, "id2"], [122, "id4"], [123, "methods"], [125, "methods"], [125, "id2"], [126, "methods"], [131, "methods"], [132, "methods"], [133, "methods"], [134, "methods"], [135, "methods"], [136, "methods"], [137, "methods"], [138, "methods"], [139, "methods"], [140, "methods"], [140, "id1"], [141, "methods"], [142, "methods"], [143, "methods"], [144, "methods"], [145, "methods"], [145, "id1"], [146, "methods"], [147, "methods"], [148, "methods"], [152, "methods"], [153, "methods"], [154, "methods"], [155, "methods"], [156, "methods"], [161, "methods"], [164, "methods"], [166, "methods"], [168, "methods"], [169, "methods"], [170, "methods"]], "Constants": [[55, "constants"], [57, "constants"], [60, "constants"], [61, "constants"], [63, "constants"], [63, "id1"], [63, "id2"], [64, "constants"], [65, "constants"], [73, "constants"], [74, "constants"], [78, "constants"], [80, "constants"], [82, "constants"], [83, "constants"], [86, "constants"], [88, "constants"], [89, "constants"], [90, "constants"], [92, "constants"], [98, "constants"], [100, "constants"], [101, "constants"], [103, "constants"], [105, "constants"], [113, "constants"], [114, "constants"], [117, "constants"], [124, "constants"], [127, "constants"], [130, "constants"], [133, "constants"], [134, "constants"], [135, "constants"], [137, "constants"], [140, "constants"], [142, "constants"], [145, "constants"], [146, "constants"], [148, "constants"], [153, "constants"], [156, "constants"], [157, "constants"], [160, "constants"]], "builtins \u2013 builtin functions and exceptions": [[56, "builtins-builtin-functions-and-exceptions"]], "Functions and types": [[56, "functions-and-types"]], "Exceptions": [[56, "exceptions"], [64, "exceptions"], [157, "exceptions"], [232, "exceptions"]], "cmath \u2013 mathematical functions for complex numbers": [[57, "module-cmath"]], "collections \u2013 collection and container types": [[58, "module-collections"]], "cryptolib \u2013 cryptographic ciphers": [[59, "module-cryptolib"]], "deflate \u2013 deflate compression & decompression": [[60, "module-deflate"]], "Examples": [[60, "examples"], [67, "examples"], [166, "examples"], [233, "examples"], [235, "examples"]], "Deflate window size": [[60, "deflate-window-size"]], "Decompression": [[60, "decompression"]], "Compression": [[60, "compression"]], "errno \u2013 system error codes": [[61, "module-errno"]], "esp \u2014 functions related to the ESP8266 and ESP32": [[62, "module-esp"]], "esp32 \u2014 functionality specific to the ESP32": [[63, "module-esp32"]], "Flash partitions": [[63, "flash-partitions"]], "Ultra-Low-Power co-processor": [[63, "ultra-low-power-co-processor"]], "Non-Volatile Storage": [[63, "non-volatile-storage"]], "espnow \u2014 support for the ESP-NOW wireless protocol": [[64, "module-espnow"]], "Table of Contents:": [[64, "table-of-contents"]], "Introduction": [[64, "introduction"]], "class ESPNow": [[64, "class-espnow"]], "Sending and Receiving Data": [[64, "sending-and-receiving-data"]], "Peer Management": [[64, "peer-management"]], "Callback Methods": [[64, "callback-methods"]], "Wifi Signal Strength (RSSI) - (ESP32 only)": [[64, "wifi-signal-strength-rssi-esp32-only"]], "Supporting asyncio": [[64, "supporting-asyncio"]], "Broadcast and Multicast": [[64, "broadcast-and-multicast"]], "ESPNow and Wifi Operation": [[64, "espnow-and-wifi-operation"]], "ESPNow and Sleep Modes": [[64, "espnow-and-sleep-modes"]], "framebuf \u2014 frame buffer manipulation": [[65, "module-framebuf"]], "class FrameBuffer": [[65, "class-framebuffer"]], "Constructors": [[65, "constructors"], [68, "constructors"], [73, "constructors"], [75, "constructors"], [76, "constructors"], [77, "constructors"], [78, "constructors"], [79, "constructors"], [81, "constructors"], [82, "constructors"], [83, "constructors"], [84, "constructors"], [86, "constructors"], [87, "constructors"], [88, "constructors"], [89, "constructors"], [90, "constructors"], [91, "constructors"], [94, "constructors"], [95, "constructors"], [97, "constructors"], [98, "constructors"], [99, "constructors"], [100, "constructors"], [101, "constructors"], [106, "constructors"], [107, "constructors"], [108, "constructors"], [109, "constructors"], [110, "constructors"], [111, "constructors"], [112, "constructors"], [114, "constructors"], [115, "constructors"], [116, "constructors"], [119, "constructors"], [120, "constructors"], [122, "constructors"], [122, "id1"], [122, "id3"], [122, "id5"], [122, "id6"], [122, "id7"], [122, "id8"], [122, "id9"], [123, "constructors"], [125, "constructors"], [125, "id1"], [126, "constructors"], [131, "constructors"], [132, "constructors"], [133, "constructors"], [134, "constructors"], [135, "constructors"], [136, "constructors"], [137, "constructors"], [138, "constructors"], [139, "constructors"], [140, "constructors"], [141, "constructors"], [142, "constructors"], [143, "constructors"], [144, "constructors"], [145, "constructors"], [146, "constructors"], [147, "constructors"], [148, "constructors"], [152, "constructors"], [153, "constructors"], [154, "constructors"], [161, "constructors"], [168, "constructors"], [169, "constructors"]], "Drawing primitive shapes": [[65, "drawing-primitive-shapes"], [73, "drawing-primitive-shapes"]], "Drawing text": [[65, "drawing-text"], [73, "drawing-text"]], "Other methods": [[65, "other-methods"]], "gc \u2013 control the garbage collector": [[66, "module-gc"]], "Difference to CPython": [[66, null], [66, null], [66, null], [71, null], [71, null], [155, null], [155, null], [156, null], [156, null], [156, null], [156, null], [156, null], [156, null], [157, null], [159, null], [160, null], [160, null], [160, null], [160, null], [160, null], [161, null]], "gzip \u2013 gzip compression & decompression": [[67, "module-gzip"]], "hashlib \u2013 hashing algorithms": [[68, "module-hashlib"]], "heapq \u2013 heap queue algorithm": [[69, "module-heapq"]], "MicroPython libraries": [[70, "micropython-libraries"]], "Python standard libraries and micro-libraries": [[70, "python-standard-libraries-and-micro-libraries"]], "MicroPython-specific libraries": [[70, "micropython-specific-libraries"]], "Libraries specific to the OpenMV Cam": [[70, "libraries-specific-to-the-openmv-cam"]], "Third-party libraries on the OpenMV Cam": [[70, "third-party-libraries-on-the-openmv-cam"]], "ulab \u2014 numpy-like array manipulation library": [[70, "module-ulab"]], "pid \u2014 Proportional/Integral/Derivative Control": [[70, "module-pid"]], "bno055 \u2014 IMU Driver": [[70, "module-bno055"]], "ssd1306 \u2014 OLED Driver": [[70, "module-ssd1306"]], "tb6612 \u2014 Stepper Motor Driver": [[70, "module-tb6612"]], "lsm6dsox \u2014 lsm6dsox Driver": [[70, "module-lsm6dsox"]], "modbus \u2014 modbus protocol library": [[70, "module-modbus"]], "mqtt \u2014 mqtt protocol library": [[70, "module-mqtt"]], "vl53l1x \u2014 ToF Distance Sensor Driver": [[70, "module-vl53l1x"]], "Extending built-in libraries from Python": [[70, "extending-built-in-libraries-from-python"]], "io \u2013 input/output streams": [[71, "module-io"]], "Conceptual hierarchy": [[71, "conceptual-hierarchy"]], "json \u2013 JSON encoding and decoding": [[72, "module-json"]], "lcd160cr \u2014 control of LCD160CR display": [[73, "module-lcd160cr"]], "class LCD160CR": [[73, "class-lcd160cr"]], "Static methods": [[73, "static-methods"]], "Instance members": [[73, "instance-members"]], "Setup commands": [[73, "setup-commands"]], "Pixel access methods": [[73, "pixel-access-methods"], [95, "pixel-access-methods"]], "Touch screen methods": [[73, "touch-screen-methods"]], "Advanced commands": [[73, "advanced-commands"]], "machine \u2014 functions related to the hardware": [[74, "module-machine"]], "Memory access": [[74, "memory-access"], [158, "memory-access"]], "Reset related functions": [[74, "reset-related-functions"], [130, "reset-related-functions"]], "Interrupt related functions": [[74, "interrupt-related-functions"], [130, "interrupt-related-functions"]], "Power related functions": [[74, "power-related-functions"], [130, "power-related-functions"]], "Miscellaneous functions": [[74, "miscellaneous-functions"], [130, "miscellaneous-functions"]], "class ADC \u2013 analog to digital conversion": [[75, "class-adc-analog-to-digital-conversion"], [131, "class-adc-analog-to-digital-conversion"]], "class ADCBlock \u2013 control ADC peripherals": [[76, "class-adcblock-control-adc-peripherals"]], "class ADCWiPy \u2013 analog to digital conversion": [[77, "class-adcwipy-analog-to-digital-conversion"]], "class ADCChannel \u2014 read analog values from internal or external sources": [[77, "class-adcchannel-read-analog-values-from-internal-or-external-sources"]], "class CAN \u2013 controller area network communication bus": [[78, "class-can-controller-area-network-communication-bus"], [133, "class-can-controller-area-network-communication-bus"]], "class I2C \u2013 a two-wire serial protocol": [[79, "class-i2c-a-two-wire-serial-protocol"], [137, "class-i2c-a-two-wire-serial-protocol"]], "General Methods": [[79, "general-methods"]], "Primitive I2C operations": [[79, "primitive-i2c-operations"]], "Standard bus operations": [[79, "standard-bus-operations"]], "Memory operations": [[79, "memory-operations"]], "class I2S \u2013 Inter-IC Sound bus protocol": [[80, "class-i2s-inter-ic-sound-bus-protocol"]], "class PWM \u2013 pulse width modulation": [[81, "class-pwm-pulse-width-modulation"]], "Specific PWM class implementations": [[81, "specific-pwm-class-implementations"]], "Limitations of PWM": [[81, "limitations-of-pwm"]], "class Pin \u2013 control I/O pins": [[82, "class-pin-control-i-o-pins"], [140, "class-pin-control-i-o-pins"]], "class RTC \u2013 real time clock": [[83, "class-rtc-real-time-clock"], [141, "class-rtc-real-time-clock"]], "class SD \u2013 secure digital memory card (cc3200 port only)": [[84, "class-sd-secure-digital-memory-card-cc3200-port-only"]], "class SDCard \u2013 secure digital memory card": [[85, "class-sdcard-secure-digital-memory-card"]], "Implementation-specific details": [[85, "implementation-specific-details"]], "PyBoard": [[85, "pyboard"]], "ESP32": [[85, "esp32"], [229, "esp32"]], "cc3200": [[85, "cc3200"]], "mimxrt": [[85, "mimxrt"]], "class SPI \u2013 a Serial Peripheral Interface bus protocol (controller side)": [[86, "class-spi-a-serial-peripheral-interface-bus-protocol-controller-side"]], "class Signal \u2013 control and sense external I/O devices": [[87, "class-signal-control-and-sense-external-i-o-devices"]], "class Timer \u2013 control hardware timers": [[88, "class-timer-control-hardware-timers"]], "class TimerWiPy \u2013 control hardware timers": [[89, "class-timerwipy-control-hardware-timers"]], "class TimerChannel \u2014 setup a channel for a timer": [[89, "class-timerchannel-setup-a-channel-for-a-timer"], [145, "class-timerchannel-setup-a-channel-for-a-timer"]], "class UART \u2013 duplex serial communication bus": [[90, "class-uart-duplex-serial-communication-bus"], [146, "class-uart-duplex-serial-communication-bus"]], "class WDT \u2013 watchdog timer": [[91, "class-wdt-watchdog-timer"]], "math \u2013 mathematical functions": [[92, "module-math"]], "micropython \u2013 access and control MicroPython internals": [[93, "module-micropython"]], "mutex \u2014 mutex module": [[94, "module-mutex"]], "class Mutex \u2013 mutex object": [[94, "class-mutex-mutex-object"]], "neopixel \u2014 control of WS2812 / NeoPixel LEDs": [[95, "module-neopixel"]], "class NeoPixel": [[95, "class-neopixel"]], "Output methods": [[95, "output-methods"]], "network \u2014 network configuration": [[96, "module-network"]], "Common network adapter interface": [[96, "common-network-adapter-interface"]], "Specific network class implementations": [[96, "specific-network-class-implementations"]], "Network functions": [[96, "network-functions"]], "class LAN \u2013 control an Ethernet module": [[97, "class-lan-control-an-ethernet-module"]], "Specific LAN class implementations": [[97, "specific-lan-class-implementations"]], "class WINC \u2013 wifi shield driver": [[98, "class-winc-wifi-shield-driver"]], "class WIZNET5K \u2013 control WIZnet5x00 Ethernet modules": [[99, "class-wiznet5k-control-wiznet5x00-ethernet-modules"]], "class WLAN \u2013 control built-in WiFi interfaces": [[100, "class-wlan-control-built-in-wifi-interfaces"]], "class WLANWiPy \u2013 WiPy specific WiFi control": [[101, "class-wlanwipy-wipy-specific-wifi-control"]], "audio \u2014 Audio Module": [[102, "module-audio"]], "buzzer \u2014 buzzer driver": [[103, "module-buzzer"]], "cpufreq \u2014 CPU Frequency Control": [[104, "module-cpufreq"]], "display \u2014 display driver": [[105, "module-display"]], "class DACBacklight \u2013 DAC Backlight": [[106, "class-dacbacklight-dac-backlight"]], "class PWMBacklight \u2013 PWM Backlight": [[107, "class-pwmbacklight-pwm-backlight"]], "class ST7701 \u2013 Display Controller": [[108, "class-st7701-display-controller"]], "class DisplayData \u2013 Display Data": [[109, "class-displaydata-display-data"]], "class DSIDisplay \u2013 DSI Display Driver": [[110, "class-dsidisplay-dsi-display-driver"]], "class RGBDisplay \u2013 RGB Display Driver": [[111, "class-rgbdisplay-rgb-display-driver"]], "class SPIDisplay \u2013 SPI Display Driver": [[112, "class-spidisplay-spi-display-driver"]], "fir \u2014 thermal sensor driver (fir == far infrared)": [[113, "module-fir"]], "ft5x06 \u2014 Touch Screen Driver": [[114, "module-ft5x06"]], "gif \u2014 gif recording": [[115, "module-gif"]], "class Gif \u2013 Gif recorder": [[115, "class-gif-gif-recorder"]], "gt911 \u2014 Touch Screen Driver": [[116, "module-gt911"]], "image \u2014 machine vision": [[117, "module-image"]], "class HaarCascade \u2013 Feature Descriptor": [[117, "class-haarcascade-feature-descriptor"]], "class Histogram \u2013 Histogram Object": [[117, "class-histogram-histogram-object"]], "class Percentile \u2013 Percentile Object": [[117, "class-percentile-percentile-object"]], "class Threshold \u2013 Threshold Object": [[117, "class-threshold-threshold-object"]], "class Statistics \u2013 Statistics Object": [[117, "class-statistics-statistics-object"]], "class Blob \u2013 Blob object": [[117, "class-blob-blob-object"]], "class Line \u2013 Line object": [[117, "class-line-line-object"]], "class Circle \u2013 Circle object": [[117, "class-circle-circle-object"]], "class Rect \u2013 Rectangle Object": [[117, "class-rect-rectangle-object"]], "class QRCode \u2013 QRCode object": [[117, "class-qrcode-qrcode-object"]], "class AprilTag \u2013 AprilTag object": [[117, "class-apriltag-apriltag-object"]], "class DataMatrix \u2013 DataMatrix object": [[117, "class-datamatrix-datamatrix-object"]], "class BarCode \u2013 BarCode object": [[117, "class-barcode-barcode-object"]], "class Displacement \u2013 Displacement object": [[117, "class-displacement-displacement-object"]], "class kptmatch \u2013 Keypoint Object": [[117, "class-kptmatch-keypoint-object"]], "class ImageIO  \u2013 ImageIO Object": [[117, "class-imageio-imageio-object"]], "class Image \u2013 Image object": [[117, "class-image-image-object"]], "imu \u2014 imu sensor": [[118, "module-imu"]], "micro_speech \u2014 Micro Speech Audio Module Example": [[119, "module-micro_speech"]], "mjpeg \u2014 mjpeg recording": [[120, "module-mjpeg"]], "class Mjpeg \u2013 Mjpeg recorder": [[120, "class-mjpeg-mjpeg-recorder"]], "omv \u2014 OpenMV Cam Information": [[121, "module-omv"]], "rpc \u2014 rpc library": [[122, "module-rpc"]], "How to use the Library": [[122, "how-to-use-the-library"], [123, "how-to-use-the-library"]], "class rpc - rpc virtual class": [[122, "class-rpc-rpc-virtual-class"]], "class rpc_master - rpc_master virtual class": [[122, "class-rpc-master-rpc-master-virtual-class"]], "class rpc_slave - rpc_slave virtual class": [[122, "class-rpc-slave-rpc-slave-virtual-class"]], "class rpc_can_master - CAN Master Interface": [[122, "class-rpc-can-master-can-master-interface"]], "class rpc_can_slave - CAN Slave Interface": [[122, "class-rpc-can-slave-can-slave-interface"]], "class rpc_i2c_master - I2C Master Interface": [[122, "class-rpc-i2c-master-i2c-master-interface"]], "class rpc_i2c_slave - I2C Slave Interface": [[122, "class-rpc-i2c-slave-i2c-slave-interface"]], "class rpc_spi_master - SPI Master Interface": [[122, "class-rpc-spi-master-spi-master-interface"]], "class rpc_spi_slave - SPI Slave Interface": [[122, "class-rpc-spi-slave-spi-slave-interface"]], "class rpc_uart_master - UART Master Interface": [[122, "class-rpc-uart-master-uart-master-interface"]], "class rpc_uart_slave - UART Slave Interface": [[122, "class-rpc-uart-slave-uart-slave-interface"]], "class rpc_usb_vcp_master - USB VCP Master Interface": [[122, "class-rpc-usb-vcp-master-usb-vcp-master-interface"]], "class rpc_usb_vcp_slave - USB VCP Slave Interface": [[122, "class-rpc-usb-vcp-slave-usb-vcp-slave-interface"]], "class rpc_network_master - Network Master Interface": [[122, "class-rpc-network-master-network-master-interface"]], "class rpc_network_slave - Network Slave Interface": [[122, "class-rpc-network-slave-network-slave-interface"]], "rtsp \u2014 rtsp library": [[123, "module-rtsp"]], "class rtsp_server - rtsp_server class": [[123, "class-rtsp-server-rtsp-server-class"]], "sensor \u2014 camera sensor": [[124, "module-sensor"]], "tf \u2014 Tensor Flow": [[125, "module-tf"]], "class tf_classification \u2013 tf classification dection result": [[125, "class-tf-classification-tf-classification-dection-result"]], "class tf_model \u2013 TensorFlow Model": [[125, "class-tf-model-tensorflow-model"]], "tfp410 \u2014 DVI/HDMI Controller": [[126, "module-TFP410"]], "tv \u2014 tv shield driver": [[127, "module-tv"]], "os \u2013 basic \u201coperating system\u201d services": [[128, "module-os"]], "General functions": [[128, "general-functions"]], "Filesystem access": [[128, "filesystem-access"], [238, "filesystem-access"]], "Terminal redirection and duplication": [[128, "terminal-redirection-and-duplication"]], "Filesystem mounting": [[128, "filesystem-mounting"]], "Block devices": [[128, "block-devices"], [229, "block-devices"]], "Simple and extended interface": [[128, "simple-and-extended-interface"]], "platform \u2013 access to underlying platform\u2019s identifying data": [[129, "module-platform"]], "pyb \u2014 functions related to the board": [[130, "module-pyb"]], "Time related functions": [[130, "time-related-functions"]], "The ADCAll Object": [[131, "the-adcall-object"]], "class Accel \u2013 accelerometer control": [[132, "class-accel-accelerometer-control"]], "Hardware Note": [[132, "hardware-note"], [136, "hardware-note"]], "class DAC \u2013 digital to analog conversion": [[134, "class-dac-digital-to-analog-conversion"]], "class ExtInt \u2013 configure I/O pins to interrupt on external events": [[135, "class-extint-configure-i-o-pins-to-interrupt-on-external-events"]], "Class methods": [[135, "class-methods"], [140, "class-methods"]], "class Flash \u2013 access to built-in flash storage": [[136, "class-flash-access-to-built-in-flash-storage"], [152, "class-flash-access-to-built-in-flash-storage"]], "class LCD \u2013 LCD control for the LCD touch-sensor pyskin": [[138, "class-lcd-lcd-control-for-the-lcd-touch-sensor-pyskin"]], "class LED \u2013 LED object": [[139, "class-led-led-object"]], "class PinAF \u2013 Pin Alternate Functions": [[140, "class-pinaf-pin-alternate-functions"]], "class SPI \u2013 a controller-driven serial protocol": [[142, "class-spi-a-controller-driven-serial-protocol"]], "class Servo \u2013 3-wire hobby servo driver": [[143, "class-servo-3-wire-hobby-servo-driver"]], "class Switch \u2013 switch object": [[144, "class-switch-switch-object"]], "class Timer \u2013 control internal timers": [[145, "class-timer-control-internal-timers"]], "Flow Control": [[146, "flow-control"]], "CTS: target controls OpenMV Cam transmitter": [[146, "cts-target-controls-openmv-cam-transmitter"]], "RTS: OpenMV Cam controls target\u2019s transmitter": [[146, "rts-openmv-cam-controls-target-s-transmitter"]], "class USB_HID \u2013 USB Human Interface Device (HID)": [[147, "class-usb-hid-usb-human-interface-device-hid"]], "class USB_VCP \u2013 USB virtual comm port": [[148, "class-usb-vcp-usb-virtual-comm-port"]], "random \u2013 generate random numbers": [[149, "module-random"]], "Functions for integers": [[149, "functions-for-integers"]], "Functions for floats": [[149, "functions-for-floats"]], "Other Functions": [[149, "other-functions"]], "re \u2013 simple regular expressions": [[150, "module-re"]], "Regex objects": [[150, "regex-objects"]], "Match objects": [[150, "match-objects"]], "rp2 \u2014 functionality specific to the RP2040": [[151, "module-rp2"]], "PIO related functions": [[151, "pio-related-functions"]], "PIO assembly language instructions": [[151, "pio-assembly-language-instructions"]], "class PIO \u2013 advanced PIO usage": [[153, "class-pio-advanced-pio-usage"]], "class StateMachine \u2013 access to the RP2040\u2019s programmable I/O interface": [[154, "class-statemachine-access-to-the-rp2040-s-programmable-i-o-interface"]], "select \u2013 wait for events on a set of streams": [[155, "module-select"]], "class Poll": [[155, "class-poll"]], "socket \u2013 socket module": [[156, "module-socket"]], "Socket address format(s)": [[156, "socket-address-format-s"]], "class socket": [[156, "class-socket"]], "ssl \u2013 SSL/TLS module": [[157, "module-ssl"]], "class SSLContext": [[157, "class-sslcontext"]], "stm \u2014 functionality specific to STM32 MCUs": [[158, "module-stm"]], "Peripheral register constants": [[158, "peripheral-register-constants"]], "Functions specific to STM32WBxx MCUs": [[158, "functions-specific-to-stm32wbxx-mcus"]], "Functions specific to STM32WLxx MCUs": [[158, "functions-specific-to-stm32wlxx-mcus"]], "struct \u2013 pack and unpack primitive data types": [[159, "module-struct"]], "sys \u2013 system specific functions": [[160, "module-sys"]], "time \u2013 time related functions": [[161, "module-time"]], "uctypes \u2013 access binary data in a structured way": [[162, "module-uctypes"]], "Defining structure layout": [[162, "defining-structure-layout"]], "Module contents": [[162, "module-contents"]], "Structure descriptors and instantiating structure objects": [[162, "structure-descriptors-and-instantiating-structure-objects"]], "Structure objects": [[162, "structure-objects"]], "Limitations": [[162, "limitations"]], "uping \u2014 Ping another computer": [[163, "module-uping"]], "urequests \u2014 Related functions of HTTP client": [[164, "module-urequests"]], "Response class": [[164, "response-class"]], "wipy \u2013 WiPy specific features": [[165, "module-wipy"]], "WM8960 \u2013 Driver for the WM8960 codec": [[166, "wm8960-driver-for-the-wm8960-codec"]], "Tables of parameter constants": [[166, "tables-of-parameter-constants"]], "Swap Parameter": [[166, "id1"]], "Protocol Parameter": [[166, "id2"]], "Input Source Parameter": [[166, "id3"]], "Route Parameter": [[166, "id4"]], "Master Clock Source Parameter": [[166, "id5"]], "Module Names": [[166, "id6"]], "Play Channel Names": [[166, "id7"]], "adc_sync Parameters": [[166, "id8"]], "Module Names and dB steps": [[166, "id9"]], "zephyr \u2014 functionality specific to the Zephyr port": [[167, "module-zephyr"]], "Additional Modules": [[167, "additional-modules"]], "class DiskAccess \u2013 access to disk storage": [[168, "class-diskaccess-access-to-disk-storage"]], "class FlashArea \u2013 access to built-in flash storage": [[169, "class-flasharea-access-to-built-in-flash-storage"]], "zsensor \u2014 Zephyr sensor bindings": [[170, "module-zsensor"]], "class Sensor \u2014 sensor control for the Zephyr port": [[170, "class-sensor-sensor-control-for-the-zephyr-port"]], "Channels": [[170, "channels"]], "zlib \u2013 zlib compression & decompression": [[171, "module-zlib"]], "MicroPython license information": [[172, "micropython-license-information"]], "General information about the MIMXRT port": [[173, "general-information-about-the-mimxrt-port"]], "Supported MCUs": [[173, "supported-mcus"]], "Pinout for the i.MXRT machine modules": [[174, "pinout-for-the-i-mxrt-machine-modules"]], "UART pin assignment": [[174, "uart-pin-assignment"]], "PWM pin assignment": [[174, "pwm-pin-assignment"]], "Hardware SPI pin assignment": [[174, "hardware-spi-pin-assignment"]], "Hardware I2C pin assignment": [[174, "hardware-i2c-pin-assignment"]], "Hardware I2S pin assignment": [[174, "hardware-i2s-pin-assignment"]], "Quick reference for the i.MXRT family": [[175, "quick-reference-for-the-i-mxrt-family"]], "PWM Constructor": [[175, "pwm-constructor"], [255, "pwm-constructor"]], "PWM Methods": [[175, "pwm-methods"], [255, "pwm-methods"]], "PWM Pin Assignment": [[175, "pwm-pin-assignment"], [255, "pwm-pin-assignment"]], "Ethernet driver": [[175, "ethernet-driver"]], "Transferring files": [[175, "transferring-files"], [255, "transferring-files"]], "Getting started with MicroPython on the i.MXRT": [[176, "getting-started-with-micropython-on-the-i-mxrt"]], "Teensy 4.0 and 4.1": [[176, "teensy-4-0-and-4-1"]], "IMXRT10xx-EVK boards": [[176, "imxrt10xx-evk-boards"]], "Seed ARCH MIX board": [[176, "seed-arch-mix-board"]], "General information about the openmvcam": [[177, "general-information-about-the-openmvcam"]], "Contents": [[177, "contents"], [193, "contents"], [229, "contents"], [240, "contents"]], "Local filesystem and SD card": [[177, "local-filesystem-and-sd-card"], [193, "local-filesystem-and-sd-card"]], "Boot modes": [[177, "boot-modes"], [193, "boot-modes"]], "Flashing LED Errors": [[177, "flashing-led-errors"]], "Quick reference for the openmvcam": [[178, "quick-reference-for-the-openmvcam"]], "General OpenMV Cams Board Control": [[178, "general-openmv-cams-board-control"]], "Virtual Timers": [[178, "virtual-timers"]], "STM32 Based OpenMV Cams General Board Control": [[178, "stm32-based-openmv-cams-general-board-control"]], "LEDs": [[178, "leds"]], "Servo control": [[178, "servo-control"], [195, "servo-control"]], "SPI bus": [[178, "spi-bus"], [195, "spi-bus"], [242, "spi-bus"], [259, "spi-bus"]], "Analog IO": [[179, "analog-io"]], "GPIO Control": [[180, "gpio-control"]], "As an Input": [[180, "as-an-input"]], "As an Output": [[180, "as-an-output"]], "Hardware Setup": [[181, "hardware-setup"]], "USB Flash Drive Notes": [[181, "usb-flash-drive-notes"]], "OpenMV Cam Tutorial": [[182, "openmv-cam-tutorial"]], "I/O Tutorial": [[183, "i-o-tutorial"]], "The PYB Module": [[183, "the-pyb-module"]], "LED Control": [[184, "led-control"]], "More Information": [[185, "more-information"]], "OpenMV IDE Overview": [[186, "openmv-ide-overview"]], "File Menu and Examples": [[186, "file-menu-and-examples"]], "Text Editing": [[186, "text-editing"]], "Connecting to your OpenMV Cam": [[186, "connecting-to-your-openmv-cam"]], "Running scripts": [[186, "running-scripts"]], "Frame Buffer Viewer": [[186, "frame-buffer-viewer"]], "Histogram Display": [[186, "histogram-display"]], "Serial Terminal": [[186, "serial-terminal"]], "Status Bar": [[186, "status-bar"]], "Tools": [[186, "tools"]], "WiFi Debug": [[186, "wifi-debug"]], "Open Terminal": [[186, "open-terminal"]], "Machine Vision": [[186, "machine-vision"]], "Video Tools": [[186, "video-tools"]], "Options": [[186, "options"]], "Overview": [[187, "overview"], [234, "overview"], [234, "id1"], [234, "id3"], [241, "overview"]], "Releasing your OpenMV Cam Scripts for Production": [[188, "releasing-your-openmv-cam-scripts-for-production"]], "How to freeze your scripts": [[188, "how-to-freeze-your-scripts"]], "How to protect your code": [[188, "how-to-protect-your-code"]], "Script Structure": [[189, "script-structure"]], "Software Setup": [[190, "software-setup"]], "Windows": [[190, "windows"], [208, "windows"], [263, "windows"]], "Mac": [[190, "mac"]], "Linux-Desktop": [[190, "linux-desktop"]], "Linux-RaspberryPi": [[190, "linux-raspberrypi"]], "System Architecture": [[191, "system-architecture"]], "Memory Architecture": [[191, "memory-architecture"]], "UART Control": [[192, "uart-control"]], "General information about the pyboard": [[193, "general-information-about-the-pyboard"]], "Errors: flashing LEDs": [[193, "errors-flashing-leds"]], "Guide for using the pyboard with Windows": [[193, "guide-for-using-the-pyboard-with-windows"]], "The pyboard hardware": [[193, "the-pyboard-hardware"], [194, "the-pyboard-hardware"]], "Datasheets for the components on the pyboard": [[193, "datasheets-for-the-components-on-the-pyboard"], [194, "datasheets-for-the-components-on-the-pyboard"]], "Datasheets for other components": [[193, "datasheets-for-other-components"], [194, "datasheets-for-other-components"]], "Quick reference for the pyboard": [[195, "quick-reference-for-the-pyboard"]], "Internal LEDs": [[195, "internal-leds"]], "Internal switch": [[195, "internal-switch"]], "RTC (real time clock)": [[195, "rtc-real-time-clock"]], "CAN bus (controller area network)": [[195, "can-bus-controller-area-network"]], "Internal accelerometer": [[195, "internal-accelerometer"]], "The accelerometer": [[196, "the-accelerometer"]], "Using the accelerometer": [[196, "using-the-accelerometer"]], "Making a spirit level": [[196, "making-a-spirit-level"]], "The AMP audio skin": [[197, "the-amp-audio-skin"]], "Example code": [[197, "example-code"]], "Inline assembler": [[198, "inline-assembler"]], "Returning a value": [[198, "returning-a-value"]], "Accessing peripherals": [[198, "accessing-peripherals"]], "Accepting arguments": [[198, "accepting-arguments"]], "Loops": [[198, "loops"]], "Further reading": [[198, "further-reading"], [212, "further-reading"]], "Debouncing a pin input": [[199, "debouncing-a-pin-input"]], "Fading LEDs": [[200, "fading-leds"]], "Components": [[200, "components"]], "Connecting Things Up": [[200, "connecting-things-up"]], "Code": [[200, "code"]], "Breathing Effect": [[200, "breathing-effect"]], "Advanced Exercise": [[200, "advanced-exercise"]], "Addendum": [[200, "addendum"]], "MicroPython tutorial for the pyboard": [[201, "micropython-tutorial-for-the-pyboard"]], "Tutorials requiring extra components": [[201, "tutorials-requiring-extra-components"]], "Tips, tricks and useful things to know": [[201, "tips-tricks-and-useful-things-to-know"]], "Introduction to the pyboard": [[202, "introduction-to-the-pyboard"]], "Caring for your pyboard": [[202, "caring-for-your-pyboard"]], "Layout of the pyboard": [[202, "layout-of-the-pyboard"]], "Plugging in and powering on": [[202, "plugging-in-and-powering-on"]], "Powering by an external power source": [[202, "powering-by-an-external-power-source"], [262, "powering-by-an-external-power-source"]], "The LCD160CR skin": [[203, "the-lcd160cr-skin"]], "Plugging in the display": [[203, "plugging-in-the-display"]], "Getting the driver": [[203, "getting-the-driver"]], "Testing the display": [[203, "testing-the-display"]], "Drawing some graphics": [[203, "drawing-some-graphics"]], "Using the touch sensor": [[203, "using-the-touch-sensor"], [204, "using-the-touch-sensor"]], "Directing the MicroPython output to the display": [[203, "directing-the-micropython-output-to-the-display"]], "The LCD and touch-sensor skin": [[204, "the-lcd-and-touch-sensor-skin"]], "Using the LCD": [[204, "using-the-lcd"]], "Turning on LEDs and basic Python concepts": [[205, "turning-on-leds-and-basic-python-concepts"]], "A Disco on your pyboard": [[205, "a-disco-on-your-pyboard"]], "The Special LEDs": [[205, "the-special-leds"]], "Making a UART - USB pass through": [[206, "making-a-uart-usb-pass-through"]], "Mac OS X": [[208, "mac-os-x"], [263, "mac-os-x"]], "Linux": [[208, "linux"], [263, "linux"]], "Using the REPL prompt": [[208, "using-the-repl-prompt"], [263, "using-the-repl-prompt"]], "Resetting the board": [[208, "resetting-the-board"], [246, "resetting-the-board"], [263, "resetting-the-board"]], "Safe mode and factory reset": [[209, "safe-mode-and-factory-reset"]], "Safe mode": [[209, "safe-mode"]], "Factory reset the filesystem": [[209, "factory-reset-the-filesystem"], [264, "factory-reset-the-filesystem"]], "Running your first script": [[210, "running-your-first-script"]], "Connecting your pyboard": [[210, "connecting-your-pyboard"]], "Opening the pyboard USB drive": [[210, "opening-the-pyboard-usb-drive"]], "Editing main.py": [[210, "editing-main-py"]], "Resetting the pyboard": [[210, "resetting-the-pyboard"]], "Controlling hobby servo motors": [[211, "controlling-hobby-servo-motors"]], "Creating a Servo object": [[211, "creating-a-servo-object"]], "Continuous rotation servos": [[211, "continuous-rotation-servos"]], "Calibration": [[211, "calibration"]], "Switches, callbacks and interrupts": [[212, "switches-callbacks-and-interrupts"]], "Switch callbacks": [[212, "switch-callbacks"]], "Technical details of interrupts": [[212, "technical-details-of-interrupts"]], "The Timers": [[213, "the-timers"]], "Timer counter": [[213, "timer-counter"]], "Timer callbacks": [[213, "timer-callbacks"]], "Making a microsecond counter": [[213, "making-a-microsecond-counter"]], "Making the pyboard act as a USB mouse": [[214, "making-the-pyboard-act-as-a-usb-mouse"]], "Sending mouse events by hand": [[214, "sending-mouse-events-by-hand"]], "Making a mouse with the accelerometer": [[214, "making-a-mouse-with-the-accelerometer"]], "Restoring your pyboard to normal": [[214, "restoring-your-pyboard-to-normal"]], "Arithmetic instructions": [[215, "arithmetic-instructions"]], "Document conventions": [[215, "document-conventions"], [216, "document-conventions"], [218, "document-conventions"], [220, "document-conventions"], [221, "document-conventions"], [222, "document-conventions"], [223, "document-conventions"], [225, "document-conventions"], [226, "document-conventions"], [227, "document-conventions"]], "Addition": [[215, "addition"]], "Subtraction": [[215, "subtraction"]], "Negation": [[215, "negation"]], "Multiplication and division": [[215, "multiplication-and-division"]], "Comparison instructions": [[216, "comparison-instructions"], [216, "id1"]], "The Application Program Status Register (APSR)": [[216, "the-application-program-status-register-apsr"]], "APSR Bits": [[216, "apsr-bits"]], "Conditional execution": [[216, "conditional-execution"]], "Assembler directives": [[217, "assembler-directives"]], "Labels": [[217, "labels"]], "Defining inline data": [[217, "defining-inline-data"]], "Floating point instructions": [[218, "floating-point-instructions"]], "Arithmetic": [[218, "arithmetic"]], "Move between ARM core and FPU registers": [[218, "move-between-arm-core-and-fpu-registers"]], "Move between FPU register and memory": [[218, "move-between-fpu-register-and-memory"]], "Data comparison": [[218, "data-comparison"]], "Convert between integer and float": [[218, "convert-between-integer-and-float"]], "Hints and tips": [[219, "hints-and-tips"]], "Code branches and subroutines": [[219, "code-branches-and-subroutines"]], "Argument passing and return": [[219, "argument-passing-and-return"]], "Multiple arguments": [[219, "multiple-arguments"]], "Non-integer data types": [[219, "non-integer-data-types"]], "Named constants": [[219, "named-constants"]], "Assembler code as class methods": [[219, "assembler-code-as-class-methods"]], "Use of unsupported instructions": [[219, "use-of-unsupported-instructions"]], "Overcoming MicroPython\u2019s integer restriction": [[219, "overcoming-micropython-s-integer-restriction"]], "Inline assembler for Thumb2 architectures": [[220, "inline-assembler-for-thumb2-architectures"]], "Instruction categories": [[220, "instruction-categories"]], "Usage examples": [[220, "usage-examples"]], "References": [[220, "references"]], "Branch instructions": [[221, "branch-instructions"]], "Branch to label": [[221, "branch-to-label"]], "Long branches": [[221, "long-branches"]], "Subroutines (functions)": [[221, "subroutines-functions"]], "Load register from memory": [[222, "load-register-from-memory"]], "Register Load": [[222, "register-load"]], "Logical & bitwise instructions": [[223, "logical-bitwise-instructions"]], "Logical instructions": [[223, "logical-instructions"]], "Shift and rotation instructions": [[223, "shift-and-rotation-instructions"]], "Special instructions": [[223, "special-instructions"]], "Miscellaneous instructions": [[224, "miscellaneous-instructions"]], "Register move instructions": [[225, "register-move-instructions"]], "Register moves": [[225, "register-moves"]], "Stack push and pop": [[226, "stack-push-and-pop"]], "Stack operations": [[226, "stack-operations"]], "Store register to memory": [[227, "store-register-to-memory"]], "Register Store": [[227, "register-store"]], "MicroPython on microcontrollers": [[228, "micropython-on-microcontrollers"]], "Flash memory": [[228, "flash-memory"]], "RAM": [[228, "ram"]], "Compilation phase": [[228, "compilation-phase"]], "Execution phase": [[228, "execution-phase"]], "The heap": [[228, "the-heap"]], "Fragmentation": [[228, "fragmentation"]], "Reporting": [[228, "reporting"]], "Control of garbage collection": [[228, "control-of-garbage-collection"]], "String operations": [[228, "string-operations"]], "Postscript": [[228, "postscript"]], "Footnote: gc.collect() return value": [[228, "footnote-gc-collect-return-value"]], "Working with filesystems": [[229, "working-with-filesystems"]], "VFS": [[229, "vfs"]], "Built-in block devices": [[229, "built-in-block-devices"]], "STM32 / Pyboard / OpenMV Cam": [[229, "stm32-pyboard-openmv-cam"]], "ESP8266": [[229, "esp8266"]], "Custom block devices": [[229, "custom-block-devices"]], "Filesystems": [[229, "filesystems"]], "FAT": [[229, "fat"]], "Littlefs": [[229, "littlefs"]], "Hybrid (STM32)": [[229, "hybrid-stm32"]], "Hybrid (ESP32)": [[229, "hybrid-esp32"]], "Glossary": [[230, "glossary"]], "MicroPython language and implementation": [[231, "micropython-language-and-implementation"]], "Writing interrupt handlers": [[232, "writing-interrupt-handlers"]], "Tips and recommended practices": [[232, "tips-and-recommended-practices"]], "MicroPython issues": [[232, "micropython-issues"]], "The emergency exception buffer": [[232, "the-emergency-exception-buffer"]], "Simplicity": [[232, "simplicity"]], "Communication between an ISR and the main program": [[232, "communication-between-an-isr-and-the-main-program"]], "The use of object methods as callbacks": [[232, "the-use-of-object-methods-as-callbacks"]], "Creation of Python objects": [[232, "creation-of-python-objects"]], "Use of Python objects": [[232, "use-of-python-objects"]], "Overcoming the float limitation": [[232, "overcoming-the-float-limitation"]], "Using micropython.schedule": [[232, "using-micropython-schedule"]], "Interfacing to asyncio": [[232, "interfacing-to-asyncio"]], "General issues": [[232, "general-issues"]], "Interrupt handler design": [[232, "interrupt-handler-design"]], "Reentrancy": [[232, "reentrancy"]], "Critical sections": [[232, "critical-sections"]], "Interrupts and the REPL": [[232, "interrupts-and-the-repl"]], "MicroPython manifest files": [[233, "micropython-manifest-files"]], "Summary": [[233, "summary"]], "Writing manifest files": [[233, "writing-manifest-files"]], "Building with a custom manifest": [[233, "building-with-a-custom-manifest"]], "Adding a manifest to a board definition": [[233, "adding-a-manifest-to-a-board-definition"]], "High-level functions": [[233, "high-level-functions"]], "Low-level functions": [[233, "low-level-functions"]], "MicroPython 2.0 Migration Guide": [[234, "micropython-2-0-migration-guide"]], "Hardware and peripherals": [[234, "hardware-and-peripherals"]], "Changes": [[234, "changes"], [234, "id2"], [234, "id4"]], "OS & filesystem": [[234, "os-filesystem"]], "CPython compatibility": [[234, "cpython-compatibility"]], "MicroPython remote control: mpremote": [[235, "micropython-remote-control-mpremote"]], "Commands": [[235, "commands"]], "Auto connection and soft-reset": [[235, "auto-connection-and-soft-reset"]], "Shortcuts": [[235, "shortcuts"]], "MicroPython .mpy files": [[236, "micropython-mpy-files"]], "Versioning and compatibility of .mpy files": [[236, "versioning-and-compatibility-of-mpy-files"]], "Binary encoding of .mpy files": [[236, "binary-encoding-of-mpy-files"]], "The header": [[236, "the-header"]], "The global qstr and constant tables": [[236, "the-global-qstr-and-constant-tables"]], "Raw code elements": [[236, "raw-code-elements"]], "Package management": [[237, "package-management"]], "Installing packages with mip": [[237, "installing-packages-with-mip"]], "Using mip on the Unix port": [[237, "using-mip-on-the-unix-port"]], "Installing packages with mpremote": [[237, "installing-packages-with-mpremote"]], "Installing packages manually": [[237, "installing-packages-manually"]], "Writing & publishing packages": [[237, "writing-publishing-packages"]], "Freezing packages": [[237, "freezing-packages"]], "The pyboard.py tool": [[238, "the-pyboard-py-tool"]], "Running a command on the device": [[238, "running-a-command-on-the-device"]], "Running a script on the device": [[238, "running-a-script-on-the-device"]], "Using the pyboard library": [[238, "using-the-pyboard-library"]], "The MicroPython Interactive Interpreter Mode (aka REPL)": [[239, "the-micropython-interactive-interpreter-mode-aka-repl"]], "Auto-indent": [[239, "auto-indent"]], "Auto-completion": [[239, "auto-completion"]], "Interrupting a running program": [[239, "interrupting-a-running-program"]], "Soft reset": [[239, "soft-reset"]], "The special variable _ (underscore)": [[239, "the-special-variable-underscore"]], "Raw mode and raw-paste mode": [[239, "raw-mode-and-raw-paste-mode"]], "Maximising MicroPython speed": [[240, "maximising-micropython-speed"]], "Designing for speed": [[240, "designing-for-speed"]], "Algorithms": [[240, "algorithms"]], "RAM allocation": [[240, "ram-allocation"]], "Buffers": [[240, "buffers"]], "Floating point": [[240, "floating-point"]], "Arrays": [[240, "arrays"]], "Identifying the slowest section of code": [[240, "identifying-the-slowest-section-of-code"]], "MicroPython code improvements": [[240, "micropython-code-improvements"]], "The const() declaration": [[240, "the-const-declaration"]], "Caching object references": [[240, "caching-object-references"]], "Controlling garbage collection": [[240, "controlling-garbage-collection"]], "The Native code emitter": [[240, "the-native-code-emitter"]], "The Viper code emitter": [[240, "the-viper-code-emitter"]], "Accessing hardware directly": [[240, "accessing-hardware-directly"]], "General information about Renesas RA port": [[241, "general-information-about-renesas-ra-port"]], "Quick reference for the Renesas RA": [[242, "quick-reference-for-the-renesas-ra"]], "SDCard": [[242, "sdcard"]], "MicroPython tutorial for Renesas RA port": [[243, "micropython-tutorial-for-renesas-ra-port"]], "Getting started with MicroPython on the Renesas RA": [[244, "getting-started-with-micropython-on-the-renesas-ra"]], "Flashing the MicroPython image with J-Link OB": [[244, "flashing-the-micropython-image-with-j-link-ob"]], "Getting a prompt of MicroPython": [[244, "getting-a-prompt-of-micropython"]], "Write a program in internal file system": [[245, "write-a-program-in-internal-file-system"]], "Internal file system": [[245, "internal-file-system"]], "Write a program in the internal file system": [[245, "write-a-program-in-the-internal-file-system"]], "Reset and boot mode": [[246, "reset-and-boot-mode"]], "boot mode": [[246, "boot-mode"]], "Trouble Shooting": [[247, "trouble-shooting"]], "Flash file system": [[247, "flash-file-system"]], "Using peripherals": [[248, "using-peripherals"]], "LED blinking": [[248, "led-blinking"]], "General information about the RP2xxx port": [[249, "general-information-about-the-rp2xxx-port"]], "Quick reference for the RP2": [[250, "quick-reference-for-the-rp2"]], "Programmable IO (PIO)": [[250, "programmable-io-pio"]], "Getting started with MicroPython on the RP2xxx": [[251, "getting-started-with-micropython-on-the-rp2xxx"]], "Programmable IO": [[252, "programmable-io"]], "An example": [[252, "an-example"]], "General information about the SAMD port": [[253, "general-information-about-the-samd-port"]], "Technical specifications and SoC data sheets": [[253, "technical-specifications-and-soc-data-sheets"]], "Pinout for the SAMD machine modules": [[254, "pinout-for-the-samd-machine-modules"]], "Adafruit ItsyBitsy M0 Express pin assignment table": [[254, "adafruit-itsybitsy-m0-express-pin-assignment-table"]], "SAMD21 UART assignments": [[254, "samd21-uart-assignments"]], "SAMD21 I2C assignments": [[254, "samd21-i2c-assignments"]], "SAMD21 SPI assignments": [[254, "samd21-spi-assignments"]], "SAMD21 PWM assignments": [[254, "samd21-pwm-assignments"]], "Adafruit ItsyBitsy M4 Express pin assignment table": [[254, "adafruit-itsybitsy-m4-express-pin-assignment-table"]], "SAMD51 UART assignments": [[254, "samd51-uart-assignments"]], "SAMD51 I2C assignments": [[254, "samd51-i2c-assignments"]], "SAMD51 SPI assignments": [[254, "samd51-spi-assignments"]], "SAMD51 PWM assignments": [[254, "samd51-pwm-assignments"]], "Adafruit Feather M4 Express pin assignment table": [[254, "adafruit-feather-m4-express-pin-assignment-table"]], "Adafruit Metro M4 Airlift pin assignment table": [[254, "adafruit-metro-m4-airlift-pin-assignment-table"]], "SEEED XIAO pin assignment table": [[254, "seeed-xiao-pin-assignment-table"]], "Adafruit Feather M0 Express pin assignment table": [[254, "adafruit-feather-m0-express-pin-assignment-table"]], "Adafruit Trinket M0 pin assignment table": [[254, "adafruit-trinket-m0-pin-assignment-table"]], "SAMD21 Xplained PRO pin assignment table": [[254, "samd21-xplained-pro-pin-assignment-table"]], "Minisam M4 pin assignment table": [[254, "minisam-m4-pin-assignment-table"]], "Seeed WIO Terminal pin assignment table": [[254, "seeed-wio-terminal-pin-assignment-table"]], "Sparkfun SAMD51 Thing Plus pin assignment table": [[254, "sparkfun-samd51-thing-plus-pin-assignment-table"]], "Scripts for creating the pin assignment tables": [[254, "scripts-for-creating-the-pin-assignment-tables"]], "Quick reference for the SAMD21/SAMD51 family": [[255, "quick-reference-for-the-samd21-samd51-family"]], "Clock and time": [[255, "clock-and-time"]], "ADC Constructor": [[255, "adc-constructor"]], "ADC Methods": [[255, "adc-methods"]], "DAC Constructor": [[255, "dac-constructor"]], "DAC Methods": [[255, "dac-methods"]], "Driving an APA102 LED": [[255, "driving-an-apa102-led"]], "Driving a Neopixel LED": [[255, "driving-a-neopixel-led"]], "Getting started with MicroPython on the SAMD": [[256, "getting-started-with-micropython-on-the-samd"]], "Quick reference for the UNIX and Windows ports": [[257, "quick-reference-for-the-unix-and-windows-ports"]], "Command line options": [[257, "command-line-options"]], "Environment variables": [[257, "environment-variables"]], "General information about the WiPy": [[258, "general-information-about-the-wipy"]], "No floating point support": [[258, "no-floating-point-support"]], "Before applying power": [[258, "before-applying-power"]], "WLAN default behaviour": [[258, "wlan-default-behaviour"]], "Telnet REPL": [[258, "telnet-repl"]], "Local file system and FTP access": [[258, "local-file-system-and-ftp-access"]], "FileZilla settings": [[258, "filezilla-settings"]], "Upgrading the firmware Over The Air": [[258, "upgrading-the-firmware-over-the-air"]], "Boot modes and safe boot": [[258, "boot-modes-and-safe-boot"]], "The heartbeat LED": [[258, "the-heartbeat-led"]], "Details on sleep modes": [[258, "details-on-sleep-modes"]], "Additional details for machine.Pin": [[258, "additional-details-for-machine-pin"]], "Additional details for machine.I2C": [[258, "additional-details-for-machine-i2c"]], "Known issues": [[258, "known-issues"]], "Incompatible way to create SSL sockets": [[258, "incompatible-way-to-create-ssl-sockets"]], "Incompatibilities in hashlib module": [[258, "incompatibilities-in-hashlib-module"]], "Unrelated function in machine module": [[258, "unrelated-function-in-machine-module"]], "Adhoc way to control telnet/FTP server via network module": [[258, "adhoc-way-to-control-telnet-ftp-server-via-network-module"]], "Adhoc VFS-like support": [[258, "adhoc-vfs-like-support"]], "Quick reference for the WiPy": [[259, "quick-reference-for-the-wipy"]], "General board control (including sleep modes)": [[259, "general-board-control-including-sleep-modes"]], "Watchdog timer (WDT)": [[259, "watchdog-timer-wdt"]], "WLAN (WiFi)": [[259, "wlan-wifi"]], "Telnet and FTP server": [[259, "telnet-and-ftp-server"]], "Heart beat LED": [[259, "heart-beat-led"]], "Getting started with Blynk and the WiPy": [[260, "getting-started-with-blynk-and-the-wipy"]], "WiPy tutorials and examples": [[261, "wipy-tutorials-and-examples"]], "Introduction to the WiPy": [[262, "introduction-to-the-wipy"]], "Caring for your WiPy and expansion board": [[262, "caring-for-your-wipy-and-expansion-board"]], "Plugging into the expansion board and powering on": [[262, "plugging-into-the-expansion-board-and-powering-on"]], "Expansion board hardware guide": [[262, "expansion-board-hardware-guide"]], "Performing firmware upgrades": [[262, "performing-firmware-upgrades"]], "Reset and boot modes": [[264, "reset-and-boot-modes"]], "Safe boot": [[264, "safe-boot"]], "Hardware timers": [[265, "hardware-timers"]], "Additional constants for Timer class": [[265, "additional-constants-for-timer-class"]], "WLAN step by step": [[266, "wlan-step-by-step"]], "Connecting to your home router": [[266, "connecting-to-your-home-router"]], "Assigning a static IP address when booting": [[266, "assigning-a-static-ip-address-when-booting"]], "General information about the Zephyr port": [[267, "general-information-about-the-zephyr-port"]], "Quick reference for the Zephyr port": [[268, "quick-reference-for-the-zephyr-port"]], "Running MicroPython": [[268, "running-micropython"]], "Disk Access": [[268, "disk-access"], [273, "disk-access"]], "Flash Area": [[268, "flash-area"], [273, "flash-area"]], "Sensor": [[268, "sensor"]], "MicroPython tutorial for the Zephyr port": [[269, "micropython-tutorial-for-the-zephyr-port"]], "Getting started with MicroPython on the Zephyr port": [[270, "getting-started-with-micropython-on-the-zephyr-port"]], "Powering up": [[270, "powering-up"]], "Getting and deploying the firmware": [[270, "getting-and-deploying-the-firmware"]], "Pin Formatting": [[271, "id1"]], "Interrupts": [[271, "interrupts"]], "Filesystems and Storage": [[273, "filesystems-and-storage"]]}, "indexentries": {"pep 526": [[14, "index-1"]], "pep 618": [[14, "index-0"]], "python enhancement proposals": [[14, "index-0"], [14, "index-1"]], "adc (built-in class)": [[21, "ADC"]], "adcblock (built-in class)": [[21, "ADCBlock"]], "atten() (adc method)": [[21, "ADC.atten"]], "connect() (adcblock method)": [[21, "ADCBlock.connect"]], "read() (adc method)": [[21, "ADC.read"]], "read_uv() (adc method)": [[21, "ADC.read_uv"]], "width() (adc method)": [[21, "ADC.width"]], "_thread": [[50, "module-_thread"]], "module": [[50, "module-_thread"], [51, "module-array"], [52, "module-asyncio"], [53, "module-binascii"], [54, "module-bluetooth"], [55, "module-btree"], [57, "module-cmath"], [58, "module-collections"], [59, "module-cryptolib"], [60, "module-deflate"], [61, "module-errno"], [62, "module-esp"], [63, "module-esp32"], [64, "module-aioespnow"], [64, "module-espnow"], [65, "module-framebuf"], [66, "module-gc"], [67, "module-gzip"], [68, "module-hashlib"], [69, "module-heapq"], [70, "module-bno055"], [70, "module-lsm6dsox"], [70, "module-modbus"], [70, "module-mqtt"], [70, "module-pid"], [70, "module-ssd1306"], [70, "module-tb6612"], [70, "module-ulab"], [70, "module-vl53l1x"], [71, "module-io"], [72, "module-json"], [73, "module-lcd160cr"], [74, "module-machine"], [92, "module-math"], [93, "module-micropython"], [94, "module-mutex"], [95, "module-neopixel"], [96, "module-network"], [102, "module-audio"], [103, "module-buzzer"], [104, "module-cpufreq"], [105, "module-display"], [113, "module-fir"], [114, "module-ft5x06"], [115, "module-gif"], [116, "module-gt911"], [117, "module-image"], [118, "module-imu"], [119, "module-micro_speech"], [120, "module-mjpeg"], [121, "module-omv"], [122, "module-rpc"], [123, "module-rtsp"], [124, "module-sensor"], [125, "module-tf"], [126, "module-TFP410"], [127, "module-tv"], [128, "module-os"], [129, "module-platform"], [130, "module-pyb"], [149, "module-random"], [150, "module-re"], [151, "module-rp2"], [155, "module-select"], [156, "module-socket"], [157, "module-ssl"], [158, "module-stm"], [159, "module-struct"], [160, "module-sys"], [161, "module-time"], [162, "module-uctypes"], [163, "module-uping"], [164, "module-urequests"], [165, "module-wipy"], [167, "module-zephyr"], [170, "module-zsensor"], [171, "module-zlib"]], "__add__() (array.array method)": [[51, "array.array.__add__"]], "__getitem__() (array.array method)": [[51, "array.array.__getitem__"]], "__iadd__() (array.array method)": [[51, "array.array.__iadd__"]], "__len__() (array.array method)": [[51, "array.array.__len__"]], "__repr__() (array.array method)": [[51, "array.array.__repr__"]], "__setitem__() (array.array method)": [[51, "array.array.__setitem__"]], "append() (array.array method)": [[51, "array.array.append"]], "array": [[51, "module-array"]], "array (class in array)": [[51, "array.array"]], "extend() (array.array method)": [[51, "array.array.extend"]], "event (class in asyncio)": [[52, "asyncio.Event"]], "lock (class in asyncio)": [[52, "asyncio.Lock"]], "loop (class in asyncio)": [[52, "asyncio.Loop"]], "server (class in asyncio)": [[52, "asyncio.Server"]], "stream (class in asyncio)": [[52, "asyncio.Stream"]], "task (class in asyncio)": [[52, "asyncio.Task"]], "threadsafeflag (class in asyncio)": [[52, "asyncio.ThreadSafeFlag"]], "acquire() (asyncio.lock method)": [[52, "asyncio.Lock.acquire"]], "asyncio": [[52, "module-asyncio"]], "call_exception_handler() (asyncio.loop method)": [[52, "asyncio.Loop.call_exception_handler"]], "cancel() (asyncio.task method)": [[52, "asyncio.Task.cancel"]], "clear() (asyncio.event method)": [[52, "asyncio.Event.clear"]], "clear() (asyncio.threadsafeflag method)": [[52, "asyncio.ThreadSafeFlag.clear"]], "close() (asyncio.loop method)": [[52, "asyncio.Loop.close"]], "close() (asyncio.server method)": [[52, "asyncio.Server.close"]], "close() (asyncio.stream method)": [[52, "asyncio.Stream.close"]], "create_task() (asyncio.loop method)": [[52, "asyncio.Loop.create_task"]], "create_task() (in module asyncio)": [[52, "asyncio.create_task"]], "current_task() (in module asyncio)": [[52, "asyncio.current_task"]], "default_exception_handler() (asyncio.loop method)": [[52, "asyncio.Loop.default_exception_handler"]], "drain() (asyncio.stream method)": [[52, "asyncio.Stream.drain"]], "gather() (in module asyncio)": [[52, "asyncio.gather"]], "get_event_loop() (in module asyncio)": [[52, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[52, "asyncio.Loop.get_exception_handler"]], "get_extra_info() (asyncio.stream method)": [[52, "asyncio.Stream.get_extra_info"]], "is_set() (asyncio.event method)": [[52, "asyncio.Event.is_set"]], "locked() (asyncio.lock method)": [[52, "asyncio.Lock.locked"]], "new_event_loop() (in module asyncio)": [[52, "asyncio.new_event_loop"]], "open_connection() (in module asyncio)": [[52, "asyncio.open_connection"]], "read() (asyncio.stream method)": [[52, "asyncio.Stream.read"]], "readexactly() (asyncio.stream method)": [[52, "asyncio.Stream.readexactly"]], "readinto() (asyncio.stream method)": [[52, "asyncio.Stream.readinto"]], "readline() (asyncio.stream method)": [[52, "asyncio.Stream.readline"]], "release() (asyncio.lock method)": [[52, "asyncio.Lock.release"]], "run() (in module asyncio)": [[52, "asyncio.run"]], "run_forever() (asyncio.loop method)": [[52, "asyncio.Loop.run_forever"]], "run_until_complete() (asyncio.loop method)": [[52, "asyncio.Loop.run_until_complete"]], "set() (asyncio.event method)": [[52, "asyncio.Event.set"]], "set() (asyncio.threadsafeflag method)": [[52, "asyncio.ThreadSafeFlag.set"]], "set_exception_handler() (asyncio.loop method)": [[52, "asyncio.Loop.set_exception_handler"]], "sleep() (in module asyncio)": [[52, "asyncio.sleep"]], "sleep_ms() (in module asyncio)": [[52, "asyncio.sleep_ms"]], "start_server() (in module asyncio)": [[52, "asyncio.start_server"]], "stop() (asyncio.loop method)": [[52, "asyncio.Loop.stop"]], "wait() (asyncio.event method)": [[52, "asyncio.Event.wait"]], "wait() (asyncio.threadsafeflag method)": [[52, "asyncio.ThreadSafeFlag.wait"]], "wait_closed() (asyncio.server method)": [[52, "asyncio.Server.wait_closed"]], "wait_closed() (asyncio.stream method)": [[52, "asyncio.Stream.wait_closed"]], "wait_for() (in module asyncio)": [[52, "asyncio.wait_for"]], "wait_for_ms() (in module asyncio)": [[52, "asyncio.wait_for_ms"]], "write() (asyncio.stream method)": [[52, "asyncio.Stream.write"]], "a2b_base64() (in module binascii)": [[53, "binascii.a2b_base64"]], "b2a_base64() (in module binascii)": [[53, "binascii.b2a_base64"]], "binascii": [[53, "module-binascii"]], "hexlify() (in module binascii)": [[53, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[53, "binascii.unhexlify"]], "ble (class in bluetooth)": [[54, "bluetooth.BLE"]], "uuid (class in bluetooth)": [[54, "bluetooth.UUID"]], "active() (bluetooth.ble method)": [[54, "bluetooth.BLE.active"]], "bluetooth": [[54, "module-bluetooth"]], "config() (bluetooth.ble method)": [[54, "bluetooth.BLE.config"]], "gap_advertise() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_advertise"]], "gap_connect() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_connect"]], "gap_disconnect() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_disconnect"]], "gap_pair() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_pair"]], "gap_passkey() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_passkey"]], "gap_scan() (bluetooth.ble method)": [[54, "bluetooth.BLE.gap_scan"]], "gattc_discover_characteristics() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_discover_characteristics"]], "gattc_discover_descriptors() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_discover_descriptors"]], "gattc_discover_services() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_discover_services"]], "gattc_exchange_mtu() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_exchange_mtu"]], "gattc_read() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_read"]], "gattc_write() (bluetooth.ble method)": [[54, "bluetooth.BLE.gattc_write"]], "gatts_indicate() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_indicate"]], "gatts_notify() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_notify"]], "gatts_read() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_read"]], "gatts_register_services() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_register_services"]], "gatts_set_buffer() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_set_buffer"]], "gatts_write() (bluetooth.ble method)": [[54, "bluetooth.BLE.gatts_write"]], "irq() (bluetooth.ble method)": [[54, "bluetooth.BLE.irq"]], "l2cap_connect() (bluetooth.ble method)": [[54, "bluetooth.BLE.l2cap_connect"]], "l2cap_disconnect() (bluetooth.ble method)": [[54, "bluetooth.BLE.l2cap_disconnect"]], "l2cap_listen() (bluetooth.ble method)": [[54, "bluetooth.BLE.l2cap_listen"]], "l2cap_recvinto() (bluetooth.ble method)": [[54, "bluetooth.BLE.l2cap_recvinto"]], "l2cap_send() (bluetooth.ble method)": [[54, "bluetooth.BLE.l2cap_send"]], "desc (in module btree)": [[55, "btree.DESC"]], "incl (in module btree)": [[55, "btree.INCL"]], "__contains__() (btree.btree method)": [[55, "btree.btree.__contains__"]], "__delitem__() (btree.btree method)": [[55, "btree.btree.__delitem__"]], "__getitem__() (btree.btree method)": [[55, "btree.btree.__getitem__"]], "__iter__() (btree.btree method)": [[55, "btree.btree.__iter__"]], "__setitem__() (btree.btree method)": [[55, "btree.btree.__setitem__"]], "btree": [[55, "module-btree"]], "close() (btree.btree method)": [[55, "btree.btree.close"]], "flush() (btree.btree method)": [[55, "btree.btree.flush"]], "get() (btree.btree method)": [[55, "btree.btree.get"]], "items() (btree.btree method)": [[55, "btree.btree.items"]], "keys() (btree.btree method)": [[55, "btree.btree.keys"]], "open() (in module btree)": [[55, "btree.open"]], "values() (btree.btree method)": [[55, "btree.btree.values"]], "assertionerror": [[56, "AssertionError"]], "attributeerror": [[56, "AttributeError"]], "exception": [[56, "Exception"]], "importerror": [[56, "ImportError"]], "indexerror": [[56, "IndexError"]], "keyerror": [[56, "KeyError"]], "keyboardinterrupt": [[56, "KeyboardInterrupt"]], "memoryerror": [[56, "MemoryError"]], "nameerror": [[56, "NameError"]], "notimplementederror": [[56, "NotImplementedError"]], "oserror": [[56, "OSError"]], "runtimeerror": [[56, "RuntimeError"]], "stopiteration": [[56, "StopIteration"]], "syntaxerror": [[56, "SyntaxError"]], "systemexit": [[56, "SystemExit"]], "typeerror": [[56, "TypeError"]], "valueerror": [[56, "ValueError"]], "zerodivisionerror": [[56, "ZeroDivisionError"]], "abs()": [[56, "abs"]], "all()": [[56, "all"]], "any()": [[56, "any"]], "bin()": [[56, "bin"]], "bool (built-in class)": [[56, "bool"]], "built-in function": [[56, "abs"], [56, "all"], [56, "any"], [56, "bin"], [56, "callable"], [56, "chr"], [56, "classmethod"], [56, "compile"], [56, "delattr"], [56, "dir"], [56, "divmod"], [56, "enumerate"], [56, "eval"], [56, "exec"], [56, "filter"], [56, "getattr"], [56, "globals"], [56, "hasattr"], [56, "hash"], [56, "hex"], [56, "id"], [56, "input"], [56, "isinstance"], [56, "issubclass"], [56, "iter"], [56, "len"], [56, "locals"], [56, "map"], [56, "max"], [56, "min"], [56, "next"], [56, "oct"], [56, "open"], [56, "ord"], [56, "pow"], [56, "print"], [56, "property"], [56, "range"], [56, "repr"], [56, "reversed"], [56, "round"], [56, "setattr"], [56, "sorted"], [56, "staticmethod"], [56, "sum"], [56, "super"], [56, "type"], [56, "zip"], [233, "freeze"], [233, "freeze_as_mpy"], [233, "freeze_as_str"], [233, "freeze_mpy"], [233, "include"], [233, "metadata"], [233, "module"], [233, "package"], [233, "require"], [258, "main"], [258, "mkfs"], [258, "mount"], [258, "unmount"]], "bytearray (built-in class)": [[56, "bytearray"]], "bytes (built-in class)": [[56, "bytes"]], "callable()": [[56, "callable"]], "chr()": [[56, "chr"]], "classmethod()": [[56, "classmethod"]], "compile()": [[56, "compile"]], "complex (built-in class)": [[56, "complex"]], "delattr()": [[56, "delattr"]], "dict (built-in class)": [[56, "dict"]], "dir()": [[56, "dir"]], "divmod()": [[56, "divmod"]], "enumerate()": [[56, "enumerate"]], "eval()": [[56, "eval"]], "exec()": [[56, "exec"]], "filter()": [[56, "filter"]], "float (built-in class)": [[56, "float"]], "from_bytes() (int class method)": [[56, "int.from_bytes"]], "frozenset (built-in class)": [[56, "frozenset"]], "getattr()": [[56, "getattr"]], "globals()": [[56, "globals"]], "hasattr()": [[56, "hasattr"]], "hash()": [[56, "hash"]], "hex()": [[56, "hex"]], "id()": [[56, "id"]], "input()": [[56, "input"]], "int (built-in class)": [[56, "int"]], "isinstance()": [[56, "isinstance"]], "issubclass()": [[56, "issubclass"]], "iter()": [[56, "iter"]], "len()": [[56, "len"]], "list (built-in class)": [[56, "list"]], "locals()": [[56, "locals"]], "map()": [[56, "map"]], "max()": [[56, "max"]], "memoryview (built-in class)": [[56, "memoryview"]], "min()": [[56, "min"]], "next()": [[56, "next"]], "object (built-in class)": [[56, "object"]], "oct()": [[56, "oct"]], "open()": [[56, "open"]], "ord()": [[56, "ord"]], "pow()": [[56, "pow"]], "print()": [[56, "print"]], "property()": [[56, "property"]], "range()": [[56, "range"]], "repr()": [[56, "repr"]], "reversed()": [[56, "reversed"]], "round()": [[56, "round"]], "set (built-in class)": [[56, "set"]], "setattr()": [[56, "setattr"]], "slice (built-in class)": [[56, "slice"]], "sorted()": [[56, "sorted"]], "staticmethod()": [[56, "staticmethod"]], "str (built-in class)": [[56, "str"]], "sum()": [[56, "sum"]], "super()": [[56, "super"]], "to_bytes() (int method)": [[56, "int.to_bytes"]], "tuple (built-in class)": [[56, "tuple"]], "type()": [[56, "type"]], "zip()": [[56, "zip"]], "cmath": [[57, "module-cmath"]], "cos() (in module cmath)": [[57, "cmath.cos"]], "e (in module cmath)": [[57, "cmath.e"]], "exp() (in module cmath)": [[57, "cmath.exp"]], "log() (in module cmath)": [[57, "cmath.log"]], "log10() (in module cmath)": [[57, "cmath.log10"]], "phase() (in module cmath)": [[57, "cmath.phase"]], "pi (in module cmath)": [[57, "cmath.pi"]], "polar() (in module cmath)": [[57, "cmath.polar"]], "rect() (in module cmath)": [[57, "cmath.rect"]], "sin() (in module cmath)": [[57, "cmath.sin"]], "sqrt() (in module cmath)": [[57, "cmath.sqrt"]], "ordereddict (class in collections)": [[58, "collections.OrderedDict"]], "append() (collections.deque method)": [[58, "collections.deque.append"]], "collections": [[58, "module-collections"]], "deque (class in collections)": [[58, "collections.deque"]], "namedtuple() (in module collections)": [[58, "collections.namedtuple"]], "popleft() (collections.deque method)": [[58, "collections.deque.popleft"]], "__init__() (cryptolib.aes class method)": [[59, "cryptolib.aes.__init__"]], "aes (class in cryptolib)": [[59, "cryptolib.aes"]], "cryptolib": [[59, "module-cryptolib"]], "decrypt() (cryptolib.aes method)": [[59, "cryptolib.aes.decrypt"]], "encrypt() (cryptolib.aes method)": [[59, "cryptolib.aes.encrypt"]], "deflateio (class in deflate)": [[60, "deflate.DeflateIO"]], "deflate": [[60, "module-deflate"]], "deflate.auto (in module deflate)": [[60, "deflate.deflate.AUTO"]], "deflate.gzip (in module deflate)": [[60, "deflate.deflate.GZIP"]], "deflate.raw (in module deflate)": [[60, "deflate.deflate.RAW"]], "deflate.zlib (in module deflate)": [[60, "deflate.deflate.ZLIB"]], "errno": [[61, "module-errno"]], "errorcode (in module errno)": [[61, "errno.errorcode"]], "deepsleep() (in module esp)": [[62, "esp.deepsleep"]], "esp": [[62, "module-esp"]], "flash_erase() (in module esp)": [[62, "esp.flash_erase"]], "flash_id() (in module esp)": [[62, "esp.flash_id"]], "flash_read() (in module esp)": [[62, "esp.flash_read"]], "flash_size() (in module esp)": [[62, "esp.flash_size"]], "flash_user_start() (in module esp)": [[62, "esp.flash_user_start"]], "flash_write() (in module esp)": [[62, "esp.flash_write"]], "osdebug() (in module esp)": [[62, "esp.osdebug"]], "set_native_code_location() (in module esp)": [[62, "esp.set_native_code_location"]], "sleep_type() (in module esp)": [[62, "esp.sleep_type"]], "heap_data (in module esp32)": [[63, "esp32.HEAP_DATA"]], "heap_exec (in module esp32)": [[63, "esp32.HEAP_EXEC"]], "nvs (class in esp32)": [[63, "esp32.NVS"]], "partition (class in esp32)": [[63, "esp32.Partition"]], "partition.boot (in module esp32)": [[63, "esp32.Partition.BOOT"]], "partition.running (in module esp32)": [[63, "esp32.Partition.RUNNING"]], "partition.type_app (in module esp32)": [[63, "esp32.Partition.TYPE_APP"]], "partition.type_data (in module esp32)": [[63, "esp32.Partition.TYPE_DATA"]], "rmt (class in esp32)": [[63, "esp32.RMT"]], "rmt.pulse_max (in module esp32)": [[63, "esp32.RMT.PULSE_MAX"]], "ulp (class in esp32)": [[63, "esp32.ULP"]], "bitstream_channel() (esp32.rmt static method)": [[63, "esp32.RMT.bitstream_channel"]], "clock_div() (esp32.rmt method)": [[63, "esp32.RMT.clock_div"]], "commit() (esp32.nvs method)": [[63, "esp32.NVS.commit"]], "erase_key() (esp32.nvs method)": [[63, "esp32.NVS.erase_key"]], "esp32": [[63, "module-esp32"]], "esp32.wakeup_all_low (in module esp32)": [[63, "esp32.esp32.WAKEUP_ALL_LOW"]], "esp32.wakeup_any_high (in module esp32)": [[63, "esp32.esp32.WAKEUP_ANY_HIGH"]], "find() (esp32.partition class method)": [[63, "esp32.Partition.find"]], "get_blob() (esp32.nvs method)": [[63, "esp32.NVS.get_blob"]], "get_i32() (esp32.nvs method)": [[63, "esp32.NVS.get_i32"]], "get_next_update() (esp32.partition method)": [[63, "esp32.Partition.get_next_update"]], "gpio_deep_sleep_hold() (in module esp32)": [[63, "esp32.gpio_deep_sleep_hold"]], "idf_heap_info() (in module esp32)": [[63, "esp32.idf_heap_info"]], "info() (esp32.partition method)": [[63, "esp32.Partition.info"]], "ioctl() (esp32.partition method)": [[63, "esp32.Partition.ioctl"]], "load_binary() (esp32.ulp method)": [[63, "esp32.ULP.load_binary"]], "loop() (esp32.rmt method)": [[63, "esp32.RMT.loop"]], "mark_app_valid_cancel_rollback() (esp32.partition class method)": [[63, "esp32.Partition.mark_app_valid_cancel_rollback"]], "raw_temperature() (in module esp32)": [[63, "esp32.raw_temperature"]], "readblocks() (esp32.partition method)": [[63, "esp32.Partition.readblocks"]], "run() (esp32.ulp method)": [[63, "esp32.ULP.run"]], "set_blob() (esp32.nvs method)": [[63, "esp32.NVS.set_blob"]], "set_boot() (esp32.partition method)": [[63, "esp32.Partition.set_boot"]], "set_i32() (esp32.nvs method)": [[63, "esp32.NVS.set_i32"]], "set_wakeup_period() (esp32.ulp method)": [[63, "esp32.ULP.set_wakeup_period"]], "source_freq() (esp32.rmt class method)": [[63, "esp32.RMT.source_freq"]], "wait_done() (esp32.rmt method)": [[63, "esp32.RMT.wait_done"]], "wake_on_ext0() (in module esp32)": [[63, "esp32.wake_on_ext0"]], "wake_on_ext1() (in module esp32)": [[63, "esp32.wake_on_ext1"]], "wake_on_touch() (in module esp32)": [[63, "esp32.wake_on_touch"]], "wake_on_ulp() (in module esp32)": [[63, "esp32.wake_on_ulp"]], "write_pulses() (esp32.rmt method)": [[63, "esp32.RMT.write_pulses"]], "writeblocks() (esp32.partition method)": [[63, "esp32.Partition.writeblocks"]], "aioespnow (class in aioespnow)": [[64, "aioespnow.AIOESPNow"]], "espnow (class in espnow)": [[64, "espnow.ESPNow"]], "espnow.peers_table (in module espnow)": [[64, "espnow.ESPNow.peers_table"]], "_aiter__() (aioespnow.aioespnow method)": [[64, "aioespnow.AIOESPNow._aiter__"]], "active() (espnow.espnow method)": [[64, "espnow.ESPNow.active"]], "add_peer() (espnow.espnow method)": [[64, "espnow.ESPNow.add_peer"]], "aioespnow": [[64, "module-aioespnow"]], "any() (espnow.espnow method)": [[64, "espnow.ESPNow.any"]], "config() (espnow.espnow method)": [[64, "espnow.ESPNow.config"]], "del_peer() (espnow.espnow method)": [[64, "espnow.ESPNow.del_peer"]], "espnow": [[64, "module-espnow"]], "espnow.addr_len (in module espnow)": [[64, "espnow.espnow.ADDR_LEN"]], "espnow.key_len (in module espnow)": [[64, "espnow.espnow.KEY_LEN"]], "espnow.max_data_len (in module espnow)": [[64, "espnow.espnow.MAX_DATA_LEN"]], "espnow.max_encrypt_peer_num (in module espnow)": [[64, "espnow.espnow.MAX_ENCRYPT_PEER_NUM"]], "espnow.max_total_peer_num (in module espnow)": [[64, "espnow.espnow.MAX_TOTAL_PEER_NUM"]], "get_peer() (espnow.espnow method)": [[64, "espnow.ESPNow.get_peer"]], "get_peers() (espnow.espnow method)": [[64, "espnow.ESPNow.get_peers"]], "irecv() (espnow.espnow method)": [[64, "espnow.ESPNow.irecv"]], "irq() (espnow.espnow method)": [[64, "espnow.ESPNow.irq"]], "mod_peer() (espnow.espnow method)": [[64, "espnow.ESPNow.mod_peer"]], "peer_count() (espnow.espnow method)": [[64, "espnow.ESPNow.peer_count"]], "recv() (espnow.espnow method)": [[64, "espnow.ESPNow.recv"]], "recvinto() (espnow.espnow method)": [[64, "espnow.ESPNow.recvinto"]], "send() (espnow.espnow method)": [[64, "espnow.ESPNow.send"]], "set_pmk() (espnow.espnow method)": [[64, "espnow.ESPNow.set_pmk"]], "stats() (espnow.espnow method)": [[64, "espnow.ESPNow.stats"]], "framebuffer (class in framebuf)": [[65, "framebuf.FrameBuffer"]], "blit() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.blit"]], "ellipse() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.ellipse"]], "fill() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.fill"]], "framebuf": [[65, "module-framebuf"]], "framebuf.gs2_hmsb (in module framebuf)": [[65, "framebuf.framebuf.GS2_HMSB"]], "framebuf.gs4_hmsb (in module framebuf)": [[65, "framebuf.framebuf.GS4_HMSB"]], "framebuf.gs8 (in module framebuf)": [[65, "framebuf.framebuf.GS8"]], "framebuf.mono_hlsb (in module framebuf)": [[65, "framebuf.framebuf.MONO_HLSB"]], "framebuf.mono_hmsb (in module framebuf)": [[65, "framebuf.framebuf.MONO_HMSB"]], "framebuf.mono_vlsb (in module framebuf)": [[65, "framebuf.framebuf.MONO_VLSB"]], "framebuf.rgb565 (in module framebuf)": [[65, "framebuf.framebuf.RGB565"]], "hline() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.hline"]], "line() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.line"]], "pixel() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.pixel"]], "poly() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.poly"]], "rect() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.rect"]], "scroll() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.scroll"]], "text() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.text"]], "vline() (framebuf.framebuffer method)": [[65, "framebuf.FrameBuffer.vline"]], "collect() (in module gc)": [[66, "gc.collect"]], "disable() (in module gc)": [[66, "gc.disable"]], "enable() (in module gc)": [[66, "gc.enable"]], "gc": [[66, "module-gc"]], "mem_alloc() (in module gc)": [[66, "gc.mem_alloc"]], "mem_free() (in module gc)": [[66, "gc.mem_free"]], "threshold() (in module gc)": [[66, "gc.threshold"]], "gzipfile (class in gzip)": [[67, "gzip.GzipFile"]], "compress() (in module gzip)": [[67, "gzip.compress"]], "decompress() (in module gzip)": [[67, "gzip.decompress"]], "gzip": [[67, "module-gzip"]], "open() (in module gzip)": [[67, "gzip.open"]], "digest() (hashlib.hash method)": [[68, "hashlib.hash.digest"]], "hashlib": [[68, "module-hashlib"]], "hashlib.md5 (class in hashlib)": [[68, "hashlib.hashlib.md5"]], "hashlib.sha1 (class in hashlib)": [[68, "hashlib.hashlib.sha1"]], "hashlib.sha256 (class in hashlib)": [[68, "hashlib.hashlib.sha256"]], "hexdigest() (hashlib.hash method)": [[68, "hashlib.hash.hexdigest"]], "update() (hashlib.hash method)": [[68, "hashlib.hash.update"]], "heapify() (in module heapq)": [[69, "heapq.heapify"]], "heappop() (in module heapq)": [[69, "heapq.heappop"]], "heappush() (in module heapq)": [[69, "heapq.heappush"]], "heapq": [[69, "module-heapq"]], "bno055": [[70, "module-bno055"]], "lsm6dsox": [[70, "module-lsm6dsox"]], "modbus": [[70, "module-modbus"]], "mqtt": [[70, "module-mqtt"]], "pid": [[70, "module-pid"]], "ssd1306": [[70, "module-ssd1306"]], "tb6612": [[70, "module-tb6612"]], "ulab": [[70, "module-ulab"]], "vl53l1x": [[70, "module-vl53l1x"]], "bytesio (class in io)": [[71, "io.BytesIO"]], "stringio (class in io)": [[71, "io.StringIO"]], "getvalue() (io.bytesio method)": [[71, "io.BytesIO.getvalue"]], "io": [[71, "module-io"]], "open() (in module io)": [[71, "io.open"]], "dump() (in module json)": [[72, "json.dump"]], "dumps() (in module json)": [[72, "json.dumps"]], "json": [[72, "module-json"]], "load() (in module json)": [[72, "json.load"]], "loads() (in module json)": [[72, "json.loads"]], "lcd160cr (class in lcd160cr)": [[73, "lcd160cr.LCD160CR"]], "lcd160cr.h (in module lcd160cr)": [[73, "lcd160cr.LCD160CR.h"]], "lcd160cr.w (in module lcd160cr)": [[73, "lcd160cr.LCD160CR.w"]], "dot() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.dot"]], "dot_no_clip() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.dot_no_clip"]], "erase() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.erase"]], "fast_spi() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.fast_spi"]], "feed_wdt() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.feed_wdt"]], "get_line() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.get_line"]], "get_pixel() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.get_pixel"]], "get_touch() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.get_touch"]], "is_touched() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.is_touched"]], "jpeg() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.jpeg"]], "jpeg_data() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.jpeg_data"]], "jpeg_start() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.jpeg_start"]], "lcd160cr": [[73, "module-lcd160cr"]], "lcd160cr.landscape (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.LANDSCAPE"]], "lcd160cr.landscape_upsidedown (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.LANDSCAPE_UPSIDEDOWN"]], "lcd160cr.portrait (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.PORTRAIT"]], "lcd160cr.portrait_upsidedown (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.PORTRAIT_UPSIDEDOWN"]], "lcd160cr.startup_deco_info (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.STARTUP_DECO_INFO"]], "lcd160cr.startup_deco_mlogo (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.STARTUP_DECO_MLOGO"]], "lcd160cr.startup_deco_none (in module lcd160cr)": [[73, "lcd160cr.lcd160cr.STARTUP_DECO_NONE"]], "line() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.line"]], "line_no_clip() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.line_no_clip"]], "poly_dot() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.poly_dot"]], "poly_line() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.poly_line"]], "rect() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect"]], "rect_interior() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect_interior"]], "rect_interior_no_clip() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect_interior_no_clip"]], "rect_no_clip() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect_no_clip"]], "rect_outline() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect_outline"]], "rect_outline_no_clip() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.rect_outline_no_clip"]], "reset() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.reset"]], "rgb() (lcd160cr.lcd160cr static method)": [[73, "lcd160cr.LCD160CR.rgb"]], "save_to_flash() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.save_to_flash"]], "screen_dump() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.screen_dump"]], "screen_load() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.screen_load"]], "set_brightness() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_brightness"]], "set_font() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_font"]], "set_i2c_addr() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_i2c_addr"]], "set_orient() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_orient"]], "set_pen() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_pen"]], "set_pixel() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_pixel"]], "set_pos() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_pos"]], "set_power() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_power"]], "set_scroll() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_scroll"]], "set_scroll_buf() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_scroll_buf"]], "set_scroll_win() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_scroll_win"]], "set_scroll_win_param() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_scroll_win_param"]], "set_spi_win() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_spi_win"]], "set_startup_deco() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_startup_deco"]], "set_text_color() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_text_color"]], "set_uart_baudrate() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.set_uart_baudrate"]], "show_framebuf() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.show_framebuf"]], "touch_config() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.touch_config"]], "write() (lcd160cr.lcd160cr method)": [[73, "lcd160cr.LCD160CR.write"]], "bitstream() (in module machine)": [[74, "machine.bitstream"]], "bootloader() (in module machine)": [[74, "machine.bootloader"]], "deepsleep() (in module machine)": [[74, "machine.deepsleep"]], "disable_irq() (in module machine)": [[74, "machine.disable_irq"]], "enable_irq() (in module machine)": [[74, "machine.enable_irq"]], "freq() (in module machine)": [[74, "machine.freq"]], "idle() (in module machine)": [[74, "machine.idle"]], "lightsleep() (in module machine)": [[74, "machine.lightsleep"]], "machine": [[74, "module-machine"]], "machine.deepsleep (in module machine)": [[74, "machine.machine.DEEPSLEEP"]], "machine.deepsleep_reset (in module machine)": [[74, "machine.machine.DEEPSLEEP_RESET"]], "machine.hard_reset (in module machine)": [[74, "machine.machine.HARD_RESET"]], "machine.idle (in module machine)": [[74, "machine.machine.IDLE"]], "machine.pin_wake (in module machine)": [[74, "machine.machine.PIN_WAKE"]], "machine.pwron_reset (in module machine)": [[74, "machine.machine.PWRON_RESET"]], "machine.rtc_wake (in module machine)": [[74, "machine.machine.RTC_WAKE"]], "machine.sleep (in module machine)": [[74, "machine.machine.SLEEP"]], "machine.soft_reset (in module machine)": [[74, "machine.machine.SOFT_RESET"]], "machine.wdt_reset (in module machine)": [[74, "machine.machine.WDT_RESET"]], "machine.wlan_wake (in module machine)": [[74, "machine.machine.WLAN_WAKE"]], "mem16 (in module machine)": [[74, "machine.mem16"]], "mem32 (in module machine)": [[74, "machine.mem32"]], "mem8 (in module machine)": [[74, "machine.mem8"]], "reset() (in module machine)": [[74, "machine.reset"]], "reset_cause() (in module machine)": [[74, "machine.reset_cause"]], "sleep() (in module machine)": [[74, "machine.sleep"]], "soft_reset() (in module machine)": [[74, "machine.soft_reset"]], "time_pulse_us() (in module machine)": [[74, "machine.time_pulse_us"]], "unique_id() (in module machine)": [[74, "machine.unique_id"]], "adc (class in machine)": [[75, "machine.ADC"]], "block() (machine.adc method)": [[75, "machine.ADC.block"]], "init() (machine.adc method)": [[75, "machine.ADC.init"]], "read_u16() (machine.adc method)": [[75, "machine.ADC.read_u16"]], "read_uv() (machine.adc method)": [[75, "machine.ADC.read_uv"]], "adcblock (class in machine)": [[76, "machine.ADCBlock"]], "connect() (machine.adcblock method)": [[76, "machine.ADCBlock.connect"]], "init() (machine.adcblock method)": [[76, "machine.ADCBlock.init"]], "adcwipy (class in machine)": [[77, "machine.ADCWiPy"]], "adcchannel() (in module machine)": [[77, "machine.adcchannel"]], "channel() (machine.adcwipy method)": [[77, "machine.ADCWiPy.channel"]], "deinit() (machine.adcwipy method)": [[77, "machine.ADCWiPy.deinit"]], "deinit() (machine.adcchannel method)": [[77, "machine.adcchannel.deinit"]], "init() (machine.adcwipy method)": [[77, "machine.ADCWiPy.init"]], "init() (machine.adcchannel method)": [[77, "machine.adcchannel.init"]], "value() (machine.adcchannel method)": [[77, "machine.adcchannel.value"]], "can (class in machine)": [[78, "machine.CAN"]], "can.bus_off (in module machine)": [[78, "machine.CAN.BUS_OFF"]], "can.dual (in module machine)": [[78, "machine.CAN.DUAL"]], "can.error_active (in module machine)": [[78, "machine.CAN.ERROR_ACTIVE"]], "can.error_passive (in module machine)": [[78, "machine.CAN.ERROR_PASSIVE"]], "can.error_warning (in module machine)": [[78, "machine.CAN.ERROR_WARNING"]], "can.list32 (in module machine)": [[78, "machine.CAN.LIST32"]], "can.loopback (in module machine)": [[78, "machine.CAN.LOOPBACK"]], "can.normal (in module machine)": [[78, "machine.CAN.NORMAL"]], "can.silent (in module machine)": [[78, "machine.CAN.SILENT"]], "can.silent_loopback (in module machine)": [[78, "machine.CAN.SILENT_LOOPBACK"]], "can.stopped (in module machine)": [[78, "machine.CAN.STOPPED"]], "any() (machine.can method)": [[78, "machine.CAN.any"]], "clearfilter() (machine.can method)": [[78, "machine.CAN.clearfilter"]], "deinit() (machine.can method)": [[78, "machine.CAN.deinit"]], "info() (machine.can method)": [[78, "machine.CAN.info"]], "init() (machine.can method)": [[78, "machine.CAN.init"]], "recv() (machine.can method)": [[78, "machine.CAN.recv"]], "restart() (machine.can method)": [[78, "machine.CAN.restart"]], "rxcallback() (machine.can method)": [[78, "machine.CAN.rxcallback"]], "send() (machine.can method)": [[78, "machine.CAN.send"]], "setfilter() (machine.can method)": [[78, "machine.CAN.setfilter"]], "state() (machine.can method)": [[78, "machine.CAN.state"]], "i2c (class in machine)": [[79, "machine.I2C"]], "softi2c (class in machine)": [[79, "machine.SoftI2C"]], "deinit() (machine.i2c method)": [[79, "machine.I2C.deinit"]], "init() (machine.i2c method)": [[79, "machine.I2C.init"]], "readfrom() (machine.i2c method)": [[79, "machine.I2C.readfrom"]], "readfrom_into() (machine.i2c method)": [[79, "machine.I2C.readfrom_into"]], "readfrom_mem() (machine.i2c method)": [[79, "machine.I2C.readfrom_mem"]], "readfrom_mem_into() (machine.i2c method)": [[79, "machine.I2C.readfrom_mem_into"]], "readinto() (machine.i2c method)": [[79, "machine.I2C.readinto"]], "scan() (machine.i2c method)": [[79, "machine.I2C.scan"]], "start() (machine.i2c method)": [[79, "machine.I2C.start"]], "stop() (machine.i2c method)": [[79, "machine.I2C.stop"]], "write() (machine.i2c method)": [[79, "machine.I2C.write"]], "writeto() (machine.i2c method)": [[79, "machine.I2C.writeto"]], "writeto_mem() (machine.i2c method)": [[79, "machine.I2C.writeto_mem"]], "writevto() (machine.i2c method)": [[79, "machine.I2C.writevto"]], "i2s (class in machine)": [[80, "machine.I2S"]], "i2s.mono (in module machine)": [[80, "machine.I2S.MONO"]], "i2s.rx (in module machine)": [[80, "machine.I2S.RX"]], "i2s.stereo (in module machine)": [[80, "machine.I2S.STEREO"]], "i2s.tx (in module machine)": [[80, "machine.I2S.TX"]], "deinit() (machine.i2s method)": [[80, "machine.I2S.deinit"]], "init() (machine.i2s method)": [[80, "machine.I2S.init"]], "irq() (machine.i2s method)": [[80, "machine.I2S.irq"]], "readinto() (machine.i2s method)": [[80, "machine.I2S.readinto"]], "shift() (machine.i2s static method)": [[80, "machine.I2S.shift"]], "write() (machine.i2s method)": [[80, "machine.I2S.write"]], "pwm (class in machine)": [[81, "machine.PWM"]], "deinit() (machine.pwm method)": [[81, "machine.PWM.deinit"]], "duty_ns() (machine.pwm method)": [[81, "machine.PWM.duty_ns"]], "duty_u16() (machine.pwm method)": [[81, "machine.PWM.duty_u16"]], "freq() (machine.pwm method)": [[81, "machine.PWM.freq"]], "init() (machine.pwm method)": [[81, "machine.PWM.init"]], "pin (class in machine)": [[82, "machine.Pin"]], "pin.alt (in module machine)": [[82, "machine.Pin.ALT"]], "pin.alt_open_drain (in module machine)": [[82, "machine.Pin.ALT_OPEN_DRAIN"]], "pin.analog (in module machine)": [[82, "machine.Pin.ANALOG"]], "pin.drive_0 (in module machine)": [[82, "machine.Pin.DRIVE_0"]], "pin.drive_1 (in module machine)": [[82, "machine.Pin.DRIVE_1"]], "pin.drive_2 (in module machine)": [[82, "machine.Pin.DRIVE_2"]], "pin.in (in module machine)": [[82, "machine.Pin.IN"]], "pin.irq_falling (in module machine)": [[82, "machine.Pin.IRQ_FALLING"]], "pin.irq_high_level (in module machine)": [[82, "machine.Pin.IRQ_HIGH_LEVEL"]], "pin.irq_low_level (in module machine)": [[82, "machine.Pin.IRQ_LOW_LEVEL"]], "pin.irq_rising (in module machine)": [[82, "machine.Pin.IRQ_RISING"]], "pin.open_drain (in module machine)": [[82, "machine.Pin.OPEN_DRAIN"]], "pin.out (in module machine)": [[82, "machine.Pin.OUT"]], "pin.pull_down (in module machine)": [[82, "machine.Pin.PULL_DOWN"]], "pin.pull_hold (in module machine)": [[82, "machine.Pin.PULL_HOLD"]], "pin.pull_up (in module machine)": [[82, "machine.Pin.PULL_UP"]], "__call__() (machine.pin method)": [[82, "machine.Pin.__call__"]], "drive() (machine.pin method)": [[82, "machine.Pin.drive"]], "high() (machine.pin method)": [[82, "machine.Pin.high"]], "init() (machine.pin method)": [[82, "machine.Pin.init"]], "irq() (machine.pin method)": [[82, "machine.Pin.irq"]], "low() (machine.pin method)": [[82, "machine.Pin.low"]], "mode() (machine.pin method)": [[82, "machine.Pin.mode"]], "off() (machine.pin method)": [[82, "machine.Pin.off"]], "on() (machine.pin method)": [[82, "machine.Pin.on"]], "pull() (machine.pin method)": [[82, "machine.Pin.pull"]], "value() (machine.pin method)": [[82, "machine.Pin.value"]], "rtc (class in machine)": [[83, "machine.RTC"]], "rtc.alarm0 (in module machine)": [[83, "machine.RTC.ALARM0"]], "alarm() (machine.rtc method)": [[83, "machine.RTC.alarm"]], "alarm_left() (machine.rtc method)": [[83, "machine.RTC.alarm_left"]], "cancel() (machine.rtc method)": [[83, "machine.RTC.cancel"]], "datetime() (machine.rtc method)": [[83, "machine.RTC.datetime"]], "deinit() (machine.rtc method)": [[83, "machine.RTC.deinit"]], "init() (machine.rtc method)": [[83, "machine.RTC.init"]], "irq() (machine.rtc method)": [[83, "machine.RTC.irq"]], "now() (machine.rtc method)": [[83, "machine.RTC.now"]], "sd (class in machine)": [[84, "machine.SD"]], "deinit() (machine.sd method)": [[84, "machine.SD.deinit"]], "init() (machine.sd method)": [[84, "machine.SD.init"]], "sdcard (class in machine)": [[85, "machine.SDCard"]], "spi (class in machine)": [[86, "machine.SPI"]], "spi.controller (in module machine)": [[86, "machine.SPI.CONTROLLER"]], "spi.lsb (in module machine)": [[86, "machine.SPI.LSB"]], "spi.msb (in module machine)": [[86, "machine.SPI.MSB"]], "softspi (class in machine)": [[86, "machine.SoftSPI"]], "softspi.lsb (in module machine)": [[86, "machine.SoftSPI.LSB"]], "softspi.msb (in module machine)": [[86, "machine.SoftSPI.MSB"]], "deinit() (machine.spi method)": [[86, "machine.SPI.deinit"]], "init() (machine.spi method)": [[86, "machine.SPI.init"]], "read() (machine.spi method)": [[86, "machine.SPI.read"]], "readinto() (machine.spi method)": [[86, "machine.SPI.readinto"]], "write() (machine.spi method)": [[86, "machine.SPI.write"]], "write_readinto() (machine.spi method)": [[86, "machine.SPI.write_readinto"]], "signal (class in machine)": [[87, "machine.Signal"]], "off() (machine.signal method)": [[87, "machine.Signal.off"]], "on() (machine.signal method)": [[87, "machine.Signal.on"]], "value() (machine.signal method)": [[87, "machine.Signal.value"]], "timer (class in machine)": [[88, "machine.Timer"]], "timer.one_shot (in module machine)": [[88, "machine.Timer.ONE_SHOT"]], "timer.periodic (in module machine)": [[88, "machine.Timer.PERIODIC"]], "deinit() (machine.timer method)": [[88, "machine.Timer.deinit"]], "init() (machine.timer method)": [[88, "machine.Timer.init"]], "timerwipy (class in machine)": [[89, "machine.TimerWiPy"]], "timerwipy.one_shot (in module machine)": [[89, "machine.TimerWiPy.ONE_SHOT"]], "timerwipy.periodic (in module machine)": [[89, "machine.TimerWiPy.PERIODIC"]], "channel() (machine.timerwipy method)": [[89, "machine.TimerWiPy.channel"]], "deinit() (machine.timerwipy method)": [[89, "machine.TimerWiPy.deinit"]], "duty_cycle() (machine.timerchannel method)": [[89, "machine.timerchannel.duty_cycle"]], "freq() (machine.timerchannel method)": [[89, "machine.timerchannel.freq"]], "init() (machine.timerwipy method)": [[89, "machine.TimerWiPy.init"]], "irq() (machine.timerchannel method)": [[89, "machine.timerchannel.irq"]], "period() (machine.timerchannel method)": [[89, "machine.timerchannel.period"]], "uart (class in machine)": [[90, "machine.UART"]], "uart.rx_any (in module machine)": [[90, "machine.UART.RX_ANY"]], "any() (machine.uart method)": [[90, "machine.UART.any"]], "deinit() (machine.uart method)": [[90, "machine.UART.deinit"]], "flush() (machine.uart method)": [[90, "machine.UART.flush"]], "init() (machine.uart method)": [[90, "machine.UART.init"]], "read() (machine.uart method)": [[90, "machine.UART.read"]], "readinto() (machine.uart method)": [[90, "machine.UART.readinto"]], "readline() (machine.uart method)": [[90, "machine.UART.readline"]], "sendbreak() (machine.uart method)": [[90, "machine.UART.sendbreak"]], "txdone() (machine.uart method)": [[90, "machine.UART.txdone"]], "write() (machine.uart method)": [[90, "machine.UART.write"]], "wdt (class in machine)": [[91, "machine.WDT"]], "feed() (machine.wdt method)": [[91, "machine.WDT.feed"]], "acos() (in module math)": [[92, "math.acos"]], "acosh() (in module math)": [[92, "math.acosh"]], "asin() (in module math)": [[92, "math.asin"]], "asinh() (in module math)": [[92, "math.asinh"]], "atan() (in module math)": [[92, "math.atan"]], "atan2() (in module math)": [[92, "math.atan2"]], "atanh() (in module math)": [[92, "math.atanh"]], "ceil() (in module math)": [[92, "math.ceil"]], "copysign() (in module math)": [[92, "math.copysign"]], "cos() (in module math)": [[92, "math.cos"]], "cosh() (in module math)": [[92, "math.cosh"]], "degrees() (in module math)": [[92, "math.degrees"]], "e (in module math)": [[92, "math.e"]], "erf() (in module math)": [[92, "math.erf"]], "erfc() (in module math)": [[92, "math.erfc"]], "exp() (in module math)": [[92, "math.exp"]], "expm1() (in module math)": [[92, "math.expm1"]], "fabs() (in module math)": [[92, "math.fabs"]], "floor() (in module math)": [[92, "math.floor"]], "fmod() (in module math)": [[92, "math.fmod"]], "frexp() (in module math)": [[92, "math.frexp"]], "gamma() (in module math)": [[92, "math.gamma"]], "isfinite() (in module math)": [[92, "math.isfinite"]], "isinf() (in module math)": [[92, "math.isinf"]], "isnan() (in module math)": [[92, "math.isnan"]], "ldexp() (in module math)": [[92, "math.ldexp"]], "lgamma() (in module math)": [[92, "math.lgamma"]], "log() (in module math)": [[92, "math.log"]], "log10() (in module math)": [[92, "math.log10"]], "log2() (in module math)": [[92, "math.log2"]], "math": [[92, "module-math"]], "modf() (in module math)": [[92, "math.modf"]], "pi (in module math)": [[92, "math.pi"]], "pow() (in module math)": [[92, "math.pow"]], "radians() (in module math)": [[92, "math.radians"]], "sin() (in module math)": [[92, "math.sin"]], "sinh() (in module math)": [[92, "math.sinh"]], "sqrt() (in module math)": [[92, "math.sqrt"]], "tan() (in module math)": [[92, "math.tan"]], "tanh() (in module math)": [[92, "math.tanh"]], "trunc() (in module math)": [[92, "math.trunc"]], "alloc_emergency_exception_buf() (in module micropython)": [[93, "micropython.alloc_emergency_exception_buf"]], "const() (in module micropython)": [[93, "micropython.const"]], "heap_lock() (in module micropython)": [[93, "micropython.heap_lock"]], "heap_locked() (in module micropython)": [[93, "micropython.heap_locked"]], "heap_unlock() (in module micropython)": [[93, "micropython.heap_unlock"]], "kbd_intr() (in module micropython)": [[93, "micropython.kbd_intr"]], "mem_info() (in module micropython)": [[93, "micropython.mem_info"]], "micropython": [[93, "module-micropython"]], "opt_level() (in module micropython)": [[93, "micropython.opt_level"]], "qstr_info() (in module micropython)": [[93, "micropython.qstr_info"]], "schedule() (in module micropython)": [[93, "micropython.schedule"]], "stack_use() (in module micropython)": [[93, "micropython.stack_use"]], "mutex (class in mutex)": [[94, "mutex.Mutex"]], "mutex": [[94, "module-mutex"]], "release() (mutex.mutex method)": [[94, "mutex.Mutex.release"]], "test() (mutex.mutex method)": [[94, "mutex.Mutex.test"]], "neopixel (class in neopixel)": [[95, "neopixel.NeoPixel"]], "__getitem__() (neopixel.neopixel method)": [[95, "neopixel.NeoPixel.__getitem__"]], "__len__() (neopixel.neopixel method)": [[95, "neopixel.NeoPixel.__len__"]], "__setitem__() (neopixel.neopixel method)": [[95, "neopixel.NeoPixel.__setitem__"]], "fill() (neopixel.neopixel method)": [[95, "neopixel.NeoPixel.fill"]], "neopixel": [[95, "module-neopixel"]], "write() (neopixel.neopixel method)": [[95, "neopixel.NeoPixel.write"]], "abstractnic (class in network)": [[96, "network.AbstractNIC"]], "active() (network.abstractnic method)": [[96, "network.AbstractNIC.active"]], "config() (network.abstractnic method)": [[96, "network.AbstractNIC.config"]], "connect() (network.abstractnic method)": [[96, "network.AbstractNIC.connect"]], "country() (in module network)": [[96, "network.country"]], "disconnect() (network.abstractnic method)": [[96, "network.AbstractNIC.disconnect"]], "hostname() (in module network)": [[96, "network.hostname"]], "ifconfig() (network.abstractnic method)": [[96, "network.AbstractNIC.ifconfig"]], "isconnected() (network.abstractnic method)": [[96, "network.AbstractNIC.isconnected"]], "network": [[96, "module-network"]], "phy_mode() (in module network)": [[96, "network.phy_mode"]], "scan() (network.abstractnic method)": [[96, "network.AbstractNIC.scan"]], "status() (network.abstractnic method)": [[96, "network.AbstractNIC.status"]], "lan (class in network)": [[97, "network.LAN"]], "active() (network.lan method)": [[97, "network.LAN.active"]], "config() (network.lan method)": [[97, "network.LAN.config"]], "ifconfig() (network.lan method)": [[97, "network.LAN.ifconfig"]], "isconnected() (network.lan method)": [[97, "network.LAN.isconnected"]], "status() (network.lan method)": [[97, "network.LAN.status"]], "winc (class in network)": [[98, "network.WINC"]], "winc.802_1x (in module network)": [[98, "network.WINC.802_1X"]], "winc.mode_ap (in module network)": [[98, "network.WINC.MODE_AP"]], "winc.mode_bsp (in module network)": [[98, "network.WINC.MODE_BSP"]], "winc.mode_firmware (in module network)": [[98, "network.WINC.MODE_FIRMWARE"]], "winc.mode_p2p (in module network)": [[98, "network.WINC.MODE_P2P"]], "winc.mode_sta (in module network)": [[98, "network.WINC.MODE_STA"]], "winc.open (in module network)": [[98, "network.WINC.OPEN"]], "winc.wpa_psk (in module network)": [[98, "network.WINC.WPA_PSK"]], "active() (network.winc method)": [[98, "network.WINC.active"]], "connect() (network.winc method)": [[98, "network.WINC.connect"]], "connected_sta() (network.winc method)": [[98, "network.WINC.connected_sta"]], "disconnect() (network.winc method)": [[98, "network.WINC.disconnect"]], "fw_dump() (network.winc method)": [[98, "network.WINC.fw_dump"]], "fw_update() (network.winc method)": [[98, "network.WINC.fw_update"]], "fw_version() (network.winc method)": [[98, "network.WINC.fw_version"]], "ifconfig() (network.winc method)": [[98, "network.WINC.ifconfig"]], "isconnected() (network.winc method)": [[98, "network.WINC.isconnected"]], "netinfo() (network.winc method)": [[98, "network.WINC.netinfo"]], "rssi() (network.winc method)": [[98, "network.WINC.rssi"]], "scan() (network.winc method)": [[98, "network.WINC.scan"]], "start_ap() (network.winc method)": [[98, "network.WINC.start_ap"]], "wait_for_sta() (network.winc method)": [[98, "network.WINC.wait_for_sta"]], "wiznet5k (class in network)": [[99, "network.WIZNET5K"]], "ifconfig() (network.wiznet5k method)": [[99, "network.WIZNET5K.ifconfig"]], "isconnected() (network.wiznet5k method)": [[99, "network.WIZNET5K.isconnected"]], "regs() (network.wiznet5k method)": [[99, "network.WIZNET5K.regs"]], "wlan (class in network)": [[100, "network.WLAN"]], "wlan.pm_none (in module network)": [[100, "network.WLAN.PM_NONE"]], "wlan.pm_performance (in module network)": [[100, "network.WLAN.PM_PERFORMANCE"]], "wlan.pm_powersave (in module network)": [[100, "network.WLAN.PM_POWERSAVE"]], "active() (network.wlan method)": [[100, "network.WLAN.active"]], "config() (network.wlan method)": [[100, "network.WLAN.config"]], "connect() (network.wlan method)": [[100, "network.WLAN.connect"]], "disconnect() (network.wlan method)": [[100, "network.WLAN.disconnect"]], "ifconfig() (network.wlan method)": [[100, "network.WLAN.ifconfig"]], "isconnected() (network.wlan method)": [[100, "network.WLAN.isconnected"]], "scan() (network.wlan method)": [[100, "network.WLAN.scan"]], "status() (network.wlan method)": [[100, "network.WLAN.status"]], "wlanwipy (class in network)": [[101, "network.WLANWiPy"]], "wlanwipy.ap (in module network)": [[101, "network.WLANWiPy.AP"]], "wlanwipy.ext_ant (in module network)": [[101, "network.WLANWiPy.EXT_ANT"]], "wlanwipy.int_ant (in module network)": [[101, "network.WLANWiPy.INT_ANT"]], "wlanwipy.sta (in module network)": [[101, "network.WLANWiPy.STA"]], "wlanwipy.wep (in module network)": [[101, "network.WLANWiPy.WEP"]], "wlanwipy.wpa (in module network)": [[101, "network.WLANWiPy.WPA"]], "wlanwipy.wpa2 (in module network)": [[101, "network.WLANWiPy.WPA2"]], "antenna() (network.wlanwipy method)": [[101, "network.WLANWiPy.antenna"]], "auth() (network.wlanwipy method)": [[101, "network.WLANWiPy.auth"]], "channel() (network.wlanwipy method)": [[101, "network.WLANWiPy.channel"]], "connect() (network.wlanwipy method)": [[101, "network.WLANWiPy.connect"]], "disconnect() (network.wlanwipy method)": [[101, "network.WLANWiPy.disconnect"]], "ifconfig() (network.wlanwipy method)": [[101, "network.WLANWiPy.ifconfig"]], "init() (network.wlanwipy method)": [[101, "network.WLANWiPy.init"]], "irq() (network.wlanwipy method)": [[101, "network.WLANWiPy.irq"]], "isconnected() (network.wlanwipy method)": [[101, "network.WLANWiPy.isconnected"]], "mac() (network.wlanwipy method)": [[101, "network.WLANWiPy.mac"]], "mode() (network.wlanwipy method)": [[101, "network.WLANWiPy.mode"]], "scan() (network.wlanwipy method)": [[101, "network.WLANWiPy.scan"]], "ssid() (network.wlanwipy method)": [[101, "network.WLANWiPy.ssid"]], "audio": [[102, "module-audio"]], "deint() (in module audio)": [[102, "audio.deint"]], "init() (in module audio)": [[102, "audio.init"]], "start_streaming() (in module audio)": [[102, "audio.start_streaming"]], "stop_streaming() (in module audio)": [[102, "audio.stop_streaming"]], "resonant_freq (in module buzzer)": [[103, "buzzer.RESONANT_FREQ"]], "buzzer": [[103, "module-buzzer"]], "duty() (in module buzzer)": [[103, "buzzer.duty"]], "freq() (in module buzzer)": [[103, "buzzer.freq"]], "cpufreq": [[104, "module-cpufreq"]], "get_current_frequencies() (in module cpufreq)": [[104, "cpufreq.get_current_frequencies"]], "get_supported_frequencies() (in module cpufreq)": [[104, "cpufreq.get_supported_frequencies"]], "set_frequency() (in module cpufreq)": [[104, "cpufreq.set_frequency"]], "fhd (in module display)": [[105, "display.FHD"]], "fhvga (in module display)": [[105, "display.FHVGA"]], "fhvga2 (in module display)": [[105, "display.FHVGA2"]], "fwvga (in module display)": [[105, "display.FWVGA"]], "fwvga2 (in module display)": [[105, "display.FWVGA2"]], "hd (in module display)": [[105, "display.HD"]], "qvga (in module display)": [[105, "display.QVGA"]], "svga (in module display)": [[105, "display.SVGA"]], "sxga (in module display)": [[105, "display.SXGA"]], "sxga2 (in module display)": [[105, "display.SXGA2"]], "tfwvga (in module display)": [[105, "display.TFWVGA"]], "tfwvga2 (in module display)": [[105, "display.TFWVGA2"]], "thvga (in module display)": [[105, "display.THVGA"]], "tqvga (in module display)": [[105, "display.TQVGA"]], "uxga (in module display)": [[105, "display.UXGA"]], "vga (in module display)": [[105, "display.VGA"]], "wsvga (in module display)": [[105, "display.WSVGA"]], "xga (in module display)": [[105, "display.XGA"]], "display": [[105, "module-display"]], "backlight() (display.dacbacklight method)": [[106, "display.DACBacklight.backlight"]], "deinit() (display.dacbacklight method)": [[106, "display.DACBacklight.deinit"]], "display.dacbacklight (class in display)": [[106, "display.display.DACBacklight"]], "backlight() (display.pwmbacklight method)": [[107, "display.PWMBacklight.backlight"]], "deinit() (display.pwmbacklight method)": [[107, "display.PWMBacklight.deinit"]], "display.pwmbacklight (class in display)": [[107, "display.display.PWMBacklight"]], "display.st7701 (class in display)": [[108, "display.display.ST7701"]], "init() (display.st7701 method)": [[108, "display.ST7701.init"]], "read_id() (display.st7701 method)": [[108, "display.ST7701.read_id"]], "display.displaydata (class in display)": [[109, "display.display.DisplayData"]], "display_id() (display.display.displaydata method)": [[109, "display.display.DisplayData.display_id"]], "frame_callback() (display.displaydata method)": [[109, "display.DisplayData.frame_callback"]], "receive_frame() (display.displaydata method)": [[109, "display.DisplayData.receive_frame"]], "send_frame() (display.displaydata method)": [[109, "display.DisplayData.send_frame"]], "backlight() (display.dsidisplay method)": [[110, "display.DSIDisplay.backlight"]], "bus_read() (display.dsidisplay method)": [[110, "display.DSIDisplay.bus_read"]], "bus_write() (display.dsidisplay method)": [[110, "display.DSIDisplay.bus_write"]], "clear() (display.dsidisplay method)": [[110, "display.DSIDisplay.clear"]], "deinit() (display.dsidisplay method)": [[110, "display.DSIDisplay.deinit"]], "display.dsidisplay (class in display)": [[110, "display.display.DSIDisplay"]], "height() (display.dsidisplay method)": [[110, "display.DSIDisplay.height"]], "refresh() (display.dsidisplay method)": [[110, "display.DSIDisplay.refresh"]], "width() (display.dsidisplay method)": [[110, "display.DSIDisplay.width"]], "write() (display.dsidisplay method)": [[110, "display.DSIDisplay.write"]], "backlight() (display.rgbdisplay method)": [[111, "display.RGBDisplay.backlight"]], "clear() (display.rgbdisplay method)": [[111, "display.RGBDisplay.clear"]], "deinit() (display.rgbdisplay method)": [[111, "display.RGBDisplay.deinit"]], "display.rgbdisplay (class in display)": [[111, "display.display.RGBDisplay"]], "height() (display.rgbdisplay method)": [[111, "display.RGBDisplay.height"]], "refresh() (display.rgbdisplay method)": [[111, "display.RGBDisplay.refresh"]], "width() (display.rgbdisplay method)": [[111, "display.RGBDisplay.width"]], "write() (display.rgbdisplay method)": [[111, "display.RGBDisplay.write"]], "spidisplay (class in display)": [[112, "display.SPIDisplay"]], "backlight() (display.spidisplay method)": [[112, "display.SPIDisplay.backlight"]], "bgr() (display.spidisplay method)": [[112, "display.SPIDisplay.bgr"]], "bus_write() (display.spidisplay method)": [[112, "display.SPIDisplay.bus_write"]], "byte_swap() (display.spidisplay method)": [[112, "display.SPIDisplay.byte_swap"]], "clear() (display.spidisplay method)": [[112, "display.SPIDisplay.clear"]], "deinit() (display.spidisplay method)": [[112, "display.SPIDisplay.deinit"]], "height() (display.spidisplay method)": [[112, "display.SPIDisplay.height"]], "refresh() (display.spidisplay method)": [[112, "display.SPIDisplay.refresh"]], "triple_buffer() (display.spidisplay method)": [[112, "display.SPIDisplay.triple_buffer"]], "width() (display.spidisplay method)": [[112, "display.SPIDisplay.width"]], "write() (display.spidisplay method)": [[112, "display.SPIDisplay.write"]], "fir_amg8833 (in module fir)": [[113, "fir.FIR_AMG8833"]], "fir_lepton (in module fir)": [[113, "fir.FIR_LEPTON"]], "fir_mlx90621 (in module fir)": [[113, "fir.FIR_MLX90621"]], "fir_mlx90640 (in module fir)": [[113, "fir.FIR_MLX90640"]], "fir_mlx90641 (in module fir)": [[113, "fir.FIR_MLX90641"]], "fir_none (in module fir)": [[113, "fir.FIR_NONE"]], "fir_shield (in module fir)": [[113, "fir.FIR_SHIELD"]], "deinit() (in module fir)": [[113, "fir.deinit"]], "draw_ir() (in module fir)": [[113, "fir.draw_ir"]], "fir": [[113, "module-fir"]], "get_frame_available() (in module fir)": [[113, "fir.get_frame_available"]], "height() (in module fir)": [[113, "fir.height"]], "init() (in module fir)": [[113, "fir.init"]], "radiometric() (in module fir)": [[113, "fir.radiometric"]], "read_ir() (in module fir)": [[113, "fir.read_ir"]], "read_ta() (in module fir)": [[113, "fir.read_ta"]], "refresh() (in module fir)": [[113, "fir.refresh"]], "register_frame_cb() (in module fir)": [[113, "fir.register_frame_cb"]], "register_vsync_cb() (in module fir)": [[113, "fir.register_vsync_cb"]], "resolution() (in module fir)": [[113, "fir.resolution"]], "snapshot() (in module fir)": [[113, "fir.snapshot"]], "trigger_ffc() (in module fir)": [[113, "fir.trigger_ffc"]], "type() (in module fir)": [[113, "fir.type"]], "width() (in module fir)": [[113, "fir.width"]], "lcd_flag_moved (in module ft5x06)": [[114, "ft5x06.LCD_FLAG_MOVED"]], "lcd_flag_pressed (in module ft5x06)": [[114, "ft5x06.LCD_FLAG_PRESSED"]], "lcd_flag_released (in module ft5x06)": [[114, "ft5x06.LCD_FLAG_RELEASED"]], "lcd_gesture_move_down (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_MOVE_DOWN"]], "lcd_gesture_move_left (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_MOVE_LEFT"]], "lcd_gesture_move_right (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_MOVE_RIGHT"]], "lcd_gesture_move_up (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_MOVE_UP"]], "lcd_gesture_none (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_NONE"]], "lcd_gesture_zoom_in (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_ZOOM_IN"]], "lcd_gesture_zoom_out (in module ft5x06)": [[114, "ft5x06.LCD_GESTURE_ZOOM_OUT"]], "ft5x06": [[114, "module-ft5x06"]], "ft5x06.ft5x06 (class in ft5x06)": [[114, "ft5x06.ft5x06.FT5X06"]], "get_gesture() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_gesture"]], "get_point_flag() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_point_flag"]], "get_point_id() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_point_id"]], "get_point_x() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_point_x"]], "get_point_y() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_point_y"]], "get_points() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.get_points"]], "touch_callback() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.touch_callback"]], "update_points() (ft5x06.ft5x06 method)": [[114, "ft5x06.FT5X06.update_points"]], "gif (class in gif)": [[115, "gif.Gif"]], "add_frame() (gif.gif method)": [[115, "gif.Gif.add_frame"]], "close() (gif.gif method)": [[115, "gif.Gif.close"]], "format() (gif.gif method)": [[115, "gif.Gif.format"]], "gif": [[115, "module-gif"]], "height() (gif.gif method)": [[115, "gif.Gif.height"]], "loop() (gif.gif method)": [[115, "gif.Gif.loop"]], "size() (gif.gif method)": [[115, "gif.Gif.size"]], "width() (gif.gif method)": [[115, "gif.Gif.width"]], "_read_reg() (gt911.gt911 method)": [[116, "gt911.GT911._read_reg"]], "_write_reg() (gt911.gt911 method)": [[116, "gt911.GT911._write_reg"]], "gt911": [[116, "module-gt911"]], "gt911.gt911 (class in gt911)": [[116, "gt911.gt911.GT911"]], "read_id() (gt911.gt911 method)": [[116, "gt911.GT911.read_id"]], "read_points() (gt911.gt911 method)": [[116, "gt911.GT911.read_points"]], "reset() (gt911.gt911 method)": [[116, "gt911.GT911.reset"]], "apply_color_palette_first (in module image)": [[117, "image.APPLY_COLOR_PALETTE_FIRST"]], "area (in module image)": [[117, "image.AREA"]], "artoolkit (in module image)": [[117, "image.ARTOOLKIT"]], "bayer (in module image)": [[117, "image.BAYER"]], "bicubic (in module image)": [[117, "image.BICUBIC"]], "bilinear (in module image)": [[117, "image.BILINEAR"]], "binary (in module image)": [[117, "image.BINARY"]], "black_background (in module image)": [[117, "image.BLACK_BACKGROUND"]], "center (in module image)": [[117, "image.CENTER"]], "codabar (in module image)": [[117, "image.CODABAR"]], "code128 (in module image)": [[117, "image.CODE128"]], "code39 (in module image)": [[117, "image.CODE39"]], "code93 (in module image)": [[117, "image.CODE93"]], "corner_agast (in module image)": [[117, "image.CORNER_AGAST"]], "corner_fast (in module image)": [[117, "image.CORNER_FAST"]], "databar (in module image)": [[117, "image.DATABAR"]], "databar_exp (in module image)": [[117, "image.DATABAR_EXP"]], "ean13 (in module image)": [[117, "image.EAN13"]], "ean2 (in module image)": [[117, "image.EAN2"]], "ean5 (in module image)": [[117, "image.EAN5"]], "ean8 (in module image)": [[117, "image.EAN8"]], "edge_canny (in module image)": [[117, "image.EDGE_CANNY"]], "edge_simple (in module image)": [[117, "image.EDGE_SIMPLE"]], "extract_rgb_channel_first (in module image)": [[117, "image.EXTRACT_RGB_CHANNEL_FIRST"]], "grayscale (in module image)": [[117, "image.GRAYSCALE"]], "hmirror (in module image)": [[117, "image.HMIRROR"]], "haarcascade (class in image)": [[117, "image.HaarCascade"]], "i25 (in module image)": [[117, "image.I25"]], "isbn10 (in module image)": [[117, "image.ISBN10"]], "isbn13 (in module image)": [[117, "image.ISBN13"]], "image (class in image)": [[117, "image.Image"]], "imageio (class in image)": [[117, "image.ImageIO"]], "imageio.file_stream (in module image)": [[117, "image.ImageIO.FILE_STREAM"]], "imageio.memory_stream (in module image)": [[117, "image.ImageIO.MEMORY_STREAM"]], "jpeg (in module image)": [[117, "image.JPEG"]], "palette_ironbow (in module image)": [[117, "image.PALETTE_IRONBOW"]], "palette_rainbow (in module image)": [[117, "image.PALETTE_RAINBOW"]], "pdf417 (in module image)": [[117, "image.PDF417"]], "png (in module image)": [[117, "image.PNG"]], "rgb565 (in module image)": [[117, "image.RGB565"]], "rotate_180 (in module image)": [[117, "image.ROTATE_180"]], "rotate_270 (in module image)": [[117, "image.ROTATE_270"]], "rotate_90 (in module image)": [[117, "image.ROTATE_90"]], "scale_aspect_expand (in module image)": [[117, "image.SCALE_ASPECT_EXPAND"]], "scale_aspect_ignore (in module image)": [[117, "image.SCALE_ASPECT_IGNORE"]], "scale_aspect_keep (in module image)": [[117, "image.SCALE_ASPECT_KEEP"]], "search_ds (in module image)": [[117, "image.SEARCH_DS"]], "search_ex (in module image)": [[117, "image.SEARCH_EX"]], "tag16h5 (in module image)": [[117, "image.TAG16H5"]], "tag25h7 (in module image)": [[117, "image.TAG25H7"]], "tag25h9 (in module image)": [[117, "image.TAG25H9"]], "tag36h10 (in module image)": [[117, "image.TAG36H10"]], "tag36h11 (in module image)": [[117, "image.TAG36H11"]], "transpose (in module image)": [[117, "image.TRANSPOSE"]], "upca (in module image)": [[117, "image.UPCA"]], "upce (in module image)": [[117, "image.UPCE"]], "vflip (in module image)": [[117, "image.VFLIP"]], "yuv422 (in module image)": [[117, "image.YUV422"]], "a_bins() (image.histogram method)": [[117, "image.histogram.a_bins"]], "a_lq() (image.statistics method)": [[117, "image.statistics.a_lq"]], "a_max() (image.statistics method)": [[117, "image.statistics.a_max"]], "a_mean() (image.statistics method)": [[117, "image.statistics.a_mean"]], "a_median() (image.statistics method)": [[117, "image.statistics.a_median"]], "a_min() (image.statistics method)": [[117, "image.statistics.a_min"]], "a_mode() (image.statistics method)": [[117, "image.statistics.a_mode"]], "a_stdev() (image.statistics method)": [[117, "image.statistics.a_stdev"]], "a_uq() (image.statistics method)": [[117, "image.statistics.a_uq"]], "a_value() (image.percentile method)": [[117, "image.percentile.a_value"]], "a_value() (image.threshold method)": [[117, "image.threshold.a_value"]], "add() (image.image method)": [[117, "image.Image.add"]], "apriltag (class in image)": [[117, "image.apriltag"]], "area() (image.blob method)": [[117, "image.blob.area"]], "assign() (image.image method)": [[117, "image.Image.assign"]], "awb() (image.image method)": [[117, "image.Image.awb"]], "b_and() (image.image method)": [[117, "image.Image.b_and"]], "b_bins() (image.histogram method)": [[117, "image.histogram.b_bins"]], "b_lq() (image.statistics method)": [[117, "image.statistics.b_lq"]], "b_max() (image.statistics method)": [[117, "image.statistics.b_max"]], "b_mean() (image.statistics method)": [[117, "image.statistics.b_mean"]], "b_median() (image.statistics method)": [[117, "image.statistics.b_median"]], "b_min() (image.statistics method)": [[117, "image.statistics.b_min"]], "b_mode() (image.statistics method)": [[117, "image.statistics.b_mode"]], "b_nand() (image.image method)": [[117, "image.Image.b_nand"]], "b_nor() (image.image method)": [[117, "image.Image.b_nor"]], "b_or() (image.image method)": [[117, "image.Image.b_or"]], "b_stdev() (image.statistics method)": [[117, "image.statistics.b_stdev"]], "b_uq() (image.statistics method)": [[117, "image.statistics.b_uq"]], "b_value() (image.percentile method)": [[117, "image.percentile.b_value"]], "b_value() (image.threshold method)": [[117, "image.threshold.b_value"]], "b_xnor() (image.image method)": [[117, "image.Image.b_xnor"]], "b_xor() (image.image method)": [[117, "image.Image.b_xor"]], "barcode (class in image)": [[117, "image.barcode"]], "bilateral() (image.image method)": [[117, "image.Image.bilateral"]], "binary() (image.image method)": [[117, "image.Image.binary"]], "binary_to_grayscale() (in module image)": [[117, "image.binary_to_grayscale"]], "binary_to_lab() (in module image)": [[117, "image.binary_to_lab"]], "binary_to_rgb() (in module image)": [[117, "image.binary_to_rgb"]], "binary_to_yuv() (in module image)": [[117, "image.binary_to_yuv"]], "bins() (image.histogram method)": [[117, "image.histogram.bins"]], "black_hat() (image.image method)": [[117, "image.Image.black_hat"]], "blend() (image.image method)": [[117, "image.Image.blend"]], "blob (class in image)": [[117, "image.blob"]], "buffer_size() (image.imageio method)": [[117, "image.ImageIO.buffer_size"]], "bytearray() (image.image method)": [[117, "image.Image.bytearray"]], "capacity() (image.datamatrix method)": [[117, "image.datamatrix.capacity"]], "ccm() (image.image method)": [[117, "image.Image.ccm"]], "circle (class in image)": [[117, "image.circle"]], "clear() (image.image method)": [[117, "image.Image.clear"]], "close() (image.image method)": [[117, "image.Image.close"]], "close() (image.imageio method)": [[117, "image.ImageIO.close"]], "code() (image.blob method)": [[117, "image.blob.code"]], "columns() (image.datamatrix method)": [[117, "image.datamatrix.columns"]], "compactness() (image.blob method)": [[117, "image.blob.compactness"]], "compress() (image.image method)": [[117, "image.Image.compress"]], "compress_for_ide() (image.image method)": [[117, "image.Image.compress_for_ide"]], "compressed() (image.image method)": [[117, "image.Image.compressed"]], "compressed_for_ide() (image.image method)": [[117, "image.Image.compressed_for_ide"]], "convexity() (image.blob method)": [[117, "image.blob.convexity"]], "copy() (image.image method)": [[117, "image.Image.copy"]], "corners() (image.apriltag method)": [[117, "image.apriltag.corners"]], "corners() (image.barcode method)": [[117, "image.barcode.corners"]], "corners() (image.blob method)": [[117, "image.blob.corners"]], "corners() (image.datamatrix method)": [[117, "image.datamatrix.corners"]], "corners() (image.qrcode method)": [[117, "image.qrcode.corners"]], "corners() (image.rect method)": [[117, "image.rect.corners"]], "count() (image.imageio method)": [[117, "image.ImageIO.count"]], "count() (image.blob method)": [[117, "image.blob.count"]], "count() (image.kptmatch method)": [[117, "image.kptmatch.count"]], "crop() (image.image method)": [[117, "image.Image.crop"]], "cx() (image.apriltag method)": [[117, "image.apriltag.cx"]], "cx() (image.blob method)": [[117, "image.blob.cx"]], "cx() (image.kptmatch method)": [[117, "image.kptmatch.cx"]], "cxf() (image.apriltag method)": [[117, "image.apriltag.cxf"]], "cxf() (image.blob method)": [[117, "image.blob.cxf"]], "cy() (image.apriltag method)": [[117, "image.apriltag.cy"]], "cy() (image.blob method)": [[117, "image.blob.cy"]], "cy() (image.kptmatch method)": [[117, "image.kptmatch.cy"]], "cyf() (image.apriltag method)": [[117, "image.apriltag.cyf"]], "cyf() (image.blob method)": [[117, "image.blob.cyf"]], "data_type() (image.qrcode method)": [[117, "image.qrcode.data_type"]], "datamatrix (class in image)": [[117, "image.datamatrix"]], "decision_margin() (image.apriltag method)": [[117, "image.apriltag.decision_margin"]], "density() (image.blob method)": [[117, "image.blob.density"]], "difference() (image.image method)": [[117, "image.Image.difference"]], "dilate() (image.image method)": [[117, "image.Image.dilate"]], "displacement (class in image)": [[117, "image.displacement"]], "draw_arrow() (image.image method)": [[117, "image.Image.draw_arrow"]], "draw_circle() (image.image method)": [[117, "image.Image.draw_circle"]], "draw_cross() (image.image method)": [[117, "image.Image.draw_cross"]], "draw_edges() (image.image method)": [[117, "image.Image.draw_edges"]], "draw_ellipse() (image.image method)": [[117, "image.Image.draw_ellipse"]], "draw_image() (image.image method)": [[117, "image.Image.draw_image"]], "draw_keypoints() (image.image method)": [[117, "image.Image.draw_keypoints"]], "draw_line() (image.image method)": [[117, "image.Image.draw_line"]], "draw_rectangle() (image.image method)": [[117, "image.Image.draw_rectangle"]], "draw_string() (image.image method)": [[117, "image.Image.draw_string"]], "ecc_level() (image.qrcode method)": [[117, "image.qrcode.ecc_level"]], "eci() (image.qrcode method)": [[117, "image.qrcode.eci"]], "elongation() (image.blob method)": [[117, "image.blob.elongation"]], "enclosed_ellipse() (image.blob method)": [[117, "image.blob.enclosed_ellipse"]], "enclosing_circle() (image.blob method)": [[117, "image.blob.enclosing_circle"]], "erode() (image.image method)": [[117, "image.Image.erode"]], "extent() (image.blob method)": [[117, "image.blob.extent"]], "family() (image.apriltag method)": [[117, "image.apriltag.family"]], "find_apriltags() (image.image method)": [[117, "image.Image.find_apriltags"]], "find_barcodes() (image.image method)": [[117, "image.Image.find_barcodes"]], "find_blobs() (image.image method)": [[117, "image.Image.find_blobs"]], "find_circles() (image.image method)": [[117, "image.Image.find_circles"]], "find_datamatrices() (image.image method)": [[117, "image.Image.find_datamatrices"]], "find_displacement() (image.image method)": [[117, "image.Image.find_displacement"]], "find_edges() (image.image method)": [[117, "image.Image.find_edges"]], "find_eye() (image.image method)": [[117, "image.Image.find_eye"]], "find_features() (image.image method)": [[117, "image.Image.find_features"]], "find_hog() (image.image method)": [[117, "image.Image.find_hog"]], "find_keypoints() (image.image method)": [[117, "image.Image.find_keypoints"]], "find_lbp() (image.image method)": [[117, "image.Image.find_lbp"]], "find_line_segments() (image.image method)": [[117, "image.Image.find_line_segments"]], "find_lines() (image.image method)": [[117, "image.Image.find_lines"]], "find_qrcodes() (image.image method)": [[117, "image.Image.find_qrcodes"]], "find_rects() (image.image method)": [[117, "image.Image.find_rects"]], "find_template() (image.image method)": [[117, "image.Image.find_template"]], "flood_fill() (image.image method)": [[117, "image.Image.flood_fill"]], "flush() (image.image method)": [[117, "image.Image.flush"]], "format() (image.image method)": [[117, "image.Image.format"]], "gamma() (image.image method)": [[117, "image.Image.gamma"]], "gamma_corr() (image.image method)": [[117, "image.Image.gamma_corr"]], "gaussian() (image.image method)": [[117, "image.Image.gaussian"]], "get_histogram() (image.image method)": [[117, "image.Image.get_histogram"]], "get_percentile() (image.histogram method)": [[117, "image.histogram.get_percentile"]], "get_pixel() (image.image method)": [[117, "image.Image.get_pixel"]], "get_regression() (image.image method)": [[117, "image.Image.get_regression"]], "get_statistics() (image.image method)": [[117, "image.Image.get_statistics"]], "get_statistics() (image.histogram method)": [[117, "image.histogram.get_statistics"]], "get_threshold() (image.histogram method)": [[117, "image.histogram.get_threshold"]], "goodness() (image.apriltag method)": [[117, "image.apriltag.goodness"]], "grayscale_to_binary() (in module image)": [[117, "image.grayscale_to_binary"]], "grayscale_to_lab() (in module image)": [[117, "image.grayscale_to_lab"]], "grayscale_to_rgb() (in module image)": [[117, "image.grayscale_to_rgb"]], "grayscale_to_yuv() (in module image)": [[117, "image.grayscale_to_yuv"]], "h() (image.apriltag method)": [[117, "image.apriltag.h"]], "h() (image.barcode method)": [[117, "image.barcode.h"]], "h() (image.blob method)": [[117, "image.blob.h"]], "h() (image.datamatrix method)": [[117, "image.datamatrix.h"]], "h() (image.kptmatch method)": [[117, "image.kptmatch.h"]], "h() (image.qrcode method)": [[117, "image.qrcode.h"]], "h() (image.rect method)": [[117, "image.rect.h"]], "hamming() (image.apriltag method)": [[117, "image.apriltag.hamming"]], "height() (image.image method)": [[117, "image.Image.height"]], "histeq() (image.image method)": [[117, "image.Image.histeq"]], "histogram (class in image)": [[117, "image.histogram"]], "id() (image.apriltag method)": [[117, "image.apriltag.id"]], "image": [[117, "module-image"]], "invert() (image.image method)": [[117, "image.Image.invert"]], "is_alphanumeric() (image.qrcode method)": [[117, "image.qrcode.is_alphanumeric"]], "is_binary() (image.qrcode method)": [[117, "image.qrcode.is_binary"]], "is_closed() (image.imageio method)": [[117, "image.ImageIO.is_closed"]], "is_kanji() (image.qrcode method)": [[117, "image.qrcode.is_kanji"]], "is_numeric() (image.qrcode method)": [[117, "image.qrcode.is_numeric"]], "kptmatch (class in image)": [[117, "image.kptmatch"]], "l_bins() (image.histogram method)": [[117, "image.histogram.l_bins"]], "l_lq() (image.statistics method)": [[117, "image.statistics.l_lq"]], "l_max() (image.statistics method)": [[117, "image.statistics.l_max"]], "l_mean() (image.statistics method)": [[117, "image.statistics.l_mean"]], "l_median() (image.statistics method)": [[117, "image.statistics.l_median"]], "l_min() (image.statistics method)": [[117, "image.statistics.l_min"]], "l_mode() (image.statistics method)": [[117, "image.statistics.l_mode"]], "l_stdev() (image.statistics method)": [[117, "image.statistics.l_stdev"]], "l_uq() (image.statistics method)": [[117, "image.statistics.l_uq"]], "l_value() (image.percentile method)": [[117, "image.percentile.l_value"]], "l_value() (image.threshold method)": [[117, "image.threshold.l_value"]], "lab_to_binary() (in module image)": [[117, "image.lab_to_binary"]], "lab_to_grayscale() (in module image)": [[117, "image.lab_to_grayscale"]], "lab_to_rgb() (in module image)": [[117, "image.lab_to_rgb"]], "lab_to_yuv() (in module image)": [[117, "image.lab_to_yuv"]], "laplacian() (image.image method)": [[117, "image.Image.laplacian"]], "length() (image.line method)": [[117, "image.line.length"]], "lens_corr() (image.image method)": [[117, "image.Image.lens_corr"]], "line (class in image)": [[117, "image.line"]], "line() (image.line method)": [[117, "image.line.line"]], "linpolar() (image.image method)": [[117, "image.Image.linpolar"]], "load_decriptor() (in module image)": [[117, "image.load_decriptor"]], "logpolar() (image.image method)": [[117, "image.Image.logpolar"]], "lq() (image.statistics method)": [[117, "image.statistics.lq"]], "magnitude() (image.circle method)": [[117, "image.circle.magnitude"]], "magnitude() (image.line method)": [[117, "image.line.magnitude"]], "magnitude() (image.rect method)": [[117, "image.rect.magnitude"]], "major_axis_line() (image.blob method)": [[117, "image.blob.major_axis_line"]], "mask() (image.qrcode method)": [[117, "image.qrcode.mask"]], "mask_circle() (image.image method)": [[117, "image.Image.mask_circle"]], "mask_ellipse() (image.image method)": [[117, "image.Image.mask_ellipse"]], "mask_rectange() (image.image method)": [[117, "image.Image.mask_rectange"]], "match() (image.kptmatch method)": [[117, "image.kptmatch.match"]], "match_descriptor() (in module image)": [[117, "image.match_descriptor"]], "max() (image.image method)": [[117, "image.Image.max"]], "max() (image.statistics method)": [[117, "image.statistics.max"]], "mean() (image.image method)": [[117, "image.Image.mean"]], "mean() (image.statistics method)": [[117, "image.statistics.mean"]], "mean_pool() (image.image method)": [[117, "image.Image.mean_pool"]], "mean_pooled() (image.image method)": [[117, "image.Image.mean_pooled"]], "median() (image.image method)": [[117, "image.Image.median"]], "median() (image.statistics method)": [[117, "image.statistics.median"]], "midpoint() (image.image method)": [[117, "image.Image.midpoint"]], "midpoint_pool() (image.image method)": [[117, "image.Image.midpoint_pool"]], "midpoint_pooled() (image.image method)": [[117, "image.Image.midpoint_pooled"]], "min() (image.image method)": [[117, "image.Image.min"]], "min() (image.statistics method)": [[117, "image.statistics.min"]], "min_corners() (image.blob method)": [[117, "image.blob.min_corners"]], "minor_axis_line() (image.blob method)": [[117, "image.blob.minor_axis_line"]], "mode() (image.image method)": [[117, "image.Image.mode"]], "mode() (image.statistics method)": [[117, "image.statistics.mode"]], "morph() (image.image method)": [[117, "image.Image.morph"]], "negate() (image.image method)": [[117, "image.Image.negate"]], "offset() (image.imageio method)": [[117, "image.ImageIO.offset"]], "open() (image.image method)": [[117, "image.Image.open"]], "padding() (image.datamatrix method)": [[117, "image.datamatrix.padding"]], "payload() (image.barcode method)": [[117, "image.barcode.payload"]], "payload() (image.datamatrix method)": [[117, "image.datamatrix.payload"]], "payload() (image.qrcode method)": [[117, "image.qrcode.payload"]], "percentile (class in image)": [[117, "image.percentile"]], "perimeter() (image.blob method)": [[117, "image.blob.perimeter"]], "pixels() (image.blob method)": [[117, "image.blob.pixels"]], "qrcode (class in image)": [[117, "image.qrcode"]], "quality() (image.barcode method)": [[117, "image.barcode.quality"]], "r() (image.circle method)": [[117, "image.circle.r"]], "read() (image.imageio method)": [[117, "image.ImageIO.read"]], "rect (class in image)": [[117, "image.rect"]], "rect() (image.apriltag method)": [[117, "image.apriltag.rect"]], "rect() (image.barcode method)": [[117, "image.barcode.rect"]], "rect() (image.blob method)": [[117, "image.blob.rect"]], "rect() (image.datamatrix method)": [[117, "image.datamatrix.rect"]], "rect() (image.kptmatch method)": [[117, "image.kptmatch.rect"]], "rect() (image.qrcode method)": [[117, "image.qrcode.rect"]], "rect() (image.rect method)": [[117, "image.rect.rect"]], "replace() (image.image method)": [[117, "image.Image.replace"]], "response() (image.displacement method)": [[117, "image.displacement.response"]], "rgb_to_binary() (in module image)": [[117, "image.rgb_to_binary"]], "rgb_to_grayscale() (in module image)": [[117, "image.rgb_to_grayscale"]], "rgb_to_lab() (in module image)": [[117, "image.rgb_to_lab"]], "rgb_to_yuv() (in module image)": [[117, "image.rgb_to_yuv"]], "rho() (image.line method)": [[117, "image.line.rho"]], "rotation() (image.apriltag method)": [[117, "image.apriltag.rotation"]], "rotation() (image.barcode method)": [[117, "image.barcode.rotation"]], "rotation() (image.blob method)": [[117, "image.blob.rotation"]], "rotation() (image.datamatrix method)": [[117, "image.datamatrix.rotation"]], "rotation() (image.displacement method)": [[117, "image.displacement.rotation"]], "rotation_corr() (image.image.img method)": [[117, "image.Image.img.rotation_corr"]], "rotation_deg() (image.blob method)": [[117, "image.blob.rotation_deg"]], "rotation_rad() (image.blob method)": [[117, "image.blob.rotation_rad"]], "roundness() (image.blob method)": [[117, "image.blob.roundness"]], "rows() (image.datamatrix method)": [[117, "image.datamatrix.rows"]], "save() (image.image method)": [[117, "image.Image.save"]], "save_descriptor() (in module image)": [[117, "image.save_descriptor"]], "scale() (image.image method)": [[117, "image.Image.scale"]], "scale() (image.displacement method)": [[117, "image.displacement.scale"]], "seek() (image.imageio method)": [[117, "image.ImageIO.seek"]], "set() (image.image method)": [[117, "image.Image.set"]], "set_pixel() (image.image method)": [[117, "image.Image.set_pixel"]], "size() (image.image method)": [[117, "image.Image.size"]], "size() (image.imageio method)": [[117, "image.ImageIO.size"]], "solidity() (image.blob method)": [[117, "image.blob.solidity"]], "statistics (class in image)": [[117, "image.statistics"]], "stdev() (image.statistics method)": [[117, "image.statistics.stdev"]], "stero_disparity() (image.image method)": [[117, "image.Image.stero_disparity"]], "sub() (image.image method)": [[117, "image.Image.sub"]], "sync() (image.imageio method)": [[117, "image.ImageIO.sync"]], "theta() (image.kptmatch method)": [[117, "image.kptmatch.theta"]], "theta() (image.line method)": [[117, "image.line.theta"]], "threshold (class in image)": [[117, "image.threshold"]], "to_bitmap() (image.image method)": [[117, "image.Image.to_bitmap"]], "to_grayscale() (image.image method)": [[117, "image.Image.to_grayscale"]], "to_ironbow() (image.image method)": [[117, "image.Image.to_ironbow"]], "to_jpeg() (image.image method)": [[117, "image.Image.to_jpeg"]], "to_png() (image.image method)": [[117, "image.Image.to_png"]], "to_rainbow() (image.image method)": [[117, "image.Image.to_rainbow"]], "to_rgb565() (image.image method)": [[117, "image.Image.to_rgb565"]], "top_hat() (image.image method)": [[117, "image.Image.top_hat"]], "type() (image.imageio method)": [[117, "image.ImageIO.type"]], "type() (image.barcode method)": [[117, "image.barcode.type"]], "uq() (image.statistics method)": [[117, "image.statistics.uq"]], "value() (image.percentile method)": [[117, "image.percentile.value"]], "value() (image.threshold method)": [[117, "image.threshold.value"]], "version() (image.imageio method)": [[117, "image.ImageIO.version"]], "version() (image.qrcode method)": [[117, "image.qrcode.version"]], "w() (image.apriltag method)": [[117, "image.apriltag.w"]], "w() (image.barcode method)": [[117, "image.barcode.w"]], "w() (image.blob method)": [[117, "image.blob.w"]], "w() (image.datamatrix method)": [[117, "image.datamatrix.w"]], "w() (image.kptmatch method)": [[117, "image.kptmatch.w"]], "w() (image.qrcode method)": [[117, "image.qrcode.w"]], "w() (image.rect method)": [[117, "image.rect.w"]], "width() (image.image method)": [[117, "image.Image.width"]], "write() (image.imageio method)": [[117, "image.ImageIO.write"]], "x() (image.apriltag method)": [[117, "image.apriltag.x"]], "x() (image.barcode method)": [[117, "image.barcode.x"]], "x() (image.blob method)": [[117, "image.blob.x"]], "x() (image.circle method)": [[117, "image.circle.x"]], "x() (image.datamatrix method)": [[117, "image.datamatrix.x"]], "x() (image.kptmatch method)": [[117, "image.kptmatch.x"]], "x() (image.qrcode method)": [[117, "image.qrcode.x"]], "x() (image.rect method)": [[117, "image.rect.x"]], "x1() (image.line method)": [[117, "image.line.x1"]], "x2() (image.line method)": [[117, "image.line.x2"]], "x_hist_bins() (image.blob method)": [[117, "image.blob.x_hist_bins"]], "x_rotation() (image.apriltag method)": [[117, "image.apriltag.x_rotation"]], "x_translation() (image.apriltag method)": [[117, "image.apriltag.x_translation"]], "x_translation() (image.displacement method)": [[117, "image.displacement.x_translation"]], "y() (image.apriltag method)": [[117, "image.apriltag.y"]], "y() (image.barcode method)": [[117, "image.barcode.y"]], "y() (image.blob method)": [[117, "image.blob.y"]], "y() (image.circle method)": [[117, "image.circle.y"]], "y() (image.datamatrix method)": [[117, "image.datamatrix.y"]], "y() (image.kptmatch method)": [[117, "image.kptmatch.y"]], "y() (image.qrcode method)": [[117, "image.qrcode.y"]], "y() (image.rect method)": [[117, "image.rect.y"]], "y1() (image.line method)": [[117, "image.line.y1"]], "y2() (image.line method)": [[117, "image.line.y2"]], "y_hist_bins() (image.blob method)": [[117, "image.blob.y_hist_bins"]], "y_rotation() (image.apriltag method)": [[117, "image.apriltag.y_rotation"]], "y_translation() (image.apriltag method)": [[117, "image.apriltag.y_translation"]], "y_translation() (image.displacement method)": [[117, "image.displacement.y_translation"]], "yuv_to_binary() (in module image)": [[117, "image.yuv_to_binary"]], "yuv_to_grayscale() (in module image)": [[117, "image.yuv_to_grayscale"]], "yuv_to_lab() (in module image)": [[117, "image.yuv_to_lab"]], "yuv_to_rgb() (in module image)": [[117, "image.yuv_to_rgb"]], "z_rotation() (image.apriltag method)": [[117, "image.apriltag.z_rotation"]], "z_translation() (image.apriltag method)": [[117, "image.apriltag.z_translation"]], "__read_reg() (in module imu)": [[118, "imu.__read_reg"]], "__write_reg() (in module imu)": [[118, "imu.__write_reg"]], "acceleration_mg() (in module imu)": [[118, "imu.acceleration_mg"]], "angular_rate_mdps() (in module imu)": [[118, "imu.angular_rate_mdps"]], "imu": [[118, "module-imu"]], "pitch() (in module imu)": [[118, "imu.pitch"]], "roll() (in module imu)": [[118, "imu.roll"]], "sleep() (in module imu)": [[118, "imu.sleep"]], "temperature_c() (in module imu)": [[118, "imu.temperature_c"]], "microspeech (class in micro_speech)": [[119, "micro_speech.MicroSpeech"]], "audio_callback() (micro_speech.microspeech method)": [[119, "micro_speech.MicroSpeech.audio_callback"]], "listen() (micro_speech.microspeech method)": [[119, "micro_speech.MicroSpeech.listen"]], "micro_speech": [[119, "module-micro_speech"]], "mjpeg (class in mjpeg)": [[120, "mjpeg.Mjpeg"]], "add_frame() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.add_frame"]], "close() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.close"]], "count() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.count"]], "height() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.height"]], "is_closed() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.is_closed"]], "mjpeg": [[120, "module-mjpeg"]], "size() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.size"]], "sync() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.sync"]], "width() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.width"]], "write() (mjpeg.mjpeg method)": [[120, "mjpeg.Mjpeg.write"]], "arch() (in module omv)": [[121, "omv.arch"]], "board_id() (in module omv)": [[121, "omv.board_id"]], "board_type() (in module omv)": [[121, "omv.board_type"]], "disable_fb() (in module omv)": [[121, "omv.disable_fb"]], "omv": [[121, "module-omv"]], "version_major() (in module omv)": [[121, "omv.version_major"]], "version_minor() (in module omv)": [[121, "omv.version_minor"]], "version_patch() (in module omv)": [[121, "omv.version_patch"]], "version_string() (in module omv)": [[121, "omv.version_string"]], "rpc": [[122, "module-rpc"]], "rpc (class in rpc)": [[122, "rpc.rpc"]], "rpc_i2c_master (class in rpc)": [[122, "rpc.rpc_i2c_master"]], "rpc_i2c_slave (class in rpc)": [[122, "rpc.rpc_i2c_slave"]], "rpc_master (class in rpc)": [[122, "rpc.rpc_master"]], "rpc_network_master (class in rpc)": [[122, "rpc.rpc_network_master"]], "rpc_network_slave (class in rpc)": [[122, "rpc.rpc_network_slave"]], "rpc_slave (class in rpc)": [[122, "rpc.rpc_slave"]], "rpc_spi_master (class in rpc)": [[122, "rpc.rpc_spi_master"]], "rpc_spi_slave (class in rpc)": [[122, "rpc.rpc_spi_slave"]], "rpc_uart_master (class in rpc)": [[122, "rpc.rpc_uart_master"]], "rpc_uart_slave (class in rpc)": [[122, "rpc.rpc_uart_slave"]], "rpc_usb_vcp_master (class in rpc)": [[122, "rpc.rpc_usb_vcp_master"]], "rpc_usb_vcp_slave (class in rpc)": [[122, "rpc.rpc_usb_vcp_slave"]], "register_pause_cb() (rtsp.rtsp_server method)": [[123, "rtsp.rtsp_server.register_pause_cb"]], "register_play_cb() (rtsp.rtsp_server method)": [[123, "rtsp.rtsp_server.register_play_cb"]], "register_setup_cb() (rtsp.rtsp_server method)": [[123, "rtsp.rtsp_server.register_setup_cb"]], "register_teardown_cb() (rtsp.rtsp_server method)": [[123, "rtsp.rtsp_server.register_teardown_cb"]], "rtsp": [[123, "module-rtsp"]], "rtsp_server (class in rtsp)": [[123, "rtsp.rtsp_server"]], "stream() (rtsp.rtsp_server method)": [[123, "rtsp.rtsp_server.stream"]], "b128x128 (in module sensor)": [[124, "sensor.B128X128"]], "b128x64 (in module sensor)": [[124, "sensor.B128X64"]], "b160x160 (in module sensor)": [[124, "sensor.B160X160"]], "b320x320 (in module sensor)": [[124, "sensor.B320X320"]], "b64x32 (in module sensor)": [[124, "sensor.B64X32"]], "b64x64 (in module sensor)": [[124, "sensor.B64X64"]], "bayer (in module sensor)": [[124, "sensor.BAYER"]], "binary (in module sensor)": [[124, "sensor.BINARY"]], "cif (in module sensor)": [[124, "sensor.CIF"]], "double_buffer (in module sensor)": [[124, "sensor.DOUBLE_BUFFER"]], "fhd (in module sensor)": [[124, "sensor.FHD"]], "frogeye2020 (in module sensor)": [[124, "sensor.FROGEYE2020"]], "gc2145 (in module sensor)": [[124, "sensor.GC2145"]], "grayscale (in module sensor)": [[124, "sensor.GRAYSCALE"]], "hd (in module sensor)": [[124, "sensor.HD"]], "hm01b0 (in module sensor)": [[124, "sensor.HM01B0"]], "hm0360 (in module sensor)": [[124, "sensor.HM0360"]], "hqqqqvga (in module sensor)": [[124, "sensor.HQQQQVGA"]], "hqqqvga (in module sensor)": [[124, "sensor.HQQQVGA"]], "hqqvga (in module sensor)": [[124, "sensor.HQQVGA"]], "hqvga (in module sensor)": [[124, "sensor.HQVGA"]], "hvga (in module sensor)": [[124, "sensor.HVGA"]], "ioctl_get_fov_wide (in module sensor)": [[124, "sensor.IOCTL_GET_FOV_WIDE"]], "ioctl_get_night_mode (in module sensor)": [[124, "sensor.IOCTL_GET_NIGHT_MODE"]], "ioctl_get_readout_window (in module sensor)": [[124, "sensor.IOCTL_GET_READOUT_WINDOW"]], "ioctl_get_triggered_mode (in module sensor)": [[124, "sensor.IOCTL_GET_TRIGGERED_MODE"]], "ioctl_himax_md_clear (in module sensor)": [[124, "sensor.IOCTL_HIMAX_MD_CLEAR"]], "ioctl_himax_md_enable (in module sensor)": [[124, "sensor.IOCTL_HIMAX_MD_ENABLE"]], "ioctl_himax_md_threshold (in module sensor)": [[124, "sensor.IOCTL_HIMAX_MD_THRESHOLD"]], "ioctl_himax_md_window (in module sensor)": [[124, "sensor.IOCTL_HIMAX_MD_WINDOW"]], "ioctl_himax_osc_enable (in module sensor)": [[124, "sensor.IOCTL_HIMAX_OSC_ENABLE"]], "ioctl_lepton_get_attribute (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_ATTRIBUTE"]], "ioctl_lepton_get_aux_temperature (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_AUX_TEMPERATURE"]], "ioctl_lepton_get_fpa_temperature (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_FPA_TEMPERATURE"]], "ioctl_lepton_get_height (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_HEIGHT"]], "ioctl_lepton_get_measurement_mode (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_MEASUREMENT_MODE"]], "ioctl_lepton_get_measurement_range (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_MEASUREMENT_RANGE"]], "ioctl_lepton_get_radiometry (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_RADIOMETRY"]], "ioctl_lepton_get_refresh (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_REFRESH"]], "ioctl_lepton_get_resolution (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_RESOLUTION"]], "ioctl_lepton_get_width (in module sensor)": [[124, "sensor.IOCTL_LEPTON_GET_WIDTH"]], "ioctl_lepton_run_command (in module sensor)": [[124, "sensor.IOCTL_LEPTON_RUN_COMMAND"]], "ioctl_lepton_set_attribute (in module sensor)": [[124, "sensor.IOCTL_LEPTON_SET_ATTRIBUTE"]], "ioctl_lepton_set_measurement_mode (in module sensor)": [[124, "sensor.IOCTL_LEPTON_SET_MEASUREMENT_MODE"]], "ioctl_lepton_set_measurement_range (in module sensor)": [[124, "sensor.IOCTL_LEPTON_SET_MEASUREMENT_RANGE"]], "ioctl_pause_auto_focus (in module sensor)": [[124, "sensor.IOCTL_PAUSE_AUTO_FOCUS"]], "ioctl_reset_auto_focus (in module sensor)": [[124, "sensor.IOCTL_RESET_AUTO_FOCUS"]], "ioctl_set_fov_wide (in module sensor)": [[124, "sensor.IOCTL_SET_FOV_WIDE"]], "ioctl_set_night_mode (in module sensor)": [[124, "sensor.IOCTL_SET_NIGHT_MODE"]], "ioctl_set_readout_window (in module sensor)": [[124, "sensor.IOCTL_SET_READOUT_WINDOW"]], "ioctl_set_triggered_mode (in module sensor)": [[124, "sensor.IOCTL_SET_TRIGGERED_MODE"]], "ioctl_trigger_auto_focus (in module sensor)": [[124, "sensor.IOCTL_TRIGGER_AUTO_FOCUS"]], "ioctl_wait_on_auto_focus (in module sensor)": [[124, "sensor.IOCTL_WAIT_ON_AUTO_FOCUS"]], "jpeg (in module sensor)": [[124, "sensor.JPEG"]], "lcd (in module sensor)": [[124, "sensor.LCD"]], "lepton (in module sensor)": [[124, "sensor.LEPTON"]], "mt9m114 (in module sensor)": [[124, "sensor.MT9M114"]], "mt9v022 (in module sensor)": [[124, "sensor.MT9V022"]], "mt9v024 (in module sensor)": [[124, "sensor.MT9V024"]], "mt9v032 (in module sensor)": [[124, "sensor.MT9V032"]], "mt9v034 (in module sensor)": [[124, "sensor.MT9V034"]], "ov2640 (in module sensor)": [[124, "sensor.OV2640"]], "ov5640 (in module sensor)": [[124, "sensor.OV5640"]], "ov7690 (in module sensor)": [[124, "sensor.OV7690"]], "ov7725 (in module sensor)": [[124, "sensor.OV7725"]], "ov9650 (in module sensor)": [[124, "sensor.OV9650"]], "paj6100 (in module sensor)": [[124, "sensor.PAJ6100"]], "qcif (in module sensor)": [[124, "sensor.QCIF"]], "qhd (in module sensor)": [[124, "sensor.QHD"]], "qqcif (in module sensor)": [[124, "sensor.QQCIF"]], "qqqqvga (in module sensor)": [[124, "sensor.QQQQVGA"]], "qqqvga (in module sensor)": [[124, "sensor.QQQVGA"]], "qqsif (in module sensor)": [[124, "sensor.QQSIF"]], "qqvga (in module sensor)": [[124, "sensor.QQVGA"]], "qqvga2 (in module sensor)": [[124, "sensor.QQVGA2"]], "qsif (in module sensor)": [[124, "sensor.QSIF"]], "qvga (in module sensor)": [[124, "sensor.QVGA"]], "qxga (in module sensor)": [[124, "sensor.QXGA"]], "rgb565 (in module sensor)": [[124, "sensor.RGB565"]], "sif (in module sensor)": [[124, "sensor.SIF"]], "single_buffer (in module sensor)": [[124, "sensor.SINGLE_BUFFER"]], "svga (in module sensor)": [[124, "sensor.SVGA"]], "sxga (in module sensor)": [[124, "sensor.SXGA"]], "sxgam (in module sensor)": [[124, "sensor.SXGAM"]], "triple_buffer (in module sensor)": [[124, "sensor.TRIPLE_BUFFER"]], "uxga (in module sensor)": [[124, "sensor.UXGA"]], "vga (in module sensor)": [[124, "sensor.VGA"]], "video_fifo (in module sensor)": [[124, "sensor.VIDEO_FIFO"]], "wqxga (in module sensor)": [[124, "sensor.WQXGA"]], "wqxga2 (in module sensor)": [[124, "sensor.WQXGA2"]], "wvga (in module sensor)": [[124, "sensor.WVGA"]], "wvga2 (in module sensor)": [[124, "sensor.WVGA2"]], "wxga (in module sensor)": [[124, "sensor.WXGA"]], "xga (in module sensor)": [[124, "sensor.XGA"]], "yuv422 (in module sensor)": [[124, "sensor.YUV422"]], "__read_reg() (in module sensor)": [[124, "sensor.__read_reg"]], "__write_reg() (in module sensor)": [[124, "sensor.__write_reg"]], "alloc_extra_fb() (in module sensor)": [[124, "sensor.alloc_extra_fb"]], "dealloc_extra_fb() (in module sensor)": [[124, "sensor.dealloc_extra_fb"]], "disable_delays() (in module sensor)": [[124, "sensor.disable_delays"]], "disable_full_flush() (in module sensor)": [[124, "sensor.disable_full_flush"]], "flush() (in module sensor)": [[124, "sensor.flush"]], "get_auto_rotation() (in module sensor)": [[124, "sensor.get_auto_rotation"]], "get_blc_regs() (in module sensor)": [[124, "sensor.get_blc_regs"]], "get_color_palette() (in module sensor)": [[124, "sensor.get_color_palette"]], "get_exposure_us() (in module sensor)": [[124, "sensor.get_exposure_us"]], "get_fb() (in module sensor)": [[124, "sensor.get_fb"]], "get_frame_available() (in module sensor)": [[124, "sensor.get_frame_available"]], "get_framebuffers() (in module sensor)": [[124, "sensor.get_framebuffers"]], "get_framerate() (in module sensor)": [[124, "sensor.get_framerate"]], "get_framesize() (in module sensor)": [[124, "sensor.get_framesize"]], "get_gain_db() (in module sensor)": [[124, "sensor.get_gain_db"]], "get_hmirror() (in module sensor)": [[124, "sensor.get_hmirror"]], "get_id() (in module sensor)": [[124, "sensor.get_id"]], "get_pixformat() (in module sensor)": [[124, "sensor.get_pixformat"]], "get_rgb_gain_db() (in module sensor)": [[124, "sensor.get_rgb_gain_db"]], "get_transpose() (in module sensor)": [[124, "sensor.get_transpose"]], "get_vflip() (in module sensor)": [[124, "sensor.get_vflip"]], "get_windowing() (in module sensor)": [[124, "sensor.get_windowing"]], "height() (in module sensor)": [[124, "sensor.height"]], "ioctl() (in module sensor)": [[124, "sensor.ioctl"]], "reset() (in module sensor)": [[124, "sensor.reset"]], "sensor": [[124, "module-sensor"]], "set_auto_blc() (in module sensor)": [[124, "sensor.set_auto_blc"]], "set_auto_exposure() (in module sensor)": [[124, "sensor.set_auto_exposure"]], "set_auto_gain() (in module sensor)": [[124, "sensor.set_auto_gain"]], "set_auto_rotation() (in module sensor)": [[124, "sensor.set_auto_rotation"]], "set_auto_whitebal() (in module sensor)": [[124, "sensor.set_auto_whitebal"]], "set_brightness() (in module sensor)": [[124, "sensor.set_brightness"]], "set_color_palette() (in module sensor)": [[124, "sensor.set_color_palette"]], "set_colorbar() (in module sensor)": [[124, "sensor.set_colorbar"]], "set_contrast() (in module sensor)": [[124, "sensor.set_contrast"]], "set_frame_callback() (in module sensor)": [[124, "sensor.set_frame_callback"]], "set_framebuffers() (in module sensor)": [[124, "sensor.set_framebuffers"]], "set_framerate() (in module sensor)": [[124, "sensor.set_framerate"]], "set_framesize() (in module sensor)": [[124, "sensor.set_framesize"]], "set_gainceiling() (in module sensor)": [[124, "sensor.set_gainceiling"]], "set_hmirror() (in module sensor)": [[124, "sensor.set_hmirror"]], "set_lens_correction() (in module sensor)": [[124, "sensor.set_lens_correction"]], "set_pixformat() (in module sensor)": [[124, "sensor.set_pixformat"]], "set_quality() (in module sensor)": [[124, "sensor.set_quality"]], "set_saturation() (in module sensor)": [[124, "sensor.set_saturation"]], "set_transpose() (in module sensor)": [[124, "sensor.set_transpose"]], "set_vflip() (in module sensor)": [[124, "sensor.set_vflip"]], "set_vsync_callback() (in module sensor)": [[124, "sensor.set_vsync_callback"]], "set_windowing() (in module sensor)": [[124, "sensor.set_windowing"]], "shutdown() (in module sensor)": [[124, "sensor.shutdown"]], "skip_frames() (in module sensor)": [[124, "sensor.skip_frames"]], "sleep() (in module sensor)": [[124, "sensor.sleep"]], "snapshot() (in module sensor)": [[124, "sensor.snapshot"]], "width() (in module sensor)": [[124, "sensor.width"]], "classification_output() (tf.tf_classification method)": [[125, "tf.tf_classification.classification_output"]], "classify() (in module tf)": [[125, "tf.classify"]], "classify() (tf.tf_model method)": [[125, "tf.tf_model.classify"]], "detect() (in module tf)": [[125, "tf.detect"]], "detect() (tf.tf_model method)": [[125, "tf.tf_model.detect"]], "free_from_fb() (in module tf)": [[125, "tf.free_from_fb"]], "h() (tf.tf_classification method)": [[125, "tf.tf_classification.h"]], "input_channels() (tf.tf_model method)": [[125, "tf.tf_model.input_channels"]], "input_datatype() (tf.tf_model method)": [[125, "tf.tf_model.input_datatype"]], "input_height() (tf.tf_model method)": [[125, "tf.tf_model.input_height"]], "input_scale() (tf.tf_model method)": [[125, "tf.tf_model.input_scale"]], "input_width() (tf.tf_model method)": [[125, "tf.tf_model.input_width"]], "input_zero_point() (tf.tf_model method)": [[125, "tf.tf_model.input_zero_point"]], "len() (tf.tf_model method)": [[125, "tf.tf_model.len"]], "load() (in module tf)": [[125, "tf.load"]], "output_channels() (tf.tf_model method)": [[125, "tf.tf_model.output_channels"]], "output_datatype() (tf.tf_model method)": [[125, "tf.tf_model.output_datatype"]], "output_height() (tf.tf_model method)": [[125, "tf.tf_model.output_height"]], "output_scale() (tf.tf_model method)": [[125, "tf.tf_model.output_scale"]], "output_width() (tf.tf_model method)": [[125, "tf.tf_model.output_width"]], "output_zero_point() (tf.tf_model method)": [[125, "tf.tf_model.output_zero_point"]], "ram() (tf.tf_model method)": [[125, "tf.tf_model.ram"]], "rect() (tf.tf_classification method)": [[125, "tf.tf_classification.rect"]], "regression() (in module tf)": [[125, "tf.regression"]], "regression() (tf.tf_model method)": [[125, "tf.tf_model.regression"]], "segment() (in module tf)": [[125, "tf.segment"]], "segment() (tf.tf_model method)": [[125, "tf.tf_model.segment"]], "tf": [[125, "module-tf"]], "tf_classification (class in tf)": [[125, "tf.tf_classification"]], "tf_model (class in tf)": [[125, "tf.tf_model"]], "w() (tf.tf_classification method)": [[125, "tf.tf_classification.w"]], "x() (tf.tf_classification method)": [[125, "tf.tf_classification.x"]], "y() (tf.tf_classification method)": [[125, "tf.tf_classification.y"]], "tfp410": [[126, "module-TFP410"]], "hotplug_callback() (tfp410.tfp410 method)": [[126, "TFP410.TFP410.hotplug_callback"]], "isconnected() (tfp410.tfp410 method)": [[126, "TFP410.TFP410.isconnected"]], "tfp410.tfp410 (class in tfp410)": [[126, "TFP410.tfp410.TFP410"]], "tv_none (in module tv)": [[127, "tv.TV_NONE"]], "tv_shield (in module tv)": [[127, "tv.TV_SHIELD"]], "channel() (in module tv)": [[127, "tv.channel"]], "deinit() (in module tv)": [[127, "tv.deinit"]], "display() (in module tv)": [[127, "tv.display"]], "height() (in module tv)": [[127, "tv.height"]], "init() (in module tv)": [[127, "tv.init"]], "refresh() (in module tv)": [[127, "tv.refresh"]], "triple_buffer() (in module tv)": [[127, "tv.triple_buffer"]], "tv": [[127, "module-tv"]], "type() (in module tv)": [[127, "tv.type"]], "width() (in module tv)": [[127, "tv.width"]], "abstractblockdev (class in os)": [[128, "os.AbstractBlockDev"]], "vfsfat (class in os)": [[128, "os.VfsFat"]], "vfslfs1 (class in os)": [[128, "os.VfsLfs1"]], "vfslfs2 (class in os)": [[128, "os.VfsLfs2"]], "chdir() (in module os)": [[128, "os.chdir"]], "dupterm() (in module os)": [[128, "os.dupterm"]], "getcwd() (in module os)": [[128, "os.getcwd"]], "ilistdir() (in module os)": [[128, "os.ilistdir"]], "ioctl() (os.abstractblockdev method)": [[128, "os.AbstractBlockDev.ioctl"]], "listdir() (in module os)": [[128, "os.listdir"]], "mkdir() (in module os)": [[128, "os.mkdir"]], "mkfs() (os.vfsfat static method)": [[128, "os.VfsFat.mkfs"]], "mkfs() (os.vfslfs1 static method)": [[128, "os.VfsLfs1.mkfs"]], "mkfs() (os.vfslfs2 static method)": [[128, "os.VfsLfs2.mkfs"]], "mount() (in module os)": [[128, "os.mount"]], "os": [[128, "module-os"]], "readblocks() (os.abstractblockdev method)": [[128, "os.AbstractBlockDev.readblocks"]], "remove() (in module os)": [[128, "os.remove"]], "rename() (in module os)": [[128, "os.rename"]], "rmdir() (in module os)": [[128, "os.rmdir"]], "stat() (in module os)": [[128, "os.stat"]], "statvfs() (in module os)": [[128, "os.statvfs"]], "sync() (in module os)": [[128, "os.sync"]], "umount() (in module os)": [[128, "os.umount"]], "uname() (in module os)": [[128, "os.uname"]], "urandom() (in module os)": [[128, "os.urandom"]], "writeblocks() (os.abstractblockdev method)": [[128, "os.AbstractBlockDev.writeblocks"]], "libc_ver() (in module platform)": [[129, "platform.libc_ver"]], "platform": [[129, "module-platform"]], "platform() (in module platform)": [[129, "platform.platform"]], "python_compiler() (in module platform)": [[129, "platform.python_compiler"]], "bootloader() (in module pyb)": [[130, "pyb.bootloader"]], "delay() (in module pyb)": [[130, "pyb.delay"]], "disable_irq() (in module pyb)": [[130, "pyb.disable_irq"]], "elapsed_micros() (in module pyb)": [[130, "pyb.elapsed_micros"]], "elapsed_millis() (in module pyb)": [[130, "pyb.elapsed_millis"]], "enable_irq() (in module pyb)": [[130, "pyb.enable_irq"]], "fault_debug() (in module pyb)": [[130, "pyb.fault_debug"]], "hard_reset() (in module pyb)": [[130, "pyb.hard_reset"]], "have_cdc() (in module pyb)": [[130, "pyb.have_cdc"]], "hid() (in module pyb)": [[130, "pyb.hid"]], "info() (in module pyb)": [[130, "pyb.info"]], "main() (in module pyb)": [[130, "pyb.main"]], "micros() (in module pyb)": [[130, "pyb.micros"]], "millis() (in module pyb)": [[130, "pyb.millis"]], "mount() (in module pyb)": [[130, "pyb.mount"]], "pyb": [[130, "module-pyb"]], "pyb.hid_keyboard (in module pyb)": [[130, "pyb.pyb.hid_keyboard"]], "pyb.hid_mouse (in module pyb)": [[130, "pyb.pyb.hid_mouse"]], "repl_uart() (in module pyb)": [[130, "pyb.repl_uart"]], "rng() (in module pyb)": [[130, "pyb.rng"]], "standby() (in module pyb)": [[130, "pyb.standby"]], "stop() (in module pyb)": [[130, "pyb.stop"]], "sync() (in module pyb)": [[130, "pyb.sync"]], "udelay() (in module pyb)": [[130, "pyb.udelay"]], "unique_id() (in module pyb)": [[130, "pyb.unique_id"]], "usb_mode() (in module pyb)": [[130, "pyb.usb_mode"]], "wfi() (in module pyb)": [[130, "pyb.wfi"]], "adc (class in pyb)": [[131, "pyb.ADC"]], "read() (pyb.adc method)": [[131, "pyb.ADC.read"]], "read_timed() (pyb.adc method)": [[131, "pyb.ADC.read_timed"]], "accel (class in pyb)": [[132, "pyb.Accel"]], "filtered_xyz() (pyb.accel method)": [[132, "pyb.Accel.filtered_xyz"]], "tilt() (pyb.accel method)": [[132, "pyb.Accel.tilt"]], "x() (pyb.accel method)": [[132, "pyb.Accel.x"]], "y() (pyb.accel method)": [[132, "pyb.Accel.y"]], "z() (pyb.accel method)": [[132, "pyb.Accel.z"]], "can (class in pyb)": [[133, "pyb.CAN"]], "can.bus_off (in module pyb)": [[133, "pyb.CAN.BUS_OFF"]], "can.dual (in module pyb)": [[133, "pyb.CAN.DUAL"]], "can.error_active (in module pyb)": [[133, "pyb.CAN.ERROR_ACTIVE"]], "can.error_passive (in module pyb)": [[133, "pyb.CAN.ERROR_PASSIVE"]], "can.error_warning (in module pyb)": [[133, "pyb.CAN.ERROR_WARNING"]], "can.list16 (in module pyb)": [[133, "pyb.CAN.LIST16"]], "can.list32 (in module pyb)": [[133, "pyb.CAN.LIST32"]], "can.loopback (in module pyb)": [[133, "pyb.CAN.LOOPBACK"]], "can.mask (in module pyb)": [[133, "pyb.CAN.MASK"]], "can.mask16 (in module pyb)": [[133, "pyb.CAN.MASK16"]], "can.mask32 (in module pyb)": [[133, "pyb.CAN.MASK32"]], "can.normal (in module pyb)": [[133, "pyb.CAN.NORMAL"]], "can.range (in module pyb)": [[133, "pyb.CAN.RANGE"]], "can.silent (in module pyb)": [[133, "pyb.CAN.SILENT"]], "can.silent_loopback (in module pyb)": [[133, "pyb.CAN.SILENT_LOOPBACK"]], "can.stopped (in module pyb)": [[133, "pyb.CAN.STOPPED"]], "any() (pyb.can method)": [[133, "pyb.CAN.any"]], "clearfilter() (pyb.can method)": [[133, "pyb.CAN.clearfilter"]], "deinit() (pyb.can method)": [[133, "pyb.CAN.deinit"]], "info() (pyb.can method)": [[133, "pyb.CAN.info"]], "recv() (pyb.can method)": [[133, "pyb.CAN.recv"]], "restart() (pyb.can method)": [[133, "pyb.CAN.restart"]], "rxcallback() (pyb.can method)": [[133, "pyb.CAN.rxcallback"]], "send() (pyb.can method)": [[133, "pyb.CAN.send"]], "setfilter() (pyb.can method)": [[133, "pyb.CAN.setfilter"]], "state() (pyb.can method)": [[133, "pyb.CAN.state"]], "dac (class in pyb)": [[134, "pyb.DAC"]], "dac.circular (in module pyb)": [[134, "pyb.DAC.CIRCULAR"]], "dac.normal (in module pyb)": [[134, "pyb.DAC.NORMAL"]], "deinit() (pyb.dac method)": [[134, "pyb.DAC.deinit"]], "init() (pyb.dac method)": [[134, "pyb.DAC.init"]], "noise() (pyb.dac method)": [[134, "pyb.DAC.noise"]], "triangle() (pyb.dac method)": [[134, "pyb.DAC.triangle"]], "write() (pyb.dac method)": [[134, "pyb.DAC.write"]], "write_timed() (pyb.dac method)": [[134, "pyb.DAC.write_timed"]], "extint (class in pyb)": [[135, "pyb.ExtInt"]], "extint.irq_falling (in module pyb)": [[135, "pyb.ExtInt.IRQ_FALLING"]], "extint.irq_rising (in module pyb)": [[135, "pyb.ExtInt.IRQ_RISING"]], "extint.irq_rising_falling (in module pyb)": [[135, "pyb.ExtInt.IRQ_RISING_FALLING"]], "disable() (pyb.extint method)": [[135, "pyb.ExtInt.disable"]], "enable() (pyb.extint method)": [[135, "pyb.ExtInt.enable"]], "line() (pyb.extint method)": [[135, "pyb.ExtInt.line"]], "regs() (pyb.extint class method)": [[135, "pyb.ExtInt.regs"]], "swint() (pyb.extint method)": [[135, "pyb.ExtInt.swint"]], "flash (class in pyb)": [[136, "pyb.Flash"]], "ioctl() (pyb.flash method)": [[136, "pyb.Flash.ioctl"]], "readblocks() (pyb.flash method)": [[136, "pyb.Flash.readblocks"]], "writeblocks() (pyb.flash method)": [[136, "pyb.Flash.writeblocks"]], "i2c (class in pyb)": [[137, "pyb.I2C"]], "i2c.controller (in module pyb)": [[137, "pyb.I2C.CONTROLLER"]], "i2c.peripheral (in module pyb)": [[137, "pyb.I2C.PERIPHERAL"]], "deinit() (pyb.i2c method)": [[137, "pyb.I2C.deinit"]], "init() (pyb.i2c method)": [[137, "pyb.I2C.init"]], "is_ready() (pyb.i2c method)": [[137, "pyb.I2C.is_ready"]], "mem_read() (pyb.i2c method)": [[137, "pyb.I2C.mem_read"]], "mem_write() (pyb.i2c method)": [[137, "pyb.I2C.mem_write"]], "recv() (pyb.i2c method)": [[137, "pyb.I2C.recv"]], "scan() (pyb.i2c method)": [[137, "pyb.I2C.scan"]], "send() (pyb.i2c method)": [[137, "pyb.I2C.send"]], "lcd (class in pyb)": [[138, "pyb.LCD"]], "command() (pyb.lcd method)": [[138, "pyb.LCD.command"]], "contrast() (pyb.lcd method)": [[138, "pyb.LCD.contrast"]], "fill() (pyb.lcd method)": [[138, "pyb.LCD.fill"]], "get() (pyb.lcd method)": [[138, "pyb.LCD.get"]], "light() (pyb.lcd method)": [[138, "pyb.LCD.light"]], "pixel() (pyb.lcd method)": [[138, "pyb.LCD.pixel"]], "show() (pyb.lcd method)": [[138, "pyb.LCD.show"]], "text() (pyb.lcd method)": [[138, "pyb.LCD.text"]], "write() (pyb.lcd method)": [[138, "pyb.LCD.write"]], "led (class in pyb)": [[139, "pyb.LED"]], "off() (pyb.led method)": [[139, "pyb.LED.off"]], "on() (pyb.led method)": [[139, "pyb.LED.on"]], "toggle() (pyb.led method)": [[139, "pyb.LED.toggle"]], "pin (class in pyb)": [[140, "pyb.Pin"]], "pin.af_od (in module pyb)": [[140, "pyb.Pin.AF_OD"]], "pin.af_pp (in module pyb)": [[140, "pyb.Pin.AF_PP"]], "pin.alt (in module pyb)": [[140, "pyb.Pin.ALT"]], "pin.analog (in module pyb)": [[140, "pyb.Pin.ANALOG"]], "pin.in (in module pyb)": [[140, "pyb.Pin.IN"]], "pin.out_od (in module pyb)": [[140, "pyb.Pin.OUT_OD"]], "pin.out_pp (in module pyb)": [[140, "pyb.Pin.OUT_PP"]], "pin.pull_down (in module pyb)": [[140, "pyb.Pin.PULL_DOWN"]], "pin.pull_none (in module pyb)": [[140, "pyb.Pin.PULL_NONE"]], "pin.pull_up (in module pyb)": [[140, "pyb.Pin.PULL_UP"]], "__str__() (pyb.pin method)": [[140, "pyb.Pin.__str__"]], "__str__() (pyb.pinaf method)": [[140, "pyb.pinaf.__str__"]], "af() (pyb.pin method)": [[140, "pyb.Pin.af"]], "af_list() (pyb.pin method)": [[140, "pyb.Pin.af_list"]], "debug() (pyb.pin class method)": [[140, "pyb.Pin.debug"]], "dict() (pyb.pin class method)": [[140, "pyb.Pin.dict"]], "gpio() (pyb.pin method)": [[140, "pyb.Pin.gpio"]], "index() (pyb.pinaf method)": [[140, "pyb.pinaf.index"]], "init() (pyb.pin method)": [[140, "pyb.Pin.init"]], "mapper() (pyb.pin class method)": [[140, "pyb.Pin.mapper"]], "mode() (pyb.pin method)": [[140, "pyb.Pin.mode"]], "name() (pyb.pin method)": [[140, "pyb.Pin.name"]], "name() (pyb.pinaf method)": [[140, "pyb.pinaf.name"]], "names() (pyb.pin method)": [[140, "pyb.Pin.names"]], "pin() (pyb.pin method)": [[140, "pyb.Pin.pin"]], "port() (pyb.pin method)": [[140, "pyb.Pin.port"]], "pull() (pyb.pin method)": [[140, "pyb.Pin.pull"]], "reg() (pyb.pinaf method)": [[140, "pyb.pinaf.reg"]], "value() (pyb.pin method)": [[140, "pyb.Pin.value"]], "rtc (class in pyb)": [[141, "pyb.RTC"]], "calibration() (pyb.rtc method)": [[141, "pyb.RTC.calibration"]], "datetime() (pyb.rtc method)": [[141, "pyb.RTC.datetime"]], "info() (pyb.rtc method)": [[141, "pyb.RTC.info"]], "wakeup() (pyb.rtc method)": [[141, "pyb.RTC.wakeup"]], "spi (class in pyb)": [[142, "pyb.SPI"]], "spi.controller (in module pyb)": [[142, "pyb.SPI.CONTROLLER"]], "spi.lsb (in module pyb)": [[142, "pyb.SPI.LSB"]], "spi.msb (in module pyb)": [[142, "pyb.SPI.MSB"]], "spi.peripheral (in module pyb)": [[142, "pyb.SPI.PERIPHERAL"]], "deinit() (pyb.spi method)": [[142, "pyb.SPI.deinit"]], "init() (pyb.spi method)": [[142, "pyb.SPI.init"]], "recv() (pyb.spi method)": [[142, "pyb.SPI.recv"]], "send() (pyb.spi method)": [[142, "pyb.SPI.send"]], "send_recv() (pyb.spi method)": [[142, "pyb.SPI.send_recv"]], "servo (class in pyb)": [[143, "pyb.Servo"]], "angle() (pyb.servo method)": [[143, "pyb.Servo.angle"]], "calibration() (pyb.servo method)": [[143, "pyb.Servo.calibration"]], "pulse_width() (pyb.servo method)": [[143, "pyb.Servo.pulse_width"]], "speed() (pyb.servo method)": [[143, "pyb.Servo.speed"]], "switch (class in pyb)": [[144, "pyb.Switch"]], "__call__() (pyb.switch method)": [[144, "pyb.Switch.__call__"]], "callback() (pyb.switch method)": [[144, "pyb.Switch.callback"]], "value() (pyb.switch method)": [[144, "pyb.Switch.value"]], "timer (class in pyb)": [[145, "pyb.Timer"]], "timer.brk_high (in module pyb)": [[145, "pyb.Timer.BRK_HIGH"]], "timer.brk_low (in module pyb)": [[145, "pyb.Timer.BRK_LOW"]], "timer.brk_off (in module pyb)": [[145, "pyb.Timer.BRK_OFF"]], "timer.center (in module pyb)": [[145, "pyb.Timer.CENTER"]], "timer.down (in module pyb)": [[145, "pyb.Timer.DOWN"]], "timer.up (in module pyb)": [[145, "pyb.Timer.UP"]], "callback() (pyb.timer method)": [[145, "pyb.Timer.callback"]], "callback() (pyb.timerchannel method)": [[145, "pyb.timerchannel.callback"]], "capture() (pyb.timerchannel method)": [[145, "pyb.timerchannel.capture"]], "channel() (pyb.timer method)": [[145, "pyb.Timer.channel"]], "compare() (pyb.timerchannel method)": [[145, "pyb.timerchannel.compare"]], "counter() (pyb.timer method)": [[145, "pyb.Timer.counter"]], "deinit() (pyb.timer method)": [[145, "pyb.Timer.deinit"]], "freq() (pyb.timer method)": [[145, "pyb.Timer.freq"]], "init() (pyb.timer method)": [[145, "pyb.Timer.init"]], "period() (pyb.timer method)": [[145, "pyb.Timer.period"]], "prescaler() (pyb.timer method)": [[145, "pyb.Timer.prescaler"]], "pulse_width() (pyb.timerchannel method)": [[145, "pyb.timerchannel.pulse_width"]], "pulse_width_percent() (pyb.timerchannel method)": [[145, "pyb.timerchannel.pulse_width_percent"]], "source_freq() (pyb.timer method)": [[145, "pyb.Timer.source_freq"]], "uart (class in pyb)": [[146, "pyb.UART"]], "uart.cts (in module pyb)": [[146, "pyb.UART.CTS"]], "uart.rts (in module pyb)": [[146, "pyb.UART.RTS"]], "any() (pyb.uart method)": [[146, "pyb.UART.any"]], "deinit() (pyb.uart method)": [[146, "pyb.UART.deinit"]], "init() (pyb.uart method)": [[146, "pyb.UART.init"]], "read() (pyb.uart method)": [[146, "pyb.UART.read"]], "readchar() (pyb.uart method)": [[146, "pyb.UART.readchar"]], "readinto() (pyb.uart method)": [[146, "pyb.UART.readinto"]], "readline() (pyb.uart method)": [[146, "pyb.UART.readline"]], "sendbreak() (pyb.uart method)": [[146, "pyb.UART.sendbreak"]], "write() (pyb.uart method)": [[146, "pyb.UART.write"]], "writechar() (pyb.uart method)": [[146, "pyb.UART.writechar"]], "usb_hid (class in pyb)": [[147, "pyb.USB_HID"]], "recv() (pyb.usb_hid method)": [[147, "pyb.USB_HID.recv"]], "send() (pyb.usb_hid method)": [[147, "pyb.USB_HID.send"]], "usb_vcp (class in pyb)": [[148, "pyb.USB_VCP"]], "usb_vcp.cts (in module pyb)": [[148, "pyb.USB_VCP.CTS"]], "usb_vcp.irq_rx (in module pyb)": [[148, "pyb.USB_VCP.IRQ_RX"]], "usb_vcp.rts (in module pyb)": [[148, "pyb.USB_VCP.RTS"]], "any() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.any"]], "close() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.close"]], "debug_mode_enabled() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.debug_mode_enabled"]], "init() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.init"]], "irq() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.irq"]], "isconnected() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.isconnected"]], "read() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.read"]], "readinto() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.readinto"]], "readline() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.readline"]], "readlines() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.readlines"]], "recv() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.recv"]], "send() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.send"]], "setinterrupt() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.setinterrupt"]], "write() (pyb.usb_vcp method)": [[148, "pyb.USB_VCP.write"]], "choice() (in module random)": [[149, "random.choice"]], "getrandbits() (in module random)": [[149, "random.getrandbits"]], "randint() (in module random)": [[149, "random.randint"]], "random": [[149, "module-random"]], "random() (in module random)": [[149, "random.random"]], "randrange() (in module random)": [[149, "random.randrange"]], "seed() (in module random)": [[149, "random.seed"]], "uniform() (in module random)": [[149, "random.uniform"]], "debug (in module re)": [[150, "re.DEBUG"]], "compile() (in module re)": [[150, "re.compile"]], "end() (re.match method)": [[150, "re.match.end"]], "group() (re.match method)": [[150, "re.match.group"]], "groups() (re.match method)": [[150, "re.match.groups"]], "match() (in module re)": [[150, "re.match"]], "match() (re.regex method)": [[150, "re.regex.match"]], "re": [[150, "module-re"]], "search() (in module re)": [[150, "re.search"]], "search() (re.regex method)": [[150, "re.regex.search"]], "span() (re.match method)": [[150, "re.match.span"]], "split() (re.regex method)": [[150, "re.regex.split"]], "start() (re.match method)": [[150, "re.match.start"]], "sub() (in module re)": [[150, "re.sub"]], "sub() (re.regex method)": [[150, "re.regex.sub"]], "pioasmerror (class in rp2)": [[151, "rp2.PIOASMError"]], "asm_pio() (in module rp2)": [[151, "rp2.asm_pio"]], "asm_pio_encode() (in module rp2)": [[151, "rp2.asm_pio_encode"]], "bootsel_button() (in module rp2)": [[151, "rp2.bootsel_button"]], "rp2": [[151, "module-rp2"]], "flash (class in rp2)": [[152, "rp2.Flash"]], "ioctl() (rp2.flash method)": [[152, "rp2.Flash.ioctl"]], "readblocks() (rp2.flash method)": [[152, "rp2.Flash.readblocks"]], "writeblocks() (rp2.flash method)": [[152, "rp2.Flash.writeblocks"]], "pio (class in rp2)": [[153, "rp2.PIO"]], "pio.in_high (in module rp2)": [[153, "rp2.PIO.IN_HIGH"]], "pio.in_low (in module rp2)": [[153, "rp2.PIO.IN_LOW"]], "pio.irq_sm0 (in module rp2)": [[153, "rp2.PIO.IRQ_SM0"]], "pio.irq_sm1 (in module rp2)": [[153, "rp2.PIO.IRQ_SM1"]], "pio.irq_sm2 (in module rp2)": [[153, "rp2.PIO.IRQ_SM2"]], "pio.irq_sm3 (in module rp2)": [[153, "rp2.PIO.IRQ_SM3"]], "pio.join_none (in module rp2)": [[153, "rp2.PIO.JOIN_NONE"]], "pio.join_rx (in module rp2)": [[153, "rp2.PIO.JOIN_RX"]], "pio.join_tx (in module rp2)": [[153, "rp2.PIO.JOIN_TX"]], "pio.out_high (in module rp2)": [[153, "rp2.PIO.OUT_HIGH"]], "pio.out_low (in module rp2)": [[153, "rp2.PIO.OUT_LOW"]], "pio.shift_left (in module rp2)": [[153, "rp2.PIO.SHIFT_LEFT"]], "pio.shift_right (in module rp2)": [[153, "rp2.PIO.SHIFT_RIGHT"]], "add_program() (rp2.pio method)": [[153, "rp2.PIO.add_program"]], "irq() (rp2.pio method)": [[153, "rp2.PIO.irq"]], "remove_program() (rp2.pio method)": [[153, "rp2.PIO.remove_program"]], "state_machine() (rp2.pio method)": [[153, "rp2.PIO.state_machine"]], "statemachine (class in rp2)": [[154, "rp2.StateMachine"]], "active() (rp2.statemachine method)": [[154, "rp2.StateMachine.active"]], "exec() (rp2.statemachine method)": [[154, "rp2.StateMachine.exec"]], "get() (rp2.statemachine method)": [[154, "rp2.StateMachine.get"]], "init() (rp2.statemachine method)": [[154, "rp2.StateMachine.init"]], "irq() (rp2.statemachine method)": [[154, "rp2.StateMachine.irq"]], "put() (rp2.statemachine method)": [[154, "rp2.StateMachine.put"]], "restart() (rp2.statemachine method)": [[154, "rp2.StateMachine.restart"]], "rx_fifo() (rp2.statemachine method)": [[154, "rp2.StateMachine.rx_fifo"]], "tx_fifo() (rp2.statemachine method)": [[154, "rp2.StateMachine.tx_fifo"]], "ipoll() (select.poll method)": [[155, "select.poll.ipoll"]], "modify() (select.poll method)": [[155, "select.poll.modify"]], "poll() (in module select)": [[155, "select.poll"]], "poll() (select.poll method)": [[155, "select.poll.poll"]], "register() (select.poll method)": [[155, "select.poll.register"]], "select": [[155, "module-select"]], "select() (in module select)": [[155, "select.select"]], "unregister() (select.poll method)": [[155, "select.poll.unregister"]], "af_inet (in module socket)": [[156, "socket.AF_INET"]], "af_inet6 (in module socket)": [[156, "socket.AF_INET6"]], "ipproto_tcp (in module socket)": [[156, "socket.IPPROTO_TCP"]], "ipproto_udp (in module socket)": [[156, "socket.IPPROTO_UDP"]], "sock_dgram (in module socket)": [[156, "socket.SOCK_DGRAM"]], "sock_stream (in module socket)": [[156, "socket.SOCK_STREAM"]], "accept() (socket.socket method)": [[156, "socket.socket.accept"]], "bind() (socket.socket method)": [[156, "socket.socket.bind"]], "close() (socket.socket method)": [[156, "socket.socket.close"]], "connect() (socket.socket method)": [[156, "socket.socket.connect"]], "getaddrinfo() (in module socket)": [[156, "socket.getaddrinfo"]], "inet_ntop() (in module socket)": [[156, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[156, "socket.inet_pton"]], "listen() (socket.socket method)": [[156, "socket.socket.listen"]], "makefile() (socket.socket method)": [[156, "socket.socket.makefile"]], "read() (socket.socket method)": [[156, "socket.socket.read"]], "readinto() (socket.socket method)": [[156, "socket.socket.readinto"]], "readline() (socket.socket method)": [[156, "socket.socket.readline"]], "recv() (socket.socket method)": [[156, "socket.socket.recv"]], "recvfrom() (socket.socket method)": [[156, "socket.socket.recvfrom"]], "send() (socket.socket method)": [[156, "socket.socket.send"]], "sendall() (socket.socket method)": [[156, "socket.socket.sendall"]], "sendto() (socket.socket method)": [[156, "socket.socket.sendto"]], "setblocking() (socket.socket method)": [[156, "socket.socket.setblocking"]], "setsockopt() (socket.socket method)": [[156, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[156, "socket.socket.settimeout"]], "socket": [[156, "module-socket"]], "socket (class in socket)": [[156, "socket.socket"]], "socket.error": [[156, "socket.socket.error"]], "write() (socket.socket method)": [[156, "socket.socket.write"]], "sslcontext (class in ssl)": [[157, "ssl.SSLContext"]], "get_ciphers() (ssl.sslcontext method)": [[157, "ssl.SSLContext.get_ciphers"]], "load_cert_chain() (ssl.sslcontext method)": [[157, "ssl.SSLContext.load_cert_chain"]], "load_verify_locations() (ssl.sslcontext method)": [[157, "ssl.SSLContext.load_verify_locations"]], "set_ciphers() (ssl.sslcontext method)": [[157, "ssl.SSLContext.set_ciphers"]], "ssl": [[157, "module-ssl"]], "ssl.cert_none (in module ssl)": [[157, "ssl.ssl.CERT_NONE"]], "ssl.cert_optional (in module ssl)": [[157, "ssl.ssl.CERT_OPTIONAL"]], "ssl.cert_required (in module ssl)": [[157, "ssl.ssl.CERT_REQUIRED"]], "ssl.protocol_tls_client (in module ssl)": [[157, "ssl.ssl.PROTOCOL_TLS_CLIENT"]], "ssl.protocol_tls_server (in module ssl)": [[157, "ssl.ssl.PROTOCOL_TLS_SERVER"]], "ssl.sslerror (in module ssl)": [[157, "ssl.ssl.SSLError"]], "ssl.wrap_socket() (in module ssl)": [[157, "ssl.ssl.wrap_socket"]], "verify_mode (ssl.sslcontext attribute)": [[157, "ssl.SSLContext.verify_mode"]], "wrap_socket() (ssl.sslcontext method)": [[157, "ssl.SSLContext.wrap_socket"]], "gpioa (in module stm)": [[158, "stm.GPIOA"]], "gpiob (in module stm)": [[158, "stm.GPIOB"]], "gpio_bsrr (in module stm)": [[158, "stm.GPIO_BSRR"]], "gpio_idr (in module stm)": [[158, "stm.GPIO_IDR"]], "gpio_odr (in module stm)": [[158, "stm.GPIO_ODR"]], "mem16 (in module stm)": [[158, "stm.mem16"]], "mem32 (in module stm)": [[158, "stm.mem32"]], "mem8 (in module stm)": [[158, "stm.mem8"]], "rfcore_fw_version() (in module stm)": [[158, "stm.rfcore_fw_version"]], "rfcore_status() (in module stm)": [[158, "stm.rfcore_status"]], "rfcore_sys_hci() (in module stm)": [[158, "stm.rfcore_sys_hci"]], "stm": [[158, "module-stm"]], "subghz_cs() (in module stm)": [[158, "stm.subghz_cs"]], "subghz_irq() (in module stm)": [[158, "stm.subghz_irq"]], "subghz_is_busy() (in module stm)": [[158, "stm.subghz_is_busy"]], "calcsize() (in module struct)": [[159, "struct.calcsize"]], "pack() (in module struct)": [[159, "struct.pack"]], "pack_into() (in module struct)": [[159, "struct.pack_into"]], "struct": [[159, "module-struct"]], "unpack() (in module struct)": [[159, "struct.unpack"]], "unpack_from() (in module struct)": [[159, "struct.unpack_from"]], "argv (in module sys)": [[160, "sys.argv"]], "atexit() (in module sys)": [[160, "sys.atexit"]], "byteorder (in module sys)": [[160, "sys.byteorder"]], "exit() (in module sys)": [[160, "sys.exit"]], "implementation (in module sys)": [[160, "sys.implementation"]], "maxsize (in module sys)": [[160, "sys.maxsize"]], "modules (in module sys)": [[160, "sys.modules"]], "path (in module sys)": [[160, "sys.path"]], "platform (in module sys)": [[160, "sys.platform"]], "print_exception() (in module sys)": [[160, "sys.print_exception"]], "ps1 (in module sys)": [[160, "sys.ps1"]], "ps2 (in module sys)": [[160, "sys.ps2"]], "settrace() (in module sys)": [[160, "sys.settrace"]], "stderr (in module sys)": [[160, "sys.stderr"]], "stdin (in module sys)": [[160, "sys.stdin"]], "stdout (in module sys)": [[160, "sys.stdout"]], "sys": [[160, "module-sys"]], "tracebacklimit (in module sys)": [[160, "sys.tracebacklimit"]], "version (in module sys)": [[160, "sys.version"]], "version_info (in module sys)": [[160, "sys.version_info"]], "avg() (time.clock method)": [[161, "time.clock.avg"]], "clock (class in time)": [[161, "time.clock"]], "fps() (time.clock method)": [[161, "time.clock.fps"]], "gmtime() (in module time)": [[161, "time.gmtime"]], "localtime() (in module time)": [[161, "time.localtime"]], "mktime() (in module time)": [[161, "time.mktime"]], "reset() (time.clock method)": [[161, "time.clock.reset"]], "sleep() (in module time)": [[161, "time.sleep"]], "sleep_ms() (in module time)": [[161, "time.sleep_ms"]], "sleep_us() (in module time)": [[161, "time.sleep_us"]], "tick() (time.clock method)": [[161, "time.clock.tick"]], "ticks_add() (in module time)": [[161, "time.ticks_add"]], "ticks_cpu() (in module time)": [[161, "time.ticks_cpu"]], "ticks_diff() (in module time)": [[161, "time.ticks_diff"]], "ticks_ms() (in module time)": [[161, "time.ticks_ms"]], "ticks_us() (in module time)": [[161, "time.ticks_us"]], "time": [[161, "module-time"]], "time() (in module time)": [[161, "time.time"]], "time_ns() (in module time)": [[161, "time.time_ns"]], "array (in module uctypes)": [[162, "uctypes.ARRAY"]], "big_endian (in module uctypes)": [[162, "uctypes.BIG_ENDIAN"]], "float32 (in module uctypes)": [[162, "uctypes.FLOAT32"]], "float64 (in module uctypes)": [[162, "uctypes.FLOAT64"]], "int16 (in module uctypes)": [[162, "uctypes.INT16"]], "int32 (in module uctypes)": [[162, "uctypes.INT32"]], "int64 (in module uctypes)": [[162, "uctypes.INT64"]], "int8 (in module uctypes)": [[162, "uctypes.INT8"]], "little_endian (in module uctypes)": [[162, "uctypes.LITTLE_ENDIAN"]], "native (in module uctypes)": [[162, "uctypes.NATIVE"]], "ptr (in module uctypes)": [[162, "uctypes.PTR"]], "uint16 (in module uctypes)": [[162, "uctypes.UINT16"]], "uint32 (in module uctypes)": [[162, "uctypes.UINT32"]], "uint64 (in module uctypes)": [[162, "uctypes.UINT64"]], "uint8 (in module uctypes)": [[162, "uctypes.UINT8"]], "void (in module uctypes)": [[162, "uctypes.VOID"]], "addressof() (in module uctypes)": [[162, "uctypes.addressof"]], "bytearray_at() (in module uctypes)": [[162, "uctypes.bytearray_at"]], "bytes_at() (in module uctypes)": [[162, "uctypes.bytes_at"]], "sizeof() (in module uctypes)": [[162, "uctypes.sizeof"]], "struct (class in uctypes)": [[162, "uctypes.struct"]], "uctypes": [[162, "module-uctypes"]], "ping() (in module uping)": [[163, "uping.ping"]], "uping": [[163, "module-uping"]], "response (class in urequests)": [[164, "urequests.Response"]], "response.content() (in module urequests)": [[164, "urequests.Response.content"]], "response.headers() (in module urequests)": [[164, "urequests.Response.headers"]], "delete() (in module urequests)": [[164, "urequests.delete"]], "get() (in module urequests)": [[164, "urequests.get"]], "head() (in module urequests)": [[164, "urequests.head"]], "json() (urequests.response method)": [[164, "urequests.Response.json"]], "patch() (in module urequests)": [[164, "urequests.patch"]], "post() (in module urequests)": [[164, "urequests.post"]], "put() (in module urequests)": [[164, "urequests.put"]], "request() (in module urequests)": [[164, "urequests.request"]], "urequests": [[164, "module-urequests"]], "heartbeat() (in module wipy)": [[165, "wipy.heartbeat"]], "wipy": [[165, "module-wipy"]], "wm8960 (built-in class)": [[166, "WM8960"]], "alc_gain() (wm8960 method)": [[166, "WM8960.alc_gain"]], "alc_mode() (wm8960 method)": [[166, "WM8960.alc_mode"]], "alc_time() (wm8960 method)": [[166, "WM8960.alc_time"]], "deemphasis() (wm8960 method)": [[166, "WM8960.deemphasis"]], "deinit() (wm8960 method)": [[166, "WM8960.deinit"]], "disable_module() (wm8960 method)": [[166, "WM8960.disable_module"]], "enable_module() (wm8960 method)": [[166, "WM8960.enable_module"]], "expand_3d() (wm8960 method)": [[166, "WM8960.expand_3d"]], "mono() (wm8960 method)": [[166, "WM8960.mono"]], "mute() (wm8960 method)": [[166, "WM8960.mute"]], "set_data_route() (wm8960 method)": [[166, "WM8960.set_data_route"]], "set_left_input() (wm8960 method)": [[166, "WM8960.set_left_input"]], "set_module() (wm8960 method)": [[166, "WM8960.set_module"]], "set_right_input() (wm8960 method)": [[166, "WM8960.set_right_input"]], "volume() (wm8960 method)": [[166, "WM8960.volume"]], "current_tid() (in module zephyr)": [[167, "zephyr.current_tid"]], "is_preempt_thread() (in module zephyr)": [[167, "zephyr.is_preempt_thread"]], "shell_exec() (in module zephyr)": [[167, "zephyr.shell_exec"]], "thread_analyze() (in module zephyr)": [[167, "zephyr.thread_analyze"]], "zephyr": [[167, "module-zephyr"]], "diskaccess (class in zephyr)": [[168, "zephyr.DiskAccess"]], "ioctl() (zephyr.diskaccess method)": [[168, "zephyr.DiskAccess.ioctl"]], "readblocks() (zephyr.diskaccess method)": [[168, "zephyr.DiskAccess.readblocks"]], "writeblocks() (zephyr.diskaccess method)": [[168, "zephyr.DiskAccess.writeblocks"]], "flasharea (class in zephyr)": [[169, "zephyr.FlashArea"]], "ioctl() (zephyr.flasharea method)": [[169, "zephyr.FlashArea.ioctl"]], "readblocks() (zephyr.flasharea method)": [[169, "zephyr.FlashArea.readblocks"]], "writeblocks() (zephyr.flasharea method)": [[169, "zephyr.FlashArea.writeblocks"]], "accel_x (in module zsensor)": [[170, "zsensor.ACCEL_X"]], "accel_y (in module zsensor)": [[170, "zsensor.ACCEL_Y"]], "accel_z (in module zsensor)": [[170, "zsensor.ACCEL_Z"]], "altitude (in module zsensor)": [[170, "zsensor.ALTITUDE"]], "die_temp (in module zsensor)": [[170, "zsensor.DIE_TEMP"]], "gyro_x (in module zsensor)": [[170, "zsensor.GYRO_X"]], "gyro_y (in module zsensor)": [[170, "zsensor.GYRO_Y"]], "gyro_z (in module zsensor)": [[170, "zsensor.GYRO_Z"]], "humidity (in module zsensor)": [[170, "zsensor.HUMIDITY"]], "light (in module zsensor)": [[170, "zsensor.LIGHT"]], "magn_x (in module zsensor)": [[170, "zsensor.MAGN_X"]], "magn_y (in module zsensor)": [[170, "zsensor.MAGN_Y"]], "magn_z (in module zsensor)": [[170, "zsensor.MAGN_Z"]], "press (in module zsensor)": [[170, "zsensor.PRESS"]], "prox (in module zsensor)": [[170, "zsensor.PROX"]], "sensor (class in zsensor)": [[170, "zsensor.Sensor"]], "get_float() (zsensor.sensor method)": [[170, "zsensor.Sensor.get_float"]], "get_int() (zsensor.sensor method)": [[170, "zsensor.Sensor.get_int"]], "get_micros() (zsensor.sensor method)": [[170, "zsensor.Sensor.get_micros"]], "get_millis() (zsensor.sensor method)": [[170, "zsensor.Sensor.get_millis"]], "measure() (zsensor.sensor method)": [[170, "zsensor.Sensor.measure"]], "zsensor": [[170, "module-zsensor"]], "compress() (in module zlib)": [[171, "zlib.compress"]], "decompress() (in module zlib)": [[171, "zlib.decompress"]], "zlib": [[171, "module-zlib"]], ".mpy file": [[230, "term-.mpy-file"]], ".py file": [[230, "term-.py-file"]], "cpython": [[230, "term-CPython"]], "circuitpython": [[230, "term-CircuitPython"]], "ffi": [[230, "term-FFI"]], "gpio": [[230, "term-GPIO"]], "gpio port": [[230, "term-GPIO-port"]], "garbage collector": [[230, "term-Garbage-Collector"]], "mcu": [[230, "term-MCU"]], "micropython unix port": [[230, "term-MicroPython-Unix-port"]], "micropython port": [[230, "term-MicroPython-port"]], "repl": [[230, "term-REPL"]], "uart": [[230, "term-UART"]], "baremetal": [[230, "term-baremetal"]], "board": [[230, "term-board"]], "buffer protocol": [[230, "term-buffer-protocol"]], "bytecode": [[230, "term-bytecode"]], "callee-owned tuple": [[230, "term-callee-owned-tuple"]], "cross-compiler": [[230, "term-cross-compiler"]], "driver": [[230, "term-driver"]], "filesystem": [[230, "term-filesystem"]], "frozen module": [[230, "term-frozen-module"]], "heap": [[230, "term-heap"]], "interned string": [[230, "term-interned-string"]], "micropython-lib": [[230, "term-micropython-lib"]], "mip": [[230, "term-mip"]], "mpremote": [[230, "term-mpremote"]], "native": [[230, "term-native"]], "port": [[230, "term-port"]], "stream": [[230, "term-stream"]], "upip": [[230, "term-upip"]], "webrepl": [[230, "term-webrepl"]], "freeze()": [[233, "freeze"]], "freeze_as_mpy()": [[233, "freeze_as_mpy"]], "freeze_as_str()": [[233, "freeze_as_str"]], "freeze_mpy()": [[233, "freeze_mpy"]], "include()": [[233, "include"]], "metadata()": [[233, "metadata"]], "module()": [[233, "module"]], "package()": [[233, "package"]], "require()": [[233, "require"]], "read_u16()": [[255, "read_u16"]], "write()": [[255, "write"]], "-o": [[257, "cmdoption-O"]], "-x": [[257, "cmdoption-X"]], "-c": [[257, "cmdoption-c"]], "-h": [[257, "cmdoption-h"]], "-i": [[257, "cmdoption-i"]], "-m": [[257, "cmdoption-m"]], "-v": [[257, "cmdoption-v"]], "<args>": [[257, "cmdoption-arg-args"]], "<script>": [[257, "cmdoption-arg-script"]], "micropyinspect": [[257, "envvar-MICROPYINSPECT"], [257, "index-0"]], "micropypath": [[257, "envvar-MICROPYPATH"]], "command line option": [[257, "cmdoption-O"], [257, "cmdoption-X"], [257, "cmdoption-arg-args"], [257, "cmdoption-arg-script"], [257, "cmdoption-c"], [257, "cmdoption-h"], [257, "cmdoption-i"], [257, "cmdoption-m"], [257, "cmdoption-v"]], "environment variable": [[257, "envvar-MICROPYINSPECT"], [257, "envvar-MICROPYPATH"], [257, "index-0"]], "alt_list() (machine.pin method)": [[258, "machine.Pin.alt_list"]], "deinit() (server method)": [[258, "server.deinit"]], "init() (server method)": [[258, "server.init"]], "isrunning() (server method)": [[258, "server.isrunning"]], "main()": [[258, "main"]], "mkfs()": [[258, "mkfs"]], "mount()": [[258, "mount"]], "network.server (built-in class)": [[258, "network.Server"]], "timeout() (server method)": [[258, "server.timeout"]], "unmount()": [[258, "unmount"]], "timer.a (built-in variable)": [[265, "Timer.A"]], "timer.b (built-in variable)": [[265, "Timer.B"]], "timer.match (built-in variable)": [[265, "Timer.MATCH"]], "timer.negative (built-in variable)": [[265, "Timer.NEGATIVE"]], "timer.positive (built-in variable)": [[265, "Timer.POSITIVE"]], "timer.pwm (built-in variable)": [[265, "Timer.PWM"]], "timer.timeout (built-in variable)": [[265, "Timer.TIMEOUT"]]}})